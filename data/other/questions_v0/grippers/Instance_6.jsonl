{"id": "fffd1a6b-8cb7-479f-8820-bfb55283c22b", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, is it True or False that ball7 is at room2, ball4 is at room2, ball5 is at room2, ball3 is at room2 and ball1 is at room2?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "345bc4b9-425c-4880-85e9-bcee3fc976ba", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, is it True or False that robot1 is carrying ball2 with lgripper2?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "f0418437-f7dc-48fc-9acc-ec092d75bdb1", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, is it True or False that ball7 is at room2, ball4 is at room2 and ball1 is at room2?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "30dbc32f-d924-4be8-832d-827281a901cc", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, is it True or False that ball5 is at room2, ball2 is at room2, robot2 is at room2, ball4 is at room2, ball7 is at room2 and ball1 is at room2?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "8bbccaf0-20dc-4045-ba04-f66b2ef17631", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, is it True or False that robot2 is not carrying ball7 with rgripper2, robot1 is not carrying ball2 with rgripper2, robot2 is not carrying ball6 with rgripper2, rgripper2 of robot1 is not free, rgripper2 of robot2 is not free, robot1 is not carrying ball3 with rgripper2, robot1 is not carrying ball1 with rgripper2, robot1 is not carrying ball5 with rgripper2, robot2 is not carrying ball5 with rgripper2, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball4 with rgripper2 and robot2 is not carrying ball1 with rgripper2?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "c7c60f32-7723-4838-9429-d9ce80a26b28", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, is it True or False that robot1 is not carrying ball3 with lgripper2, robot2 is not carrying ball2 with lgripper2, robot2 is not carrying ball7 with lgripper2, robot1 is not carrying ball1 with lgripper2, lgripper2 of robot1 is not free, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball5 with lgripper2, robot2 is not carrying ball4 with lgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with lgripper2, lgripper2 of robot2 is not free, robot1 is not carrying ball2 with lgripper2 and robot1 is not carrying ball7 with lgripper2?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "44eac751-cf69-4b5a-924a-a7218c2d9609", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, is it True or False that robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball7 with lgripper1, robot2 is not carrying ball1 with lgripper1, lgripper1 of robot1 is not free, robot2 is not carrying ball3 with lgripper1, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball1 with lgripper1, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball6 with lgripper1 and robot1 is not carrying ball3 with lgripper1?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "e20528bc-114b-4a04-a022-0b2be41527f3", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, is it True or False that robot1 is not carrying ball7 with rgripper1 and robot1 is not carrying ball1 with lgripper1?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "75ff9cbf-9260-407c-977e-d6868417137e", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, list all objects associated with type room. Write None if there are none.", "answer": "room1, room2, room3 and room4", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "cec182e0-88a2-4227-93ad-fa75955178db", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, list all objects associated with type gripper. Write None if there are none.", "answer": "lgripper1, lgripper2, rgripper1 and rgripper2", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "ab035393-e51b-49b0-960b-f66a5be83798", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, list all objects associated with type robot. Write None if there are none.", "answer": "robot1 and robot2", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "5b0fc121-a80b-4bee-8756-56047afd16aa", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, list all objects associated with type object. Write None if there are none.", "answer": "ball1, ball2, ball3, ball4, ball5, ball6 and ball7", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "2adb58fa-ffdc-4468-89aa-793b7a608868", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, what is the object type for room3. Write None if there are none.", "answer": "room", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "46843346-5cee-4fce-9984-8bf36397918c", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, what is the object type for ball4, ball7, ball1, ball3 and ball5. Write None if there are none.", "answer": "object", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "92d8bb3a-7591-4c8f-9c1f-cf346c4136a2", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, what is the object type for robot1 and robot2. Write None if there are none.", "answer": "robot", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "03642b43-8c52-4cdb-b453-9f56aae9847f", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, what is the object type for robot2. Write None if there are none.", "answer": "robot", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "6c07a763-da6f-47ea-b1e2-1ff7984c4af0", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, is it True or False that ball7 is at room2?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "6aaa399a-40e5-4ae3-9ebc-62733670f603", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, is it True or False that robot2 is carrying ball4 with rgripper2?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "18cce1ad-fa8a-429b-83e2-1fb6da8d02dc", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, is it True or False that robot1 is carrying ball3 with rgripper1?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "b5f58619-f680-413b-bace-f94b1a756e65", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, is it True or False that robot2 is carrying ball7 with rgripper1?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "16b1fde8-5c41-431e-992a-634ea0b29feb", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, is it True or False that robot2 is not carrying ball1 with lgripper1, ball1 is not at room2, ball1 is not at room1, robot1 is not carrying ball1 with rgripper2, ball1 is not at room3, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball1 with lgripper2 and robot2 is not carrying ball1 with lgripper2?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "03e43392-2077-4bf0-bff2-b06781856de1", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, is it True or False that ball2 is not at room1, ball6 is not at room1, ball7 is not at room1, ball5 is not at room1, ball1 is not at room1 and ball4 is not at room1?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "9d8e4785-4148-4c68-b274-496e21db640a", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, is it True or False that robot1 is not carrying ball5 with rgripper2, robot2 is not carrying ball5 with lgripper1 and robot1 is not carrying ball5 with rgripper1?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "41eafb5a-3835-4774-ba61-5ebf5df588ea", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, is it True or False that robot1 is not carrying ball2 with lgripper1, robot2 is not carrying ball3 with lgripper1, robot1 is not carrying ball4 with lgripper1, robot2 is not carrying ball6 with lgripper1, robot1 is not carrying ball5 with lgripper1, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball1 with lgripper1, robot2 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, lgripper1 of robot2 is not free and robot2 is not carrying ball5 with lgripper1?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "3d127aad-8708-420e-b77a-62be6ee80c3b", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, list all objects associated with type gripper. Write None if there are none.", "answer": "lgripper1, lgripper2, rgripper1 and rgripper2", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "70e31632-63b4-4797-ad7d-e3e272b2f8ec", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, list all objects associated with type room. Write None if there are none.", "answer": "room1, room2, room3 and room4", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "d71960e2-72e5-4b07-8905-243fc3555584", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, list all objects associated with type object. Write None if there are none.", "answer": "ball1, ball2, ball3, ball4, ball5, ball6 and ball7", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "0a4adfff-3fdb-4efa-a298-4a173e0a650c", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, list all objects associated with type robot. Write None if there are none.", "answer": "robot1 and robot2", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "c4e31c41-2505-4634-8afc-e712cba141b1", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, what is the object type for room3 and room1. Write None if there are none.", "answer": "room", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "7c04e537-ffe1-42e1-984f-edd7ca1c3ffc", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, what is the object type for robot1. Write None if there are none.", "answer": "robot", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "3173bf52-1d81-42bf-ad40-f46166683410", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, what is the object type for robot2. Write None if there are none.", "answer": "robot", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "34052fae-7d44-4f60-ab7d-c575487f0aee", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, what is the object type for robot2 and robot1. Write None if there are none.", "answer": "robot", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "e3f9be5e-2d5c-4f3c-a468-1d46a564e7af", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, is it True or False that ball1 is at room2?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "a4212f96-d5a3-4d86-b1e2-94c240796cfc", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, is it True or False that robot2 is carrying ball2 with rgripper2?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "4639dcb8-aca1-4fd6-aff6-ddb63ba700ef", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, is it True or False that rgripper1 of robot1 is free?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "8340bf38-f772-4e82-855d-f5eadc560319", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, is it True or False that ball7 is at room2, robot2 is at room2 and ball6 is at room2?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "e16072c9-6765-4067-b119-570820559006", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, is it True or False that robot1 is not at room3, ball3 is not at room3 and robot2 is not at room3?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "54f2a75f-e55b-4f41-86e4-96fd7ab791b1", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, is it True or False that robot2 is not carrying ball6 with lgripper1, ball6 is not at room4, robot2 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper1, ball6 is not at room1, ball6 is not at room3, robot1 is not carrying ball6 with rgripper1 and robot2 is not carrying ball6 with rgripper1?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "fd079cbe-e726-4624-9175-f2b7e7360913", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, is it True or False that ball7 is not at room3, robot2 is not at room3, ball5 is not at room3, ball6 is not at room3, ball3 is not at room3 and ball2 is not at room3?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "81374bed-88f5-4425-8176-1d727f20bc3d", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, is it True or False that ball4 is not at room2?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "83a660cc-1ba8-488c-a053-00ef66f699b1", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, list all objects associated with type room. Write None if there are none.", "answer": "room1, room2, room3 and room4", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "fe8d53d0-acc8-4d40-98ee-9e3b7b1bcb12", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, list all objects associated with type robot. Write None if there are none.", "answer": "robot1 and robot2", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "1e605977-28c2-4750-a9ad-fa79acbdbe5a", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, list all objects associated with type object. Write None if there are none.", "answer": "ball1, ball2, ball3, ball4, ball5, ball6 and ball7", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "1d529f2a-d2e2-43e0-8143-527cde64ff0b", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, list all objects associated with type gripper. Write None if there are none.", "answer": "lgripper1, lgripper2, rgripper1 and rgripper2", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "10c58dc2-5728-4bfe-b826-9486eae1a284", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, what is the object type for room2, room4, room3 and room1. Write None if there are none.", "answer": "room", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "473c1765-d50f-4908-a44d-571e4e49ec81", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, what is the object type for room2, room1, room4 and room3. Write None if there are none.", "answer": "room", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "514abb59-f223-4e6d-a4f7-e82749d20829", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, what is the object type for ball6. Write None if there are none.", "answer": "object", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "27985d77-fa44-45d0-ac17-5f8ea480ef1c", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, what is the object type for ball4. Write None if there are none.", "answer": "object", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "69f3154f-9603-4411-9496-45b7e5c832c6", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that lgripper2 of robot2 is free?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "657651c0-ec4b-481f-a978-7cc71e19cc7e", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that ball2 is at room4 and robot2 is at room4?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "256a94ee-8de3-441a-a9c7-3aff2caa04d6", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that robot2 is at room4 and ball2 is at room4?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "4e42384d-c9d9-4c55-8436-f590bffff9ac", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that robot2 is carrying ball1 with lgripper2?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "f02d9a89-b52d-423b-8a84-328a0a7339c6", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that ball5 is not at room2, ball3 is not at room2, robot2 is not at room2 and ball2 is not at room2?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "d707f67e-5bc4-4dc4-a1a3-1104aad9bd96", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that robot2 is not carrying ball6 with rgripper2, ball6 is not at room1 and robot1 is not carrying ball6 with rgripper2?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "77ba6396-4f20-4481-a19a-25bf4a33e9eb", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that rgripper2 of robot2 is not free?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "264f9969-c2cf-46ff-819a-53e52de371c4", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that ball7 is not at room1 and robot1 is not carrying ball7 with rgripper1?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "c5e09fc5-0ff9-45d3-a750-8f18d7af20e5", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, list all objects associated with type object. Write None if there are none.", "answer": "ball1, ball2, ball3, ball4, ball5, ball6 and ball7", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "0d584464-0fd5-4d37-85cc-86d1dfcfe2b2", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, list all objects associated with type gripper. Write None if there are none.", "answer": "lgripper1, lgripper2, rgripper1 and rgripper2", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "aba347a4-5b05-410a-b3f3-ee2723d64fe1", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, list all objects associated with type room. Write None if there are none.", "answer": "room1, room2, room3 and room4", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "67a130db-68c9-49fa-99a7-a696fdb3a522", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, list all objects associated with type robot. Write None if there are none.", "answer": "robot1 and robot2", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "0429b76a-05f7-46bd-a5f7-041f3b075dc1", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, what is the object type for ball4, ball5, ball3, ball7, ball2, ball6 and ball1. Write None if there are none.", "answer": "object", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "9b44c93d-f221-497d-82fc-8f53c98f5995", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, what is the object type for robot2 and robot1. Write None if there are none.", "answer": "robot", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "6e682a2d-a701-4d2a-9bf4-10c09efff4f3", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, what is the object type for room2. Write None if there are none.", "answer": "room", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "7b4db8a8-b030-4d80-8998-ef94d7ae7567", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, what is the object type for room4, room2, room3 and room1. Write None if there are none.", "answer": "room", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "7231b5af-c073-461f-b262-c22d5d15e376", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that ball3 is at room2?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "5443a079-25ff-4a5a-8b8f-4991d58eecdd", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that robot1 is carrying ball4 with rgripper2?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "a25c450a-e476-4d6b-8760-d9ba5cd51daf", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that ball6 is at room4 and robot2 is at room4?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "34a95857-f436-43a7-b1b0-60d73774f7a1", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that ball2 is at room3?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "ea149538-c8f8-4705-9c81-95c977043115", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that ball5 is not at room4, robot1 is not at room4, ball6 is not at room4, ball1 is not at room4, ball4 is not at room4 and ball7 is not at room4?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "6fd76d8e-4658-4ae6-864f-d8659b09dc58", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that robot2 is not carrying ball7 with rgripper2, rgripper2 of robot2 is not free, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball3 with rgripper2, robot1 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, rgripper2 of robot1 is not free, robot2 is not carrying ball4 with rgripper2, robot2 is not carrying ball5 with rgripper2 and robot2 is not carrying ball3 with rgripper2?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "46e88ad4-a1bd-4bbf-b3a3-e5b47028e807", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that ball5 is not at room4, ball6 is not at room4 and ball4 is not at room4?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "eb47f49c-a1f9-4a2f-bf62-0473d9c65383", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that robot1 is not carrying ball1 with rgripper1 and robot1 is not carrying ball6 with rgripper1?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "e0fbe2e9-1df9-4756-9a22-ea2ce2f34ef3", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, list all objects associated with type object. Write None if there are none.", "answer": "ball1, ball2, ball3, ball4, ball5, ball6 and ball7", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "5ab1d169-cfb7-49b2-9227-8e1ab3105e66", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, list all objects associated with type robot. Write None if there are none.", "answer": "robot1 and robot2", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "a912c9ab-4ee5-4965-8cb8-595ab2cedcde", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, list all objects associated with type gripper. Write None if there are none.", "answer": "lgripper1, lgripper2, rgripper1 and rgripper2", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "0337fd9b-e660-4bb5-8c1c-4008838b0b1a", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, list all objects associated with type room. Write None if there are none.", "answer": "room1, room2, room3 and room4", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "9ca65d5c-d604-40f5-8126-fd73eee89514", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, what is the object type for ball7, ball1, ball2 and ball6. Write None if there are none.", "answer": "object", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "dab31bfd-9a43-4a0d-9575-287609c3f626", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, what is the object type for room4, room2, room3 and room1. Write None if there are none.", "answer": "room", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "57fb8b46-c293-4a9c-8438-794b6e5cfd93", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, what is the object type for robot2 and robot1. Write None if there are none.", "answer": "robot", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "c1f5555a-b119-4f7d-9163-c92beff97c44", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, what is the object type for robot1. Write None if there are none.", "answer": "robot", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "51a0ef1a-55b4-4e5c-8ff1-a64c3ef3921a", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, is it True or False that robot2 is at room2?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "b4578244-e6c0-4043-a742-d8b88dda1f47", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, is it True or False that robot2 is carrying ball6 with lgripper1?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "e28af160-455e-4193-ae48-551234d87b1c", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, is it True or False that ball4 is at room2?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "4f403f9e-cb55-44ec-8a82-254036561d28", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, is it True or False that ball5 is at room1?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "0e1c43b9-2645-4cc2-9cea-186890e71b6a", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, is it True or False that ball6 is not at room3?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "f6cd7db9-c18b-4192-a69b-f2f6efd3e432", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, is it True or False that rgripper1 of robot1 is not free?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "ee9f1326-4f91-4d9c-a67c-a3de360ee197", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, is it True or False that rgripper2 of robot2 is not free?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "19eaad62-1da2-4e3d-aaed-9ca49163731c", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, is it True or False that robot2 is not carrying ball6 with lgripper1?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "62e8716c-10f7-4e4b-b6fe-f04edfc993ba", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, are all of the following properties of the state True or False: robot1 is carrying ball5 with rgripper2, robot1 is carrying ball7 with rgripper1, robot1 is carrying ball5 with lgripper1, rgripper1 of robot1 is free, ball5 is at room2, lgripper1 of robot1 is free, ball7 is at room2, ball1 is at room2, ball6 is at room3, ball4 is at room2, ball2 is at room2, lgripper2 of robot2 is free and ball3 is at room1?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "ffa45d73-5705-4c3f-bd51-6fa7bde7b097", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, are all of the following properties of the state True or False: rgripper1 of robot1 is free, ball5 is at room2, lgripper1 of robot1 is free, ball7 is at room2, ball1 is at room2, ball6 is at room3, ball4 is at room2, ball2 is at room2, lgripper2 of robot2 is free, ball3 is at room1, robot1 is at room1, rgripper2 of robot2 is free and robot2 is at room2?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "529e76dd-fcf9-4416-8f4d-b848d7d32b3a", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, are all of the following properties of the state True or False: robot2 is carrying ball4 with lgripper1, robot1 is at room3, robot1 is carrying ball1 with rgripper1, robot2 is carrying ball7 with lgripper1, ball6 is at room2, robot2 is carrying ball4 with rgripper2, robot1 is carrying ball3 with rgripper1, rgripper1 of robot1 is free, ball5 is at room2, lgripper1 of robot1 is free, ball7 is at room2, ball1 is at room2 and ball6 is at room3?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "4acef5cf-8550-4706-af28-5d26882d12e8", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, are all of the following properties of the state True or False: robot1 is carrying ball4 with lgripper2, rgripper1 of robot1 is free, ball5 is at room2, lgripper1 of robot1 is free, ball7 is at room2, ball1 is at room2, ball6 is at room3, ball4 is at room2, ball2 is at room2, lgripper2 of robot2 is free, ball3 is at room1, robot1 is at room1 and rgripper2 of robot2 is free?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "167163e2-50a0-4665-a9f6-5a9c8f3e29ff", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, are all of the following properties of the state True or False: ball7 is not at room2, ball5 is not at room2, robot1 is not at room1, lgripper1 of robot1 is not free, robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, ball7 is not at room3, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, robot1 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, ball1 is not at room3, lgripper2 of robot1 is not free, robot1 is not at room4, robot2 is not at room3, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, robot1 is not at room3, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room2, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, ball6 is not at room2, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball4 is not at room3, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot2 is not at room4, robot1 is not carrying ball5 with rgripper2, robot1 is not carrying ball4 with rgripper1, robot2 is not carrying ball4 with lgripper2, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball3 with lgripper2, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball4 with rgripper2, robot2 is not carrying ball4 with rgripper1 and ball2 is not at room4?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "439ba947-795a-45b0-b3fb-749cf32917ba", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, are all of the following properties of the state True or False: ball5 is not at room2, robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, ball7 is not at room3, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, robot1 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, ball1 is not at room3, lgripper2 of robot1 is not free, robot1 is not at room4, robot2 is not at room3, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, robot1 is not at room3, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room2, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, ball6 is not at room2, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball4 is not at room3, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot2 is not at room4, robot1 is not carrying ball5 with rgripper2, robot1 is not carrying ball4 with rgripper1, robot2 is not carrying ball4 with lgripper2, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball3 with lgripper2, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball4 with rgripper2, robot2 is not carrying ball4 with rgripper1, ball2 is not at room4, robot1 is not carrying ball5 with lgripper1, robot2 is not carrying ball2 with rgripper1 and robot2 is not carrying ball3 with lgripper2?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "f8eda19a-3f06-4a8c-bee0-b8bad1e973ec", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, are all of the following properties of the state True or False: robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, ball7 is not at room3, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, robot1 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, ball1 is not at room3, lgripper2 of robot1 is not free, robot1 is not at room4, robot2 is not at room3, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, robot1 is not at room3, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room2, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, ball6 is not at room2, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball4 is not at room3, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot2 is not at room4, robot1 is not carrying ball5 with rgripper2, robot1 is not carrying ball4 with rgripper1, robot2 is not carrying ball4 with lgripper2, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball3 with lgripper2, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball4 with rgripper2, robot2 is not carrying ball4 with rgripper1, ball2 is not at room4, robot1 is not carrying ball5 with lgripper1, robot2 is not carrying ball2 with rgripper1, robot2 is not carrying ball3 with lgripper2 and robot2 is not carrying ball5 with rgripper1?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "d9cc1d21-1e1d-4275-8a58-f9aea4a199ce", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, are all of the following properties of the state True or False: ball3 is not at room1, ball5 is not at room2, robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, ball7 is not at room3, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, robot1 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, ball1 is not at room3, lgripper2 of robot1 is not free, robot1 is not at room4, robot2 is not at room3, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, robot1 is not at room3, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room2, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, ball6 is not at room2, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball4 is not at room3, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot2 is not at room4, robot1 is not carrying ball5 with rgripper2, robot1 is not carrying ball4 with rgripper1, robot2 is not carrying ball4 with lgripper2, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball3 with lgripper2, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball4 with rgripper2, robot2 is not carrying ball4 with rgripper1, ball2 is not at room4, robot1 is not carrying ball5 with lgripper1 and robot2 is not carrying ball2 with rgripper1?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "1df82def-0fc3-42c1-b34b-a62787cb798a", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, list all valid properties of the state that involve ball2. Write None if there are none.", "answer": "ball2 is at room2", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "bca29f6c-eb52-4b5c-90c4-1d35d16a2f93", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, list all valid properties of the state that involve ball3. Write None if there are none.", "answer": "ball3 is at room1", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "9d20fdfd-741e-41cc-8625-3e5c6fd21355", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, list all valid properties of the state that involve room2. Write None if there are none.", "answer": "ball5 is at room2, ball7 is at room2, ball1 is at room2, ball4 is at room2, ball2 is at room2 and robot2 is at room2", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "05d6067f-fa75-46fa-b4ee-fc3dba1015fe", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, list all valid properties of the state that involve robot2. Write None if there are none.", "answer": "lgripper2 of robot2 is free, rgripper2 of robot2 is free and robot2 is at room2", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "54f88fe6-38f1-415f-a4a7-8a0af46f07af", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, list all valid properties of the state that involve negations that involve rgripper2. Write None if there are none.", "answer": "robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball4 with rgripper2, rgripper2 of robot1 is not free, robot1 is not carrying ball6 with rgripper2, robot2 is not carrying ball7 with rgripper2, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball2 with rgripper2, robot2 is not carrying ball5 with rgripper2, robot1 is not carrying ball1 with rgripper2, robot1 is not carrying ball5 with rgripper2 and robot1 is not carrying ball4 with rgripper2", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "69dd07e5-3b1f-4289-9dde-d821b3cc6037", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, list all valid properties of the state that involve negations that involve ball5. Write None if there are none.", "answer": "ball5 is not at room4, robot1 is not carrying ball5 with lgripper2, robot2 is not carrying ball5 with lgripper2, robot2 is not carrying ball5 with lgripper1, robot2 is not carrying ball5 with rgripper2, ball5 is not at room3, ball5 is not at room1, robot1 is not carrying ball5 with rgripper2, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball5 with lgripper1 and robot2 is not carrying ball5 with rgripper1", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "cc2be54e-82a5-42ae-ad11-45099a4c1ca0", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, list all valid properties of the state that involve negations that involve rgripper1. Write None if there are none.", "answer": "robot1 is not carrying ball6 with rgripper1, robot1 is not carrying ball7 with rgripper1, robot2 is not carrying ball1 with rgripper1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball3 with rgripper1, robot1 is not carrying ball3 with rgripper1, rgripper1 of robot2 is not free, robot2 is not carrying ball6 with rgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball5 with rgripper1, robot2 is not carrying ball4 with rgripper1, robot2 is not carrying ball2 with rgripper1 and robot2 is not carrying ball5 with rgripper1", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "8a6ff21e-ee0f-4b5a-8dbc-17b4489598a6", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, list all valid properties of the state that involve negations that involve robot1. Write None if there are none.", "answer": "robot1 is not carrying ball6 with rgripper1, robot1 is not carrying ball7 with rgripper2, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot1 is not carrying ball1 with lgripper2, robot1 is not at room2, robot1 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, robot1 is not carrying ball2 with lgripper2, lgripper2 of robot1 is not free, robot1 is not at room4, robot1 is not at room3, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, robot1 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with lgripper2, robot1 is not carrying ball5 with rgripper2, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball3 with lgripper2, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball4 with rgripper2 and robot1 is not carrying ball5 with lgripper1", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "ef5d2f7e-d152-48bf-a55e-5c3d9d7f4c38", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, is it True or False that robot2 is carrying ball6 with rgripper1?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "26b95d70-d20b-4a6b-bcb3-afca406d995f", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, is it True or False that lgripper1 of robot1 is free?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "e96b9c3b-d246-493e-9550-02bc7c99b124", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, is it True or False that robot2 is at room3?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "05287750-aafe-42af-9a62-df0e6359fb3e", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, is it True or False that robot2 is carrying ball2 with rgripper1?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "6a76b7b5-ec0f-4cca-a115-99b8255bf6c3", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, is it True or False that ball7 is not at room2?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "5d3e4cc8-75a5-42e3-bda8-57318f31f687", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, is it True or False that ball2 is not at room3?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "65c60c99-cdf9-48be-8327-93c06bcc0f61", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, is it True or False that robot2 is not carrying ball4 with rgripper2?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "c76a3670-482b-4ca9-a4e1-2254c28487a6", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, is it True or False that rgripper1 of robot1 is not free?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "81119519-210d-4edd-a23f-3f97274d67df", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, are all of the following properties of the state True or False: rgripper1 of robot1 is free, ball5 is at room2, lgripper1 of robot1 is free, ball7 is at room2, robot2 is carrying ball4 with rgripper2, robot2 is at room3, ball6 is at room3, ball2 is at room2, lgripper2 of robot2 is free, ball1 is at room3, ball3 is at room1 and robot1 is at room1?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "fe055d28-e2dd-48e8-9892-80615b21482a", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, are all of the following properties of the state True or False: robot2 is carrying ball1 with lgripper1, ball2 is at room4, ball2 is at room1, robot2 is carrying ball3 with lgripper2, rgripper1 of robot1 is free, ball5 is at room2, lgripper1 of robot1 is free, ball7 is at room2, robot2 is carrying ball4 with rgripper2, robot2 is at room3, ball6 is at room3 and ball2 is at room2?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "beac319e-2a26-4c73-9a75-0f313ac928f8", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, are all of the following properties of the state True or False: robot1 is carrying ball3 with lgripper2, robot2 is carrying ball2 with rgripper1, robot2 is carrying ball3 with rgripper2, robot2 is carrying ball4 with rgripper1, robot2 is carrying ball7 with lgripper2, robot2 is carrying ball4 with lgripper1, robot1 is at room2, robot2 is carrying ball5 with rgripper1, rgripper1 of robot1 is free, ball5 is at room2, lgripper1 of robot1 is free and ball7 is at room2?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "2ecf2acf-3d33-4e56-9a52-fbfb6a3088bf", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, are all of the following properties of the state True or False: robot2 is at room1, robot2 is carrying ball5 with rgripper2, robot2 is carrying ball4 with lgripper1, robot2 is carrying ball5 with lgripper2, robot1 is carrying ball2 with rgripper2, robot1 is carrying ball3 with rgripper1, robot2 is carrying ball6 with lgripper1, rgripper1 of robot1 is free, ball5 is at room2, lgripper1 of robot1 is free, ball7 is at room2 and robot2 is carrying ball4 with rgripper2?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "eaf95ef5-f536-4aed-9177-dc4a91c1f7f9", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, are all of the following properties of the state True or False: ball3 is not at room1, robot2 is not carrying ball4 with rgripper2, rgripper1 of robot1 is not free, ball1 is not at room3, ball2 is not at room2, robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, robot2 is not at room2, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, ball7 is not at room3, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, ball4 is not at room2, robot1 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball1 is not at room2, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, lgripper2 of robot1 is not free, robot1 is not at room4, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, robot1 is not at room3, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room2, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, ball6 is not at room2, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball4 is not at room3, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot2 is not at room4, robot1 is not carrying ball5 with rgripper2, rgripper2 of robot2 is not free, robot1 is not carrying ball4 with rgripper1, robot2 is not carrying ball4 with lgripper2, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball3 with lgripper2, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball4 with rgripper2 and robot2 is not carrying ball4 with rgripper1?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "cd9710a6-30b0-4321-b0d8-434b62cb95c5", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, are all of the following properties of the state True or False: lgripper1 of robot1 is not free, ball1 is not at room3, ball3 is not at room1, ball2 is not at room2, robot2 is not carrying ball4 with rgripper2, robot1 is not at room1, ball6 is not at room3, lgripper2 of robot2 is not free, robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, robot2 is not at room2, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, ball7 is not at room3, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, ball4 is not at room2, robot1 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball1 is not at room2, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, lgripper2 of robot1 is not free, robot1 is not at room4, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, robot1 is not at room3, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room2, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, ball6 is not at room2, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball4 is not at room3, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot2 is not at room4, robot1 is not carrying ball5 with rgripper2, rgripper2 of robot2 is not free, robot1 is not carrying ball4 with rgripper1, robot2 is not carrying ball4 with lgripper2, robot1 is not carrying ball1 with rgripper1 and robot1 is not carrying ball3 with lgripper2?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "8d97fa25-cddc-4a43-b05a-1bee6c926266", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not at room3, ball5 is not at room2, robot1 is not at room1, rgripper1 of robot1 is not free, ball3 is not at room1, lgripper1 of robot1 is not free, lgripper2 of robot2 is not free, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, robot2 is not at room2, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, ball7 is not at room3, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, ball4 is not at room2, robot1 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball1 is not at room2, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, lgripper2 of robot1 is not free, robot1 is not at room4, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, robot1 is not at room3, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room2, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, ball6 is not at room2, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball4 is not at room3, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot2 is not at room4, robot1 is not carrying ball5 with rgripper2, rgripper2 of robot2 is not free, robot1 is not carrying ball4 with rgripper1, robot2 is not carrying ball4 with lgripper2, robot1 is not carrying ball1 with rgripper1 and robot1 is not carrying ball3 with lgripper2?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "7220a6d9-1708-4402-aaf9-7b81c6812916", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not at room3, ball2 is not at room2, rgripper1 of robot1 is not free, robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, robot2 is not at room2, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, ball7 is not at room3, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, ball4 is not at room2, robot1 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball1 is not at room2, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, lgripper2 of robot1 is not free, robot1 is not at room4, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, robot1 is not at room3, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room2, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, ball6 is not at room2, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball4 is not at room3, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot2 is not at room4, robot1 is not carrying ball5 with rgripper2, rgripper2 of robot2 is not free, robot1 is not carrying ball4 with rgripper1, robot2 is not carrying ball4 with lgripper2, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball3 with lgripper2, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball4 with rgripper2, robot2 is not carrying ball4 with rgripper1, ball2 is not at room4 and robot1 is not carrying ball5 with lgripper1?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "9d096723-ff23-4527-bcad-fed25a1dfcc6", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, list all valid properties of the state that involve rgripper1. Write None if there are none.", "answer": "rgripper1 of robot1 is free", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "d57ce894-1b61-49bf-a1cc-8c96cecf0367", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, list all valid properties of the state that involve ball2. Write None if there are none.", "answer": "ball2 is at room2", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "f4fb66d7-98d4-48bd-a620-6e4ec3e0585a", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, list all valid properties of the state that involve ball1. Write None if there are none.", "answer": "ball1 is at room3", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "4476f27c-1f3c-47bc-b23f-6172a42a3ad5", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, list all valid properties of the state that involve ball6. Write None if there are none.", "answer": "ball6 is at room3", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "cb02cc8b-50f8-481d-9804-af5d6806acad", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, list all valid properties of the state that involve negations that involve lgripper2. Write None if there are none.", "answer": "robot2 is not carrying ball6 with lgripper2, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball6 with lgripper2, robot1 is not carrying ball1 with lgripper2, robot2 is not carrying ball7 with lgripper2, robot2 is not carrying ball1 with lgripper2, robot1 is not carrying ball2 with lgripper2, lgripper2 of robot1 is not free, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball7 with lgripper2, robot2 is not carrying ball4 with lgripper2, robot1 is not carrying ball3 with lgripper2 and robot2 is not carrying ball3 with lgripper2", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "f5b5a832-d69c-4b29-96ad-8c781d340b5d", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, list all valid properties of the state that involve negations that involve room1. Write None if there are none.", "answer": "ball2 is not at room1, ball4 is not at room1, robot2 is not at room1, ball6 is not at room1, ball1 is not at room1, ball7 is not at room1 and ball5 is not at room1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "0bd60ae8-0b7b-4830-b4e5-fd14183549f7", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, list all valid properties of the state that involve negations that involve robot2. Write None if there are none.", "answer": "robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, robot2 is not at room2, robot2 is not carrying ball6 with lgripper1, robot2 is not carrying ball5 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot2 is not carrying ball7 with lgripper2, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, robot2 is not carrying ball2 with rgripper2, robot2 is not carrying ball3 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, robot2 is not carrying ball3 with lgripper1, robot2 is not carrying ball5 with rgripper2, robot2 is not carrying ball6 with rgripper1, robot2 is not carrying ball4 with lgripper1, robot2 is not carrying ball2 with lgripper2, robot2 is not carrying ball7 with lgripper1, robot2 is not at room4, rgripper2 of robot2 is not free, robot2 is not carrying ball4 with lgripper2, robot2 is not carrying ball4 with rgripper1, robot2 is not carrying ball2 with rgripper1, robot2 is not carrying ball3 with lgripper2 and robot2 is not carrying ball5 with rgripper1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "998b2f67-332a-4a1f-8b6c-6395d9d976bd", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, list all valid properties of the state that involve negations that involve ball3. Write None if there are none.", "answer": "robot2 is not carrying ball3 with rgripper1, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot2 is not carrying ball3 with lgripper1, ball3 is not at room2, ball3 is not at room3, ball3 is not at room4, robot1 is not carrying ball3 with lgripper2 and robot2 is not carrying ball3 with lgripper2", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "781c4912-b828-42d4-9b9f-e32cf60a7cc0", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, is it True or False that ball2 is at room3?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "26bde722-ca2a-4211-b28c-10916b2256ff", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, is it True or False that lgripper2 of robot2 is free?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "9b621c57-5d8a-4ed0-b2c6-e51af5cb1109", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, is it True or False that ball7 is at room2?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "b6343a6f-0c3d-49bf-b138-8158a13adc6e", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, is it True or False that rgripper1 of robot1 is free?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "add915a1-e392-487e-963f-392de414d1e6", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, is it True or False that ball5 is not at room2?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "10478518-f0a2-4bf9-a564-8093ad6bbe20", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, is it True or False that robot2 is not carrying ball1 with rgripper1?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "835fa561-ddc0-47c1-b2f5-b20a47d4276b", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, is it True or False that robot2 is not at room2?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "eba04b6a-a9ba-4960-b063-17489f1645a8", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, is it True or False that lgripper2 of robot2 is not free?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "e4d2903d-300d-474a-bb72-b1bd6a347a66", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, are all of the following properties of the state True or False: robot1 is carrying ball2 with lgripper2, robot2 is carrying ball2 with lgripper1, robot1 is carrying ball6 with lgripper1, robot2 is carrying ball3 with rgripper1, ball1 is at room2, robot1 is carrying ball6 with lgripper2, rgripper1 of robot1 is free, ball5 is at room2, ball7 is at room2, lgripper1 of robot1 is free, robot2 is carrying ball2 with rgripper2 and lgripper2 of robot2 is free?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "8d519eba-fb1e-441e-9126-d47fb6d05cae", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, are all of the following properties of the state True or False: rgripper1 of robot1 is free, ball5 is at room2, ball7 is at room2, lgripper1 of robot1 is free, robot2 is carrying ball2 with rgripper2, lgripper2 of robot2 is free, ball1 is at room3, ball3 is at room1, ball4 is at room3, robot1 is at room1, ball6 is at room2 and robot2 is at room2?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "2d83589e-ca11-4042-8545-62ea8889f54a", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, are all of the following properties of the state True or False: robot1 is carrying ball5 with rgripper2, ball6 is at room4, robot1 is carrying ball2 with rgripper2, robot2 is carrying ball7 with rgripper1, robot1 is carrying ball1 with lgripper1, rgripper1 of robot1 is free, ball5 is at room2, ball7 is at room2, lgripper1 of robot1 is free, robot2 is carrying ball2 with rgripper2, lgripper2 of robot2 is free and ball1 is at room3?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "3188618d-ad7a-4056-902d-af96d3076089", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is at room2, robot2 is carrying ball2 with lgripper1, robot1 is carrying ball4 with rgripper1, robot1 is carrying ball7 with rgripper1, rgripper1 of robot1 is free, ball5 is at room2, ball7 is at room2, lgripper1 of robot1 is free, robot2 is carrying ball2 with rgripper2, lgripper2 of robot2 is free, ball1 is at room3 and ball3 is at room1?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "d2450016-c8a2-4772-8cfb-0be476e02db5", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, are all of the following properties of the state True or False: robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball1 with lgripper1, ball2 is not at room2, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, ball7 is not at room3, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, ball4 is not at room2, robot1 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball1 is not at room2, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, lgripper2 of robot1 is not free, robot1 is not at room4, robot2 is not at room3, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, robot1 is not at room3, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room2, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot2 is not at room4, robot1 is not carrying ball5 with rgripper2, ball6 is not at room3, rgripper2 of robot2 is not free, robot1 is not carrying ball4 with rgripper1, robot2 is not carrying ball4 with lgripper2, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball3 with lgripper2, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball4 with rgripper2, robot2 is not carrying ball4 with rgripper1, ball2 is not at room4, robot1 is not carrying ball5 with lgripper1, robot2 is not carrying ball2 with rgripper1, robot2 is not carrying ball3 with lgripper2 and robot2 is not carrying ball5 with rgripper1?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "c2bcda96-b73a-4e17-ae6c-8728425b914d", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, are all of the following properties of the state True or False: ball4 is not at room3, lgripper2 of robot2 is not free, lgripper1 of robot1 is not free, robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball1 with lgripper1, ball2 is not at room2, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, ball7 is not at room3, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, ball4 is not at room2, robot1 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball1 is not at room2, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, lgripper2 of robot1 is not free, robot1 is not at room4, robot2 is not at room3, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, robot1 is not at room3, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room2, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot2 is not at room4, robot1 is not carrying ball5 with rgripper2, ball6 is not at room3, rgripper2 of robot2 is not free, robot1 is not carrying ball4 with rgripper1, robot2 is not carrying ball4 with lgripper2, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball3 with lgripper2, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball4 with rgripper2, robot2 is not carrying ball4 with rgripper1, ball2 is not at room4 and robot1 is not carrying ball5 with lgripper1?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "c72504a5-a52b-49a9-a163-67855daed707", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, are all of the following properties of the state True or False: ball4 is not at room3, rgripper1 of robot1 is not free, robot1 is not at room1, robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball1 with lgripper1, ball2 is not at room2, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, ball7 is not at room3, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, ball4 is not at room2, robot1 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball1 is not at room2, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, lgripper2 of robot1 is not free, robot1 is not at room4, robot2 is not at room3, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, robot1 is not at room3, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room2, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot2 is not at room4, robot1 is not carrying ball5 with rgripper2, ball6 is not at room3, rgripper2 of robot2 is not free, robot1 is not carrying ball4 with rgripper1, robot2 is not carrying ball4 with lgripper2, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball3 with lgripper2, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball4 with rgripper2, robot2 is not carrying ball4 with rgripper1, ball2 is not at room4 and robot1 is not carrying ball5 with lgripper1?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "4db6d392-7578-4489-a670-c974c42573d1", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, are all of the following properties of the state True or False: ball6 is not at room2, robot1 is not at room1, rgripper1 of robot1 is not free, ball1 is not at room3, ball4 is not at room3, ball7 is not at room2, robot2 is not carrying ball2 with rgripper2, ball5 is not at room2, lgripper1 of robot1 is not free, ball3 is not at room1, robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball1 with lgripper1, ball2 is not at room2, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, ball7 is not at room3, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, ball4 is not at room2, robot1 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball1 is not at room2, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, lgripper2 of robot1 is not free, robot1 is not at room4, robot2 is not at room3, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, robot1 is not at room3, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room2, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot2 is not at room4, robot1 is not carrying ball5 with rgripper2, ball6 is not at room3, rgripper2 of robot2 is not free, robot1 is not carrying ball4 with rgripper1 and robot2 is not carrying ball4 with lgripper2?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "ab7047b4-86ea-41ef-bcbb-0d36344c96e9", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, list all valid properties of the state that involve ball3. Write None if there are none.", "answer": "ball3 is at room1", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "116d5e71-3cef-4904-9dbb-6c257255eb1c", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, list all valid properties of the state that involve rgripper2. Write None if there are none.", "answer": "robot2 is carrying ball2 with rgripper2", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "a4d03c12-6390-4181-9582-b17a60f9f6fc", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, list all valid properties of the state that involve lgripper2. Write None if there are none.", "answer": "lgripper2 of robot2 is free", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "366d80af-f13a-4833-a262-266ab63b3639", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, list all valid properties of the state that involve robot1. Write None if there are none.", "answer": "rgripper1 of robot1 is free, lgripper1 of robot1 is free and robot1 is at room1", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "b37a499a-b26f-4c81-be5d-2bcc1123bd40", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, list all valid properties of the state that involve negations that involve robot2. Write None if there are none.", "answer": "robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, robot2 is not carrying ball6 with lgripper1, robot2 is not carrying ball4 with rgripper2, robot2 is not carrying ball5 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot2 is not carrying ball7 with lgripper2, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, robot2 is not carrying ball3 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, robot2 is not at room3, robot2 is not carrying ball3 with lgripper1, robot2 is not carrying ball5 with rgripper2, robot2 is not carrying ball6 with rgripper1, robot2 is not carrying ball4 with lgripper1, robot2 is not carrying ball2 with lgripper2, robot2 is not carrying ball7 with lgripper1, robot2 is not at room4, rgripper2 of robot2 is not free, robot2 is not carrying ball4 with lgripper2, robot2 is not carrying ball4 with rgripper1, robot2 is not carrying ball2 with rgripper1, robot2 is not carrying ball3 with lgripper2 and robot2 is not carrying ball5 with rgripper1", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "e0240b7a-9e9b-4ab1-9811-4b4c1b89bfe2", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, list all valid properties of the state that involve negations that involve rgripper1. Write None if there are none.", "answer": "robot1 is not carrying ball6 with rgripper1, robot1 is not carrying ball7 with rgripper1, robot2 is not carrying ball1 with rgripper1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball3 with rgripper1, robot1 is not carrying ball3 with rgripper1, rgripper1 of robot2 is not free, robot2 is not carrying ball6 with rgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball5 with rgripper1, robot2 is not carrying ball4 with rgripper1, robot2 is not carrying ball2 with rgripper1 and robot2 is not carrying ball5 with rgripper1", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "581ad7ef-cd74-42f2-a7e3-4ad97ee97a41", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, list all valid properties of the state that involve negations that involve ball5. Write None if there are none.", "answer": "ball5 is not at room4, robot1 is not carrying ball5 with lgripper2, robot2 is not carrying ball5 with lgripper2, robot2 is not carrying ball5 with lgripper1, robot2 is not carrying ball5 with rgripper2, ball5 is not at room3, ball5 is not at room1, robot1 is not carrying ball5 with rgripper2, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball5 with lgripper1 and robot2 is not carrying ball5 with rgripper1", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "119806e1-f115-437b-adbd-ba337330a375", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, list all valid properties of the state that involve negations that involve lgripper2. Write None if there are none.", "answer": "robot2 is not carrying ball6 with lgripper2, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball6 with lgripper2, robot1 is not carrying ball1 with lgripper2, robot2 is not carrying ball7 with lgripper2, robot2 is not carrying ball1 with lgripper2, robot1 is not carrying ball2 with lgripper2, lgripper2 of robot1 is not free, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball7 with lgripper2, robot2 is not carrying ball4 with lgripper2, robot1 is not carrying ball3 with lgripper2 and robot2 is not carrying ball3 with lgripper2", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "545ba621-ac51-475b-88ff-a5baababa424", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that robot1 is at room3?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "ecf4db1f-d66e-4a48-b7c5-96de34bbd8e5", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that robot1 is carrying ball5 with lgripper2?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "252a78c7-2c86-4b56-9e80-b14dbec8b533", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that robot1 is carrying ball3 with rgripper1?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "26d9b0d7-4c32-4e73-9dcf-8eeec5ab6f91", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that ball7 is at room4?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "f03973e0-0c19-492d-94f2-68f21cc88787", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that robot1 is not carrying ball7 with lgripper2?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "1cf5bdc4-bde2-42af-b3ab-de2cd0da237b", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that robot1 is not carrying ball5 with rgripper1?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "02022aa6-9125-476c-bd6f-4d778d598bb3", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that robot2 is not carrying ball6 with rgripper2?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "37796874-60ad-493e-a0e0-8e3d6ae33726", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that ball2 is not at room4?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "9f7fc567-a45a-4bfb-82b7-9830a62574eb", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball4 is at room3, robot1 is carrying ball5 with rgripper1, ball7 is at room2, robot1 is carrying ball3 with lgripper1, robot1 is at room2, ball6 is at room2, robot2 is at room4, lgripper2 of robot2 is free, ball1 is at room3, ball2 is at room4 and rgripper2 of robot2 is free?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "45edc124-7aac-4197-9605-4bca4385318f", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball4 is at room1, robot1 is carrying ball6 with lgripper1, robot2 is carrying ball5 with rgripper2, robot1 is at room4, ball4 is at room3, robot1 is carrying ball5 with rgripper1, ball7 is at room2, robot1 is carrying ball3 with lgripper1, robot1 is at room2, ball6 is at room2 and robot2 is at room4?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "39ac5016-dbf8-46c2-9b93-3ff3b0825302", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball6 is at room3, ball7 is at room3, robot1 is carrying ball1 with rgripper1, robot1 is carrying ball4 with rgripper2, ball5 is at room2, robot2 is carrying ball3 with rgripper2, robot2 is carrying ball2 with rgripper2, robot2 is carrying ball6 with rgripper1, robot2 is carrying ball5 with lgripper2, robot1 is at room4 and ball4 is at room3?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "0d5099ee-717e-416d-b705-6d73c30754a0", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: robot2 is carrying ball2 with rgripper1, ball7 is at room1, robot1 is carrying ball6 with lgripper1, ball4 is at room3, robot1 is carrying ball5 with rgripper1, ball7 is at room2, robot1 is carrying ball3 with lgripper1, robot1 is at room2, ball6 is at room2, robot2 is at room4 and lgripper2 of robot2 is free?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "541d88e1-a01f-4cf2-a099-5bfc6ebf9ee4", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball3 with lgripper1, robot2 is not at room4, ball1 is not at room3, ball6 is not at room2, robot1 is not at room2, rgripper2 of robot2 is not free, robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, robot2 is not at room2, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot1 is not at room1, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball1 with lgripper1, ball2 is not at room2, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, ball7 is not at room3, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, rgripper1 of robot1 is not free, lgripper1 of robot1 is not free, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, ball4 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, ball3 is not at room1, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball1 is not at room2, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, lgripper2 of robot1 is not free, robot1 is not at room4, robot2 is not at room3, ball5 is not at room2, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, robot1 is not at room3, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room2, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot1 is not carrying ball5 with rgripper2, ball6 is not at room3, robot1 is not carrying ball4 with rgripper1, robot2 is not carrying ball4 with lgripper2 and robot1 is not carrying ball1 with rgripper1?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "e24e6010-afbe-4d95-8435-bed8c9de3a93", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, robot2 is not at room2, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot1 is not at room1, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball1 with lgripper1, ball2 is not at room2, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, ball7 is not at room3, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, rgripper1 of robot1 is not free, lgripper1 of robot1 is not free, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, ball4 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, ball3 is not at room1, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball1 is not at room2, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, lgripper2 of robot1 is not free, robot1 is not at room4, robot2 is not at room3, ball5 is not at room2, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, robot1 is not at room3, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room2, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot1 is not carrying ball5 with rgripper2, ball6 is not at room3, robot1 is not carrying ball4 with rgripper1, robot2 is not carrying ball4 with lgripper2, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball3 with lgripper2, robot1 is not carrying ball4 with rgripper2, robot2 is not carrying ball4 with rgripper1, robot1 is not carrying ball5 with lgripper1, robot2 is not carrying ball2 with rgripper1, robot2 is not carrying ball3 with lgripper2 and robot2 is not carrying ball5 with rgripper1?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "50819c04-14f9-495c-82a3-05303bfa42ff", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: lgripper2 of robot2 is not free, robot1 is not carrying ball5 with rgripper1, ball2 is not at room4, ball6 is not at room2, robot1 is not at room2, ball1 is not at room3, robot2 is not at room4, robot1 is not carrying ball3 with lgripper1, ball4 is not at room3, robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, robot2 is not at room2, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot1 is not at room1, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball1 with lgripper1, ball2 is not at room2, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, ball7 is not at room3, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, rgripper1 of robot1 is not free, lgripper1 of robot1 is not free, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, ball4 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, ball3 is not at room1, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball1 is not at room2, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, lgripper2 of robot1 is not free, robot1 is not at room4, robot2 is not at room3, ball5 is not at room2, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, robot1 is not at room3, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room2, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot1 is not carrying ball5 with rgripper2, ball6 is not at room3 and robot1 is not carrying ball4 with rgripper1?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "75b99926-ca40-4850-92be-7a61ddcd31d2", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: robot1 is not at room2, ball1 is not at room3, robot2 is not at room4, robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, robot2 is not at room2, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot1 is not at room1, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball1 with lgripper1, ball2 is not at room2, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, ball7 is not at room3, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, rgripper1 of robot1 is not free, lgripper1 of robot1 is not free, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, ball4 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, ball3 is not at room1, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball1 is not at room2, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, lgripper2 of robot1 is not free, robot1 is not at room4, robot2 is not at room3, ball5 is not at room2, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, robot1 is not at room3, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room2, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot1 is not carrying ball5 with rgripper2, ball6 is not at room3, robot1 is not carrying ball4 with rgripper1, robot2 is not carrying ball4 with lgripper2, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball3 with lgripper2, robot1 is not carrying ball4 with rgripper2, robot2 is not carrying ball4 with rgripper1 and robot1 is not carrying ball5 with lgripper1?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "a72eb680-d54a-4f0a-9160-f3f9591991ee", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state that involve ball6. Write None if there are none.", "answer": "ball6 is at room2", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "8c7db26a-026e-462b-a419-24d7905473ed", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state that involve ball2. Write None if there are none.", "answer": "ball2 is at room4", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "61429859-a2dc-42f2-9596-500e1af80e0e", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state that involve ball1. Write None if there are none.", "answer": "ball1 is at room3", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "7756a3db-eee0-42da-abef-a53a9c2a373f", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state that involve rgripper2. Write None if there are none.", "answer": "rgripper2 of robot2 is free", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "0db19cc4-d84c-412a-b484-c7b03fb4297c", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state that involve negations that involve ball7. Write None if there are none.", "answer": "robot1 is not carrying ball7 with rgripper2, ball7 is not at room3, robot1 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with lgripper2, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, ball7 is not at room4, ball7 is not at room1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball7 with lgripper1 and robot1 is not carrying ball7 with lgripper2", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "7b2b7443-52a2-43d3-a795-6f3fc79b2461", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state that involve negations that involve ball6. Write None if there are none.", "answer": "robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball6 with lgripper1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, ball6 is not at room1, ball6 is not at room4, robot2 is not carrying ball6 with rgripper1, robot1 is not carrying ball6 with lgripper1 and ball6 is not at room3", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "8ee1ad11-9fc8-4527-ad4f-002b116dbfb5", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state that involve negations that involve lgripper1. Write None if there are none.", "answer": "robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, robot2 is not carrying ball6 with lgripper1, robot1 is not carrying ball1 with lgripper1, lgripper1 of robot1 is not free, robot2 is not carrying ball5 with lgripper1, robot2 is not carrying ball1 with lgripper1, robot2 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, robot2 is not carrying ball7 with lgripper1 and robot1 is not carrying ball5 with lgripper1", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "26b47c33-79e4-46ef-ac83-f30fb16fa6eb", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state that involve negations that involve room1. Write None if there are none.", "answer": "robot1 is not at room1, ball2 is not at room1, ball4 is not at room1, ball3 is not at room1, robot2 is not at room1, ball6 is not at room1, ball1 is not at room1, ball7 is not at room1 and ball5 is not at room1", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "8f3e16f7-3daf-4fca-9ab1-34356a132702", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that robot1 is at room3?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "0572d7c7-d3e7-4a26-a834-e951a68e84e4", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that robot1 is carrying ball5 with rgripper1?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "5cd1e991-884d-4e60-994b-1acbd09eee98", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that ball4 is at room3?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "c922c12c-0344-4fb3-bd79-b8b3c36a1d18", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that robot2 is carrying ball2 with lgripper2?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "86ba5324-a440-48a4-91b9-34b40d8318a3", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that ball4 is not at room3?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "d5c867c6-8367-45fb-837c-291f65c3f4c4", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that rgripper2 of robot2 is not free?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "400d1276-ea06-49e2-b165-8ddbdb3e5f5e", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that robot2 is not carrying ball4 with rgripper2?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "e3fe8841-9ad2-4d85-84cd-5ccc6c28b100", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that ball3 is not at room2?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "14594041-8e1b-4353-994c-c1d024e45dde", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball3 is at room2, ball4 is at room3, robot1 is carrying ball5 with rgripper1, lgripper1 of robot1 is free, ball7 is at room3, ball6 is at room2, robot2 is at room4, lgripper2 of robot2 is free, ball1 is at room3, ball2 is at room4, rgripper2 of robot2 is free and robot1 is at room3?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "e52eb261-cdb4-41e2-a3a5-d3447e8cf8be", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: robot1 is carrying ball4 with rgripper1, ball3 is at room2, ball4 is at room3, robot1 is carrying ball5 with rgripper1, lgripper1 of robot1 is free, ball7 is at room3, ball6 is at room2, robot2 is at room4, lgripper2 of robot2 is free, ball1 is at room3, ball2 is at room4 and rgripper2 of robot2 is free?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "819e18fa-4a8a-4613-a332-f4dc09525910", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball5 is at room3, ball5 is at room2, robot1 is carrying ball3 with rgripper2, robot1 is carrying ball6 with lgripper2, robot1 is carrying ball6 with rgripper2, robot2 is carrying ball2 with rgripper1, ball5 is at room1, robot2 is carrying ball3 with rgripper1, rgripper2 of robot1 is free, ball3 is at room2, ball4 is at room3 and robot1 is carrying ball5 with rgripper1?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "4211707f-5a71-42d5-bf45-7e8515ad8a05", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: robot2 is carrying ball2 with lgripper1, lgripper1 of robot2 is free, robot2 is carrying ball3 with rgripper2, ball4 is at room2, ball5 is at room3, robot2 is carrying ball5 with lgripper2, robot1 is carrying ball4 with lgripper1, robot2 is carrying ball2 with lgripper2, ball1 is at room4, ball3 is at room2, ball4 is at room3 and robot1 is carrying ball5 with rgripper1?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "0fc328ac-8d67-492b-9ed3-0bc363e7558e", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, robot2 is not at room2, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot1 is not at room1, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball1 with lgripper1, ball2 is not at room2, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, rgripper1 of robot1 is not free, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, ball4 is not at room2, robot1 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, ball3 is not at room1, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball1 is not at room2, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, lgripper2 of robot1 is not free, robot1 is not at room4, robot2 is not at room3, ball5 is not at room2, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot1 is not carrying ball5 with rgripper2, ball6 is not at room3, ball7 is not at room2, robot1 is not carrying ball4 with rgripper1, robot2 is not carrying ball4 with lgripper2, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball3 with lgripper2, robot1 is not carrying ball4 with rgripper2, robot2 is not carrying ball4 with rgripper1, robot1 is not carrying ball5 with lgripper1, robot2 is not carrying ball2 with rgripper1, robot2 is not carrying ball3 with lgripper2 and robot2 is not carrying ball5 with rgripper1?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "1bda0a07-daf6-4401-986c-443f044b7aa4", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not at room3, robot1 is not carrying ball5 with rgripper1, ball4 is not at room3, ball7 is not at room3, ball3 is not at room2, rgripper2 of robot2 is not free, ball6 is not at room2, robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, robot2 is not at room2, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot1 is not at room1, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball1 with lgripper1, ball2 is not at room2, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, rgripper1 of robot1 is not free, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, ball4 is not at room2, robot1 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, ball3 is not at room1, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball1 is not at room2, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, lgripper2 of robot1 is not free, robot1 is not at room4, robot2 is not at room3, ball5 is not at room2, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot1 is not carrying ball5 with rgripper2, ball6 is not at room3, ball7 is not at room2, robot1 is not carrying ball4 with rgripper1, robot2 is not carrying ball4 with lgripper2 and robot1 is not carrying ball1 with rgripper1?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "0e02e526-e521-40be-91a3-d5df5bf4aac8", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: robot1 is not carrying ball5 with rgripper1, ball1 is not at room3, robot2 is not at room4, lgripper1 of robot1 is not free, ball3 is not at room2, ball7 is not at room3, rgripper2 of robot2 is not free, ball4 is not at room3, ball6 is not at room2, lgripper2 of robot2 is not free, ball2 is not at room4, robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, robot2 is not at room2, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot1 is not at room1, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball1 with lgripper1, ball2 is not at room2, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, rgripper1 of robot1 is not free, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, ball4 is not at room2, robot1 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, ball3 is not at room1, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball1 is not at room2, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, lgripper2 of robot1 is not free, robot1 is not at room4, robot2 is not at room3, ball5 is not at room2, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot1 is not carrying ball5 with rgripper2 and ball6 is not at room3?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "478db995-7b84-4a9b-a85b-420b78a1d27b", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball7 is not at room3, ball6 is not at room2, robot1 is not carrying ball5 with rgripper1, ball1 is not at room3, robot1 is not at room3, ball3 is not at room2, lgripper1 of robot1 is not free, ball4 is not at room3, robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, robot2 is not at room2, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot1 is not at room1, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball1 with lgripper1, ball2 is not at room2, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, rgripper1 of robot1 is not free, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, ball4 is not at room2, robot1 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, ball3 is not at room1, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball1 is not at room2, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, lgripper2 of robot1 is not free, robot1 is not at room4, robot2 is not at room3, ball5 is not at room2, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot1 is not carrying ball5 with rgripper2, ball6 is not at room3, ball7 is not at room2, robot1 is not carrying ball4 with rgripper1 and robot2 is not carrying ball4 with lgripper2?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "01a56752-c090-4932-8710-c14bdb561539", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state that involve ball3. Write None if there are none.", "answer": "ball3 is at room2", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "5fe14aa8-2c41-4587-9796-af27336bb39e", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state that involve lgripper1. Write None if there are none.", "answer": "lgripper1 of robot1 is free", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "d8483478-ed0d-4cb0-ba9c-c272c511115d", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state that involve lgripper2. Write None if there are none.", "answer": "lgripper2 of robot2 is free", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "3b02f1bc-ca72-49ac-baf9-285bfee5e634", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state that involve room4. Write None if there are none.", "answer": "robot2 is at room4 and ball2 is at room4", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "c372991b-8714-4c28-97d6-dc8feb1bd964", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state that involve negations that involve robot1. Write None if there are none.", "answer": "robot1 is not carrying ball6 with rgripper1, robot1 is not carrying ball7 with rgripper2, robot1 is not carrying ball2 with lgripper1, robot1 is not at room1, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot1 is not carrying ball1 with lgripper2, rgripper1 of robot1 is not free, robot1 is not at room2, robot1 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, robot1 is not carrying ball2 with lgripper2, lgripper2 of robot1 is not free, robot1 is not at room4, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, robot1 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with lgripper2, robot1 is not carrying ball5 with rgripper2, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball3 with lgripper2, robot1 is not carrying ball4 with rgripper2 and robot1 is not carrying ball5 with lgripper1", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "18e42be1-7579-40be-8781-914614fc0307", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state that involve negations that involve rgripper1. Write None if there are none.", "answer": "robot1 is not carrying ball6 with rgripper1, robot1 is not carrying ball7 with rgripper1, robot2 is not carrying ball1 with rgripper1, rgripper1 of robot1 is not free, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball3 with rgripper1, robot1 is not carrying ball3 with rgripper1, rgripper1 of robot2 is not free, robot2 is not carrying ball6 with rgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball1 with rgripper1, robot2 is not carrying ball4 with rgripper1, robot2 is not carrying ball2 with rgripper1 and robot2 is not carrying ball5 with rgripper1", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "76c2262b-3a5c-4074-895c-d41c5c552692", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state that involve negations that involve ball2. Write None if there are none.", "answer": "robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, ball2 is not at room2, ball2 is not at room1, ball2 is not at room3, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball2 with rgripper2, robot1 is not carrying ball2 with lgripper2, robot1 is not carrying ball2 with rgripper1, robot2 is not carrying ball2 with lgripper2 and robot2 is not carrying ball2 with rgripper1", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "3a44cd7b-3918-41f1-b67f-5ba0228e3c7d", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state that involve negations that involve ball7. Write None if there are none.", "answer": "robot1 is not carrying ball7 with rgripper2, robot1 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with lgripper2, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, ball7 is not at room4, ball7 is not at room1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2 and ball7 is not at room2", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "1f50e336-40a0-4b14-ace5-77fdc1dd59d5", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, are all of the following properties: robot1 is carrying ball5 with lgripper2, robot2 is carrying ball6 with rgripper1, ball3 is at room2, rgripper1 of robot1 is free, ball5 is at room2, lgripper1 of robot1 is free, ball7 is at room2, ball1 is at room2, ball6 is at room3, ball4 is at room2, ball2 is at room2, lgripper2 of robot2 is free and ball3 is at room1, correct? Respond with True or False.", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "c949fe5d-4241-4db4-b644-c0ca1a4a3e82", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, are all of the following properties: ball4 is at room3, robot2 is carrying ball4 with lgripper1, robot2 is carrying ball4 with rgripper1, lgripper2 of robot1 is free, ball5 is at room1, robot1 is carrying ball6 with lgripper2, robot2 is carrying ball3 with lgripper2, robot2 is carrying ball7 with rgripper1, robot2 is at room3, robot2 is carrying ball1 with rgripper1, ball7 is at room4, robot1 is carrying ball7 with rgripper1 and rgripper1 of robot1 is free, correct? Respond with True or False.", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "195af6d8-66ef-4243-8832-b9ee8f5f214c", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, are all of the following properties: rgripper1 of robot1 is free, ball5 is at room2, lgripper1 of robot1 is free, ball7 is at room2, ball1 is at room2, ball6 is at room3, ball4 is at room2, ball2 is at room2, lgripper2 of robot2 is free, ball3 is at room1, robot1 is at room1, rgripper2 of robot2 is free and robot2 is at room2, correct? Respond with True or False.", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "8eb8be82-890b-464f-9c04-507696470832", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, are all of the following properties: robot2 is at room4, rgripper1 of robot1 is free, ball5 is at room2, lgripper1 of robot1 is free, ball7 is at room2, ball1 is at room2, ball6 is at room3, ball4 is at room2, ball2 is at room2, lgripper2 of robot2 is free, ball3 is at room1, robot1 is at room1 and rgripper2 of robot2 is free, correct? Respond with True or False.", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "4b1c5214-5abb-4e9b-8020-a0687a2e4d9a", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, are all of the following properties: robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, ball7 is not at room3, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, robot1 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, ball1 is not at room3, lgripper2 of robot1 is not free, robot1 is not at room4, robot2 is not at room3, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, robot1 is not at room3, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room2, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, ball6 is not at room2, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball4 is not at room3, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot2 is not at room4, robot1 is not carrying ball5 with rgripper2, robot1 is not carrying ball4 with rgripper1, robot2 is not carrying ball4 with lgripper2, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball3 with lgripper2, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball4 with rgripper2, robot2 is not carrying ball4 with rgripper1, ball2 is not at room4, robot1 is not carrying ball5 with lgripper1, robot2 is not carrying ball2 with rgripper1, robot2 is not carrying ball3 with lgripper2 and robot2 is not carrying ball5 with rgripper1, correct? Respond with True or False.", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "48199a2f-7c3d-4939-ba81-00a95dbe0e70", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, are all of the following properties: ball4 is not at room2, ball7 is not at room2, robot2 is not at room2, ball3 is not at room1, rgripper1 of robot1 is not free, ball5 is not at room2, ball2 is not at room2, ball1 is not at room2, ball6 is not at room3, lgripper1 of robot1 is not free, rgripper2 of robot2 is not free, robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, ball7 is not at room3, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, robot1 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, ball1 is not at room3, lgripper2 of robot1 is not free, robot1 is not at room4, robot2 is not at room3, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, robot1 is not at room3, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room2, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, ball6 is not at room2, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball4 is not at room3, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot2 is not at room4, robot1 is not carrying ball5 with rgripper2 and robot1 is not carrying ball4 with rgripper1, correct? Respond with True or False.", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "e6a106b8-f559-4686-9fa9-d5013b7d4e35", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, are all of the following properties: ball4 is not at room2, ball6 is not at room3, ball1 is not at room2, lgripper1 of robot1 is not free, robot1 is not at room1, robot2 is not at room2, ball7 is not at room2, rgripper2 of robot2 is not free, ball5 is not at room2, ball2 is not at room2, ball3 is not at room1, rgripper1 of robot1 is not free, robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, ball7 is not at room3, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, robot1 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, ball1 is not at room3, lgripper2 of robot1 is not free, robot1 is not at room4, robot2 is not at room3, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, robot1 is not at room3, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room2, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, ball6 is not at room2, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball4 is not at room3, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot2 is not at room4 and robot1 is not carrying ball5 with rgripper2, correct? Respond with True or False.", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "3375e9ad-9447-41c6-bcbc-640709ef8e4b", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, are all of the following properties: ball4 is not at room2, ball1 is not at room2, robot1 is not at room1, ball5 is not at room2, ball3 is not at room1, robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, ball7 is not at room3, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, robot1 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, ball1 is not at room3, lgripper2 of robot1 is not free, robot1 is not at room4, robot2 is not at room3, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, robot1 is not at room3, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room2, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, ball6 is not at room2, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball4 is not at room3, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot2 is not at room4, robot1 is not carrying ball5 with rgripper2, robot1 is not carrying ball4 with rgripper1, robot2 is not carrying ball4 with lgripper2, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball3 with lgripper2, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball4 with rgripper2 and robot2 is not carrying ball4 with rgripper1, correct? Respond with True or False.", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "76c40866-bd3b-46c6-b1f6-22e6aa2a3193", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "rgripper1 of robot1 is free, ball5 is at room2, lgripper1 of robot1 is free, ball7 is at room2, ball1 is at room2, ball6 is at room3, ball4 is at room2, ball2 is at room2, lgripper2 of robot2 is free, ball3 is at room1, robot1 is at room1, rgripper2 of robot2 is free and robot2 is at room2", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "15570599-9214-4e77-91fd-0bc49910822b", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, ball7 is not at room3, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, robot1 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, ball1 is not at room3, lgripper2 of robot1 is not free, robot1 is not at room4, robot2 is not at room3, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, robot1 is not at room3, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room2, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, ball6 is not at room2, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball4 is not at room3, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot2 is not at room4, robot1 is not carrying ball5 with rgripper2, robot1 is not carrying ball4 with rgripper1, robot2 is not carrying ball4 with lgripper2, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball3 with lgripper2, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball4 with rgripper2, robot2 is not carrying ball4 with rgripper1, ball2 is not at room4, robot1 is not carrying ball5 with lgripper1, robot2 is not carrying ball2 with rgripper1, robot2 is not carrying ball3 with lgripper2 and robot2 is not carrying ball5 with rgripper1", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "0bd7fc6b-71ab-4650-a65b-c631df964600", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, are all of the following properties: rgripper1 of robot1 is free, ball5 is at room2, lgripper1 of robot1 is free, ball7 is at room2, robot2 is carrying ball4 with rgripper2, robot2 is at room3, ball6 is at room3, ball2 is at room2, lgripper2 of robot2 is free, ball1 is at room3, ball3 is at room1 and robot1 is at room1, correct? Respond with True or False.", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "6f546c8e-d5ca-4493-bc59-ed4a7a2b852f", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, are all of the following properties: ball2 is at room3, ball7 is at room4, robot2 is at room2, robot1 is carrying ball2 with lgripper2, robot2 is carrying ball6 with rgripper1, ball5 is at room3, robot2 is carrying ball6 with lgripper1, robot2 is carrying ball2 with rgripper1, ball5 is at room4, ball4 is at room3, rgripper1 of robot1 is free and ball5 is at room2, correct? Respond with True or False.", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "4441fa2d-99e1-4c91-8d11-1336a5402ee4", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, are all of the following properties: robot1 is carrying ball5 with lgripper1, ball5 is at room1, robot2 is carrying ball5 with rgripper1, rgripper1 of robot2 is free, rgripper1 of robot1 is free, ball5 is at room2, lgripper1 of robot1 is free, ball7 is at room2, robot2 is carrying ball4 with rgripper2, robot2 is at room3, ball6 is at room3 and ball2 is at room2, correct? Respond with True or False.", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "5e6401cd-cc10-43f0-b978-e021e1a5fbd4", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, are all of the following properties: ball3 is at room2, ball2 is at room1, rgripper1 of robot1 is free, ball5 is at room2, lgripper1 of robot1 is free, ball7 is at room2, robot2 is carrying ball4 with rgripper2, robot2 is at room3, ball6 is at room3, ball2 is at room2, lgripper2 of robot2 is free and ball1 is at room3, correct? Respond with True or False.", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "389e8fb9-ea3c-406f-b160-47ab12fbd8d4", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, are all of the following properties: robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, robot2 is not at room2, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, ball7 is not at room3, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, ball4 is not at room2, robot1 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball1 is not at room2, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, lgripper2 of robot1 is not free, robot1 is not at room4, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, robot1 is not at room3, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room2, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, ball6 is not at room2, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball4 is not at room3, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot2 is not at room4, robot1 is not carrying ball5 with rgripper2, rgripper2 of robot2 is not free, robot1 is not carrying ball4 with rgripper1, robot2 is not carrying ball4 with lgripper2, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball3 with lgripper2, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball4 with rgripper2, robot2 is not carrying ball4 with rgripper1, ball2 is not at room4, robot1 is not carrying ball5 with lgripper1, robot2 is not carrying ball2 with rgripper1, robot2 is not carrying ball3 with lgripper2 and robot2 is not carrying ball5 with rgripper1, correct? Respond with True or False.", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "fbec37c4-b700-4cac-88d7-1908c7c54468", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, are all of the following properties: ball3 is not at room1, rgripper1 of robot1 is not free, ball7 is not at room2, robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, robot2 is not at room2, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, ball7 is not at room3, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, ball4 is not at room2, robot1 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball1 is not at room2, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, lgripper2 of robot1 is not free, robot1 is not at room4, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, robot1 is not at room3, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room2, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, ball6 is not at room2, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball4 is not at room3, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot2 is not at room4, robot1 is not carrying ball5 with rgripper2, rgripper2 of robot2 is not free, robot1 is not carrying ball4 with rgripper1, robot2 is not carrying ball4 with lgripper2, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball3 with lgripper2, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball4 with rgripper2, robot2 is not carrying ball4 with rgripper1, ball2 is not at room4 and robot1 is not carrying ball5 with lgripper1, correct? Respond with True or False.", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "5c0be05c-a5ee-4b4d-9e0a-7b6fb8c1c934", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, are all of the following properties: lgripper1 of robot1 is not free, ball7 is not at room2, ball1 is not at room3, robot1 is not at room1, ball3 is not at room1, rgripper1 of robot1 is not free, lgripper2 of robot2 is not free, ball6 is not at room3, robot2 is not at room3, robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, robot2 is not at room2, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, ball7 is not at room3, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, ball4 is not at room2, robot1 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball1 is not at room2, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, lgripper2 of robot1 is not free, robot1 is not at room4, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, robot1 is not at room3, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room2, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, ball6 is not at room2, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball4 is not at room3, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot2 is not at room4, robot1 is not carrying ball5 with rgripper2, rgripper2 of robot2 is not free, robot1 is not carrying ball4 with rgripper1, robot2 is not carrying ball4 with lgripper2 and robot1 is not carrying ball1 with rgripper1, correct? Respond with True or False.", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "7cd825ba-00db-47f8-a950-596c33e2c7fd", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, are all of the following properties: ball5 is not at room2, ball7 is not at room2, lgripper1 of robot1 is not free, ball3 is not at room1, ball6 is not at room3, robot2 is not at room3, robot2 is not carrying ball4 with rgripper2, ball1 is not at room3, robot1 is not at room1, lgripper2 of robot2 is not free, robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, robot2 is not at room2, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, ball7 is not at room3, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, ball4 is not at room2, robot1 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball1 is not at room2, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, lgripper2 of robot1 is not free, robot1 is not at room4, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, robot1 is not at room3, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room2, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, ball6 is not at room2, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball4 is not at room3, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot2 is not at room4, robot1 is not carrying ball5 with rgripper2, rgripper2 of robot2 is not free, robot1 is not carrying ball4 with rgripper1 and robot2 is not carrying ball4 with lgripper2, correct? Respond with True or False.", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "fc58c503-4d03-4bcc-9941-dc1eea2a3f2b", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "rgripper1 of robot1 is free, ball5 is at room2, lgripper1 of robot1 is free, ball7 is at room2, robot2 is carrying ball4 with rgripper2, robot2 is at room3, ball6 is at room3, ball2 is at room2, lgripper2 of robot2 is free, ball1 is at room3, ball3 is at room1 and robot1 is at room1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "6515b797-c6a1-4504-89de-d8ff0178e25b", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, robot2 is not at room2, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, ball7 is not at room3, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, ball4 is not at room2, robot1 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball1 is not at room2, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, lgripper2 of robot1 is not free, robot1 is not at room4, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, robot1 is not at room3, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room2, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, ball6 is not at room2, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball4 is not at room3, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot2 is not at room4, robot1 is not carrying ball5 with rgripper2, rgripper2 of robot2 is not free, robot1 is not carrying ball4 with rgripper1, robot2 is not carrying ball4 with lgripper2, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball3 with lgripper2, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball4 with rgripper2, robot2 is not carrying ball4 with rgripper1, ball2 is not at room4, robot1 is not carrying ball5 with lgripper1, robot2 is not carrying ball2 with rgripper1, robot2 is not carrying ball3 with lgripper2 and robot2 is not carrying ball5 with rgripper1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "de7e3412-2a2f-4532-bb8c-b0b40270eab7", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, are all of the following properties: rgripper1 of robot1 is free, ball5 is at room2, ball7 is at room2, lgripper1 of robot1 is free, robot2 is carrying ball2 with rgripper2, lgripper2 of robot2 is free, ball1 is at room3, ball3 is at room1, ball4 is at room3, robot1 is at room1, ball6 is at room2 and robot2 is at room2, correct? Respond with True or False.", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "11151008-2d67-4340-90b0-7cf3b000d0a3", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, are all of the following properties: robot1 is carrying ball4 with lgripper1, robot2 is at room4, robot2 is carrying ball2 with lgripper2, robot1 is carrying ball4 with rgripper1, rgripper1 of robot1 is free, ball5 is at room2, ball7 is at room2, lgripper1 of robot1 is free, robot2 is carrying ball2 with rgripper2, lgripper2 of robot2 is free, ball1 is at room3 and ball3 is at room1, correct? Respond with True or False.", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "916e48f4-e2e9-4d3b-ae95-f96c5d82e179", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, are all of the following properties: robot1 is carrying ball1 with lgripper2, robot2 is carrying ball5 with lgripper2, ball7 is at room3, robot1 is carrying ball6 with rgripper2, robot2 is carrying ball2 with rgripper1, robot2 is at room1, robot1 is carrying ball2 with lgripper1, robot2 is carrying ball3 with rgripper1, ball7 is at room1, rgripper1 of robot1 is free, ball5 is at room2 and ball7 is at room2, correct? Respond with True or False.", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "1bf4942e-53ab-47a2-8a7f-605aa8048fb4", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, are all of the following properties: ball2 is at room4, robot1 is carrying ball6 with lgripper2, robot2 is carrying ball2 with lgripper2, ball6 is at room4, robot1 is carrying ball6 with lgripper1, robot1 is at room3, rgripper1 of robot1 is free, ball5 is at room2, ball7 is at room2, lgripper1 of robot1 is free, robot2 is carrying ball2 with rgripper2 and lgripper2 of robot2 is free, correct? Respond with True or False.", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "b794ef35-9ecf-4439-8d4f-298fe4d4b4a1", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, are all of the following properties: robot2 is not carrying ball2 with rgripper2, ball3 is not at room1, ball4 is not at room3, robot1 is not at room1, ball1 is not at room3, ball7 is not at room2, lgripper1 of robot1 is not free, robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball1 with lgripper1, ball2 is not at room2, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, ball7 is not at room3, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, ball4 is not at room2, robot1 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball1 is not at room2, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, lgripper2 of robot1 is not free, robot1 is not at room4, robot2 is not at room3, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, robot1 is not at room3, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room2, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot2 is not at room4, robot1 is not carrying ball5 with rgripper2, ball6 is not at room3, rgripper2 of robot2 is not free, robot1 is not carrying ball4 with rgripper1, robot2 is not carrying ball4 with lgripper2, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball3 with lgripper2 and robot1 is not carrying ball5 with rgripper1, correct? Respond with True or False.", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "5f3cb619-0176-4b18-ac97-3e886957d22b", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, are all of the following properties: ball4 is not at room3, robot2 is not carrying ball2 with rgripper2, ball6 is not at room2, robot2 is not at room2, ball7 is not at room2, robot1 is not at room1, lgripper2 of robot2 is not free, ball3 is not at room1, ball5 is not at room2, lgripper1 of robot1 is not free, robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball1 with lgripper1, ball2 is not at room2, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, ball7 is not at room3, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, ball4 is not at room2, robot1 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball1 is not at room2, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, lgripper2 of robot1 is not free, robot1 is not at room4, robot2 is not at room3, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, robot1 is not at room3, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room2, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot2 is not at room4, robot1 is not carrying ball5 with rgripper2, ball6 is not at room3, rgripper2 of robot2 is not free, robot1 is not carrying ball4 with rgripper1 and robot2 is not carrying ball4 with lgripper2, correct? Respond with True or False.", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "cd0c5a47-fe59-43f9-8e0d-ebda734c47e5", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, are all of the following properties: robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball1 with lgripper1, ball2 is not at room2, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, ball7 is not at room3, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, ball4 is not at room2, robot1 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball1 is not at room2, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, lgripper2 of robot1 is not free, robot1 is not at room4, robot2 is not at room3, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, robot1 is not at room3, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room2, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot2 is not at room4, robot1 is not carrying ball5 with rgripper2, ball6 is not at room3, rgripper2 of robot2 is not free, robot1 is not carrying ball4 with rgripper1, robot2 is not carrying ball4 with lgripper2, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball3 with lgripper2, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball4 with rgripper2, robot2 is not carrying ball4 with rgripper1, ball2 is not at room4, robot1 is not carrying ball5 with lgripper1, robot2 is not carrying ball2 with rgripper1, robot2 is not carrying ball3 with lgripper2 and robot2 is not carrying ball5 with rgripper1, correct? Respond with True or False.", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "832ec9de-f66f-480a-9374-08674d947991", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, are all of the following properties: lgripper2 of robot2 is not free, rgripper1 of robot1 is not free, ball4 is not at room3, lgripper1 of robot1 is not free, ball5 is not at room2, robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball1 with lgripper1, ball2 is not at room2, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, ball7 is not at room3, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, ball4 is not at room2, robot1 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball1 is not at room2, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, lgripper2 of robot1 is not free, robot1 is not at room4, robot2 is not at room3, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, robot1 is not at room3, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room2, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot2 is not at room4, robot1 is not carrying ball5 with rgripper2, ball6 is not at room3, rgripper2 of robot2 is not free, robot1 is not carrying ball4 with rgripper1, robot2 is not carrying ball4 with lgripper2, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball3 with lgripper2, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball4 with rgripper2 and robot2 is not carrying ball4 with rgripper1, correct? Respond with True or False.", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "c1fe3a7b-7298-4ae0-9c91-1488cfd238b2", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "rgripper1 of robot1 is free, ball5 is at room2, ball7 is at room2, lgripper1 of robot1 is free, robot2 is carrying ball2 with rgripper2, lgripper2 of robot2 is free, ball1 is at room3, ball3 is at room1, ball4 is at room3, robot1 is at room1, ball6 is at room2 and robot2 is at room2", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "6ca42c21-da8f-4158-8a49-bb14d49df767", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball1 with lgripper1, ball2 is not at room2, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, ball7 is not at room3, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, ball4 is not at room2, robot1 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball1 is not at room2, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, lgripper2 of robot1 is not free, robot1 is not at room4, robot2 is not at room3, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, robot1 is not at room3, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room2, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot2 is not at room4, robot1 is not carrying ball5 with rgripper2, ball6 is not at room3, rgripper2 of robot2 is not free, robot1 is not carrying ball4 with rgripper1, robot2 is not carrying ball4 with lgripper2, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball3 with lgripper2, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball4 with rgripper2, robot2 is not carrying ball4 with rgripper1, ball2 is not at room4, robot1 is not carrying ball5 with lgripper1, robot2 is not carrying ball2 with rgripper1, robot2 is not carrying ball3 with lgripper2 and robot2 is not carrying ball5 with rgripper1", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "b8ee3923-dc45-4cbd-b09a-6a1def3906a5", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties: ball4 is at room3, robot1 is carrying ball5 with rgripper1, ball7 is at room2, robot1 is carrying ball3 with lgripper1, robot1 is at room2, ball6 is at room2, robot2 is at room4, lgripper2 of robot2 is free, ball1 is at room3, ball2 is at room4 and rgripper2 of robot2 is free, correct? Respond with True or False.", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "6831abe7-6c17-496d-adc8-843723a3c9b4", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties: robot1 is at room3, robot2 is at room3, robot2 is carrying ball2 with lgripper2, ball7 is at room4, robot1 is carrying ball6 with rgripper1, robot1 is carrying ball3 with rgripper1, ball3 is at room2, ball4 is at room3, robot1 is carrying ball5 with rgripper1, ball7 is at room2 and robot1 is carrying ball3 with lgripper1, correct? Respond with True or False.", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "62270d8f-2dd8-4344-a5c7-a944452467dd", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties: robot1 is carrying ball5 with lgripper1, ball5 is at room1, ball2 is at room2, ball5 is at room2, robot1 is carrying ball6 with lgripper1, robot1 is carrying ball2 with rgripper1, ball4 is at room3, robot1 is carrying ball5 with rgripper1, ball7 is at room2, robot1 is carrying ball3 with lgripper1 and robot1 is at room2, correct? Respond with True or False.", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "d45c359f-6d4e-46fe-813f-396dd4237828", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties: ball7 is at room3, ball4 is at room1, robot1 is carrying ball4 with lgripper1, robot2 is carrying ball5 with lgripper2, ball4 is at room3, robot1 is carrying ball5 with rgripper1, ball7 is at room2, robot1 is carrying ball3 with lgripper1, robot1 is at room2, ball6 is at room2 and robot2 is at room4, correct? Respond with True or False.", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "2736c2bb-e5ba-4545-ae78-a57dabf228b1", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties: robot1 is not carrying ball3 with lgripper1, ball2 is not at room4, rgripper2 of robot2 is not free, lgripper2 of robot2 is not free, robot2 is not at room4, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, robot2 is not at room2, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot1 is not at room1, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball1 with lgripper1, ball2 is not at room2, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, ball7 is not at room3, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, rgripper1 of robot1 is not free, lgripper1 of robot1 is not free, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, ball4 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, ball3 is not at room1, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball1 is not at room2, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, lgripper2 of robot1 is not free, robot1 is not at room4, robot2 is not at room3, ball5 is not at room2, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, robot1 is not at room3, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room2, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot1 is not carrying ball5 with rgripper2, ball6 is not at room3, robot1 is not carrying ball4 with rgripper1, robot2 is not carrying ball4 with lgripper2, robot1 is not carrying ball1 with rgripper1 and robot1 is not carrying ball3 with lgripper2, correct? Respond with True or False.", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "fbefe89e-1b66-4229-b64a-6cb91d2ec1ec", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties: robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, robot2 is not at room2, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot1 is not at room1, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball1 with lgripper1, ball2 is not at room2, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, ball7 is not at room3, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, rgripper1 of robot1 is not free, lgripper1 of robot1 is not free, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, ball4 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, ball3 is not at room1, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball1 is not at room2, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, lgripper2 of robot1 is not free, robot1 is not at room4, robot2 is not at room3, ball5 is not at room2, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, robot1 is not at room3, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room2, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot1 is not carrying ball5 with rgripper2, ball6 is not at room3, robot1 is not carrying ball4 with rgripper1, robot2 is not carrying ball4 with lgripper2, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball3 with lgripper2, robot1 is not carrying ball4 with rgripper2, robot2 is not carrying ball4 with rgripper1, robot1 is not carrying ball5 with lgripper1, robot2 is not carrying ball2 with rgripper1, robot2 is not carrying ball3 with lgripper2 and robot2 is not carrying ball5 with rgripper1, correct? Respond with True or False.", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "e6ff1822-2bcd-4e10-9e33-3c3558c6aba8", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties: ball6 is not at room2, robot2 is not at room4, lgripper2 of robot2 is not free, robot1 is not carrying ball5 with rgripper1, rgripper2 of robot2 is not free, robot1 is not carrying ball3 with lgripper1, ball1 is not at room3, ball2 is not at room4, robot1 is not at room2, ball7 is not at room2, robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, robot2 is not at room2, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot1 is not at room1, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball1 with lgripper1, ball2 is not at room2, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, ball7 is not at room3, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, rgripper1 of robot1 is not free, lgripper1 of robot1 is not free, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, ball4 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, ball3 is not at room1, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball1 is not at room2, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, lgripper2 of robot1 is not free, robot1 is not at room4, robot2 is not at room3, ball5 is not at room2, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, robot1 is not at room3, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room2, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot1 is not carrying ball5 with rgripper2 and ball6 is not at room3, correct? Respond with True or False.", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "0d22f6dd-a728-486e-b6d4-0e26393f9823", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties: robot1 is not carrying ball3 with lgripper1, rgripper2 of robot2 is not free, robot2 is not at room4, ball4 is not at room3, ball7 is not at room2, robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, robot2 is not at room2, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot1 is not at room1, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball1 with lgripper1, ball2 is not at room2, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, ball7 is not at room3, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, rgripper1 of robot1 is not free, lgripper1 of robot1 is not free, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, ball4 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, ball3 is not at room1, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball1 is not at room2, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, lgripper2 of robot1 is not free, robot1 is not at room4, robot2 is not at room3, ball5 is not at room2, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, robot1 is not at room3, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room2, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot1 is not carrying ball5 with rgripper2, ball6 is not at room3, robot1 is not carrying ball4 with rgripper1, robot2 is not carrying ball4 with lgripper2, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball3 with lgripper2 and robot1 is not carrying ball4 with rgripper2, correct? Respond with True or False.", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "07585355-e734-4e07-94c7-1fdcc4c317a2", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "ball4 is at room3, robot1 is carrying ball5 with rgripper1, ball7 is at room2, robot1 is carrying ball3 with lgripper1, robot1 is at room2, ball6 is at room2, robot2 is at room4, lgripper2 of robot2 is free, ball1 is at room3, ball2 is at room4 and rgripper2 of robot2 is free", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "af01791e-14a6-4225-aea3-2b44e8a6b72f", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, robot2 is not at room2, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot1 is not at room1, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball1 with lgripper1, ball2 is not at room2, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, ball7 is not at room3, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, rgripper1 of robot1 is not free, lgripper1 of robot1 is not free, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, ball4 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, ball3 is not at room1, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball1 is not at room2, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, lgripper2 of robot1 is not free, robot1 is not at room4, robot2 is not at room3, ball5 is not at room2, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, robot1 is not at room3, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room2, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot1 is not carrying ball5 with rgripper2, ball6 is not at room3, robot1 is not carrying ball4 with rgripper1, robot2 is not carrying ball4 with lgripper2, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball3 with lgripper2, robot1 is not carrying ball4 with rgripper2, robot2 is not carrying ball4 with rgripper1, robot1 is not carrying ball5 with lgripper1, robot2 is not carrying ball2 with rgripper1, robot2 is not carrying ball3 with lgripper2 and robot2 is not carrying ball5 with rgripper1", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "cfecbc33-bbb3-4bb0-9540-31e911f462e9", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties: robot2 is carrying ball2 with lgripper1, robot2 is carrying ball4 with lgripper2, robot1 is carrying ball4 with lgripper1, robot2 is carrying ball3 with lgripper2, robot1 is carrying ball3 with lgripper1, robot2 is carrying ball4 with rgripper1, ball2 is at room2, ball3 is at room2, ball4 is at room3, robot1 is carrying ball5 with rgripper1, lgripper1 of robot1 is free and ball7 is at room3, correct? Respond with True or False.", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "7170ce81-4914-4cfa-993f-d6958faa2293", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties: ball3 is at room2, ball4 is at room3, robot1 is carrying ball5 with rgripper1, lgripper1 of robot1 is free, ball7 is at room3, ball6 is at room2, robot2 is at room4, lgripper2 of robot2 is free, ball1 is at room3, ball2 is at room4, rgripper2 of robot2 is free and robot1 is at room3, correct? Respond with True or False.", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "f5485f6b-bfd6-4561-beb3-0f0a4431e4bd", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties: robot1 is carrying ball7 with rgripper1, ball1 is at room2, robot2 is carrying ball7 with rgripper2, robot2 is carrying ball2 with lgripper1, robot2 is carrying ball7 with lgripper1, robot2 is carrying ball7 with lgripper2, ball3 is at room2, ball4 is at room3, robot1 is carrying ball5 with rgripper1, lgripper1 of robot1 is free, ball7 is at room3 and ball6 is at room2, correct? Respond with True or False.", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "00c7ca65-ceb7-40ee-bf18-1eb13b16aae2", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties: ball5 is at room3, ball3 is at room2, ball4 is at room3, robot1 is carrying ball5 with rgripper1, lgripper1 of robot1 is free, ball7 is at room3, ball6 is at room2, robot2 is at room4, lgripper2 of robot2 is free, ball1 is at room3, ball2 is at room4 and rgripper2 of robot2 is free, correct? Respond with True or False.", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "3e72e532-39f2-4235-b52c-ebb6a9c4c21c", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties: robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, robot2 is not at room2, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot1 is not at room1, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball1 with lgripper1, ball2 is not at room2, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, rgripper1 of robot1 is not free, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, ball4 is not at room2, robot1 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, ball3 is not at room1, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball1 is not at room2, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, lgripper2 of robot1 is not free, robot1 is not at room4, robot2 is not at room3, ball5 is not at room2, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot1 is not carrying ball5 with rgripper2, ball6 is not at room3, ball7 is not at room2, robot1 is not carrying ball4 with rgripper1, robot2 is not carrying ball4 with lgripper2, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball3 with lgripper2, robot1 is not carrying ball4 with rgripper2, robot2 is not carrying ball4 with rgripper1, robot1 is not carrying ball5 with lgripper1, robot2 is not carrying ball2 with rgripper1, robot2 is not carrying ball3 with lgripper2 and robot2 is not carrying ball5 with rgripper1, correct? Respond with True or False.", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "d773db0e-4592-4226-a57d-09ebf0a581a4", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties: lgripper1 of robot1 is not free, robot1 is not at room3, robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, robot2 is not at room2, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot1 is not at room1, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball1 with lgripper1, ball2 is not at room2, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, rgripper1 of robot1 is not free, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, ball4 is not at room2, robot1 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, ball3 is not at room1, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball1 is not at room2, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, lgripper2 of robot1 is not free, robot1 is not at room4, robot2 is not at room3, ball5 is not at room2, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot1 is not carrying ball5 with rgripper2, ball6 is not at room3, ball7 is not at room2, robot1 is not carrying ball4 with rgripper1, robot2 is not carrying ball4 with lgripper2, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball3 with lgripper2, robot1 is not carrying ball4 with rgripper2, robot2 is not carrying ball4 with rgripper1, robot1 is not carrying ball5 with lgripper1 and robot2 is not carrying ball2 with rgripper1, correct? Respond with True or False.", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "101f336d-8899-408f-b578-4b3b3df935eb", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties: ball4 is not at room3, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, robot2 is not at room2, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot1 is not at room1, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball1 with lgripper1, ball2 is not at room2, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, rgripper1 of robot1 is not free, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, ball4 is not at room2, robot1 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, ball3 is not at room1, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball1 is not at room2, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, lgripper2 of robot1 is not free, robot1 is not at room4, robot2 is not at room3, ball5 is not at room2, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot1 is not carrying ball5 with rgripper2, ball6 is not at room3, ball7 is not at room2, robot1 is not carrying ball4 with rgripper1, robot2 is not carrying ball4 with lgripper2, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball3 with lgripper2, robot1 is not carrying ball4 with rgripper2, robot2 is not carrying ball4 with rgripper1, robot1 is not carrying ball5 with lgripper1 and robot2 is not carrying ball2 with rgripper1, correct? Respond with True or False.", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "a03244c8-c0fa-439d-9d92-624d7aa9e220", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties: ball1 is not at room3, rgripper2 of robot2 is not free, lgripper1 of robot1 is not free, ball2 is not at room4, lgripper2 of robot2 is not free, robot1 is not at room3, ball7 is not at room3, robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, robot2 is not at room2, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot1 is not at room1, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball1 with lgripper1, ball2 is not at room2, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, rgripper1 of robot1 is not free, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, ball4 is not at room2, robot1 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, ball3 is not at room1, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball1 is not at room2, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, lgripper2 of robot1 is not free, robot1 is not at room4, robot2 is not at room3, ball5 is not at room2, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot1 is not carrying ball5 with rgripper2, ball6 is not at room3, ball7 is not at room2, robot1 is not carrying ball4 with rgripper1, robot2 is not carrying ball4 with lgripper2 and robot1 is not carrying ball1 with rgripper1, correct? Respond with True or False.", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "a095ed2d-4331-461f-82eb-cc940ec40063", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "ball3 is at room2, ball4 is at room3, robot1 is carrying ball5 with rgripper1, lgripper1 of robot1 is free, ball7 is at room3, ball6 is at room2, robot2 is at room4, lgripper2 of robot2 is free, ball1 is at room3, ball2 is at room4, rgripper2 of robot2 is free and robot1 is at room3", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "f706f98a-d57b-4f99-85f6-0128ba1e795a", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "state_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, robot2 is not at room2, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot1 is not at room1, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball1 with lgripper1, ball2 is not at room2, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, rgripper1 of robot1 is not free, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, ball4 is not at room2, robot1 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, ball3 is not at room1, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball1 is not at room2, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, lgripper2 of robot1 is not free, robot1 is not at room4, robot2 is not at room3, ball5 is not at room2, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot1 is not carrying ball5 with rgripper2, ball6 is not at room3, ball7 is not at room2, robot1 is not carrying ball4 with rgripper1, robot2 is not carrying ball4 with lgripper2, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball3 with lgripper2, robot1 is not carrying ball4 with rgripper2, robot2 is not carrying ball4 with rgripper1, robot1 is not carrying ball5 with lgripper1, robot2 is not carrying ball2 with rgripper1, robot2 is not carrying ball3 with lgripper2 and robot2 is not carrying ball5 with rgripper1", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "6b221a0c-2234-48d5-85cf-6a0fd166302b", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "6e0e0503-9afd-4887-bde4-58947598a8e5", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball3 is picked from room2 with lgripper1 by robot1. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "9b5be799-4a05-4fe9-84c2-b3ff5afde201", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball2 is picked from room4 with lgripper2 by robot2. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "15b44da0-77c4-4cfb-bf38-2dfc322175c4", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball7 is dropped in room1 with rgripper2 by robot1. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "5849c8c4-1a1f-4f32-9a10-414640edc7a3", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 1 the following actions are planned to be performed: ball7 is picked from room4 with lgripper2 by robot2. Is the action: ball7 is picked from room4 with lgripper2 by robot2 executable at step 1, True or False?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "5ae76a12-452b-41e7-9b7d-7ae1fdd21ce2", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 1 the following actions are planned to be performed: ball6 is picked from room1 with lgripper1 by robot2. Is the action: ball6 is picked from room1 with lgripper1 by robot2 executable at step 1, True or False?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "69474b24-4712-4696-add1-cccab2dfb5b0", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 1 the following actions are planned to be performed: robot2 moves from room3 to room2. Is the action: robot2 moves from room3 to room2 executable at step 1, True or False?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "32aa1bd5-60f6-4a29-9c83-c5c1b98e1ce1", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 1 the following actions are planned to be performed: ball6 is dropped in room4 with rgripper2 by robot1. Is the action: ball6 is dropped in room4 with rgripper2 by robot1 executable at step 1, True or False?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "318d267a-5982-4002-8d45-3714d663a3ab", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "ball3 is picked from room1 with rgripper1 by robot1, ball5 is picked from room2 with lgripper2 by robot2, robot1 moves from room1 to room2, ball2 is picked from room2 with lgripper2 by robot2, robot2 moves from room2 to room1, ball4 is picked from room2 with rgripper2 by robot2, ball4 is picked from room2 with lgripper2 by robot2, robot1 moves from room1 to room4, ball3 is picked from room1 with lgripper1 by robot1, ball7 is picked from room2 with lgripper2 by robot2, ball2 is picked from room2 with rgripper2 by robot2, ball7 is picked from room2 with rgripper2 by robot2, robot1 moves from room1 to room3, robot2 moves from room2 to room4, ball5 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is picked from room2 with lgripper2 by robot2 and ball1 is picked from room2 with rgripper2 by robot2", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "4d08c782-4172-4f13-ad01-9202a8bc71fa", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "ball1 is picked from room3 with rgripper1 by robot2, ball2 is dropped in room2 with lgripper1 by robot1, robot2 moves from room1 to room4, ball1 is dropped in room2 with lgripper1 by robot2, ball6 is dropped in room2 with lgripper1 by robot2, ball6 is dropped in room3 with rgripper1 by robot2, ball1 is picked from room1 with rgripper1 by robot1, ball7 is picked from room4 with lgripper1 by robot2, ball1 is dropped in room3 with rgripper2 by robot2, ball1 is dropped in room3 with lgripper2 by robot2, ball4 is picked from room4 with rgripper2 by robot1, ball4 is dropped in room2 with lgripper2 by robot1, ball4 is dropped in room2 with rgripper2 by robot2, ball4 is picked from room3 with lgripper1 by robot2, ball4 is picked from room1 with rgripper1 by robot2, robot2 moves from room1 to room2, ball4 is picked from room3 with lgripper2 by robot1, ball3 is dropped in room2 with rgripper1 by robot2, ball5 is dropped in room2 with lgripper1 by robot2, ball2 is dropped in room4 with rgripper1 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, ball5 is dropped in room2 with rgripper1 by robot1, ball4 is picked from room2 with lgripper1 by robot2, ball3 is picked from room1 with rgripper2 by robot1, ball6 is dropped in room4 with lgripper2 by robot1, ball5 is picked from room4 with lgripper2 by robot2, ball1 is picked from room3 with rgripper2 by robot1, ball7 is picked from room2 with rgripper1 by robot2, ball6 is picked from room2 with rgripper1 by robot2, ball4 is picked from room3 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot2, robot1 moves from room3 to room1, ball5 is picked from room4 with rgripper1 by robot1, ball3 is dropped in room4 with lgripper2 by robot1, ball3 is dropped in room3 with lgripper2 by robot1, ball3 is dropped in room4 with lgripper2 by robot2, ball7 is dropped in room2 with lgripper1 by robot1, ball2 is picked from room1 with rgripper1 by robot1, ball2 is dropped in room1 with rgripper2 by robot1, ball6 is picked from room3 with rgripper1 by robot2, ball4 is dropped in room1 with lgripper2 by robot1, ball7 is dropped in room2 with lgripper2 by robot2, ball6 is dropped in room3 with rgripper1 by robot1, robot1 moves from room4 to room1, ball6 is dropped in room4 with lgripper2 by robot2, ball6 is picked from room4 with lgripper1 by robot1, ball7 is dropped in room4 with lgripper1 by robot2, ball2 is picked from room4 with lgripper2 by robot2, ball3 is dropped in room2 with rgripper2 by robot1, ball3 is dropped in room1 with lgripper2 by robot1, ball6 is picked from room4 with rgripper1 by robot1, ball2 is picked from room1 with lgripper2 by robot2, ball7 is picked from room3 with lgripper2 by robot1, ball1 is picked from room4 with rgripper2 by robot1, ball7 is picked from room3 with lgripper1 by robot1, ball6 is picked from room4 with rgripper1 by robot2, ball5 is picked from room3 with lgripper2 by robot1, ball7 is picked from room3 with rgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, ball4 is picked from room1 with rgripper2 by robot2, ball1 is picked from room4 with rgripper2 by robot2, ball2 is picked from room3 with rgripper2 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room3 with rgripper1 by robot1, ball7 is dropped in room4 with lgripper1 by robot1, ball6 is dropped in room4 with rgripper2 by robot2, ball6 is dropped in room1 with lgripper1 by robot2, ball6 is dropped in room3 with rgripper2 by robot2, ball5 is dropped in room2 with lgripper1 by robot1, ball6 is dropped in room3 with lgripper1 by robot1, ball5 is picked from room1 with rgripper2 by robot2, ball3 is picked from room2 with rgripper1 by robot2, ball1 is picked from room1 with lgripper2 by robot2, ball5 is picked from room1 with rgripper1 by robot2, ball3 is dropped in room4 with rgripper1 by robot1, ball5 is picked from room4 with rgripper2 by robot2, ball2 is dropped in room3 with rgripper1 by robot1, ball5 is picked from room2 with lgripper2 by robot1, ball2 is picked from room4 with rgripper1 by robot2, ball6 is dropped in room3 with lgripper2 by robot1, ball3 is dropped in room2 with lgripper2 by robot2, ball6 is dropped in room3 with rgripper2 by robot1, ball5 is dropped in room3 with rgripper1 by robot2, ball7 is picked from room3 with rgripper1 by robot2, ball5 is dropped in room1 with lgripper2 by robot1, ball6 is dropped in room4 with rgripper2 by robot1, ball5 is picked from room2 with lgripper1 by robot1, ball1 is picked from room4 with rgripper1 by robot1, ball6 is dropped in room2 with lgripper2 by robot2, ball2 is dropped in room3 with lgripper1 by robot2, ball3 is dropped in room4 with rgripper1 by robot2, ball2 is dropped in room2 with rgripper2 by robot1, ball6 is picked from room1 with rgripper2 by robot2, ball6 is picked from room1 with lgripper1 by robot1, ball5 is picked from room4 with lgripper2 by robot1, ball3 is dropped in room2 with rgripper1 by robot1, ball5 is dropped in room4 with lgripper1 by robot1, ball1 is picked from room3 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, ball6 is dropped in room2 with rgripper2 by robot2, ball5 is dropped in room3 with lgripper1 by robot1, ball7 is picked from room1 with lgripper1 by robot2, ball4 is dropped in room3 with lgripper2 by robot1, ball6 is picked from room2 with lgripper1 by robot1, ball4 is dropped in room2 with lgripper1 by robot1, ball6 is dropped in room1 with rgripper2 by robot2, ball1 is picked from room3 with rgripper2 by robot2, ball1 is picked from room3 with lgripper2 by robot2, ball2 is dropped in room1 with rgripper1 by robot2, ball4 is dropped in room3 with rgripper1 by robot2, ball4 is dropped in room4 with rgripper1 by robot1, ball6 is picked from room2 with rgripper2 by robot2, ball1 is dropped in room1 with rgripper1 by robot2, ball3 is dropped in room3 with lgripper1 by robot1, ball2 is dropped in room2 with lgripper2 by robot2, ball6 is dropped in room2 with rgripper1 by robot1, ball2 is dropped in room1 with lgripper2 by robot2, ball3 is dropped in room4 with lgripper1 by robot2, ball3 is dropped in room4 with lgripper1 by robot1, ball1 is dropped in room2 with rgripper2 by robot1, ball3 is dropped in room1 with rgripper1 by robot1, ball7 is picked from room4 with lgripper1 by robot1, ball3 is picked from room2 with rgripper1 by robot1, ball5 is dropped in room4 with rgripper1 by robot2, ball1 is picked from room4 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot2, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room3 with rgripper2 by robot1, ball7 is dropped in room3 with lgripper2 by robot2, ball7 is dropped in room3 with lgripper2 by robot1, ball1 is picked from room2 with rgripper1 by robot1, ball1 is dropped in room4 with rgripper2 by robot1, ball1 is picked from room1 with rgripper2 by robot2, ball3 is picked from room2 with lgripper1 by robot1, ball2 is dropped in room3 with lgripper2 by robot1, ball5 is picked from room4 with rgripper1 by robot2, robot2 moves from room3 to room1, ball7 is dropped in room2 with rgripper1 by robot2, ball6 is picked from room4 with lgripper2 by robot1, ball7 is picked from room3 with lgripper1 by robot2, ball3 is picked from room3 with rgripper1 by robot2, ball6 is picked from room3 with lgripper1 by robot1, ball5 is dropped in room4 with rgripper2 by robot2, ball2 is picked from room2 with rgripper1 by robot2, ball3 is dropped in room2 with lgripper1 by robot1, ball5 is dropped in room1 with lgripper1 by robot1, ball5 is picked from room2 with rgripper1 by robot1, ball1 is dropped in room3 with rgripper1 by robot1, ball3 is dropped in room2 with rgripper2 by robot2, ball5 is dropped in room2 with rgripper2 by robot2, ball4 is dropped in room4 with lgripper1 by robot2, robot1 moves from room2 to room3, robot2 moves from room4 to room2, ball2 is dropped in room3 with rgripper2 by robot2, robot2 moves from room4 to room1, ball1 is picked from room1 with lgripper2 by robot1, ball4 is picked from room4 with lgripper1 by robot2, ball4 is dropped in room3 with lgripper1 by robot1, ball4 is dropped in room1 with rgripper2 by robot1, ball3 is picked from room3 with lgripper2 by robot1, ball2 is picked from room3 with rgripper2 by robot2, ball2 is dropped in room3 with lgripper1 by robot1, ball6 is dropped in room3 with lgripper2 by robot2, ball4 is picked from room3 with lgripper2 by robot2, ball6 is picked from room4 with rgripper2 by robot2, ball1 is picked from room2 with lgripper2 by robot1, ball7 is picked from room2 with rgripper2 by robot1, ball2 is picked from room2 with rgripper2 by robot1, ball7 is dropped in room2 with rgripper2 by robot2, ball2 is dropped in room2 with rgripper2 by robot2, ball1 is dropped in room4 with rgripper1 by robot2, ball3 is dropped in room1 with lgripper2 by robot2, ball6 is dropped in room1 with lgripper2 by robot1, ball7 is picked from room3 with lgripper2 by robot2, ball6 is dropped in room1 with lgripper2 by robot2, ball6 is dropped in room4 with lgripper1 by robot2, ball5 is picked from room3 with rgripper2 by robot2, ball2 is dropped in room2 with lgripper2 by robot1, ball4 is picked from room3 with rgripper2 by robot1, ball2 is picked from room2 with rgripper1 by robot1, ball7 is picked from room1 with rgripper2 by robot2, ball1 is dropped in room3 with rgripper2 by robot1, ball4 is picked from room4 with lgripper1 by robot1, ball3 is picked from room3 with lgripper1 by robot1, ball3 is picked from room1 with lgripper2 by robot1, ball1 is dropped in room3 with rgripper1 by robot2, robot1 moves from room4 to room3, ball3 is dropped in room1 with rgripper2 by robot1, ball3 is picked from room4 with rgripper1 by robot2, ball5 is picked from room3 with lgripper1 by robot2, ball1 is picked from room2 with rgripper2 by robot1, ball3 is picked from room3 with lgripper1 by robot2, ball4 is picked from room4 with rgripper2 by robot2, ball2 is picked from room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper1 by robot2, ball3 is dropped in room4 with rgripper2 by robot1, ball4 is dropped in room4 with rgripper1 by robot2, ball1 is dropped in room3 with lgripper1 by robot2, ball7 is dropped in room1 with lgripper2 by robot1, ball2 is dropped in room2 with rgripper1 by robot2, ball7 is picked from room2 with lgripper1 by robot2, ball7 is dropped in room2 with lgripper1 by robot2, ball2 is picked from room3 with lgripper1 by robot1, ball1 is dropped in room1 with rgripper2 by robot2, ball7 is dropped in room3 with rgripper1 by robot2, ball1 is dropped in room4 with lgripper1 by robot1, ball3 is picked from room2 with rgripper2 by robot1, ball2 is picked from room4 with rgripper1 by robot1, ball5 is dropped in room2 with rgripper2 by robot1, ball1 is dropped in room4 with lgripper1 by robot2, ball4 is dropped in room1 with lgripper1 by robot1, ball4 is picked from room2 with lgripper1 by robot1, ball6 is dropped in room1 with rgripper2 by robot1, ball7 is dropped in room4 with lgripper2 by robot2, ball5 is dropped in room1 with rgripper2 by robot1, ball4 is dropped in room1 with rgripper1 by robot2, ball2 is dropped in room4 with rgripper2 by robot2, ball5 is picked from room2 with lgripper1 by robot2, ball5 is picked from room1 with lgripper2 by robot1, ball6 is dropped in room1 with lgripper1 by robot1, ball3 is dropped in room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper2 by robot2, ball5 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room4 with lgripper2 by robot2, ball3 is picked from room4 with lgripper1 by robot1, ball4 is dropped in room3 with rgripper2 by robot1, ball6 is dropped in room1 with rgripper1 by robot1, ball1 is dropped in room2 with lgripper1 by robot1, ball3 is picked from room2 with rgripper2 by robot2, ball7 is picked from room1 with lgripper2 by robot2, ball5 is dropped in room3 with rgripper2 by robot2, ball6 is picked from room3 with rgripper2 by robot2, ball4 is dropped in room1 with lgripper1 by robot2, ball1 is picked from room1 with rgripper2 by robot1, ball5 is dropped in room2 with lgripper2 by robot1, ball2 is dropped in room1 with lgripper1 by robot2, ball6 is dropped in room4 with rgripper1 by robot2, ball1 is dropped in room4 with lgripper2 by robot1, ball5 is dropped in room3 with lgripper2 by robot2, ball7 is dropped in room4 with rgripper2 by robot1, ball5 is picked from room3 with rgripper1 by robot2, ball1 is picked from room1 with lgripper1 by robot2, ball2 is picked from room4 with rgripper2 by robot2, ball7 is dropped in room2 with rgripper2 by robot1, ball6 is picked from room2 with lgripper2 by robot1, ball4 is dropped in room2 with lgripper2 by robot2, ball2 is dropped in room1 with lgripper1 by robot1, ball4 is dropped in room3 with lgripper2 by robot2, ball5 is picked from room3 with rgripper2 by robot1, ball1 is dropped in room4 with lgripper2 by robot2, ball1 is picked from room4 with lgripper2 by robot1, ball5 is picked from room1 with rgripper2 by robot1, robot2 moves from room4 to room3, ball3 is dropped in room3 with rgripper2 by robot2, ball3 is picked from room1 with lgripper2 by robot2, ball2 is picked from room1 with rgripper1 by robot2, ball1 is picked from room2 with lgripper1 by robot2, ball3 is picked from room2 with lgripper2 by robot1, ball7 is dropped in room1 with lgripper1 by robot1, ball6 is dropped in room1 with rgripper1 by robot2, ball1 is dropped in room1 with rgripper2 by robot1, robot1 moves from room2 to room4, ball6 is picked from room3 with rgripper1 by robot1, ball3 is picked from room4 with rgripper2 by robot1, ball7 is dropped in room3 with lgripper1 by robot2, ball7 is dropped in room1 with lgripper2 by robot2, ball5 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot2, ball2 is picked from room1 with rgripper2 by robot1, ball6 is picked from room4 with lgripper2 by robot2, ball6 is picked from room4 with lgripper1 by robot2, ball3 is dropped in room3 with rgripper2 by robot1, ball7 is picked from room2 with lgripper2 by robot1, ball2 is picked from room3 with lgripper1 by robot2, ball2 is picked from room3 with lgripper2 by robot1, ball2 is picked from room4 with rgripper2 by robot1, ball2 is picked from room3 with rgripper1 by robot2, ball3 is dropped in room3 with rgripper1 by robot2, ball2 is dropped in room4 with lgripper1 by robot2, ball1 is dropped in room2 with lgripper2 by robot1, ball6 is picked from room1 with lgripper1 by robot2, ball6 is dropped in room4 with lgripper1 by robot1, ball1 is picked from room4 with rgripper1 by robot2, ball3 is dropped in room3 with lgripper1 by robot2, ball7 is picked from room4 with rgripper1 by robot2, ball6 is picked from room1 with rgripper2 by robot1, ball5 is dropped in room1 with lgripper2 by robot2, ball5 is dropped in room4 with lgripper2 by robot2, ball1 is dropped in room2 with rgripper1 by robot2, ball7 is picked from room4 with lgripper2 by robot1, ball5 is dropped in room2 with rgripper1 by robot2, ball5 is dropped in room3 with lgripper1 by robot2, ball3 is picked from room4 with rgripper2 by robot2, ball5 is picked from room1 with lgripper2 by robot2, ball4 is dropped in room3 with lgripper1 by robot2, ball6 is picked from room2 with rgripper1 by robot1, ball7 is picked from room3 with rgripper2 by robot1, ball7 is picked from room4 with lgripper2 by robot2, ball2 is picked from room2 with lgripper2 by robot1, ball1 is dropped in room4 with rgripper2 by robot2, ball6 is dropped in room3 with lgripper1 by robot2, ball5 is dropped in room4 with rgripper1 by robot1, ball4 is picked from room1 with lgripper1 by robot1, ball4 is picked from room3 with rgripper2 by robot2, ball7 is dropped in room1 with rgripper2 by robot1, ball6 is picked from room4 with rgripper2 by robot1, ball7 is dropped in room2 with lgripper2 by robot1, ball1 is dropped in room1 with rgripper1 by robot1, ball2 is dropped in room3 with lgripper2 by robot2, ball1 is dropped in room2 with lgripper2 by robot2, ball2 is picked from room2 with lgripper1 by robot2, ball5 is dropped in room1 with lgripper1 by robot2, ball2 is picked from room4 with lgripper1 by robot2, ball4 is picked from room4 with rgripper1 by robot1, robot2 moves from room1 to room3, ball3 is picked from room3 with rgripper2 by robot1, ball5 is picked from room3 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper2 by robot1, ball5 is picked from room4 with lgripper1 by robot2, ball2 is dropped in room1 with rgripper2 by robot2, ball7 is picked from room4 with rgripper2 by robot1, ball1 is dropped in room1 with lgripper1 by robot2, ball1 is dropped in room1 with lgripper2 by robot2, ball4 is picked from room1 with lgripper1 by robot2, ball7 is picked from room3 with rgripper2 by robot2, ball7 is dropped in room1 with rgripper2 by robot2, ball4 is picked from room1 with rgripper1 by robot1, ball2 is dropped in room4 with lgripper1 by robot1, ball2 is dropped in room1 with lgripper2 by robot1, ball4 is picked from room3 with lgripper1 by robot1, ball1 is picked from room2 with lgripper1 by robot1, ball4 is dropped in room4 with lgripper1 by robot1, ball2 is dropped in room4 with lgripper2 by robot2, ball3 is picked from room4 with lgripper1 by robot2, ball2 is picked from room4 with lgripper2 by robot1, ball3 is dropped in room3 with rgripper1 by robot1, ball7 is dropped in room3 with rgripper2 by robot1, ball7 is picked from room1 with lgripper2 by robot1, robot1 moves from room3 to room4, ball4 is picked from room4 with lgripper2 by robot1, ball5 is dropped in room1 with rgripper1 by robot2, ball4 is picked from room2 with lgripper2 by robot1, ball5 is picked from room1 with rgripper1 by robot1, ball2 is picked from room3 with rgripper1 by robot1, ball5 is dropped in room4 with rgripper2 by robot1, ball2 is dropped in room4 with rgripper1 by robot1, ball3 is picked from room2 with lgripper1 by robot2, ball4 is picked from room2 with rgripper2 by robot1, ball5 is dropped in room1 with rgripper1 by robot1, ball1 is picked from room3 with lgripper1 by robot2, ball1 is picked from room4 with lgripper1 by robot2, ball7 is dropped in room4 with rgripper1 by robot1, ball1 is dropped in room1 with lgripper1 by robot1, ball7 is picked from room4 with rgripper2 by robot2, ball1 is dropped in room4 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, ball7 is dropped in room3 with rgripper2 by robot2, ball6 is dropped in room2 with rgripper1 by robot2, ball1 is picked from room1 with rgripper1 by robot2, ball3 is picked from room3 with lgripper2 by robot2, robot2 moves from room3 to room4, ball7 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room3 with lgripper2 by robot2, robot1 moves from room3 to room2, ball1 is picked from room4 with lgripper2 by robot2, ball5 is dropped in room3 with lgripper2 by robot1, ball5 is picked from room2 with rgripper1 by robot2, ball7 is dropped in room2 with rgripper1 by robot1, ball6 is dropped in room4 with rgripper1 by robot1, ball4 is picked from room1 with lgripper2 by robot1, ball1 is dropped in room3 with lgripper2 by robot1, robot2 moves from room3 to room2, ball7 is dropped in room1 with rgripper1 by robot2, ball3 is picked from room1 with lgripper1 by robot2, ball5 is dropped in room4 with lgripper2 by robot1, ball5 is picked from room4 with rgripper2 by robot1, ball4 is dropped in room2 with rgripper2 by robot1, ball5 is dropped in room4 with lgripper1 by robot2, ball5 is dropped in room3 with rgripper2 by robot1, ball4 is dropped in room2 with rgripper1 by robot2, ball4 is dropped in room1 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper1 by robot1, ball6 is picked from room2 with lgripper1 by robot2, ball7 is dropped in room1 with lgripper1 by robot2, ball4 is picked from room1 with rgripper2 by robot1, ball2 is dropped in room2 with lgripper1 by robot2, ball5 is dropped in room3 with rgripper1 by robot1, ball5 is picked from room1 with lgripper1 by robot2, ball4 is picked from room4 with lgripper2 by robot2, ball7 is picked from room1 with rgripper2 by robot1, ball1 is picked from room3 with lgripper2 by robot1, ball7 is dropped in room4 with lgripper2 by robot1, ball1 is picked from room1 with lgripper1 by robot1, ball4 is dropped in room4 with rgripper2 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball2 is dropped in room1 with rgripper1 by robot1, ball7 is dropped in room3 with lgripper1 by robot1, ball2 is picked from room2 with lgripper1 by robot1, ball4 is picked from room3 with rgripper1 by robot2, ball6 is picked from room3 with lgripper2 by robot1, ball1 is picked from room2 with rgripper1 by robot2, ball6 is dropped in room2 with rgripper2 by robot1, ball4 is dropped in room2 with lgripper1 by robot2, ball2 is dropped in room3 with rgripper1 by robot2, robot1 moves from room4 to room2, ball3 is picked from room2 with lgripper2 by robot2, ball5 is dropped in room2 with lgripper2 by robot2, ball7 is picked from room1 with rgripper1 by robot2, ball2 is dropped in room2 with rgripper1 by robot1, ball3 is dropped in room1 with rgripper2 by robot2, ball4 is dropped in room1 with lgripper2 by robot2, ball3 is picked from room3 with rgripper2 by robot2, ball3 is picked from room3 with rgripper1 by robot1, ball2 is picked from room1 with lgripper2 by robot1, ball6 is dropped in room2 with lgripper2 by robot1, ball3 is dropped in room4 with rgripper2 by robot2, ball4 is picked from room1 with lgripper2 by robot2, ball7 is dropped in room4 with rgripper1 by robot2, ball6 is picked from room1 with lgripper2 by robot1, ball4 is dropped in room4 with rgripper2 by robot2, ball7 is picked from room4 with rgripper1 by robot1, ball3 is picked from room4 with lgripper2 by robot2, ball3 is dropped in room1 with rgripper1 by robot2, ball5 is dropped in room1 with rgripper2 by robot2, ball2 is picked from room1 with rgripper2 by robot2, ball3 is dropped in room1 with lgripper1 by robot2, ball7 is picked from room2 with lgripper1 by robot1, ball5 is picked from room4 with lgripper1 by robot1, ball4 is dropped in room2 with rgripper1 by robot1, ball7 is picked from room1 with rgripper1 by robot1, ball4 is picked from room4 with rgripper1 by robot2, ball5 is picked from room2 with rgripper2 by robot1, ball3 is picked from room4 with rgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot2, ball2 is dropped in room4 with lgripper2 by robot1, ball6 is picked from room2 with lgripper2 by robot2, ball4 is dropped in room4 with lgripper2 by robot1, ball5 is picked from room3 with lgripper1 by robot1, ball2 is dropped in room3 with rgripper2 by robot1, ball1 is dropped in room1 with lgripper2 by robot1, ball6 is picked from room3 with lgripper2 by robot2, ball7 is dropped in room3 with rgripper1 by robot1, ball1 is picked from room3 with rgripper1 by robot1, ball3 is picked from room4 with lgripper2 by robot1, ball7 is dropped in room4 with rgripper2 by robot2, ball1 is dropped in room2 with rgripper1 by robot1, ball2 is dropped in room4 with rgripper2 by robot1, ball6 is picked from room1 with rgripper1 by robot2, ball6 is picked from room1 with lgripper2 by robot2, ball6 is picked from room2 with rgripper2 by robot1, ball1 is dropped in room3 with lgripper1 by robot1, ball1 is dropped in room2 with rgripper2 by robot2, ball7 is picked from room1 with lgripper1 by robot1 and ball7 is dropped in room1 with rgripper1 by robot1", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "598f2abd-29c4-4fe2-89b3-2dae6fcdcfe3", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "6fe79835-570c-483b-a920-cb34adf98a63", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball2 is picked from room4 with rgripper1 by robot2 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "ball2 is picked from room4 with rgripper1 by robot2", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "92c45a06-18b9-43bb-b343-a53fa5840acd", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball2 is dropped in room1 with lgripper1 by robot2 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "ball2 is dropped in room1 with lgripper1 by robot2", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "a441cdc8-fd0b-440e-bfad-65e05d206e59", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball5 is picked from room2 with lgripper1 by robot1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "ball5 is picked from room2 with lgripper1 by robot1", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "22139ff4-5ab7-4cc8-b620-95cbf4ea93a4", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "7ad93432-7288-420f-af51-51d8c3493309", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, ball5 is picked from room4 with rgripper1 by robot2 and ball1 is dropped in room3 with lgripper2 by robot2. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "257ce07e-4902-4a82-b8d5-ff392b886fcf", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, ball2 is picked from room4 with lgripper2 by robot1 and ball1 is dropped in room3 with lgripper2 by robot2. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "8333f6f7-9e7e-4d0d-914e-d1a819e8e985", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball4 is picked from room4 with lgripper1 by robot1, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "c3370967-570e-4fb7-8a28-dd607bd8f020", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 5 the following actions are planned to be performed: ball4 is dropped in room4 with rgripper1 by robot1, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2. Is the action: ball4 is dropped in room4 with rgripper1 by robot1 executable at step 1, True or False?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "9bcd9f7f-f169-4aa2-93ca-bcef1f252aa4", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 5 the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2. Is the action: ball1 is picked from room2 with lgripper2 by robot2 executable at step 2, True or False?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "94e1e033-b938-4166-bc0d-ded3da7bcc05", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 5 the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2. Is the action: robot2 moves from room3 to room2 executable at step 1, True or False?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "ecd7abcb-e4fa-4a17-a05b-30477f6fbfc1", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 5 the following actions are planned to be performed: robot2 moves from room3 to room2, ball2 is picked from room1 with rgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2. Is the action: ball2 is picked from room1 with rgripper2 by robot2 executable at step 2, True or False?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "04a34ae3-a258-43ac-a0c3-81e31fc03aeb", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "ball3 is picked from room1 with rgripper1 by robot1, ball4 is dropped in room3 with rgripper2 by robot2, robot1 moves from room1 to room2, ball1 is picked from room3 with lgripper2 by robot2, robot2 moves from room3 to room1, robot1 moves from room1 to room4, ball3 is picked from room1 with lgripper1 by robot1, robot2 moves from room3 to room4, robot2 moves from room3 to room2, robot1 moves from room1 to room3 and ball6 is picked from room3 with lgripper2 by robot2", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "4122cf73-ab9c-424f-a257-2cd71bd81a18", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "ball1 is picked from room3 with rgripper1 by robot2, ball2 is dropped in room2 with lgripper1 by robot1, robot2 moves from room1 to room4, ball1 is dropped in room2 with lgripper1 by robot2, ball6 is dropped in room2 with lgripper1 by robot2, ball6 is dropped in room3 with rgripper1 by robot2, ball1 is picked from room1 with rgripper1 by robot1, ball7 is picked from room4 with lgripper1 by robot2, ball1 is dropped in room3 with rgripper2 by robot2, ball1 is dropped in room3 with lgripper2 by robot2, ball4 is picked from room4 with rgripper2 by robot1, ball4 is dropped in room2 with lgripper2 by robot1, ball4 is dropped in room2 with rgripper2 by robot2, ball4 is picked from room3 with lgripper1 by robot2, ball4 is picked from room1 with rgripper1 by robot2, robot2 moves from room1 to room2, ball4 is picked from room3 with lgripper2 by robot1, ball3 is dropped in room2 with rgripper1 by robot2, ball5 is dropped in room2 with lgripper1 by robot2, ball2 is dropped in room4 with rgripper1 by robot2, ball5 is dropped in room2 with rgripper1 by robot1, ball5 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with lgripper1 by robot2, ball3 is picked from room1 with rgripper2 by robot1, ball6 is dropped in room4 with lgripper2 by robot1, ball5 is picked from room4 with lgripper2 by robot2, ball1 is picked from room3 with rgripper2 by robot1, ball7 is picked from room2 with rgripper1 by robot2, ball6 is picked from room2 with rgripper1 by robot2, ball4 is picked from room3 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot2, robot1 moves from room3 to room1, ball5 is picked from room4 with rgripper1 by robot1, ball3 is dropped in room4 with lgripper2 by robot1, ball3 is dropped in room3 with lgripper2 by robot1, ball3 is dropped in room4 with lgripper2 by robot2, ball7 is dropped in room2 with lgripper1 by robot1, ball2 is picked from room1 with rgripper1 by robot1, ball2 is dropped in room1 with rgripper2 by robot1, ball6 is picked from room3 with rgripper1 by robot2, ball4 is dropped in room1 with lgripper2 by robot1, ball7 is dropped in room2 with lgripper2 by robot2, ball6 is dropped in room3 with rgripper1 by robot1, robot1 moves from room4 to room1, ball6 is dropped in room4 with lgripper2 by robot2, ball6 is picked from room4 with lgripper1 by robot1, ball7 is dropped in room4 with lgripper1 by robot2, ball2 is picked from room4 with lgripper2 by robot2, ball3 is dropped in room2 with rgripper2 by robot1, ball3 is dropped in room1 with lgripper2 by robot1, ball6 is picked from room4 with rgripper1 by robot1, ball2 is picked from room1 with lgripper2 by robot2, ball7 is picked from room3 with lgripper2 by robot1, ball1 is picked from room4 with rgripper2 by robot1, ball7 is picked from room3 with lgripper1 by robot1, ball6 is picked from room4 with rgripper1 by robot2, ball5 is picked from room3 with lgripper2 by robot1, ball7 is picked from room3 with rgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, ball4 is picked from room1 with rgripper2 by robot2, ball1 is picked from room4 with rgripper2 by robot2, ball2 is picked from room3 with rgripper2 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room3 with rgripper1 by robot1, ball7 is dropped in room4 with lgripper1 by robot1, ball6 is dropped in room4 with rgripper2 by robot2, ball6 is dropped in room1 with lgripper1 by robot2, ball6 is dropped in room3 with rgripper2 by robot2, ball5 is dropped in room2 with lgripper1 by robot1, ball6 is dropped in room3 with lgripper1 by robot1, ball5 is picked from room1 with rgripper2 by robot2, ball3 is picked from room2 with rgripper1 by robot2, ball1 is picked from room1 with lgripper2 by robot2, ball5 is picked from room1 with rgripper1 by robot2, ball3 is dropped in room4 with rgripper1 by robot1, ball5 is picked from room4 with rgripper2 by robot2, ball2 is dropped in room3 with rgripper1 by robot1, ball5 is picked from room2 with lgripper2 by robot1, ball2 is picked from room4 with rgripper1 by robot2, ball6 is dropped in room3 with lgripper2 by robot1, ball3 is dropped in room2 with lgripper2 by robot2, ball6 is dropped in room3 with rgripper2 by robot1, ball5 is dropped in room3 with rgripper1 by robot2, ball7 is picked from room3 with rgripper1 by robot2, ball5 is dropped in room1 with lgripper2 by robot1, ball6 is dropped in room4 with rgripper2 by robot1, ball5 is picked from room2 with lgripper1 by robot1, ball1 is picked from room4 with rgripper1 by robot1, ball6 is dropped in room2 with lgripper2 by robot2, ball2 is dropped in room3 with lgripper1 by robot2, ball3 is dropped in room4 with rgripper1 by robot2, ball2 is dropped in room2 with rgripper2 by robot1, ball6 is picked from room1 with rgripper2 by robot2, ball6 is picked from room1 with lgripper1 by robot1, ball5 is picked from room4 with lgripper2 by robot1, ball3 is dropped in room2 with rgripper1 by robot1, ball5 is dropped in room4 with lgripper1 by robot1, ball1 is picked from room3 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, ball6 is dropped in room2 with rgripper2 by robot2, ball5 is dropped in room3 with lgripper1 by robot1, ball7 is picked from room1 with lgripper1 by robot2, ball4 is dropped in room3 with lgripper2 by robot1, ball6 is picked from room2 with lgripper1 by robot1, ball4 is dropped in room2 with lgripper1 by robot1, ball6 is dropped in room1 with rgripper2 by robot2, ball1 is picked from room3 with rgripper2 by robot2, ball2 is dropped in room1 with rgripper1 by robot2, ball4 is dropped in room3 with rgripper1 by robot2, ball4 is dropped in room4 with rgripper1 by robot1, ball6 is picked from room2 with rgripper2 by robot2, ball1 is dropped in room1 with rgripper1 by robot2, ball3 is dropped in room3 with lgripper1 by robot1, ball2 is dropped in room2 with lgripper2 by robot2, ball6 is dropped in room2 with rgripper1 by robot1, ball2 is dropped in room1 with lgripper2 by robot2, ball3 is dropped in room4 with lgripper1 by robot2, ball3 is dropped in room4 with lgripper1 by robot1, ball1 is dropped in room2 with rgripper2 by robot1, ball3 is dropped in room1 with rgripper1 by robot1, ball7 is picked from room4 with lgripper1 by robot1, ball3 is picked from room2 with rgripper1 by robot1, ball5 is dropped in room4 with rgripper1 by robot2, ball1 is picked from room4 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot2, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room3 with rgripper2 by robot1, ball7 is dropped in room3 with lgripper2 by robot2, ball7 is dropped in room3 with lgripper2 by robot1, ball1 is picked from room2 with rgripper1 by robot1, ball1 is dropped in room4 with rgripper2 by robot1, ball1 is picked from room1 with rgripper2 by robot2, ball3 is picked from room2 with lgripper1 by robot1, ball2 is dropped in room3 with lgripper2 by robot1, ball5 is picked from room4 with rgripper1 by robot2, ball2 is picked from room2 with lgripper2 by robot2, ball7 is dropped in room2 with rgripper1 by robot2, ball6 is picked from room4 with lgripper2 by robot1, ball7 is picked from room3 with lgripper1 by robot2, ball3 is picked from room3 with rgripper1 by robot2, ball6 is picked from room3 with lgripper1 by robot1, ball5 is dropped in room4 with rgripper2 by robot2, ball2 is picked from room2 with rgripper1 by robot2, ball3 is dropped in room2 with lgripper1 by robot1, ball5 is dropped in room1 with lgripper1 by robot1, ball5 is picked from room2 with rgripper1 by robot1, ball1 is dropped in room3 with rgripper1 by robot1, ball3 is dropped in room2 with rgripper2 by robot2, ball5 is dropped in room2 with rgripper2 by robot2, ball4 is dropped in room4 with lgripper1 by robot2, robot1 moves from room2 to room3, robot2 moves from room2 to room1, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room4 to room2, ball2 is dropped in room3 with rgripper2 by robot2, robot2 moves from room4 to room1, ball1 is picked from room1 with lgripper2 by robot1, ball4 is picked from room4 with lgripper1 by robot2, ball4 is dropped in room3 with lgripper1 by robot1, ball4 is picked from room2 with lgripper2 by robot2, ball4 is dropped in room1 with rgripper2 by robot1, ball3 is picked from room3 with lgripper2 by robot1, ball2 is picked from room3 with rgripper2 by robot2, ball2 is dropped in room3 with lgripper1 by robot1, ball6 is dropped in room3 with lgripper2 by robot2, ball4 is picked from room3 with lgripper2 by robot2, ball6 is picked from room4 with rgripper2 by robot2, ball1 is picked from room2 with lgripper2 by robot1, ball7 is picked from room2 with rgripper2 by robot1, ball2 is picked from room2 with rgripper2 by robot1, ball7 is dropped in room2 with rgripper2 by robot2, ball2 is dropped in room2 with rgripper2 by robot2, ball1 is dropped in room4 with rgripper1 by robot2, ball3 is dropped in room1 with lgripper2 by robot2, ball6 is dropped in room1 with lgripper2 by robot1, ball7 is picked from room3 with lgripper2 by robot2, ball6 is dropped in room1 with lgripper2 by robot2, ball6 is dropped in room4 with lgripper1 by robot2, ball5 is picked from room3 with rgripper2 by robot2, ball2 is dropped in room2 with lgripper2 by robot1, ball4 is picked from room3 with rgripper2 by robot1, ball2 is picked from room2 with rgripper1 by robot1, ball7 is picked from room1 with rgripper2 by robot2, ball1 is dropped in room3 with rgripper2 by robot1, ball4 is picked from room4 with lgripper1 by robot1, ball3 is picked from room3 with lgripper1 by robot1, ball3 is picked from room1 with lgripper2 by robot1, ball1 is dropped in room3 with rgripper1 by robot2, robot1 moves from room4 to room3, ball3 is dropped in room1 with rgripper2 by robot1, ball3 is picked from room4 with rgripper1 by robot2, ball5 is picked from room3 with lgripper1 by robot2, ball1 is picked from room2 with rgripper2 by robot1, ball3 is picked from room3 with lgripper1 by robot2, ball4 is picked from room4 with rgripper2 by robot2, ball2 is picked from room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper1 by robot2, ball3 is dropped in room4 with rgripper2 by robot1, ball4 is dropped in room4 with rgripper1 by robot2, ball1 is dropped in room3 with lgripper1 by robot2, ball7 is dropped in room1 with lgripper2 by robot1, ball2 is dropped in room2 with rgripper1 by robot2, ball7 is picked from room2 with lgripper1 by robot2, ball7 is dropped in room2 with lgripper1 by robot2, ball2 is picked from room3 with lgripper1 by robot1, ball1 is dropped in room1 with rgripper2 by robot2, ball7 is dropped in room3 with rgripper1 by robot2, ball1 is dropped in room4 with lgripper1 by robot1, ball3 is picked from room2 with rgripper2 by robot1, ball2 is picked from room4 with rgripper1 by robot1, ball5 is dropped in room2 with rgripper2 by robot1, ball1 is dropped in room4 with lgripper1 by robot2, ball4 is dropped in room1 with lgripper1 by robot1, ball4 is picked from room2 with lgripper1 by robot1, ball6 is dropped in room1 with rgripper2 by robot1, ball7 is dropped in room4 with lgripper2 by robot2, ball5 is dropped in room1 with rgripper2 by robot1, ball4 is dropped in room1 with rgripper1 by robot2, ball2 is dropped in room4 with rgripper2 by robot2, ball5 is picked from room2 with lgripper1 by robot2, ball5 is picked from room1 with lgripper2 by robot1, ball6 is dropped in room1 with lgripper1 by robot1, ball3 is dropped in room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper2 by robot2, ball5 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room4 with lgripper2 by robot2, ball3 is picked from room4 with lgripper1 by robot1, ball4 is dropped in room3 with rgripper2 by robot1, ball6 is dropped in room1 with rgripper1 by robot1, ball1 is dropped in room2 with lgripper1 by robot1, ball3 is picked from room2 with rgripper2 by robot2, ball7 is picked from room1 with lgripper2 by robot2, ball5 is dropped in room3 with rgripper2 by robot2, ball6 is picked from room3 with rgripper2 by robot2, ball4 is dropped in room1 with lgripper1 by robot2, ball1 is picked from room1 with rgripper2 by robot1, ball5 is dropped in room2 with lgripper2 by robot1, ball2 is dropped in room1 with lgripper1 by robot2, ball6 is dropped in room4 with rgripper1 by robot2, ball1 is dropped in room4 with lgripper2 by robot1, ball5 is dropped in room3 with lgripper2 by robot2, ball7 is dropped in room4 with rgripper2 by robot1, ball5 is picked from room3 with rgripper1 by robot2, ball1 is picked from room1 with lgripper1 by robot2, ball2 is picked from room4 with rgripper2 by robot2, ball7 is dropped in room2 with rgripper2 by robot1, ball6 is picked from room2 with lgripper2 by robot1, ball4 is dropped in room2 with lgripper2 by robot2, ball2 is dropped in room1 with lgripper1 by robot1, ball4 is dropped in room3 with lgripper2 by robot2, ball5 is picked from room3 with rgripper2 by robot1, ball1 is dropped in room4 with lgripper2 by robot2, ball1 is picked from room4 with lgripper2 by robot1, ball5 is picked from room1 with rgripper2 by robot1, robot2 moves from room4 to room3, ball3 is dropped in room3 with rgripper2 by robot2, ball3 is picked from room1 with lgripper2 by robot2, ball2 is picked from room1 with rgripper1 by robot2, ball1 is picked from room2 with lgripper1 by robot2, ball3 is picked from room2 with lgripper2 by robot1, ball7 is dropped in room1 with lgripper1 by robot1, ball6 is dropped in room1 with rgripper1 by robot2, ball1 is dropped in room1 with rgripper2 by robot1, robot1 moves from room2 to room4, ball6 is picked from room3 with rgripper1 by robot1, ball3 is picked from room4 with rgripper2 by robot1, ball7 is dropped in room3 with lgripper1 by robot2, ball7 is dropped in room1 with lgripper2 by robot2, ball5 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot2, ball2 is picked from room1 with rgripper2 by robot1, ball6 is picked from room4 with lgripper2 by robot2, ball6 is picked from room4 with lgripper1 by robot2, ball3 is dropped in room3 with rgripper2 by robot1, ball7 is picked from room2 with lgripper2 by robot1, ball2 is picked from room3 with lgripper1 by robot2, ball2 is picked from room3 with lgripper2 by robot1, ball2 is picked from room4 with rgripper2 by robot1, ball2 is picked from room3 with rgripper1 by robot2, ball3 is dropped in room3 with rgripper1 by robot2, ball2 is dropped in room4 with lgripper1 by robot2, ball1 is dropped in room2 with lgripper2 by robot1, ball6 is picked from room1 with lgripper1 by robot2, ball6 is dropped in room4 with lgripper1 by robot1, ball1 is picked from room4 with rgripper1 by robot2, ball3 is dropped in room3 with lgripper1 by robot2, ball7 is picked from room4 with rgripper1 by robot2, ball6 is picked from room1 with rgripper2 by robot1, ball5 is dropped in room1 with lgripper2 by robot2, ball5 is dropped in room4 with lgripper2 by robot2, ball1 is dropped in room2 with rgripper1 by robot2, ball7 is picked from room4 with lgripper2 by robot1, ball5 is dropped in room2 with rgripper1 by robot2, ball5 is dropped in room3 with lgripper1 by robot2, ball3 is picked from room4 with rgripper2 by robot2, ball5 is picked from room1 with lgripper2 by robot2, ball4 is dropped in room3 with lgripper1 by robot2, ball6 is picked from room2 with rgripper1 by robot1, ball7 is picked from room3 with rgripper2 by robot1, ball7 is picked from room4 with lgripper2 by robot2, ball2 is picked from room2 with lgripper2 by robot1, ball1 is dropped in room4 with rgripper2 by robot2, ball6 is dropped in room3 with lgripper1 by robot2, ball5 is dropped in room4 with rgripper1 by robot1, ball4 is picked from room1 with lgripper1 by robot1, ball4 is picked from room3 with rgripper2 by robot2, ball7 is dropped in room1 with rgripper2 by robot1, ball6 is picked from room4 with rgripper2 by robot1, ball7 is dropped in room2 with lgripper2 by robot1, ball1 is dropped in room1 with rgripper1 by robot1, ball2 is dropped in room3 with lgripper2 by robot2, ball1 is dropped in room2 with lgripper2 by robot2, ball2 is picked from room2 with lgripper1 by robot2, ball7 is picked from room2 with lgripper2 by robot2, ball5 is dropped in room1 with lgripper1 by robot2, ball2 is picked from room4 with lgripper1 by robot2, ball4 is picked from room4 with rgripper1 by robot1, robot2 moves from room1 to room3, ball3 is picked from room3 with rgripper2 by robot1, ball5 is picked from room3 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper2 by robot1, ball5 is picked from room4 with lgripper1 by robot2, ball2 is dropped in room1 with rgripper2 by robot2, ball7 is picked from room4 with rgripper2 by robot1, ball1 is dropped in room1 with lgripper1 by robot2, ball1 is dropped in room1 with lgripper2 by robot2, ball4 is picked from room1 with lgripper1 by robot2, ball7 is picked from room3 with rgripper2 by robot2, ball7 is dropped in room1 with rgripper2 by robot2, ball4 is picked from room1 with rgripper1 by robot1, ball2 is dropped in room4 with lgripper1 by robot1, ball2 is dropped in room1 with lgripper2 by robot1, ball4 is picked from room3 with lgripper1 by robot1, ball1 is picked from room2 with lgripper1 by robot1, ball4 is dropped in room4 with lgripper1 by robot1, ball2 is dropped in room4 with lgripper2 by robot2, ball2 is picked from room2 with rgripper2 by robot2, ball3 is picked from room4 with lgripper1 by robot2, ball2 is picked from room4 with lgripper2 by robot1, ball3 is dropped in room3 with rgripper1 by robot1, ball7 is dropped in room3 with rgripper2 by robot1, ball7 is picked from room1 with lgripper2 by robot1, robot1 moves from room3 to room4, ball4 is picked from room4 with lgripper2 by robot1, ball5 is dropped in room1 with rgripper1 by robot2, ball4 is picked from room2 with lgripper2 by robot1, ball5 is picked from room1 with rgripper1 by robot1, ball2 is picked from room3 with rgripper1 by robot1, ball7 is picked from room2 with rgripper2 by robot2, ball5 is dropped in room4 with rgripper2 by robot1, ball2 is dropped in room4 with rgripper1 by robot1, ball3 is picked from room2 with lgripper1 by robot2, ball4 is picked from room2 with rgripper2 by robot1, ball5 is dropped in room1 with rgripper1 by robot1, ball1 is picked from room3 with lgripper1 by robot2, ball1 is picked from room4 with lgripper1 by robot2, ball7 is dropped in room4 with rgripper1 by robot1, ball1 is dropped in room1 with lgripper1 by robot1, ball7 is picked from room4 with rgripper2 by robot2, ball1 is dropped in room4 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, ball7 is dropped in room3 with rgripper2 by robot2, ball6 is dropped in room2 with rgripper1 by robot2, ball1 is picked from room1 with rgripper1 by robot2, ball3 is picked from room3 with lgripper2 by robot2, ball7 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room3 with lgripper2 by robot2, robot1 moves from room3 to room2, ball1 is picked from room4 with lgripper2 by robot2, ball5 is dropped in room3 with lgripper2 by robot1, ball5 is picked from room2 with rgripper1 by robot2, ball7 is dropped in room2 with rgripper1 by robot1, ball6 is dropped in room4 with rgripper1 by robot1, ball4 is picked from room1 with lgripper2 by robot1, ball1 is dropped in room3 with lgripper2 by robot1, ball7 is dropped in room1 with rgripper1 by robot2, ball3 is picked from room1 with lgripper1 by robot2, ball5 is dropped in room4 with lgripper2 by robot1, ball5 is picked from room4 with rgripper2 by robot1, ball4 is dropped in room2 with rgripper2 by robot1, ball5 is dropped in room4 with lgripper1 by robot2, ball5 is dropped in room3 with rgripper2 by robot1, ball4 is dropped in room2 with rgripper1 by robot2, ball4 is dropped in room1 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper1 by robot1, ball6 is picked from room2 with lgripper1 by robot2, ball7 is dropped in room1 with lgripper1 by robot2, ball4 is picked from room1 with rgripper2 by robot1, ball2 is dropped in room2 with lgripper1 by robot2, ball5 is dropped in room3 with rgripper1 by robot1, ball5 is picked from room1 with lgripper1 by robot2, ball4 is picked from room4 with lgripper2 by robot2, ball7 is picked from room1 with rgripper2 by robot1, ball1 is picked from room3 with lgripper2 by robot1, ball7 is dropped in room4 with lgripper2 by robot1, ball1 is picked from room1 with lgripper1 by robot1, ball4 is dropped in room4 with rgripper2 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball2 is dropped in room1 with rgripper1 by robot1, ball7 is dropped in room3 with lgripper1 by robot1, ball2 is picked from room2 with lgripper1 by robot1, ball4 is picked from room3 with rgripper1 by robot2, ball6 is picked from room3 with lgripper2 by robot1, ball1 is picked from room2 with rgripper1 by robot2, ball6 is dropped in room2 with rgripper2 by robot1, ball4 is dropped in room2 with lgripper1 by robot2, ball2 is dropped in room3 with rgripper1 by robot2, robot1 moves from room4 to room2, ball3 is picked from room2 with lgripper2 by robot2, ball5 is dropped in room2 with lgripper2 by robot2, ball7 is picked from room1 with rgripper1 by robot2, ball2 is dropped in room2 with rgripper1 by robot1, ball3 is dropped in room1 with rgripper2 by robot2, robot2 moves from room2 to room4, ball4 is dropped in room1 with lgripper2 by robot2, ball3 is picked from room3 with rgripper2 by robot2, ball3 is picked from room3 with rgripper1 by robot1, ball2 is picked from room1 with lgripper2 by robot1, ball6 is dropped in room2 with lgripper2 by robot1, ball3 is dropped in room4 with rgripper2 by robot2, ball4 is picked from room1 with lgripper2 by robot2, ball7 is dropped in room4 with rgripper1 by robot2, ball6 is picked from room1 with lgripper2 by robot1, ball4 is dropped in room4 with rgripper2 by robot2, ball7 is picked from room4 with rgripper1 by robot1, ball3 is picked from room4 with lgripper2 by robot2, ball3 is dropped in room1 with rgripper1 by robot2, ball5 is dropped in room1 with rgripper2 by robot2, ball2 is picked from room1 with rgripper2 by robot2, ball3 is dropped in room1 with lgripper1 by robot2, ball7 is picked from room2 with lgripper1 by robot1, ball5 is picked from room4 with lgripper1 by robot1, ball4 is dropped in room2 with rgripper1 by robot1, ball7 is picked from room1 with rgripper1 by robot1, ball4 is picked from room4 with rgripper1 by robot2, ball5 is picked from room2 with rgripper2 by robot1, ball3 is picked from room4 with rgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot2, ball2 is dropped in room4 with lgripper2 by robot1, ball6 is picked from room2 with lgripper2 by robot2, ball4 is dropped in room4 with lgripper2 by robot1, ball5 is picked from room3 with lgripper1 by robot1, ball5 is picked from room2 with rgripper2 by robot2, ball2 is dropped in room3 with rgripper2 by robot1, ball1 is dropped in room1 with lgripper2 by robot1, robot2 moves from room2 to room3, ball7 is dropped in room3 with rgripper1 by robot1, ball1 is picked from room3 with rgripper1 by robot1, ball3 is picked from room4 with lgripper2 by robot1, ball7 is dropped in room4 with rgripper2 by robot2, ball1 is dropped in room2 with rgripper1 by robot1, ball2 is dropped in room4 with rgripper2 by robot1, ball6 is picked from room1 with rgripper1 by robot2, ball6 is picked from room1 with lgripper2 by robot2, ball1 is picked from room2 with lgripper2 by robot2, ball6 is picked from room2 with rgripper2 by robot1, ball1 is dropped in room3 with lgripper1 by robot1, ball1 is dropped in room2 with rgripper2 by robot2, ball7 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1 and ball1 is picked from room2 with rgripper2 by robot2", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "acc95081-98f3-464c-8209-46ec5475b3ec", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "e906c3fa-ad13-40bc-8e76-21b03fdec138", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball6 is picked from room1 with rgripper1 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "ball6 is picked from room1 with rgripper1 by robot2", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "797fa1f8-a98c-4a54-8d81-be83f3710db3", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball2 is dropped in room1 with lgripper2 by robot1, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "ball2 is dropped in room1 with lgripper2 by robot1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "d6dd5aef-0f99-4515-885b-9c628664031b", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, robot2 moves from room3 to room2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "robot2 moves from room3 to room2", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "92a275cc-e6b6-43d3-9f35-84677b896248", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "5d8ec243-43f3-48d5-8210-dffe09b535cc", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball3 is dropped in room3 with lgripper1 by robot2. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "779d4fec-4f64-4291-a87b-7a609755c479", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, ball5 is picked from room4 with rgripper2 by robot2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "4e6f8622-19fc-46c2-8a42-b4a99cd0f3a6", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is picked from room4 with lgripper2 by robot2. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "db99a029-d490-4192-8361-d1e6b05ab8d2", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 10 the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball3 is dropped in room1 with rgripper1 by robot1, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2. Is the action: ball3 is dropped in room1 with rgripper1 by robot1 executable at step 3, True or False?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "d396643f-9157-4321-b6a9-36986a87666d", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 10 the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball5 is picked from room4 with rgripper1 by robot1 and ball6 is dropped in room2 with lgripper2 by robot2. Is the action: ball5 is picked from room4 with rgripper1 by robot1 executable at step 9, True or False?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "0e4d2b80-8dc9-428e-9865-785d2beb2f24", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 10 the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball1 is picked from room4 with rgripper1 by robot1. Is the action: ball1 is picked from room4 with rgripper1 by robot1 executable at step 10, True or False?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "712c94d0-890a-41c5-9778-8f4545bbf855", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 10 the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2. Is the action: robot2 moves from room3 to room2 executable at step 8, True or False?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "8c3f0a53-20d1-4105-9cf3-0fea39426795", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "ball3 is picked from room1 with rgripper1 by robot1, ball5 is picked from room2 with lgripper2 by robot2, robot1 moves from room1 to room2, robot2 moves from room2 to room1, ball2 is dropped in room2 with rgripper2 by robot2, robot1 moves from room1 to room4, ball3 is picked from room1 with lgripper1 by robot1, ball7 is picked from room2 with lgripper2 by robot2, robot1 moves from room1 to room3, robot2 moves from room2 to room4, ball6 is picked from room2 with lgripper2 by robot2 and robot2 moves from room2 to room3", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "3262dc9a-4099-4d84-9365-bc17900435f8", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "ball1 is picked from room3 with rgripper1 by robot2, ball2 is dropped in room2 with lgripper1 by robot1, robot2 moves from room1 to room4, ball1 is dropped in room2 with lgripper1 by robot2, ball6 is dropped in room2 with lgripper1 by robot2, ball6 is dropped in room3 with rgripper1 by robot2, ball1 is picked from room1 with rgripper1 by robot1, ball7 is picked from room4 with lgripper1 by robot2, ball1 is dropped in room3 with rgripper2 by robot2, ball1 is dropped in room3 with lgripper2 by robot2, ball4 is picked from room4 with rgripper2 by robot1, ball4 is dropped in room2 with lgripper2 by robot1, ball4 is dropped in room2 with rgripper2 by robot2, ball4 is picked from room3 with lgripper1 by robot2, ball4 is picked from room1 with rgripper1 by robot2, robot2 moves from room1 to room2, ball4 is picked from room3 with lgripper2 by robot1, ball3 is dropped in room2 with rgripper1 by robot2, ball5 is dropped in room2 with lgripper1 by robot2, ball2 is dropped in room4 with rgripper1 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, ball5 is dropped in room2 with rgripper1 by robot1, ball4 is picked from room2 with lgripper1 by robot2, ball3 is picked from room1 with rgripper2 by robot1, ball6 is dropped in room4 with lgripper2 by robot1, ball5 is picked from room4 with lgripper2 by robot2, ball1 is picked from room3 with rgripper2 by robot1, ball7 is picked from room2 with rgripper1 by robot2, ball6 is picked from room2 with rgripper1 by robot2, ball4 is picked from room3 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot2, robot1 moves from room3 to room1, ball5 is picked from room4 with rgripper1 by robot1, ball3 is dropped in room4 with lgripper2 by robot1, ball3 is dropped in room3 with lgripper2 by robot1, ball3 is dropped in room4 with lgripper2 by robot2, ball7 is dropped in room2 with lgripper1 by robot1, ball2 is picked from room1 with rgripper1 by robot1, ball2 is dropped in room1 with rgripper2 by robot1, ball6 is picked from room3 with rgripper1 by robot2, ball4 is dropped in room1 with lgripper2 by robot1, ball7 is dropped in room2 with lgripper2 by robot2, ball6 is dropped in room3 with rgripper1 by robot1, robot1 moves from room4 to room1, ball6 is dropped in room4 with lgripper2 by robot2, ball6 is picked from room4 with lgripper1 by robot1, ball7 is dropped in room4 with lgripper1 by robot2, ball2 is picked from room4 with lgripper2 by robot2, ball3 is dropped in room2 with rgripper2 by robot1, ball3 is dropped in room1 with lgripper2 by robot1, ball6 is picked from room4 with rgripper1 by robot1, ball2 is picked from room1 with lgripper2 by robot2, ball7 is picked from room3 with lgripper2 by robot1, ball1 is picked from room4 with rgripper2 by robot1, ball7 is picked from room3 with lgripper1 by robot1, ball6 is picked from room4 with rgripper1 by robot2, ball5 is picked from room3 with lgripper2 by robot1, ball7 is picked from room3 with rgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, ball4 is picked from room1 with rgripper2 by robot2, ball1 is picked from room4 with rgripper2 by robot2, ball2 is picked from room3 with rgripper2 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room3 with rgripper1 by robot1, ball7 is dropped in room4 with lgripper1 by robot1, ball6 is dropped in room4 with rgripper2 by robot2, ball6 is dropped in room1 with lgripper1 by robot2, ball6 is dropped in room3 with rgripper2 by robot2, ball5 is dropped in room2 with lgripper1 by robot1, ball6 is dropped in room3 with lgripper1 by robot1, ball5 is picked from room1 with rgripper2 by robot2, ball3 is picked from room2 with rgripper1 by robot2, ball1 is picked from room1 with lgripper2 by robot2, ball5 is picked from room1 with rgripper1 by robot2, ball3 is dropped in room4 with rgripper1 by robot1, ball5 is picked from room4 with rgripper2 by robot2, ball2 is dropped in room3 with rgripper1 by robot1, ball5 is picked from room2 with lgripper2 by robot1, ball2 is picked from room4 with rgripper1 by robot2, ball6 is dropped in room3 with lgripper2 by robot1, ball3 is dropped in room2 with lgripper2 by robot2, ball6 is dropped in room3 with rgripper2 by robot1, ball5 is dropped in room3 with rgripper1 by robot2, ball7 is picked from room3 with rgripper1 by robot2, ball5 is dropped in room1 with lgripper2 by robot1, ball6 is dropped in room4 with rgripper2 by robot1, ball5 is picked from room2 with lgripper1 by robot1, ball1 is picked from room4 with rgripper1 by robot1, ball6 is dropped in room2 with lgripper2 by robot2, ball2 is dropped in room3 with lgripper1 by robot2, ball3 is dropped in room4 with rgripper1 by robot2, ball2 is dropped in room2 with rgripper2 by robot1, ball6 is picked from room1 with rgripper2 by robot2, ball6 is picked from room1 with lgripper1 by robot1, ball5 is picked from room4 with lgripper2 by robot1, ball3 is dropped in room2 with rgripper1 by robot1, ball5 is dropped in room4 with lgripper1 by robot1, ball1 is picked from room3 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, ball6 is dropped in room2 with rgripper2 by robot2, ball5 is dropped in room3 with lgripper1 by robot1, ball7 is picked from room1 with lgripper1 by robot2, ball4 is dropped in room3 with lgripper2 by robot1, ball6 is picked from room2 with lgripper1 by robot1, ball4 is dropped in room2 with lgripper1 by robot1, ball6 is dropped in room1 with rgripper2 by robot2, ball1 is picked from room3 with rgripper2 by robot2, ball1 is picked from room3 with lgripper2 by robot2, ball2 is dropped in room1 with rgripper1 by robot2, ball4 is dropped in room3 with rgripper1 by robot2, ball4 is dropped in room4 with rgripper1 by robot1, ball6 is picked from room2 with rgripper2 by robot2, ball1 is dropped in room1 with rgripper1 by robot2, ball3 is dropped in room3 with lgripper1 by robot1, ball2 is dropped in room2 with lgripper2 by robot2, ball6 is dropped in room2 with rgripper1 by robot1, ball2 is dropped in room1 with lgripper2 by robot2, ball3 is dropped in room4 with lgripper1 by robot2, ball3 is dropped in room4 with lgripper1 by robot1, ball1 is dropped in room2 with rgripper2 by robot1, ball3 is dropped in room1 with rgripper1 by robot1, ball7 is picked from room4 with lgripper1 by robot1, ball3 is picked from room2 with rgripper1 by robot1, ball5 is dropped in room4 with rgripper1 by robot2, ball1 is picked from room4 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot2, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room3 with rgripper2 by robot1, ball7 is dropped in room3 with lgripper2 by robot2, ball7 is dropped in room3 with lgripper2 by robot1, ball1 is picked from room2 with rgripper1 by robot1, ball1 is dropped in room4 with rgripper2 by robot1, ball1 is picked from room1 with rgripper2 by robot2, ball3 is picked from room2 with lgripper1 by robot1, ball2 is dropped in room3 with lgripper2 by robot1, ball5 is picked from room4 with rgripper1 by robot2, ball2 is picked from room2 with lgripper2 by robot2, robot2 moves from room3 to room1, ball7 is dropped in room2 with rgripper1 by robot2, ball6 is picked from room4 with lgripper2 by robot1, ball7 is picked from room3 with lgripper1 by robot2, ball3 is picked from room3 with rgripper1 by robot2, ball6 is picked from room3 with lgripper1 by robot1, ball5 is dropped in room4 with rgripper2 by robot2, ball2 is picked from room2 with rgripper1 by robot2, ball3 is dropped in room2 with lgripper1 by robot1, ball5 is dropped in room1 with lgripper1 by robot1, ball5 is picked from room2 with rgripper1 by robot1, ball1 is dropped in room3 with rgripper1 by robot1, ball3 is dropped in room2 with rgripper2 by robot2, ball5 is dropped in room2 with rgripper2 by robot2, ball4 is dropped in room4 with lgripper1 by robot2, robot1 moves from room2 to room3, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room4 to room2, ball2 is dropped in room3 with rgripper2 by robot2, robot2 moves from room4 to room1, ball1 is picked from room1 with lgripper2 by robot1, ball4 is picked from room4 with lgripper1 by robot2, ball4 is dropped in room3 with lgripper1 by robot1, ball4 is picked from room2 with lgripper2 by robot2, ball4 is dropped in room1 with rgripper2 by robot1, ball3 is picked from room3 with lgripper2 by robot1, ball2 is picked from room3 with rgripper2 by robot2, ball2 is dropped in room3 with lgripper1 by robot1, ball6 is dropped in room3 with lgripper2 by robot2, ball4 is picked from room3 with lgripper2 by robot2, ball6 is picked from room4 with rgripper2 by robot2, ball1 is picked from room2 with lgripper2 by robot1, ball7 is picked from room2 with rgripper2 by robot1, ball2 is picked from room2 with rgripper2 by robot1, ball7 is dropped in room2 with rgripper2 by robot2, ball1 is dropped in room4 with rgripper1 by robot2, ball3 is dropped in room1 with lgripper2 by robot2, ball6 is dropped in room1 with lgripper2 by robot1, ball7 is picked from room3 with lgripper2 by robot2, ball6 is dropped in room1 with lgripper2 by robot2, ball6 is dropped in room4 with lgripper1 by robot2, ball5 is picked from room3 with rgripper2 by robot2, ball2 is dropped in room2 with lgripper2 by robot1, ball4 is picked from room3 with rgripper2 by robot1, ball2 is picked from room2 with rgripper1 by robot1, ball7 is picked from room1 with rgripper2 by robot2, ball1 is dropped in room3 with rgripper2 by robot1, ball4 is picked from room4 with lgripper1 by robot1, ball3 is picked from room3 with lgripper1 by robot1, ball3 is picked from room1 with lgripper2 by robot1, ball1 is dropped in room3 with rgripper1 by robot2, robot1 moves from room4 to room3, ball3 is dropped in room1 with rgripper2 by robot1, ball3 is picked from room4 with rgripper1 by robot2, ball5 is picked from room3 with lgripper1 by robot2, ball1 is picked from room2 with rgripper2 by robot1, ball3 is picked from room3 with lgripper1 by robot2, ball4 is picked from room4 with rgripper2 by robot2, ball2 is picked from room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper1 by robot2, ball3 is dropped in room4 with rgripper2 by robot1, ball4 is dropped in room4 with rgripper1 by robot2, ball1 is dropped in room3 with lgripper1 by robot2, ball7 is dropped in room1 with lgripper2 by robot1, ball2 is dropped in room2 with rgripper1 by robot2, ball7 is picked from room2 with lgripper1 by robot2, ball7 is dropped in room2 with lgripper1 by robot2, ball2 is picked from room3 with lgripper1 by robot1, ball1 is dropped in room1 with rgripper2 by robot2, ball7 is dropped in room3 with rgripper1 by robot2, ball1 is dropped in room4 with lgripper1 by robot1, ball3 is picked from room2 with rgripper2 by robot1, ball2 is picked from room4 with rgripper1 by robot1, ball5 is dropped in room2 with rgripper2 by robot1, ball1 is dropped in room4 with lgripper1 by robot2, ball4 is dropped in room1 with lgripper1 by robot1, ball4 is picked from room2 with lgripper1 by robot1, ball6 is dropped in room1 with rgripper2 by robot1, ball7 is dropped in room4 with lgripper2 by robot2, ball5 is dropped in room1 with rgripper2 by robot1, ball4 is dropped in room1 with rgripper1 by robot2, ball2 is dropped in room4 with rgripper2 by robot2, ball5 is picked from room2 with lgripper1 by robot2, ball5 is picked from room1 with lgripper2 by robot1, ball6 is dropped in room1 with lgripper1 by robot1, ball3 is dropped in room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper2 by robot2, ball5 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room4 with lgripper2 by robot2, ball3 is picked from room4 with lgripper1 by robot1, ball4 is dropped in room3 with rgripper2 by robot1, ball6 is dropped in room1 with rgripper1 by robot1, ball1 is dropped in room2 with lgripper1 by robot1, ball3 is picked from room2 with rgripper2 by robot2, ball7 is picked from room1 with lgripper2 by robot2, ball5 is dropped in room3 with rgripper2 by robot2, ball6 is picked from room3 with rgripper2 by robot2, ball4 is dropped in room1 with lgripper1 by robot2, ball1 is picked from room1 with rgripper2 by robot1, ball5 is dropped in room2 with lgripper2 by robot1, ball2 is dropped in room1 with lgripper1 by robot2, ball6 is dropped in room4 with rgripper1 by robot2, ball1 is dropped in room4 with lgripper2 by robot1, ball5 is dropped in room3 with lgripper2 by robot2, ball7 is dropped in room4 with rgripper2 by robot1, ball5 is picked from room3 with rgripper1 by robot2, ball1 is picked from room1 with lgripper1 by robot2, ball2 is picked from room4 with rgripper2 by robot2, ball7 is dropped in room2 with rgripper2 by robot1, ball6 is picked from room2 with lgripper2 by robot1, ball4 is dropped in room2 with lgripper2 by robot2, ball2 is dropped in room1 with lgripper1 by robot1, ball4 is dropped in room3 with lgripper2 by robot2, ball5 is picked from room3 with rgripper2 by robot1, ball1 is dropped in room4 with lgripper2 by robot2, ball1 is picked from room4 with lgripper2 by robot1, ball5 is picked from room1 with rgripper2 by robot1, robot2 moves from room4 to room3, ball3 is dropped in room3 with rgripper2 by robot2, ball3 is picked from room1 with lgripper2 by robot2, ball2 is picked from room1 with rgripper1 by robot2, ball1 is picked from room2 with lgripper1 by robot2, ball3 is picked from room2 with lgripper2 by robot1, ball7 is dropped in room1 with lgripper1 by robot1, ball6 is dropped in room1 with rgripper1 by robot2, ball1 is dropped in room1 with rgripper2 by robot1, robot1 moves from room2 to room4, ball6 is picked from room3 with rgripper1 by robot1, ball3 is picked from room4 with rgripper2 by robot1, ball7 is dropped in room3 with lgripper1 by robot2, ball7 is dropped in room1 with lgripper2 by robot2, ball5 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot2, ball2 is picked from room1 with rgripper2 by robot1, ball6 is picked from room4 with lgripper2 by robot2, ball6 is picked from room4 with lgripper1 by robot2, ball3 is dropped in room3 with rgripper2 by robot1, ball7 is picked from room2 with lgripper2 by robot1, ball2 is picked from room3 with lgripper1 by robot2, ball2 is picked from room3 with lgripper2 by robot1, ball2 is picked from room4 with rgripper2 by robot1, ball2 is picked from room3 with rgripper1 by robot2, ball3 is dropped in room3 with rgripper1 by robot2, ball2 is dropped in room4 with lgripper1 by robot2, ball1 is dropped in room2 with lgripper2 by robot1, ball6 is picked from room1 with lgripper1 by robot2, ball6 is dropped in room4 with lgripper1 by robot1, ball1 is picked from room4 with rgripper1 by robot2, ball3 is dropped in room3 with lgripper1 by robot2, ball7 is picked from room4 with rgripper1 by robot2, ball6 is picked from room1 with rgripper2 by robot1, ball5 is dropped in room1 with lgripper2 by robot2, ball5 is dropped in room4 with lgripper2 by robot2, ball1 is dropped in room2 with rgripper1 by robot2, ball7 is picked from room4 with lgripper2 by robot1, ball5 is dropped in room2 with rgripper1 by robot2, ball5 is dropped in room3 with lgripper1 by robot2, ball3 is picked from room4 with rgripper2 by robot2, ball5 is picked from room1 with lgripper2 by robot2, ball4 is dropped in room3 with lgripper1 by robot2, ball6 is picked from room2 with rgripper1 by robot1, ball7 is picked from room3 with rgripper2 by robot1, ball7 is picked from room4 with lgripper2 by robot2, ball2 is picked from room2 with lgripper2 by robot1, ball1 is dropped in room4 with rgripper2 by robot2, ball6 is dropped in room3 with lgripper1 by robot2, ball5 is dropped in room4 with rgripper1 by robot1, ball4 is picked from room1 with lgripper1 by robot1, ball4 is picked from room3 with rgripper2 by robot2, ball7 is dropped in room1 with rgripper2 by robot1, ball6 is picked from room4 with rgripper2 by robot1, ball7 is dropped in room2 with lgripper2 by robot1, ball1 is dropped in room1 with rgripper1 by robot1, ball2 is dropped in room3 with lgripper2 by robot2, ball1 is dropped in room2 with lgripper2 by robot2, ball2 is picked from room2 with lgripper1 by robot2, ball5 is dropped in room1 with lgripper1 by robot2, ball2 is picked from room4 with lgripper1 by robot2, ball4 is picked from room4 with rgripper1 by robot1, robot2 moves from room1 to room3, ball3 is picked from room3 with rgripper2 by robot1, ball5 is picked from room3 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper2 by robot1, ball5 is picked from room4 with lgripper1 by robot2, ball2 is dropped in room1 with rgripper2 by robot2, ball7 is picked from room4 with rgripper2 by robot1, ball1 is dropped in room1 with lgripper1 by robot2, ball1 is dropped in room1 with lgripper2 by robot2, ball4 is picked from room1 with lgripper1 by robot2, ball7 is picked from room3 with rgripper2 by robot2, ball7 is dropped in room1 with rgripper2 by robot2, ball4 is picked from room1 with rgripper1 by robot1, ball2 is dropped in room4 with lgripper1 by robot1, ball2 is dropped in room1 with lgripper2 by robot1, ball4 is picked from room3 with lgripper1 by robot1, ball1 is picked from room2 with lgripper1 by robot1, ball4 is dropped in room4 with lgripper1 by robot1, ball2 is dropped in room4 with lgripper2 by robot2, ball2 is picked from room2 with rgripper2 by robot2, ball3 is picked from room4 with lgripper1 by robot2, ball2 is picked from room4 with lgripper2 by robot1, ball3 is dropped in room3 with rgripper1 by robot1, ball7 is dropped in room3 with rgripper2 by robot1, ball7 is picked from room1 with lgripper2 by robot1, robot1 moves from room3 to room4, ball4 is picked from room4 with lgripper2 by robot1, ball5 is dropped in room1 with rgripper1 by robot2, ball4 is picked from room2 with lgripper2 by robot1, ball5 is picked from room1 with rgripper1 by robot1, ball2 is picked from room3 with rgripper1 by robot1, ball7 is picked from room2 with rgripper2 by robot2, ball5 is dropped in room4 with rgripper2 by robot1, ball2 is dropped in room4 with rgripper1 by robot1, ball3 is picked from room2 with lgripper1 by robot2, ball4 is picked from room2 with rgripper2 by robot1, ball5 is dropped in room1 with rgripper1 by robot1, ball1 is picked from room3 with lgripper1 by robot2, ball1 is picked from room4 with lgripper1 by robot2, ball7 is dropped in room4 with rgripper1 by robot1, ball1 is dropped in room1 with lgripper1 by robot1, ball7 is picked from room4 with rgripper2 by robot2, ball1 is dropped in room4 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, ball7 is dropped in room3 with rgripper2 by robot2, ball6 is dropped in room2 with rgripper1 by robot2, ball1 is picked from room1 with rgripper1 by robot2, ball3 is picked from room3 with lgripper2 by robot2, robot2 moves from room3 to room4, ball7 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room3 with lgripper2 by robot2, robot1 moves from room3 to room2, ball1 is picked from room4 with lgripper2 by robot2, ball5 is dropped in room3 with lgripper2 by robot1, ball5 is picked from room2 with rgripper1 by robot2, ball7 is dropped in room2 with rgripper1 by robot1, ball6 is dropped in room4 with rgripper1 by robot1, ball4 is picked from room1 with lgripper2 by robot1, ball1 is dropped in room3 with lgripper2 by robot1, robot2 moves from room3 to room2, ball7 is dropped in room1 with rgripper1 by robot2, ball3 is picked from room1 with lgripper1 by robot2, ball5 is dropped in room4 with lgripper2 by robot1, ball5 is picked from room4 with rgripper2 by robot1, ball4 is dropped in room2 with rgripper2 by robot1, ball5 is dropped in room4 with lgripper1 by robot2, ball5 is dropped in room3 with rgripper2 by robot1, ball4 is dropped in room2 with rgripper1 by robot2, ball4 is dropped in room1 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper1 by robot1, ball6 is picked from room2 with lgripper1 by robot2, ball7 is dropped in room1 with lgripper1 by robot2, ball4 is picked from room1 with rgripper2 by robot1, ball2 is dropped in room2 with lgripper1 by robot2, ball5 is dropped in room3 with rgripper1 by robot1, ball5 is picked from room1 with lgripper1 by robot2, ball4 is picked from room4 with lgripper2 by robot2, ball7 is picked from room1 with rgripper2 by robot1, ball1 is picked from room3 with lgripper2 by robot1, ball7 is dropped in room4 with lgripper2 by robot1, ball1 is picked from room1 with lgripper1 by robot1, ball4 is dropped in room4 with rgripper2 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball2 is dropped in room1 with rgripper1 by robot1, ball7 is dropped in room3 with lgripper1 by robot1, ball2 is picked from room2 with lgripper1 by robot1, ball4 is picked from room3 with rgripper1 by robot2, ball6 is picked from room3 with lgripper2 by robot1, ball1 is picked from room2 with rgripper1 by robot2, ball6 is dropped in room2 with rgripper2 by robot1, ball4 is dropped in room2 with lgripper1 by robot2, ball2 is dropped in room3 with rgripper1 by robot2, robot1 moves from room4 to room2, ball3 is picked from room2 with lgripper2 by robot2, ball5 is dropped in room2 with lgripper2 by robot2, ball7 is picked from room1 with rgripper1 by robot2, ball2 is dropped in room2 with rgripper1 by robot1, ball3 is dropped in room1 with rgripper2 by robot2, ball4 is dropped in room1 with lgripper2 by robot2, ball3 is picked from room3 with rgripper2 by robot2, ball3 is picked from room3 with rgripper1 by robot1, ball2 is picked from room1 with lgripper2 by robot1, ball6 is dropped in room2 with lgripper2 by robot1, ball3 is dropped in room4 with rgripper2 by robot2, ball4 is picked from room1 with lgripper2 by robot2, ball7 is dropped in room4 with rgripper1 by robot2, ball6 is picked from room1 with lgripper2 by robot1, ball4 is dropped in room4 with rgripper2 by robot2, ball7 is picked from room4 with rgripper1 by robot1, ball3 is picked from room4 with lgripper2 by robot2, ball3 is dropped in room1 with rgripper1 by robot2, ball5 is dropped in room1 with rgripper2 by robot2, ball2 is picked from room1 with rgripper2 by robot2, ball3 is dropped in room1 with lgripper1 by robot2, ball7 is picked from room2 with lgripper1 by robot1, ball5 is picked from room4 with lgripper1 by robot1, ball4 is dropped in room2 with rgripper1 by robot1, ball7 is picked from room1 with rgripper1 by robot1, ball4 is picked from room4 with rgripper1 by robot2, ball5 is picked from room2 with rgripper2 by robot1, ball3 is picked from room4 with rgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot2, ball2 is dropped in room4 with lgripper2 by robot1, ball4 is dropped in room4 with lgripper2 by robot1, ball5 is picked from room3 with lgripper1 by robot1, ball5 is picked from room2 with rgripper2 by robot2, ball2 is dropped in room3 with rgripper2 by robot1, ball1 is dropped in room1 with lgripper2 by robot1, ball6 is picked from room3 with lgripper2 by robot2, ball7 is dropped in room3 with rgripper1 by robot1, ball1 is picked from room3 with rgripper1 by robot1, ball3 is picked from room4 with lgripper2 by robot1, ball7 is dropped in room4 with rgripper2 by robot2, ball1 is dropped in room2 with rgripper1 by robot1, ball2 is dropped in room4 with rgripper2 by robot1, ball6 is picked from room1 with rgripper1 by robot2, ball6 is picked from room1 with lgripper2 by robot2, ball1 is picked from room2 with lgripper2 by robot2, ball6 is picked from room2 with rgripper2 by robot1, ball1 is dropped in room3 with lgripper1 by robot1, ball1 is dropped in room2 with rgripper2 by robot2, ball7 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1 and ball1 is picked from room2 with rgripper2 by robot2", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "36d82335-4899-4352-8def-49d534ab694d", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with rgripper1 by robot1, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "ball1 is dropped in room3 with rgripper1 by robot1", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "f7c494a8-c6c0-4366-8ba1-9aefd067231d", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "9ce175b2-6e26-4708-acdf-93c351297519", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, ball1 is dropped in room3 with rgripper1 by robot2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "ball1 is dropped in room3 with rgripper1 by robot2", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "61164a85-4df8-4c45-9ca4-3197b4bd023e", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball1 is picked from room2 with rgripper1 by robot1 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "ball1 is picked from room2 with rgripper1 by robot1", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "2622af1c-eafc-4781-bdf5-c3c3864eb413", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room2 with lgripper1 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "1fd36658-35a5-425d-8096-d3d327da941a", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "9d34cea4-f023-490d-9cfc-32132d1d8421", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball1 is dropped in room1 with lgripper1 by robot1. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "799351f2-064f-4bb6-a5c3-41aeeccc5d51", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, ball5 is picked from room1 with rgripper2 by robot2, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "87889018-5552-4f33-bff1-cf3826fc83c1", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 15 the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball4 is picked from room1 with lgripper1 by robot1, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1. Is the action: ball4 is picked from room1 with lgripper1 by robot1 executable at step 10, True or False?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "aa2df37b-4b9b-4d50-a9d0-616839f77d59", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 15 the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball3 is dropped in room2 with lgripper1 by robot1, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1. Is the action: ball3 is dropped in room2 with lgripper1 by robot1 executable at step 3, True or False?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "3efc5d27-e8ce-4050-b14e-f6f96e7ebe93", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 15 the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1. Is the action: robot2 moves from room3 to room2 executable at step 1, True or False?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "4abf4a4e-7674-4279-b3ca-3720cc4278bf", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 15 the following actions are planned to be performed: ball6 is picked from room2 with rgripper1 by robot2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1. Is the action: ball6 is picked from room2 with rgripper1 by robot2 executable at step 1, True or False?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "5795e7d5-81be-4a15-805d-5a486d30b55a", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "ball5 is dropped in room2 with rgripper1 by robot1, ball2 is picked from room4 with lgripper2 by robot2, robot1 moves from room2 to room1, ball3 is dropped in room2 with lgripper1 by robot1, robot1 moves from room2 to room3, robot2 moves from room4 to room2, robot2 moves from room4 to room1, ball2 is picked from room4 with rgripper2 by robot2, robot2 moves from room4 to room3 and robot1 moves from room2 to room4", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "406af85e-aec7-44c3-8477-3968eaf5a399", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "ball1 is picked from room3 with rgripper1 by robot2, ball2 is dropped in room2 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, robot2 moves from room1 to room4, ball1 is dropped in room2 with lgripper1 by robot2, ball6 is dropped in room2 with lgripper1 by robot2, ball6 is dropped in room3 with rgripper1 by robot2, ball1 is picked from room1 with rgripper1 by robot1, ball7 is picked from room4 with lgripper1 by robot2, ball1 is dropped in room3 with rgripper2 by robot2, ball1 is dropped in room3 with lgripper2 by robot2, ball4 is picked from room4 with rgripper2 by robot1, ball4 is dropped in room2 with lgripper2 by robot1, ball4 is dropped in room2 with rgripper2 by robot2, ball4 is picked from room3 with lgripper1 by robot2, ball4 is picked from room1 with rgripper1 by robot2, robot2 moves from room1 to room2, ball4 is picked from room3 with lgripper2 by robot1, ball3 is dropped in room2 with rgripper1 by robot2, ball5 is dropped in room2 with lgripper1 by robot2, ball2 is dropped in room4 with rgripper1 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, ball5 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with lgripper1 by robot2, ball3 is picked from room1 with rgripper2 by robot1, ball6 is dropped in room4 with lgripper2 by robot1, ball5 is picked from room4 with lgripper2 by robot2, ball1 is picked from room3 with rgripper2 by robot1, ball7 is picked from room2 with rgripper1 by robot2, ball6 is picked from room2 with rgripper1 by robot2, ball4 is picked from room3 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot2, robot1 moves from room3 to room1, ball5 is picked from room4 with rgripper1 by robot1, ball3 is dropped in room4 with lgripper2 by robot1, ball3 is dropped in room3 with lgripper2 by robot1, ball3 is dropped in room4 with lgripper2 by robot2, ball7 is dropped in room2 with lgripper1 by robot1, ball2 is picked from room1 with rgripper1 by robot1, ball2 is dropped in room1 with rgripper2 by robot1, ball6 is picked from room3 with rgripper1 by robot2, ball4 is dropped in room1 with lgripper2 by robot1, ball7 is dropped in room2 with lgripper2 by robot2, ball6 is dropped in room3 with rgripper1 by robot1, robot1 moves from room4 to room1, ball6 is dropped in room4 with lgripper2 by robot2, ball6 is picked from room4 with lgripper1 by robot1, ball7 is dropped in room4 with lgripper1 by robot2, ball3 is dropped in room2 with rgripper2 by robot1, ball3 is dropped in room1 with lgripper2 by robot1, ball6 is picked from room4 with rgripper1 by robot1, ball2 is picked from room1 with lgripper2 by robot2, ball7 is picked from room3 with lgripper2 by robot1, ball1 is picked from room4 with rgripper2 by robot1, ball7 is picked from room3 with lgripper1 by robot1, ball6 is picked from room4 with rgripper1 by robot2, ball5 is picked from room3 with lgripper2 by robot1, ball7 is picked from room3 with rgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, ball4 is picked from room1 with rgripper2 by robot2, ball1 is picked from room4 with rgripper2 by robot2, ball2 is picked from room3 with rgripper2 by robot1, ball4 is dropped in room3 with rgripper1 by robot1, ball7 is dropped in room4 with lgripper1 by robot1, ball6 is dropped in room4 with rgripper2 by robot2, ball6 is dropped in room1 with lgripper1 by robot2, ball6 is dropped in room3 with rgripper2 by robot2, ball5 is dropped in room2 with lgripper1 by robot1, ball6 is dropped in room3 with lgripper1 by robot1, ball5 is picked from room1 with rgripper2 by robot2, ball3 is picked from room2 with rgripper1 by robot2, ball1 is picked from room1 with lgripper2 by robot2, ball5 is picked from room1 with rgripper1 by robot2, ball3 is dropped in room4 with rgripper1 by robot1, ball5 is picked from room4 with rgripper2 by robot2, ball2 is dropped in room3 with rgripper1 by robot1, ball5 is picked from room2 with lgripper2 by robot1, ball2 is picked from room4 with rgripper1 by robot2, ball6 is dropped in room3 with lgripper2 by robot1, ball3 is dropped in room2 with lgripper2 by robot2, ball6 is dropped in room3 with rgripper2 by robot1, ball5 is dropped in room3 with rgripper1 by robot2, robot1 moves from room1 to room2, ball7 is picked from room3 with rgripper1 by robot2, ball5 is dropped in room1 with lgripper2 by robot1, ball6 is dropped in room4 with rgripper2 by robot1, ball5 is picked from room2 with lgripper1 by robot1, ball1 is picked from room4 with rgripper1 by robot1, ball6 is dropped in room2 with lgripper2 by robot2, ball2 is dropped in room3 with lgripper1 by robot2, ball3 is dropped in room4 with rgripper1 by robot2, ball2 is dropped in room2 with rgripper2 by robot1, ball6 is picked from room1 with rgripper2 by robot2, ball6 is picked from room1 with lgripper1 by robot1, ball5 is picked from room4 with lgripper2 by robot1, ball3 is dropped in room2 with rgripper1 by robot1, ball5 is dropped in room4 with lgripper1 by robot1, ball1 is picked from room3 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, ball6 is dropped in room2 with rgripper2 by robot2, ball5 is dropped in room3 with lgripper1 by robot1, ball7 is picked from room1 with lgripper1 by robot2, ball4 is dropped in room3 with lgripper2 by robot1, ball6 is picked from room2 with lgripper1 by robot1, ball4 is dropped in room2 with lgripper1 by robot1, ball6 is dropped in room1 with rgripper2 by robot2, ball1 is picked from room3 with rgripper2 by robot2, ball1 is picked from room3 with lgripper2 by robot2, ball2 is dropped in room1 with rgripper1 by robot2, ball4 is dropped in room3 with rgripper1 by robot2, ball4 is dropped in room4 with rgripper1 by robot1, ball6 is picked from room2 with rgripper2 by robot2, ball1 is dropped in room1 with rgripper1 by robot2, ball3 is dropped in room3 with lgripper1 by robot1, ball2 is dropped in room2 with lgripper2 by robot2, ball6 is dropped in room2 with rgripper1 by robot1, ball2 is dropped in room1 with lgripper2 by robot2, ball3 is dropped in room4 with lgripper1 by robot2, ball3 is dropped in room4 with lgripper1 by robot1, ball1 is dropped in room2 with rgripper2 by robot1, ball3 is dropped in room1 with rgripper1 by robot1, ball7 is picked from room4 with lgripper1 by robot1, ball3 is picked from room2 with rgripper1 by robot1, ball5 is dropped in room4 with rgripper1 by robot2, ball1 is picked from room4 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot2, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room3 with rgripper2 by robot1, ball7 is dropped in room3 with lgripper2 by robot2, ball7 is dropped in room3 with lgripper2 by robot1, ball1 is picked from room2 with rgripper1 by robot1, ball1 is dropped in room4 with rgripper2 by robot1, ball1 is picked from room1 with rgripper2 by robot2, ball3 is picked from room2 with lgripper1 by robot1, ball2 is dropped in room3 with lgripper2 by robot1, ball5 is picked from room4 with rgripper1 by robot2, ball2 is picked from room2 with lgripper2 by robot2, robot2 moves from room3 to room1, ball7 is dropped in room2 with rgripper1 by robot2, ball6 is picked from room4 with lgripper2 by robot1, ball7 is picked from room3 with lgripper1 by robot2, ball3 is picked from room3 with rgripper1 by robot2, ball6 is picked from room3 with lgripper1 by robot1, ball5 is dropped in room4 with rgripper2 by robot2, ball2 is picked from room2 with rgripper1 by robot2, ball5 is dropped in room1 with lgripper1 by robot1, ball5 is picked from room2 with rgripper1 by robot1, ball1 is dropped in room3 with rgripper1 by robot1, ball3 is dropped in room2 with rgripper2 by robot2, ball5 is dropped in room2 with rgripper2 by robot2, ball4 is dropped in room4 with lgripper1 by robot2, robot2 moves from room2 to room1, ball4 is picked from room2 with rgripper2 by robot2, ball2 is dropped in room3 with rgripper2 by robot2, ball1 is picked from room1 with lgripper2 by robot1, ball4 is picked from room4 with lgripper1 by robot2, ball4 is dropped in room3 with lgripper1 by robot1, ball4 is picked from room2 with lgripper2 by robot2, ball4 is dropped in room1 with rgripper2 by robot1, ball3 is picked from room3 with lgripper2 by robot1, ball2 is picked from room3 with rgripper2 by robot2, ball2 is dropped in room3 with lgripper1 by robot1, ball6 is dropped in room3 with lgripper2 by robot2, ball4 is picked from room3 with lgripper2 by robot2, ball6 is picked from room4 with rgripper2 by robot2, ball1 is picked from room2 with lgripper2 by robot1, ball7 is picked from room2 with rgripper2 by robot1, ball2 is picked from room2 with rgripper2 by robot1, ball7 is dropped in room2 with rgripper2 by robot2, ball2 is dropped in room2 with rgripper2 by robot2, ball1 is dropped in room4 with rgripper1 by robot2, ball3 is dropped in room1 with lgripper2 by robot2, ball6 is dropped in room1 with lgripper2 by robot1, robot1 moves from room1 to room4, ball7 is picked from room3 with lgripper2 by robot2, ball6 is dropped in room1 with lgripper2 by robot2, ball6 is dropped in room4 with lgripper1 by robot2, ball5 is picked from room3 with rgripper2 by robot2, ball2 is dropped in room2 with lgripper2 by robot1, ball4 is picked from room3 with rgripper2 by robot1, ball2 is picked from room2 with rgripper1 by robot1, ball7 is picked from room1 with rgripper2 by robot2, ball1 is dropped in room3 with rgripper2 by robot1, ball4 is picked from room4 with lgripper1 by robot1, ball3 is picked from room3 with lgripper1 by robot1, ball3 is picked from room1 with lgripper2 by robot1, ball1 is dropped in room3 with rgripper1 by robot2, robot1 moves from room4 to room3, ball3 is dropped in room1 with rgripper2 by robot1, ball3 is picked from room4 with rgripper1 by robot2, ball5 is picked from room3 with lgripper1 by robot2, ball1 is picked from room2 with rgripper2 by robot1, ball3 is picked from room3 with lgripper1 by robot2, ball4 is picked from room4 with rgripper2 by robot2, ball2 is picked from room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper1 by robot2, ball3 is dropped in room4 with rgripper2 by robot1, ball4 is dropped in room4 with rgripper1 by robot2, ball1 is dropped in room3 with lgripper1 by robot2, ball7 is dropped in room1 with lgripper2 by robot1, ball2 is dropped in room2 with rgripper1 by robot2, ball7 is picked from room2 with lgripper1 by robot2, ball7 is dropped in room2 with lgripper1 by robot2, ball2 is picked from room3 with lgripper1 by robot1, ball1 is dropped in room1 with rgripper2 by robot2, ball7 is dropped in room3 with rgripper1 by robot2, ball1 is dropped in room4 with lgripper1 by robot1, ball3 is picked from room2 with rgripper2 by robot1, ball2 is picked from room4 with rgripper1 by robot1, ball5 is dropped in room2 with rgripper2 by robot1, ball1 is dropped in room4 with lgripper1 by robot2, ball4 is dropped in room1 with lgripper1 by robot1, ball4 is picked from room2 with lgripper1 by robot1, ball6 is dropped in room1 with rgripper2 by robot1, ball7 is dropped in room4 with lgripper2 by robot2, ball5 is dropped in room1 with rgripper2 by robot1, ball4 is dropped in room1 with rgripper1 by robot2, ball2 is dropped in room4 with rgripper2 by robot2, ball5 is picked from room2 with lgripper1 by robot2, ball5 is picked from room1 with lgripper2 by robot1, ball6 is dropped in room1 with lgripper1 by robot1, ball3 is dropped in room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper2 by robot2, ball5 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room4 with lgripper2 by robot2, ball3 is picked from room4 with lgripper1 by robot1, ball3 is picked from room1 with lgripper1 by robot1, ball4 is dropped in room3 with rgripper2 by robot1, ball6 is dropped in room1 with rgripper1 by robot1, ball1 is dropped in room2 with lgripper1 by robot1, ball3 is picked from room2 with rgripper2 by robot2, ball7 is picked from room1 with lgripper2 by robot2, ball5 is dropped in room3 with rgripper2 by robot2, ball6 is picked from room3 with rgripper2 by robot2, ball4 is dropped in room1 with lgripper1 by robot2, ball1 is picked from room1 with rgripper2 by robot1, ball5 is dropped in room2 with lgripper2 by robot1, ball2 is dropped in room1 with lgripper1 by robot2, ball6 is dropped in room4 with rgripper1 by robot2, ball1 is dropped in room4 with lgripper2 by robot1, ball5 is dropped in room3 with lgripper2 by robot2, ball7 is dropped in room4 with rgripper2 by robot1, ball5 is picked from room3 with rgripper1 by robot2, ball1 is picked from room1 with lgripper1 by robot2, ball7 is dropped in room2 with rgripper2 by robot1, ball6 is picked from room2 with lgripper2 by robot1, ball4 is dropped in room2 with lgripper2 by robot2, ball2 is dropped in room1 with lgripper1 by robot1, ball4 is dropped in room3 with lgripper2 by robot2, ball5 is picked from room3 with rgripper2 by robot1, ball1 is dropped in room4 with lgripper2 by robot2, ball1 is picked from room4 with lgripper2 by robot1, ball5 is picked from room1 with rgripper2 by robot1, ball3 is dropped in room3 with rgripper2 by robot2, ball3 is picked from room1 with lgripper2 by robot2, ball2 is picked from room1 with rgripper1 by robot2, ball1 is picked from room2 with lgripper1 by robot2, ball3 is picked from room2 with lgripper2 by robot1, ball7 is dropped in room1 with lgripper1 by robot1, ball6 is dropped in room1 with rgripper1 by robot2, ball1 is dropped in room1 with rgripper2 by robot1, ball6 is picked from room3 with rgripper1 by robot1, ball3 is picked from room4 with rgripper2 by robot1, ball7 is dropped in room3 with lgripper1 by robot2, ball7 is dropped in room1 with lgripper2 by robot2, ball5 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot2, ball2 is picked from room1 with rgripper2 by robot1, ball6 is picked from room4 with lgripper2 by robot2, ball6 is picked from room4 with lgripper1 by robot2, ball3 is dropped in room3 with rgripper2 by robot1, ball7 is picked from room2 with lgripper2 by robot1, ball2 is picked from room3 with lgripper1 by robot2, ball2 is picked from room3 with lgripper2 by robot1, ball2 is picked from room4 with rgripper2 by robot1, ball2 is picked from room3 with rgripper1 by robot2, ball3 is dropped in room3 with rgripper1 by robot2, ball2 is dropped in room4 with lgripper1 by robot2, ball1 is dropped in room2 with lgripper2 by robot1, ball6 is picked from room1 with lgripper1 by robot2, ball6 is dropped in room4 with lgripper1 by robot1, ball1 is picked from room4 with rgripper1 by robot2, ball3 is dropped in room3 with lgripper1 by robot2, ball7 is picked from room4 with rgripper1 by robot2, ball6 is picked from room1 with rgripper2 by robot1, ball5 is dropped in room1 with lgripper2 by robot2, ball5 is dropped in room4 with lgripper2 by robot2, ball1 is dropped in room2 with rgripper1 by robot2, ball7 is picked from room4 with lgripper2 by robot1, ball5 is dropped in room2 with rgripper1 by robot2, ball5 is dropped in room3 with lgripper1 by robot2, ball3 is picked from room4 with rgripper2 by robot2, ball5 is picked from room1 with lgripper2 by robot2, ball4 is dropped in room3 with lgripper1 by robot2, ball6 is picked from room2 with rgripper1 by robot1, ball7 is picked from room3 with rgripper2 by robot1, ball7 is picked from room4 with lgripper2 by robot2, ball2 is picked from room2 with lgripper2 by robot1, ball1 is dropped in room4 with rgripper2 by robot2, ball6 is dropped in room3 with lgripper1 by robot2, ball5 is dropped in room4 with rgripper1 by robot1, ball4 is picked from room1 with lgripper1 by robot1, ball4 is picked from room3 with rgripper2 by robot2, ball7 is dropped in room1 with rgripper2 by robot1, ball6 is picked from room4 with rgripper2 by robot1, ball7 is dropped in room2 with lgripper2 by robot1, ball1 is dropped in room1 with rgripper1 by robot1, ball2 is dropped in room3 with lgripper2 by robot2, ball1 is dropped in room2 with lgripper2 by robot2, ball2 is picked from room2 with lgripper1 by robot2, ball7 is picked from room2 with lgripper2 by robot2, ball5 is dropped in room1 with lgripper1 by robot2, ball2 is picked from room4 with lgripper1 by robot2, ball4 is picked from room4 with rgripper1 by robot1, robot2 moves from room1 to room3, ball3 is picked from room3 with rgripper2 by robot1, ball5 is picked from room3 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper2 by robot1, ball5 is picked from room4 with lgripper1 by robot2, ball2 is dropped in room1 with rgripper2 by robot2, ball7 is picked from room4 with rgripper2 by robot1, ball1 is dropped in room1 with lgripper1 by robot2, ball1 is dropped in room1 with lgripper2 by robot2, ball4 is picked from room1 with lgripper1 by robot2, ball7 is picked from room3 with rgripper2 by robot2, ball7 is dropped in room1 with rgripper2 by robot2, ball4 is picked from room1 with rgripper1 by robot1, ball2 is dropped in room4 with lgripper1 by robot1, ball2 is dropped in room1 with lgripper2 by robot1, ball4 is picked from room3 with lgripper1 by robot1, ball1 is picked from room2 with lgripper1 by robot1, ball4 is dropped in room4 with lgripper1 by robot1, ball2 is dropped in room4 with lgripper2 by robot2, ball2 is picked from room2 with rgripper2 by robot2, ball3 is picked from room4 with lgripper1 by robot2, ball2 is picked from room4 with lgripper2 by robot1, ball3 is dropped in room3 with rgripper1 by robot1, ball7 is dropped in room3 with rgripper2 by robot1, ball7 is picked from room1 with lgripper2 by robot1, robot1 moves from room3 to room4, ball4 is picked from room4 with lgripper2 by robot1, ball5 is dropped in room1 with rgripper1 by robot2, ball4 is picked from room2 with lgripper2 by robot1, ball5 is picked from room1 with rgripper1 by robot1, ball2 is picked from room3 with rgripper1 by robot1, ball7 is picked from room2 with rgripper2 by robot2, ball5 is dropped in room4 with rgripper2 by robot1, ball2 is dropped in room4 with rgripper1 by robot1, ball3 is picked from room2 with lgripper1 by robot2, ball4 is picked from room2 with rgripper2 by robot1, ball5 is dropped in room1 with rgripper1 by robot1, ball1 is picked from room3 with lgripper1 by robot2, ball1 is picked from room4 with lgripper1 by robot2, ball7 is dropped in room4 with rgripper1 by robot1, ball1 is dropped in room1 with lgripper1 by robot1, ball7 is picked from room4 with rgripper2 by robot2, ball1 is dropped in room4 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, ball7 is dropped in room3 with rgripper2 by robot2, ball6 is dropped in room2 with rgripper1 by robot2, ball1 is picked from room1 with rgripper1 by robot2, ball3 is picked from room3 with lgripper2 by robot2, robot2 moves from room3 to room4, ball7 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room3 with lgripper2 by robot2, robot1 moves from room3 to room2, ball1 is picked from room4 with lgripper2 by robot2, ball5 is dropped in room3 with lgripper2 by robot1, ball5 is picked from room2 with rgripper1 by robot2, ball7 is dropped in room2 with rgripper1 by robot1, ball6 is dropped in room4 with rgripper1 by robot1, ball4 is picked from room1 with lgripper2 by robot1, ball1 is dropped in room3 with lgripper2 by robot1, robot2 moves from room3 to room2, ball7 is dropped in room1 with rgripper1 by robot2, ball3 is picked from room1 with lgripper1 by robot2, ball5 is dropped in room4 with lgripper2 by robot1, ball5 is picked from room4 with rgripper2 by robot1, ball4 is dropped in room2 with rgripper2 by robot1, ball5 is dropped in room4 with lgripper1 by robot2, ball5 is dropped in room3 with rgripper2 by robot1, ball4 is dropped in room2 with rgripper1 by robot2, ball4 is dropped in room1 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper1 by robot1, ball6 is picked from room2 with lgripper1 by robot2, ball7 is dropped in room1 with lgripper1 by robot2, ball4 is picked from room1 with rgripper2 by robot1, ball2 is dropped in room2 with lgripper1 by robot2, ball5 is dropped in room3 with rgripper1 by robot1, ball5 is picked from room1 with lgripper1 by robot2, ball4 is picked from room4 with lgripper2 by robot2, robot1 moves from room1 to room3, ball7 is picked from room1 with rgripper2 by robot1, ball1 is picked from room3 with lgripper2 by robot1, ball7 is dropped in room4 with lgripper2 by robot1, ball1 is picked from room1 with lgripper1 by robot1, ball4 is dropped in room4 with rgripper2 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball2 is dropped in room1 with rgripper1 by robot1, ball7 is dropped in room3 with lgripper1 by robot1, ball2 is picked from room2 with lgripper1 by robot1, ball4 is picked from room3 with rgripper1 by robot2, ball6 is picked from room3 with lgripper2 by robot1, ball1 is picked from room2 with rgripper1 by robot2, ball6 is dropped in room2 with rgripper2 by robot1, ball4 is dropped in room2 with lgripper1 by robot2, ball2 is dropped in room3 with rgripper1 by robot2, robot1 moves from room4 to room2, ball3 is picked from room2 with lgripper2 by robot2, ball5 is dropped in room2 with lgripper2 by robot2, ball7 is picked from room1 with rgripper1 by robot2, ball2 is dropped in room2 with rgripper1 by robot1, ball3 is dropped in room1 with rgripper2 by robot2, robot2 moves from room2 to room4, ball4 is dropped in room1 with lgripper2 by robot2, ball3 is picked from room3 with rgripper2 by robot2, ball3 is picked from room3 with rgripper1 by robot1, ball2 is picked from room1 with lgripper2 by robot1, ball6 is dropped in room2 with lgripper2 by robot1, ball3 is dropped in room4 with rgripper2 by robot2, ball4 is picked from room1 with lgripper2 by robot2, ball7 is dropped in room4 with rgripper1 by robot2, ball6 is picked from room1 with lgripper2 by robot1, ball4 is dropped in room4 with rgripper2 by robot2, ball7 is picked from room4 with rgripper1 by robot1, ball3 is picked from room4 with lgripper2 by robot2, ball3 is dropped in room1 with rgripper1 by robot2, ball5 is dropped in room1 with rgripper2 by robot2, ball2 is picked from room1 with rgripper2 by robot2, ball3 is dropped in room1 with lgripper1 by robot2, ball7 is picked from room2 with lgripper1 by robot1, ball5 is picked from room4 with lgripper1 by robot1, ball4 is dropped in room2 with rgripper1 by robot1, ball7 is picked from room1 with rgripper1 by robot1, ball4 is picked from room4 with rgripper1 by robot2, ball5 is picked from room2 with rgripper2 by robot1, ball3 is picked from room4 with rgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot2, ball2 is dropped in room4 with lgripper2 by robot1, ball6 is picked from room2 with lgripper2 by robot2, ball4 is dropped in room4 with lgripper2 by robot1, ball5 is picked from room3 with lgripper1 by robot1, ball5 is picked from room2 with rgripper2 by robot2, ball2 is dropped in room3 with rgripper2 by robot1, ball1 is dropped in room1 with lgripper2 by robot1, robot2 moves from room2 to room3, ball6 is picked from room3 with lgripper2 by robot2, ball7 is dropped in room3 with rgripper1 by robot1, ball1 is picked from room3 with rgripper1 by robot1, ball3 is picked from room4 with lgripper2 by robot1, ball7 is dropped in room4 with rgripper2 by robot2, ball1 is dropped in room2 with rgripper1 by robot1, ball2 is dropped in room4 with rgripper2 by robot1, ball6 is picked from room1 with rgripper1 by robot2, ball6 is picked from room1 with lgripper2 by robot2, ball1 is picked from room2 with lgripper2 by robot2, ball6 is picked from room2 with rgripper2 by robot1, ball1 is dropped in room3 with lgripper1 by robot1, ball1 is dropped in room2 with rgripper2 by robot2, ball7 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1 and ball1 is picked from room2 with rgripper2 by robot2", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "19881724-5bda-402f-9c82-8702d41ddf2a", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "19bc4fe9-d60e-498b-887f-81522209f18e", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball7 is dropped in room4 with rgripper2 by robot1, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "ball7 is dropped in room4 with rgripper2 by robot1", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "2baba1b8-19c6-42e6-ad48-1ed9fa59a460", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball5 is picked from room2 with lgripper1 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "ball5 is picked from room2 with lgripper1 by robot2", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "0068214b-4fc8-4f3e-944c-9a3ebf2236c1", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball7 is picked from room2 with rgripper1 by robot1, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "ball7 is picked from room2 with rgripper1 by robot1", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "02d315b7-caa6-4bde-8230-2c1185b91aec", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball4 is picked from room4 with rgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "54217772-a6fa-4c3e-a140-fd04b4141c81", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "d6af67e6-4efb-4c7b-89f8-c2b27665f7b1", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is picked from room2 with rgripper1 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "1161583b-4b30-43ec-98d7-c3a125303888", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, ball7 is dropped in room3 with rgripper2 by robot2 and ball7 is dropped in room3 with lgripper1 by robot1. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "df288698-a336-4717-baee-23d0b78bb29e", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 19 the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball3 is picked from room1 with lgripper1 by robot2, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1. Is the action: ball3 is picked from room1 with lgripper1 by robot2 executable at step 15, True or False?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "7cbd4220-0348-41f0-9e16-c4169c465994", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 19 the following actions are planned to be performed: robot2 moves from room3 to room2, ball6 is dropped in room4 with rgripper1 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1. Is the action: ball6 is dropped in room4 with rgripper1 by robot2 executable at step 2, True or False?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "36a5908e-a0fa-44a8-aa39-934078338c38", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 19 the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1. Is the action: ball3 is picked from room1 with lgripper1 by robot1 executable at step 13, True or False?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "47857897-3943-4a82-903a-ebcea73f1424", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 19 the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball1 is dropped in room1 with lgripper2 by robot2. Is the action: ball1 is dropped in room1 with lgripper2 by robot2 executable at step 19, True or False?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "9afcba8b-5ea5-46fe-a034-227e07a4dfac", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "robot1 moves from room3 to room1, ball2 is picked from room4 with lgripper2 by robot2, ball7 is picked from room3 with lgripper1 by robot1, ball1 is picked from room3 with lgripper1 by robot1, robot2 moves from room4 to room2, robot2 moves from room4 to room1, ball2 is picked from room4 with rgripper2 by robot2, robot2 moves from room4 to room3, ball4 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room4, robot1 moves from room3 to room2 and ball5 is dropped in room3 with rgripper1 by robot1", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "820cf9a6-8293-4358-a794-24e56b95f382", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "ball1 is picked from room3 with rgripper1 by robot2, ball2 is dropped in room2 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, robot2 moves from room1 to room4, ball1 is dropped in room2 with lgripper1 by robot2, ball6 is dropped in room2 with lgripper1 by robot2, ball6 is dropped in room3 with rgripper1 by robot2, ball1 is picked from room1 with rgripper1 by robot1, ball7 is picked from room4 with lgripper1 by robot2, ball1 is dropped in room3 with rgripper2 by robot2, ball1 is dropped in room3 with lgripper2 by robot2, ball4 is picked from room4 with rgripper2 by robot1, ball4 is dropped in room2 with lgripper2 by robot1, ball4 is dropped in room2 with rgripper2 by robot2, ball4 is picked from room3 with lgripper1 by robot2, ball4 is picked from room1 with rgripper1 by robot2, robot2 moves from room1 to room2, ball4 is picked from room3 with lgripper2 by robot1, ball3 is dropped in room2 with rgripper1 by robot2, ball5 is dropped in room2 with lgripper1 by robot2, ball2 is dropped in room4 with rgripper1 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, ball5 is dropped in room2 with rgripper1 by robot1, ball5 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with lgripper1 by robot2, ball3 is picked from room1 with rgripper2 by robot1, ball6 is dropped in room4 with lgripper2 by robot1, ball5 is picked from room4 with lgripper2 by robot2, ball1 is picked from room3 with rgripper2 by robot1, ball7 is picked from room2 with rgripper1 by robot2, ball6 is picked from room2 with rgripper1 by robot2, ball4 is picked from room3 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot2, ball5 is picked from room4 with rgripper1 by robot1, ball3 is dropped in room4 with lgripper2 by robot1, ball3 is dropped in room3 with lgripper2 by robot1, ball3 is dropped in room4 with lgripper2 by robot2, ball7 is dropped in room2 with lgripper1 by robot1, ball2 is picked from room1 with rgripper1 by robot1, ball2 is dropped in room1 with rgripper2 by robot1, ball6 is picked from room3 with rgripper1 by robot2, ball4 is dropped in room1 with lgripper2 by robot1, ball7 is dropped in room2 with lgripper2 by robot2, ball6 is dropped in room3 with rgripper1 by robot1, robot1 moves from room4 to room1, ball6 is dropped in room4 with lgripper2 by robot2, ball6 is picked from room4 with lgripper1 by robot1, ball7 is dropped in room4 with lgripper1 by robot2, ball3 is dropped in room2 with rgripper2 by robot1, ball3 is dropped in room1 with lgripper2 by robot1, ball6 is picked from room4 with rgripper1 by robot1, ball2 is picked from room1 with lgripper2 by robot2, ball7 is picked from room3 with lgripper2 by robot1, ball1 is picked from room4 with rgripper2 by robot1, ball6 is picked from room4 with rgripper1 by robot2, ball5 is picked from room3 with lgripper2 by robot1, ball7 is picked from room3 with rgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, ball4 is picked from room1 with rgripper2 by robot2, ball1 is picked from room4 with rgripper2 by robot2, ball2 is picked from room3 with rgripper2 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room3 with rgripper1 by robot1, ball7 is dropped in room4 with lgripper1 by robot1, ball6 is dropped in room4 with rgripper2 by robot2, ball6 is dropped in room1 with lgripper1 by robot2, ball6 is dropped in room3 with rgripper2 by robot2, ball5 is dropped in room2 with lgripper1 by robot1, ball6 is dropped in room3 with lgripper1 by robot1, ball5 is picked from room1 with rgripper2 by robot2, ball3 is picked from room2 with rgripper1 by robot2, ball1 is picked from room1 with lgripper2 by robot2, ball5 is picked from room1 with rgripper1 by robot2, ball3 is dropped in room4 with rgripper1 by robot1, ball5 is picked from room4 with rgripper2 by robot2, ball2 is dropped in room3 with rgripper1 by robot1, ball5 is picked from room2 with lgripper2 by robot1, ball2 is picked from room4 with rgripper1 by robot2, ball6 is dropped in room3 with lgripper2 by robot1, ball3 is dropped in room2 with lgripper2 by robot2, ball6 is dropped in room3 with rgripper2 by robot1, ball5 is dropped in room3 with rgripper1 by robot2, robot1 moves from room1 to room2, ball7 is picked from room3 with rgripper1 by robot2, ball5 is dropped in room1 with lgripper2 by robot1, ball6 is dropped in room4 with rgripper2 by robot1, ball5 is picked from room2 with lgripper1 by robot1, ball1 is picked from room4 with rgripper1 by robot1, ball6 is dropped in room2 with lgripper2 by robot2, ball2 is dropped in room3 with lgripper1 by robot2, ball3 is dropped in room4 with rgripper1 by robot2, ball2 is dropped in room2 with rgripper2 by robot1, ball6 is picked from room1 with rgripper2 by robot2, ball6 is picked from room1 with lgripper1 by robot1, ball5 is picked from room4 with lgripper2 by robot1, ball3 is dropped in room2 with rgripper1 by robot1, ball5 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, ball6 is dropped in room2 with rgripper2 by robot2, ball5 is dropped in room3 with lgripper1 by robot1, ball7 is picked from room1 with lgripper1 by robot2, ball4 is dropped in room3 with lgripper2 by robot1, ball6 is picked from room2 with lgripper1 by robot1, ball4 is dropped in room2 with lgripper1 by robot1, ball6 is dropped in room1 with rgripper2 by robot2, ball1 is picked from room3 with rgripper2 by robot2, ball1 is picked from room3 with lgripper2 by robot2, ball2 is dropped in room1 with rgripper1 by robot2, ball4 is dropped in room3 with rgripper1 by robot2, ball4 is dropped in room4 with rgripper1 by robot1, ball6 is picked from room2 with rgripper2 by robot2, ball1 is dropped in room1 with rgripper1 by robot2, ball3 is dropped in room3 with lgripper1 by robot1, ball2 is dropped in room2 with lgripper2 by robot2, ball6 is dropped in room2 with rgripper1 by robot1, ball2 is dropped in room1 with lgripper2 by robot2, ball3 is dropped in room4 with lgripper1 by robot2, ball3 is dropped in room4 with lgripper1 by robot1, ball1 is dropped in room2 with rgripper2 by robot1, ball3 is dropped in room1 with rgripper1 by robot1, ball7 is picked from room4 with lgripper1 by robot1, ball3 is picked from room2 with rgripper1 by robot1, ball5 is dropped in room4 with rgripper1 by robot2, ball1 is picked from room4 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot2, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room3 with rgripper2 by robot1, ball7 is dropped in room3 with lgripper2 by robot2, ball7 is dropped in room3 with lgripper2 by robot1, ball1 is picked from room2 with rgripper1 by robot1, ball1 is dropped in room4 with rgripper2 by robot1, ball1 is picked from room1 with rgripper2 by robot2, ball3 is picked from room2 with lgripper1 by robot1, ball2 is dropped in room3 with lgripper2 by robot1, ball5 is picked from room4 with rgripper1 by robot2, ball2 is picked from room2 with lgripper2 by robot2, robot2 moves from room3 to room1, ball7 is dropped in room2 with rgripper1 by robot2, ball6 is picked from room4 with lgripper2 by robot1, ball7 is picked from room3 with lgripper1 by robot2, ball3 is picked from room3 with rgripper1 by robot2, ball6 is picked from room3 with lgripper1 by robot1, ball5 is dropped in room4 with rgripper2 by robot2, ball2 is picked from room2 with rgripper1 by robot2, ball3 is dropped in room2 with lgripper1 by robot1, ball5 is dropped in room1 with lgripper1 by robot1, ball5 is picked from room2 with rgripper1 by robot1, ball1 is dropped in room3 with rgripper1 by robot1, ball3 is dropped in room2 with rgripper2 by robot2, ball5 is dropped in room2 with rgripper2 by robot2, ball4 is dropped in room4 with lgripper1 by robot2, robot1 moves from room2 to room3, robot2 moves from room2 to room1, ball4 is picked from room2 with rgripper2 by robot2, ball2 is dropped in room3 with rgripper2 by robot2, ball1 is picked from room1 with lgripper2 by robot1, ball4 is picked from room4 with lgripper1 by robot2, ball4 is dropped in room3 with lgripper1 by robot1, ball4 is picked from room2 with lgripper2 by robot2, ball4 is dropped in room1 with rgripper2 by robot1, ball3 is picked from room3 with lgripper2 by robot1, ball2 is picked from room3 with rgripper2 by robot2, ball2 is dropped in room3 with lgripper1 by robot1, ball6 is dropped in room3 with lgripper2 by robot2, ball4 is picked from room3 with lgripper2 by robot2, ball6 is picked from room4 with rgripper2 by robot2, ball1 is picked from room2 with lgripper2 by robot1, ball7 is picked from room2 with rgripper2 by robot1, ball2 is picked from room2 with rgripper2 by robot1, ball7 is dropped in room2 with rgripper2 by robot2, ball2 is dropped in room2 with rgripper2 by robot2, ball1 is dropped in room4 with rgripper1 by robot2, ball3 is dropped in room1 with lgripper2 by robot2, ball6 is dropped in room1 with lgripper2 by robot1, robot1 moves from room1 to room4, ball7 is picked from room3 with lgripper2 by robot2, ball6 is dropped in room1 with lgripper2 by robot2, ball6 is dropped in room4 with lgripper1 by robot2, ball5 is picked from room3 with rgripper2 by robot2, ball2 is dropped in room2 with lgripper2 by robot1, ball4 is picked from room3 with rgripper2 by robot1, ball2 is picked from room2 with rgripper1 by robot1, ball7 is picked from room1 with rgripper2 by robot2, ball1 is dropped in room3 with rgripper2 by robot1, ball4 is picked from room4 with lgripper1 by robot1, ball3 is picked from room3 with lgripper1 by robot1, ball3 is picked from room1 with lgripper2 by robot1, ball1 is dropped in room3 with rgripper1 by robot2, robot1 moves from room4 to room3, ball3 is dropped in room1 with rgripper2 by robot1, ball3 is picked from room4 with rgripper1 by robot2, ball5 is picked from room3 with lgripper1 by robot2, ball1 is picked from room2 with rgripper2 by robot1, ball3 is picked from room3 with lgripper1 by robot2, ball4 is picked from room4 with rgripper2 by robot2, ball2 is picked from room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper1 by robot2, ball3 is dropped in room4 with rgripper2 by robot1, ball4 is dropped in room4 with rgripper1 by robot2, ball1 is dropped in room3 with lgripper1 by robot2, ball7 is dropped in room1 with lgripper2 by robot1, ball2 is dropped in room2 with rgripper1 by robot2, ball7 is picked from room2 with lgripper1 by robot2, ball7 is dropped in room2 with lgripper1 by robot2, ball2 is picked from room3 with lgripper1 by robot1, ball1 is dropped in room1 with rgripper2 by robot2, ball7 is dropped in room3 with rgripper1 by robot2, ball1 is dropped in room4 with lgripper1 by robot1, ball3 is picked from room2 with rgripper2 by robot1, ball2 is picked from room4 with rgripper1 by robot1, ball5 is dropped in room2 with rgripper2 by robot1, ball1 is dropped in room4 with lgripper1 by robot2, ball4 is dropped in room1 with lgripper1 by robot1, ball4 is picked from room2 with lgripper1 by robot1, ball6 is dropped in room1 with rgripper2 by robot1, ball7 is dropped in room4 with lgripper2 by robot2, ball5 is dropped in room1 with rgripper2 by robot1, ball4 is dropped in room1 with rgripper1 by robot2, ball2 is dropped in room4 with rgripper2 by robot2, ball5 is picked from room2 with lgripper1 by robot2, ball5 is picked from room1 with lgripper2 by robot1, ball6 is dropped in room1 with lgripper1 by robot1, ball3 is dropped in room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper2 by robot2, ball5 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room4 with lgripper2 by robot2, ball3 is picked from room4 with lgripper1 by robot1, ball3 is picked from room1 with lgripper1 by robot1, ball4 is dropped in room3 with rgripper2 by robot1, ball6 is dropped in room1 with rgripper1 by robot1, ball1 is dropped in room2 with lgripper1 by robot1, ball3 is picked from room2 with rgripper2 by robot2, ball7 is picked from room1 with lgripper2 by robot2, ball5 is dropped in room3 with rgripper2 by robot2, ball6 is picked from room3 with rgripper2 by robot2, ball4 is dropped in room1 with lgripper1 by robot2, ball1 is picked from room1 with rgripper2 by robot1, ball5 is dropped in room2 with lgripper2 by robot1, ball2 is dropped in room1 with lgripper1 by robot2, ball6 is dropped in room4 with rgripper1 by robot2, ball1 is dropped in room4 with lgripper2 by robot1, ball5 is dropped in room3 with lgripper2 by robot2, ball7 is dropped in room4 with rgripper2 by robot1, ball5 is picked from room3 with rgripper1 by robot2, ball1 is picked from room1 with lgripper1 by robot2, ball7 is dropped in room2 with rgripper2 by robot1, ball6 is picked from room2 with lgripper2 by robot1, ball4 is dropped in room2 with lgripper2 by robot2, ball2 is dropped in room1 with lgripper1 by robot1, ball4 is dropped in room3 with lgripper2 by robot2, ball5 is picked from room3 with rgripper2 by robot1, ball1 is dropped in room4 with lgripper2 by robot2, ball1 is picked from room4 with lgripper2 by robot1, ball5 is picked from room1 with rgripper2 by robot1, ball3 is dropped in room3 with rgripper2 by robot2, ball3 is picked from room1 with lgripper2 by robot2, ball2 is picked from room1 with rgripper1 by robot2, ball1 is picked from room2 with lgripper1 by robot2, ball3 is picked from room2 with lgripper2 by robot1, ball7 is dropped in room1 with lgripper1 by robot1, ball6 is dropped in room1 with rgripper1 by robot2, ball1 is dropped in room1 with rgripper2 by robot1, robot1 moves from room2 to room4, ball6 is picked from room3 with rgripper1 by robot1, ball3 is picked from room4 with rgripper2 by robot1, ball7 is dropped in room3 with lgripper1 by robot2, ball7 is dropped in room1 with lgripper2 by robot2, ball5 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot2, ball2 is picked from room1 with rgripper2 by robot1, ball6 is picked from room4 with lgripper2 by robot2, ball6 is picked from room4 with lgripper1 by robot2, ball3 is dropped in room3 with rgripper2 by robot1, ball7 is picked from room2 with lgripper2 by robot1, ball2 is picked from room3 with lgripper1 by robot2, ball2 is picked from room3 with lgripper2 by robot1, ball2 is picked from room4 with rgripper2 by robot1, ball2 is picked from room3 with rgripper1 by robot2, ball3 is dropped in room3 with rgripper1 by robot2, ball2 is dropped in room4 with lgripper1 by robot2, ball1 is dropped in room2 with lgripper2 by robot1, ball6 is picked from room1 with lgripper1 by robot2, ball6 is dropped in room4 with lgripper1 by robot1, ball1 is picked from room4 with rgripper1 by robot2, ball3 is dropped in room3 with lgripper1 by robot2, ball7 is picked from room4 with rgripper1 by robot2, ball6 is picked from room1 with rgripper2 by robot1, ball5 is dropped in room1 with lgripper2 by robot2, ball5 is dropped in room4 with lgripper2 by robot2, ball1 is dropped in room2 with rgripper1 by robot2, ball7 is picked from room4 with lgripper2 by robot1, ball5 is dropped in room2 with rgripper1 by robot2, ball5 is dropped in room3 with lgripper1 by robot2, ball3 is picked from room4 with rgripper2 by robot2, ball5 is picked from room1 with lgripper2 by robot2, ball4 is dropped in room3 with lgripper1 by robot2, ball6 is picked from room2 with rgripper1 by robot1, ball7 is picked from room3 with rgripper2 by robot1, ball7 is picked from room4 with lgripper2 by robot2, ball2 is picked from room2 with lgripper2 by robot1, ball1 is dropped in room4 with rgripper2 by robot2, ball6 is dropped in room3 with lgripper1 by robot2, ball5 is dropped in room4 with rgripper1 by robot1, ball4 is picked from room1 with lgripper1 by robot1, ball4 is picked from room3 with rgripper2 by robot2, ball7 is dropped in room1 with rgripper2 by robot1, ball6 is picked from room4 with rgripper2 by robot1, ball7 is dropped in room2 with lgripper2 by robot1, ball1 is dropped in room1 with rgripper1 by robot1, ball2 is dropped in room3 with lgripper2 by robot2, ball1 is dropped in room2 with lgripper2 by robot2, ball2 is picked from room2 with lgripper1 by robot2, ball7 is picked from room2 with lgripper2 by robot2, ball5 is dropped in room1 with lgripper1 by robot2, ball2 is picked from room4 with lgripper1 by robot2, ball4 is picked from room4 with rgripper1 by robot1, robot2 moves from room1 to room3, ball3 is picked from room3 with rgripper2 by robot1, ball5 is picked from room3 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper2 by robot1, ball5 is picked from room4 with lgripper1 by robot2, ball2 is dropped in room1 with rgripper2 by robot2, ball7 is picked from room4 with rgripper2 by robot1, ball1 is dropped in room1 with lgripper1 by robot2, ball1 is dropped in room1 with lgripper2 by robot2, ball4 is picked from room1 with lgripper1 by robot2, ball7 is picked from room3 with rgripper2 by robot2, ball7 is dropped in room1 with rgripper2 by robot2, ball4 is picked from room1 with rgripper1 by robot1, ball2 is dropped in room4 with lgripper1 by robot1, ball2 is dropped in room1 with lgripper2 by robot1, ball1 is picked from room2 with lgripper1 by robot1, ball4 is dropped in room4 with lgripper1 by robot1, ball2 is dropped in room4 with lgripper2 by robot2, ball2 is picked from room2 with rgripper2 by robot2, ball3 is picked from room4 with lgripper1 by robot2, ball2 is picked from room4 with lgripper2 by robot1, ball3 is dropped in room3 with rgripper1 by robot1, ball7 is dropped in room3 with rgripper2 by robot1, ball7 is picked from room1 with lgripper2 by robot1, ball4 is picked from room4 with lgripper2 by robot1, ball5 is dropped in room1 with rgripper1 by robot2, ball4 is picked from room2 with lgripper2 by robot1, ball5 is picked from room1 with rgripper1 by robot1, ball2 is picked from room3 with rgripper1 by robot1, ball7 is picked from room2 with rgripper2 by robot2, ball5 is dropped in room4 with rgripper2 by robot1, ball2 is dropped in room4 with rgripper1 by robot1, ball3 is picked from room2 with lgripper1 by robot2, ball4 is picked from room2 with rgripper2 by robot1, ball5 is dropped in room1 with rgripper1 by robot1, ball1 is picked from room3 with lgripper1 by robot2, ball1 is picked from room4 with lgripper1 by robot2, ball7 is dropped in room4 with rgripper1 by robot1, ball1 is dropped in room1 with lgripper1 by robot1, ball7 is picked from room4 with rgripper2 by robot2, ball1 is dropped in room4 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, ball7 is dropped in room3 with rgripper2 by robot2, ball6 is dropped in room2 with rgripper1 by robot2, ball1 is picked from room1 with rgripper1 by robot2, ball3 is picked from room3 with lgripper2 by robot2, robot2 moves from room3 to room4, ball7 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room3 with lgripper2 by robot2, ball1 is picked from room4 with lgripper2 by robot2, ball5 is dropped in room3 with lgripper2 by robot1, ball5 is picked from room2 with rgripper1 by robot2, ball7 is dropped in room2 with rgripper1 by robot1, ball6 is dropped in room4 with rgripper1 by robot1, ball4 is picked from room1 with lgripper2 by robot1, ball1 is dropped in room3 with lgripper2 by robot1, robot2 moves from room3 to room2, ball7 is dropped in room1 with rgripper1 by robot2, ball3 is picked from room1 with lgripper1 by robot2, ball5 is dropped in room4 with lgripper2 by robot1, ball5 is picked from room4 with rgripper2 by robot1, ball4 is dropped in room2 with rgripper2 by robot1, ball5 is dropped in room4 with lgripper1 by robot2, ball5 is dropped in room3 with rgripper2 by robot1, ball4 is dropped in room2 with rgripper1 by robot2, ball4 is dropped in room1 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper1 by robot1, ball6 is picked from room2 with lgripper1 by robot2, ball7 is dropped in room1 with lgripper1 by robot2, ball4 is picked from room1 with rgripper2 by robot1, ball2 is dropped in room2 with lgripper1 by robot2, ball5 is picked from room1 with lgripper1 by robot2, ball4 is picked from room4 with lgripper2 by robot2, robot1 moves from room1 to room3, ball7 is picked from room1 with rgripper2 by robot1, ball1 is picked from room3 with lgripper2 by robot1, ball7 is dropped in room4 with lgripper2 by robot1, ball1 is picked from room1 with lgripper1 by robot1, ball4 is dropped in room4 with rgripper2 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball2 is dropped in room1 with rgripper1 by robot1, ball7 is dropped in room3 with lgripper1 by robot1, ball2 is picked from room2 with lgripper1 by robot1, ball4 is picked from room3 with rgripper1 by robot2, ball6 is picked from room3 with lgripper2 by robot1, ball1 is picked from room2 with rgripper1 by robot2, ball6 is dropped in room2 with rgripper2 by robot1, ball4 is dropped in room2 with lgripper1 by robot2, ball2 is dropped in room3 with rgripper1 by robot2, robot1 moves from room4 to room2, ball3 is picked from room2 with lgripper2 by robot2, ball5 is dropped in room2 with lgripper2 by robot2, ball7 is picked from room1 with rgripper1 by robot2, ball2 is dropped in room2 with rgripper1 by robot1, ball3 is dropped in room1 with rgripper2 by robot2, robot2 moves from room2 to room4, ball4 is dropped in room1 with lgripper2 by robot2, ball3 is picked from room3 with rgripper2 by robot2, ball3 is picked from room3 with rgripper1 by robot1, ball2 is picked from room1 with lgripper2 by robot1, ball6 is dropped in room2 with lgripper2 by robot1, ball3 is dropped in room4 with rgripper2 by robot2, ball4 is picked from room1 with lgripper2 by robot2, ball7 is dropped in room4 with rgripper1 by robot2, ball6 is picked from room1 with lgripper2 by robot1, ball4 is dropped in room4 with rgripper2 by robot2, ball7 is picked from room4 with rgripper1 by robot1, ball3 is picked from room4 with lgripper2 by robot2, ball3 is dropped in room1 with rgripper1 by robot2, ball5 is dropped in room1 with rgripper2 by robot2, ball2 is picked from room1 with rgripper2 by robot2, ball3 is dropped in room1 with lgripper1 by robot2, ball7 is picked from room2 with lgripper1 by robot1, ball5 is picked from room4 with lgripper1 by robot1, ball4 is dropped in room2 with rgripper1 by robot1, ball7 is picked from room1 with rgripper1 by robot1, ball4 is picked from room4 with rgripper1 by robot2, ball5 is picked from room2 with rgripper2 by robot1, ball3 is picked from room4 with rgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot2, ball2 is dropped in room4 with lgripper2 by robot1, ball6 is picked from room2 with lgripper2 by robot2, ball4 is dropped in room4 with lgripper2 by robot1, ball5 is picked from room3 with lgripper1 by robot1, ball5 is picked from room2 with rgripper2 by robot2, ball2 is dropped in room3 with rgripper2 by robot1, ball1 is dropped in room1 with lgripper2 by robot1, robot2 moves from room2 to room3, ball6 is picked from room3 with lgripper2 by robot2, ball7 is dropped in room3 with rgripper1 by robot1, ball1 is picked from room3 with rgripper1 by robot1, ball3 is picked from room4 with lgripper2 by robot1, ball7 is dropped in room4 with rgripper2 by robot2, ball1 is dropped in room2 with rgripper1 by robot1, ball2 is dropped in room4 with rgripper2 by robot1, ball6 is picked from room1 with rgripper1 by robot2, ball6 is picked from room1 with lgripper2 by robot2, ball1 is picked from room2 with lgripper2 by robot2, ball6 is picked from room2 with rgripper2 by robot1, ball1 is dropped in room3 with lgripper1 by robot1, ball1 is dropped in room2 with rgripper2 by robot2, ball7 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1 and ball1 is picked from room2 with rgripper2 by robot2", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "6cf304d5-550b-4262-9cdf-06bdcead2049", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "73b9e74d-f6fc-4bb4-b081-d8f7952ac8bb", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball6 is dropped in room4 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "ball6 is dropped in room4 with rgripper2 by robot2", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "0bb25643-a386-4e49-8cc9-ec0623fb5e8c", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball3 is dropped in room1 with lgripper1 by robot1, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "ball3 is dropped in room1 with lgripper1 by robot1", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "9d743333-d8fe-448d-9ca4-1700c9a1d01a", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is picked from room2 with rgripper1 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "ball2 is picked from room2 with rgripper1 by robot2", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "639b08e1-6d19-420a-b041-d93321265765", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, if ball1 is picked from room2 with lgripper2 by robot2, is it True or False that ball1 is not at room2, lgripper2 of robot2 is not free and robot2 is carrying ball1 with lgripper2?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "dfcc1985-0cf3-49c1-93f7-8d451644db06", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, if ball1 is picked from room2 with lgripper2 by robot2, is it True or False that lgripper2 of robot2 is not free, ball1 is not at room2 and robot2 is carrying ball1 with lgripper2?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "ae7a3836-de8b-41b4-ac22-c33bd59e5d2d", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, if ball1 is picked from room2 with lgripper2 by robot2, is it True or False that robot2 is carrying ball1 with lgripper2, ball1 is not at room2 and lgripper2 of robot2 is not free?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "34c28e0f-b4cb-48a8-98c6-4762837a32ae", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, if ball1 is picked from room2 with lgripper2 by robot2, is it True or False that ball1 is not at room2, robot2 is carrying ball1 with lgripper2 and lgripper2 of robot2 is not free?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "279cff55-e540-43de-be40-beafb59985da", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, if ball1 is picked from room2 with lgripper2 by robot2, is it True or False that robot2 is carrying ball1 with lgripper2, lgripper1 of robot2 is not free and robot1 is not carrying ball7 with lgripper2?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "6d07eb3a-3373-4fb0-8208-20c1fa58f0ce", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, if ball1 is picked from room2 with lgripper2 by robot2, is it True or False that robot2 is carrying ball1 with lgripper2, ball3 is at room2 and ball1 is not at room2?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "5ae941c2-2497-4be7-82cb-4e7b5a9ff0e9", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, if ball1 is picked from room2 with lgripper2 by robot2, is it True or False that ball1 is not at room2, ball5 is at room2 and robot2 is carrying ball1 with lgripper2?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "53662359-1feb-4d7f-8533-7841fac8d4e1", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, if ball1 is picked from room2 with lgripper2 by robot2, is it True or False that robot1 is not carrying ball2 with rgripper1, robot2 is carrying ball1 with lgripper2 and ball1 is not at room2?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "d994d5a0-47bb-4cc8-8ef2-20171b35eb74", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, if ball1 is picked from room2 with lgripper2 by robot2, what would be all of the valid properties of the state? Write None if there are none.", "answer": "rgripper1 of robot1 is free, robot2 is carrying ball1 with lgripper2, lgripper1 of robot1 is free, ball5 is at room2, ball7 is at room2, ball6 is at room3, ball4 is at room2, ball2 is at room2, ball3 is at room1, robot1 is at room1, rgripper2 of robot2 is free and robot2 is at room2", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "69d98ed0-ac97-4c78-a9ed-4a80bb963f68", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, if ball1 is picked from room2 with lgripper2 by robot2, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, ball7 is not at room3, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, robot1 is not at room2, lgripper2 of robot2 is not free, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball1 is not at room2, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, ball1 is not at room3, lgripper2 of robot1 is not free, robot1 is not at room4, robot2 is not at room3, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, robot1 is not at room3, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room2, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, ball6 is not at room2, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball4 is not at room3, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot2 is not at room4, robot1 is not carrying ball5 with rgripper2, robot1 is not carrying ball4 with rgripper1, robot2 is not carrying ball4 with lgripper2, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball3 with lgripper2, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball4 with rgripper2, robot2 is not carrying ball4 with rgripper1, ball2 is not at room4, robot1 is not carrying ball5 with lgripper1, robot2 is not carrying ball2 with rgripper1, robot2 is not carrying ball3 with lgripper2 and robot2 is not carrying ball5 with rgripper1", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "79e83df1-550b-499c-a3e2-d1f321b7846f", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, if ball6 is picked from room3 with lgripper2 by robot2, is it True or False that robot2 is carrying ball6 with lgripper2, ball6 is not at room3 and lgripper2 of robot2 is not free?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "baed9be2-1110-4726-b153-4c28f4b570e7", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, if ball6 is picked from room3 with lgripper2 by robot2, is it True or False that robot2 is carrying ball6 with lgripper2, lgripper2 of robot2 is not free and ball6 is not at room3?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "5166d5f3-6f7e-4178-9e04-fc9a61d07086", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, if ball6 is picked from room3 with lgripper2 by robot2, is it True or False that lgripper2 of robot2 is not free, ball6 is not at room3 and robot2 is carrying ball6 with lgripper2?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "07e0935d-5969-4717-b3b1-3f23e4d40ace", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, if ball6 is picked from room3 with lgripper2 by robot2, is it True or False that ball6 is not at room3, lgripper2 of robot2 is not free and robot2 is carrying ball6 with lgripper2?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "519543e3-9a37-466f-9d42-0e7d25802794", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, if ball6 is picked from room3 with lgripper2 by robot2, is it True or False that robot2 is carrying ball6 with lgripper2, robot1 is at room1 and lgripper1 of robot1 is free?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "d32a17e7-8558-4e60-9056-6bf22537f68e", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, if ball6 is picked from room3 with lgripper2 by robot2, is it True or False that lgripper2 of robot2 is not free, robot2 is carrying ball6 with lgripper2 and robot2 is not carrying ball5 with rgripper2?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "38995ca7-51d9-40e3-a167-c3723785ffcd", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, if ball6 is picked from room3 with lgripper2 by robot2, is it True or False that robot1 is not carrying ball4 with rgripper1, robot2 is carrying ball6 with lgripper2 and robot2 is not carrying ball7 with lgripper2?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "52642a9a-72ba-4826-bb15-d66c3092ca77", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, if ball6 is picked from room3 with lgripper2 by robot2, is it True or False that robot1 is not carrying ball2 with rgripper2, robot2 is carrying ball6 with lgripper2 and lgripper1 of robot1 is free?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "5b0e9af6-c9cc-41a0-a6f8-da0db06b513c", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, if ball6 is picked from room3 with lgripper2 by robot2, what would be all of the valid properties of the state? Write None if there are none.", "answer": "rgripper1 of robot1 is free, ball5 is at room2, lgripper1 of robot1 is free, ball7 is at room2, robot2 is carrying ball4 with rgripper2, robot2 is at room3, robot2 is carrying ball6 with lgripper2, ball2 is at room2, ball1 is at room3, ball3 is at room1 and robot1 is at room1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "273d0e70-8e66-4539-bf35-cd444da02272", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, if ball6 is picked from room3 with lgripper2 by robot2, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, robot2 is not at room2, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, ball7 is not at room3, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, ball4 is not at room2, robot1 is not at room2, robot2 is not carrying ball1 with lgripper2, lgripper2 of robot2 is not free, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball1 is not at room2, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, lgripper2 of robot1 is not free, robot1 is not at room4, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, robot1 is not at room3, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room2, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, ball6 is not at room2, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball4 is not at room3, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot2 is not at room4, robot1 is not carrying ball5 with rgripper2, ball6 is not at room3, rgripper2 of robot2 is not free, robot1 is not carrying ball4 with rgripper1, robot2 is not carrying ball4 with lgripper2, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball3 with lgripper2, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball4 with rgripper2, robot2 is not carrying ball4 with rgripper1, ball2 is not at room4, robot1 is not carrying ball5 with lgripper1, robot2 is not carrying ball2 with rgripper1, robot2 is not carrying ball3 with lgripper2 and robot2 is not carrying ball5 with rgripper1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "d88c744a-d8a5-40a7-b3ef-ff313ee01b42", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, if robot2 moves from room2 to room4, is it True or False that robot2 is at room4 and robot2 is not at room2?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "32c4e032-8056-4852-8695-82e10f347f74", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, if robot2 moves from room2 to room4, is it True or False that robot2 is not at room2 and robot2 is at room4?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "50c0ab76-cda3-412d-91dd-da89548dc873", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, if robot2 moves from room2 to room4, is it True or False that robot2 is at room4 and rgripper2 of robot2 is free?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "6f68bd00-5f42-49ae-ac70-0f8cfd8b06ab", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, if robot2 moves from room2 to room4, is it True or False that robot2 is not carrying ball5 with rgripper1 and robot2 is at room4?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "87af0a09-19a4-4d93-be63-fcb7475e3f03", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, if robot2 moves from room2 to room4, is it True or False that robot2 is at room4 and robot2 is not carrying ball6 with lgripper2?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "aed7eb1f-ef5a-434c-804b-5ce042035385", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, if robot2 moves from room2 to room4, is it True or False that ball6 is at room3 and robot2 is at room4?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "ce683ea3-3a74-425c-b96f-6094427385c4", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, if robot2 moves from room2 to room4, what would be all of the valid properties of the state? Write None if there are none.", "answer": "rgripper1 of robot1 is free, robot2 is carrying ball2 with rgripper2, lgripper1 of robot1 is free, ball5 is at room2, ball7 is at room2, robot2 is at room4, lgripper2 of robot2 is free, ball1 is at room3, ball3 is at room1, ball4 is at room3, robot1 is at room1 and ball6 is at room2", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "c018d123-81ba-4d3c-a545-fe7102bec7cd", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, if robot2 moves from room2 to room4, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, robot2 is not at room2, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball1 with lgripper1, ball2 is not at room2, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, ball7 is not at room3, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, ball4 is not at room2, robot1 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball1 is not at room2, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, lgripper2 of robot1 is not free, robot1 is not at room4, robot2 is not at room3, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, robot1 is not at room3, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room2, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot1 is not carrying ball5 with rgripper2, ball6 is not at room3, rgripper2 of robot2 is not free, robot1 is not carrying ball4 with rgripper1, robot2 is not carrying ball4 with lgripper2, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball3 with lgripper2, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball4 with rgripper2, robot2 is not carrying ball4 with rgripper1, ball2 is not at room4, robot1 is not carrying ball5 with lgripper1, robot2 is not carrying ball2 with rgripper1, robot2 is not carrying ball3 with lgripper2 and robot2 is not carrying ball5 with rgripper1", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "cc6ceec2-4168-4ac9-8c95-ed4952f486fc", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, if ball3 is dropped in room2 with lgripper1 by robot1, is it True or False that robot1 is not carrying ball3 with lgripper1, ball3 is at room2 and lgripper1 of robot1 is free?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "fd88bcf5-32f6-4208-b011-b5f47a7e65c4", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, if ball3 is dropped in room2 with lgripper1 by robot1, is it True or False that lgripper1 of robot1 is free, ball3 is at room2 and robot1 is not carrying ball3 with lgripper1?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "3e7c56c5-79ce-4614-9469-4f7fd999a31f", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, if ball3 is dropped in room2 with lgripper1 by robot1, is it True or False that ball3 is at room2, robot1 is not carrying ball3 with lgripper1 and lgripper1 of robot1 is free?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "6df1f945-2ae7-47b6-ad54-46944f2288cf", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, if ball3 is dropped in room2 with lgripper1 by robot1, is it True or False that robot1 is not carrying ball3 with lgripper1, lgripper1 of robot1 is free and ball3 is at room2?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "1884f8c9-ac1d-4e58-9ccb-5ee63e274739", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, if ball3 is dropped in room2 with lgripper1 by robot1, is it True or False that ball3 is at room2, robot2 is not carrying ball4 with rgripper2 and lgripper1 of robot1 is free?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "1adf0342-ef52-440e-95b2-a85f28170806", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, if ball3 is dropped in room2 with lgripper1 by robot1, is it True or False that lgripper1 of robot1 is free, ball4 is not at room4 and ball6 is not at room2?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "d1f98a41-d63b-413f-8036-4fa9423fb91c", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, if ball3 is dropped in room2 with lgripper1 by robot1, is it True or False that lgripper1 of robot1 is free, ball3 is at room2 and ball2 is at room2?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "27760b6f-a22c-433f-8ee6-1576df915d10", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, if ball3 is dropped in room2 with lgripper1 by robot1, is it True or False that lgripper1 of robot1 is free, ball3 is at room2 and robot1 is not carrying ball3 with lgripper2?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "eaf8a3f8-cd12-47c6-885b-19530ab088f0", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, if ball3 is dropped in room2 with lgripper1 by robot1, what would be all of the valid properties of the state? Write None if there are none.", "answer": "ball3 is at room2, ball4 is at room3, robot1 is carrying ball5 with rgripper1, lgripper1 of robot1 is free, ball7 is at room2, robot1 is at room2, ball6 is at room2, robot2 is at room4, lgripper2 of robot2 is free, ball1 is at room3, ball2 is at room4 and rgripper2 of robot2 is free", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "58dc8706-d448-42d5-9d45-ec09e2e779c1", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, if ball3 is dropped in room2 with lgripper1 by robot1, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, robot2 is not at room2, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot1 is not at room1, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball1 with lgripper1, ball2 is not at room2, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, ball7 is not at room3, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, rgripper1 of robot1 is not free, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, ball4 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, ball3 is not at room1, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball1 is not at room2, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, lgripper2 of robot1 is not free, robot1 is not at room4, robot2 is not at room3, ball5 is not at room2, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, robot1 is not at room3, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot1 is not carrying ball5 with rgripper2, ball6 is not at room3, robot1 is not carrying ball4 with rgripper1, robot2 is not carrying ball4 with lgripper2, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball3 with lgripper2, robot1 is not carrying ball4 with rgripper2, robot2 is not carrying ball4 with rgripper1, robot1 is not carrying ball5 with lgripper1, robot2 is not carrying ball2 with rgripper1, robot2 is not carrying ball3 with lgripper2 and robot2 is not carrying ball5 with rgripper1", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "7539db6f-dab4-40c4-a74e-2afa9a18e1eb", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, if ball5 is dropped in room3 with rgripper1 by robot1, is it True or False that robot1 is not carrying ball5 with rgripper1, ball5 is at room3 and rgripper1 of robot1 is free?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "b9aba6c7-01a1-4693-ad0f-e72ba098ee76", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, if ball5 is dropped in room3 with rgripper1 by robot1, is it True or False that ball5 is at room3, robot1 is not carrying ball5 with rgripper1 and rgripper1 of robot1 is free?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "b0333692-e521-4eb8-8fbf-8accea76f2b0", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, if ball5 is dropped in room3 with rgripper1 by robot1, is it True or False that rgripper1 of robot1 is free, robot1 is not carrying ball5 with rgripper1 and ball5 is at room3?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "0738c89c-4612-4372-abc2-33b76b229707", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, if ball5 is dropped in room3 with rgripper1 by robot1, is it True or False that ball5 is at room3, rgripper1 of robot1 is free and robot1 is not carrying ball5 with rgripper1?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "b95c8741-2902-4d35-8215-4151b1de30ef", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, if ball5 is dropped in room3 with rgripper1 by robot1, is it True or False that robot2 is not at room3, robot1 is not carrying ball5 with rgripper1 and ball5 is at room3?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "2d324e3b-549a-4346-af79-21893a1e4d51", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, if ball5 is dropped in room3 with rgripper1 by robot1, is it True or False that robot2 is not carrying ball4 with lgripper1, robot1 is not carrying ball5 with rgripper1 and ball5 is not at room3?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "b6e465fc-4657-4f82-96f8-4944275e9afb", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, if ball5 is dropped in room3 with rgripper1 by robot1, is it True or False that robot1 is not carrying ball5 with rgripper1, ball5 is at room3 and robot2 is not carrying ball1 with rgripper1?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "bc37e833-c5f7-4237-bb7b-605529699a8b", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, if ball5 is dropped in room3 with rgripper1 by robot1, is it True or False that ball2 is not at room2, ball5 is not at room2 and robot1 is not carrying ball5 with rgripper1?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "1dc3ada0-8c89-4d35-94cc-ff0ae5c230dc", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, if ball5 is dropped in room3 with rgripper1 by robot1, what would be all of the valid properties of the state? Write None if there are none.", "answer": "ball5 is at room3, ball3 is at room2, rgripper1 of robot1 is free, ball4 is at room3, lgripper1 of robot1 is free, ball7 is at room3, ball6 is at room2, robot2 is at room4, lgripper2 of robot2 is free, ball1 is at room3, ball2 is at room4, rgripper2 of robot2 is free and robot1 is at room3", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "d6cb08f0-18c7-4d34-9d6b-a728af1b945f", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "effects", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, if ball5 is dropped in room3 with rgripper1 by robot1, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, robot2 is not at room2, ball5 is not at room4, robot2 is not carrying ball6 with lgripper1, robot1 is not at room1, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball1 with lgripper1, ball2 is not at room2, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper2, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper2, robot2 is not carrying ball7 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball7 with rgripper2, ball4 is not at room2, robot1 is not at room2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball5 with lgripper1, ball4 is not at room4, ball2 is not at room3, ball3 is not at room1, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with rgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, robot2 is not at room1, ball1 is not at room2, ball6 is not at room1, robot1 is not carrying ball2 with lgripper2, lgripper2 of robot1 is not free, robot1 is not at room4, robot2 is not at room3, ball5 is not at room2, ball7 is not at room4, robot2 is not carrying ball3 with lgripper1, ball6 is not at room4, robot2 is not carrying ball5 with rgripper2, ball1 is not at room1, ball3 is not at room3, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball7 is not at room1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball4 with lgripper1, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball5 is not at room1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot1 is not carrying ball5 with rgripper2, ball6 is not at room3, ball7 is not at room2, robot1 is not carrying ball4 with rgripper1, robot2 is not carrying ball4 with lgripper2, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball3 with lgripper2, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball4 with rgripper2, robot2 is not carrying ball4 with rgripper1, robot1 is not carrying ball5 with lgripper1, robot2 is not carrying ball2 with rgripper1, robot2 is not carrying ball3 with lgripper2 and robot2 is not carrying ball5 with rgripper1", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "8d0b4244-7093-44db-8270-195b20948b29", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, is the number of objects equal to 13? True or False", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "1a9d9b9e-9dd6-4053-a392-612c93985fe9", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, is the number of objects equal to 18? True or False", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "a0d7fc58-0109-4c0a-b7bf-c2a780f779cd", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, is the number of objects equal to 17? True or False", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "0404b879-fcdb-470f-88e0-983c83a4b312", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, is the number of objects equal to 14? True or False", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "f344cf3f-bea5-45f2-abb1-de269166a7bd", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, is the number of executable actions equal to 21? True or False", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "55b65062-f220-43ab-bdc6-1065ff9b8bdf", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, is the number of executable actions equal to 18? True or False", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "f4ec2997-b294-4559-a6a1-aa343e51c52b", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, is the number of executable actions equal to 17? True or False", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "e4bbe86c-f5fd-458b-9c5b-cb11b81f5c8c", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, is the number of executable actions equal to 19? True or False", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "38883dc3-d92c-48db-aefe-5226978b658c", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, is the number of inexecutable actions equal to 454? True or False", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "dc0acfa5-5bb0-42b7-a1ec-def768c3c9c3", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, is the number of inexecutable actions equal to 529? True or False", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "5b59294d-8974-47e9-8724-8f0e85fe09df", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, is the number of inexecutable actions equal to 514? True or False", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "9370f6d4-8cd0-4d53-8d8b-2d2a64bbbca5", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, is the number of inexecutable actions equal to 517? True or False", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "d803f94f-a204-484d-b104-d18cd21fe496", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 0?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "9e6e1c3a-59d7-4126-9824-39b92ed15148", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 1?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "86030ce4-4b13-4864-be33-3436f6ee6132", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 2?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "6ea101cd-87b4-46d8-a411-edb34264398d", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.", "answer": "17", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "f943775a-ce2e-4498-a8e6-41cfa748d044", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.", "answer": "13", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "fd580c29-be64-4012-948f-14ec0523a2d4", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.", "answer": "87", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "8b6fdd3e-e158-4ba2-ac07-7260ec755e37", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.", "answer": "18", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "36565796-0052-432f-b855-16c9c8546b4e", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_9", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.", "answer": "454", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "79ab66d3-3fe5-46f7-8a6e-85bc590d2039", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball1 is picked from room4 with rgripper2 by robot2 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "0", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "a5dc6eba-8c86-430d-bdb3-03c7d9ccc78f", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball3 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "0", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "f5aebea1-cc2b-464d-b8e1-25fa67c7fda5", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball6 is dropped in room4 with rgripper2 by robot2 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "0", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "5072df24-a7fd-4694-802f-f74a33caeca2", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball7 is dropped in room3 with lgripper1 by robot2 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "0", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "e62059e5-b810-4efd-a717-e42ce1f5860f", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, is the number of objects equal to 17? True or False", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "607ba2fd-086a-43e7-8188-73bfa7651506", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, is the number of objects equal to 18? True or False", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "da52e08d-194a-49c5-b05a-cbcc85b9fb00", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, is the number of objects equal to 20? True or False", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "21467719-66bf-4a5c-a1c3-96a048b797b1", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, is the number of objects equal to 15? True or False", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "82414838-2874-4eb8-9637-a9be04cbc280", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, is the number of executable actions equal to 11? True or False", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "00974d04-ce09-4d74-b85e-9fc484ee3295", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, is the number of executable actions equal to 12? True or False", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "dd5e8cb0-d4e0-488f-82da-59f7cfc5b551", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, is the number of executable actions equal to 8? True or False", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "0414f4f3-50e7-4660-862b-d70d1f398295", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, is the number of executable actions equal to 9? True or False", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "f9456673-d952-4b99-89a8-69070e3dbd78", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, is the number of inexecutable actions equal to 461? True or False", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "bd787d61-2811-43b5-a44e-64f4e9a434da", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, is the number of inexecutable actions equal to 373? True or False", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "3c693d17-e8f2-4437-ba7d-dbf87b7c8988", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, is the number of inexecutable actions equal to 494? True or False", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "8e2b9b63-78fb-4d16-b6dd-5680187a9814", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, is the number of inexecutable actions equal to 436? True or False", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "4f16394b-f325-4a5f-aa88-f053c62b7e0e", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 7?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "7e9bd345-9a86-4498-9eb4-409c8843ac9a", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 5?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "5fd3bfc8-065a-4a48-b0fc-c5cffcb30661", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 6?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "55186bbc-e49b-4cbe-a9b0-8ee0b16a7f28", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 3?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "44582a1b-606b-40ba-a4ee-f2219d2c3bbd", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.", "answer": "17", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "89e9ff4f-9f2d-4856-b43d-2d351c22fa25", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.", "answer": "12", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "e55a2c89-2b7d-4543-b0fe-825bd4924027", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.", "answer": "88", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "0512b2ed-7420-49ed-a4af-95c9245bd218", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.", "answer": "11", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "0fa29140-38e9-45aa-affd-910047b89f38", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_9", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.", "answer": "461", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "f2509b95-77be-4c34-a180-ec67f1ce714a", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball5 is dropped in room3 with rgripper1 by robot1, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "b11aaf25-80a4-4faf-a458-50a6c958b122", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball6 is picked from room2 with lgripper2 by robot1, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "d5aba645-accf-4e65-a57b-170563df0a4c", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, robot2 moves from room1 to room3, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "56011839-9291-435c-9096-c1d0809c2842", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball3 is picked from room4 with lgripper1 by robot1, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "0", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "ec2e3d18-0757-4859-b527-3e7e501581d7", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, is the number of objects equal to 17? True or False", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "069377ae-a21a-4bde-9de5-402ee3777ded", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, is the number of objects equal to 18? True or False", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "4f1d5bab-b9d3-4c08-90b0-30ac50a878bc", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, is the number of objects equal to 14? True or False", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "34a6c0f6-3ddd-455d-9175-bdbc1a0f2689", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, is the number of objects equal to 16? True or False", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "65353fc5-2126-4ca9-9a60-94aad6015c32", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, is the number of executable actions equal to 14? True or False", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "2f9ada9c-f474-4c96-ad60-cafa6fd0e8e2", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, is the number of executable actions equal to 12? True or False", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "1f0604fd-3c88-4a29-afa1-5e0051db3027", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, is the number of executable actions equal to 13? True or False", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "f82f3aff-a45d-42d4-afe5-938ea5e50b99", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, is the number of executable actions equal to 11? True or False", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "fbe3e9de-a203-4425-8b9e-ffd690781a7c", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, is the number of inexecutable actions equal to 460? True or False", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "7372aa50-feb5-4525-b75c-f4664a29fbc3", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, is the number of inexecutable actions equal to 423? True or False", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "90d088da-d02c-473a-bcc2-b341c79d4453", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, is the number of inexecutable actions equal to 420? True or False", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "c819a354-4e1d-455f-b476-726cbe32497b", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, is the number of inexecutable actions equal to 378? True or False", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "6406de44-9818-4088-9688-7fa722a4c1f9", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 13?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "2d71978f-9b0e-4936-a00a-2387880d8ce3", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 11?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "d4d85102-4dae-4b26-a965-719f760e41bb", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 10?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "931d69ea-b67d-4a27-bb3e-5c2043fb8f47", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 8?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "7f9c6489-f923-4eb0-b91e-0d1e49fa94d7", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.", "answer": "17", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "52514074-78c1-46b6-966b-5587dbdaf28f", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.", "answer": "12", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "68eda7aa-531c-4c67-8f56-63ce7c429407", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.", "answer": "88", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "05f87faa-8d0a-4797-8f8f-179b66246531", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.", "answer": "12", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "cbf60b97-b713-4516-80d6-f67c2e083a8e", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_9", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.", "answer": "460", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "4005197e-fa8b-4776-9bf1-40dc963241dc", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball6 is picked from room4 with rgripper1 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "6", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "9b5ef4e0-10fc-43b3-9b66-95d4a8667813", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, ball3 is dropped in room1 with rgripper1 by robot2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "7", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "fab40abf-1c4a-4629-afeb-43c91ae58db9", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, ball1 is picked from room2 with rgripper1 by robot2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "7", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "6c2c5b6a-ef4d-43c4-b25e-06dc33058b1c", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, ball1 is picked from room4 with rgripper2 by robot2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "7", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "bfbf3bd3-b175-4a20-806c-40a777b41dcd", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, is the number of objects equal to 17? True or False", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "7d934528-bcfe-48b8-92d9-956b894fc03d", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, is the number of objects equal to 16? True or False", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "7031eea3-0f94-42a9-8427-026af4cd011d", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, is the number of objects equal to 20? True or False", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "60a393c7-5dcd-4ace-8bad-00be6635a546", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, is the number of objects equal to 13? True or False", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "036fc269-78b6-41db-b3ab-02f67f28f600", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, is the number of executable actions equal to 8? True or False", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "6a046c83-83d5-439a-b7fa-706c45345ec3", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, is the number of executable actions equal to 11? True or False", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "a4d7cc47-62ad-4beb-b316-5630cfa5230e", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, is the number of executable actions equal to 10? True or False", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "e554a138-5d90-4929-9296-7f4c3c2d9db6", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, is the number of executable actions equal to 7? True or False", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "25f7a97d-7909-4cd5-8161-a45a0054dbed", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, is the number of inexecutable actions equal to 462? True or False", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "a65b7650-fc8c-4d69-ad3f-425c1d17b114", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, is the number of inexecutable actions equal to 376? True or False", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "3fc0e2eb-372e-42b4-81c9-71b504900360", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, is the number of inexecutable actions equal to 547? True or False", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "64db9553-0f61-4b7c-a1df-aa19a6724a20", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, is the number of inexecutable actions equal to 433? True or False", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "edfbe422-b0b8-4bcb-b7de-4614dd8cd6d4", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 16?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "89174346-5b45-4ebd-855d-530b0bd10f99", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 13?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "d3e5872f-5d8d-45d7-b467-9f5d542ccf2f", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 15?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "da14b05a-ccd0-4ca0-bdfd-e8d8fe0f0a96", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 11?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "dc11a5cc-5ca5-45be-a3f7-aec4baf849d2", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.", "answer": "17", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "2086d717-2f02-4188-b385-fd5e6a89203e", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.", "answer": "11", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "fca00fd8-4fc9-4ab1-88fa-bf8864cf0d70", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.", "answer": "89", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "7664974b-f417-46dc-a8f7-89402f1f7c58", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.", "answer": "10", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "085603f6-e505-4627-87d6-cf55c25c18aa", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_9", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.", "answer": "462", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "55f45868-eb91-4f2d-abfa-098b2ad0e8e5", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball5 is picked from room1 with rgripper1 by robot1, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "0", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "ece6b88d-e37c-41ed-9ef8-f3732fc2c66d", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball5 is dropped in room1 with lgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "8", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "67d025b0-ac0c-404f-ba9a-8d573374d5dd", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball2 is picked from room2 with lgripper2 by robot1, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "6", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "91ed27b7-ea46-4c48-99aa-5b405edf740d", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball5 is dropped in room1 with lgripper2 by robot1, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "9", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "c781be29-8ba2-4e15-8400-c5be3acd4f42", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, is the number of objects equal to 18? True or False", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "e83bbf54-db59-477e-b767-1add67d860cb", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, is the number of objects equal to 17? True or False", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "49a70ad8-a650-4ea9-a6ee-dc2a6e6f05c9", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, is the number of objects equal to 15? True or False", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "eb32e7e7-ab4b-432f-9678-cf37eb0d5e19", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, is the number of objects equal to 16? True or False", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "37222f18-2423-49df-827f-9ce79464b685", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, is the number of executable actions equal to 12? True or False", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "6cd23b25-4770-4ed9-9c42-292c1ce53f7b", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, is the number of executable actions equal to 14? True or False", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "8cdc6eb2-a343-4033-9ffe-d9a9bdeb8e03", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, is the number of executable actions equal to 11? True or False", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "0eaac84b-a872-4446-8dff-a60026bf7ddd", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, is the number of executable actions equal to 10? True or False", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "c240806a-fdce-48f7-b538-1c3172e5ed62", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, is the number of inexecutable actions equal to 460? True or False", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "a314393c-5765-495e-b9c1-d02caf9df336", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, is the number of inexecutable actions equal to 494? True or False", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "c65a6a2f-4d4d-452a-8973-334b08f4c8ee", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, is the number of inexecutable actions equal to 501? True or False", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "cdb2ad1f-a541-4338-8242-49b5bcb50693", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, is the number of inexecutable actions equal to 457? True or False", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "d4f66820-4689-4df2-9e5e-14fbbe7b0ae9", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 19?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "226ff0d3-c973-4929-b632-6cc15757bd79", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 23?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "eadc8026-72ac-47cf-a8ac-61ba664a11c9", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 22?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "d1a253ce-0419-478c-b6fc-dcd56385861e", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 17?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "e9235b15-c413-4c62-b259-e8237c1e77dc", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.", "answer": "17", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "5eec24fc-29c0-4e0f-b709-3e531bdfd396", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.", "answer": "12", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "cd3632bc-a298-43d9-a666-d79fb4cb2e93", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.", "answer": "88", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "32730009-6be9-4915-8912-b0863f4a7c9b", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.", "answer": "12", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "743d6a3c-540c-4985-bb94-9f79b8cd2229", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_9", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.", "answer": "460", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "d1a16bc7-4ae6-48c9-871e-cfa08ef83d38", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball3 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "18", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "955c778f-48a2-4774-b2a6-c5bfab2647e0", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, ball2 is dropped in room3 with rgripper1 by robot1, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "3", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "251a8ac0-fb8b-4c34-b1f5-d0ce40b8f251", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball7 is picked from room3 with lgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "14", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "02eeffa1-3bf7-48f0-97c3-909db1ffb7c4", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, ball6 is picked from room2 with lgripper2 by robot1, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "7", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "d20778ad-c15f-4995-bf0a-ba5f46407cbb", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that ball8 is part of the state?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "73f2dc83-a766-4b8d-b67e-06237ce643e5", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that ball3 is part of the state?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "06292c64-d40c-467d-a1ac-4d116949b324", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that room4 is part of the state?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "97ab330a-908a-4371-8118-2454f925309c", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that rgripper3 is part of the state?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "8117d734-30ae-44e9-9c79-74833a3c60c0", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that lgripper1 of robot1 is free?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "9db2193c-9b40-4448-a166-b1c6cf66c7db", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that ball2 is transported to room2?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "0d97d700-74c2-4da1-8110-27b299381da9", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that ball1 is transported to room2?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "19d4a4f1-535e-4d16-a520-2bae21c46faf", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that rgripper2 of robot2 is broken?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "b7b55a39-4e3f-482f-b902-90f3fa64b3da", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that ball1 is not at room4?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "a14e3403-6be5-4fd9-bd1e-2f41a6b8b2a2", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that robot1 is not loading ball7 with rgripper2?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "196dd914-8e78-4140-812c-ba3a7e5c9a7f", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that robot2 is not carrying ball3 with rgripper2?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "e5f7ac8c-a34a-47ac-98da-74d690904dd5", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that robot1 is not loading ball4 with rgripper2?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "18f83c1b-f841-42ee-816c-c44cf5f3efb0", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, robot1 moves from room1 to room3, is defined?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "465d446a-92d3-4987-8a34-0973670274d9", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, ball4 is picked from room2 with rgripper2 by robot2, is defined?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "2a3a890d-269d-4c69-9508-d886965e5f4e", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, robot1 moves from room1 to room2, is defined?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "38323c07-4af3-43c6-9f3e-afa31e3c8ef0", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, ball5 is picked from room2 with rgripper2 by robot2, is defined?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "597f76e9-63e9-4777-83f1-9cf4ae67ff18", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, ball6 is picked from room3 with rgripper2 by robot1, is defined?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "b9700f43-f268-4230-923a-95095adfdd9c", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, ball1 is dropped in room4 with rgripper2 by robot2, is defined?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "b37e6bdb-1833-4fd1-9681-51203c18f790", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, robot1 moves from room2 to room3, is defined?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "573bb87e-1cdc-4fea-ac64-73778bf4e7ca", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, ball6 is collected in room3 with lgripper2 by robot2, is defined?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "a84669af-ca4b-45b3-97d6-71fd07f8b96d", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, ball7, ball2, lgripper1, robot1, rgripper2, ball6 and room4, is not defined? Write None if all are defined.", "answer": "rgripper2", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "2e5e9ff8-72e4-4307-8970-de31842c72e2", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, ball1, rgripper2, ball5, rgripper1, lgripper2, room2, ball6, room4, room1, ball2, robot1, ball7, lgripper1, ball3 and ball4, is not defined? Write None if all are defined.", "answer": "ball3", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "4a5e6807-41ba-4a3c-8d4c-c5830fd41010", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, ball1, robot1, ball8, robot2, room1, room4, ball6, ball4 and rgripper1, is not defined? Write None if all are defined.", "answer": "ball8", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "767257f7-d41c-4e5b-9597-441a7a89c7fa", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, room3, robot1, lgripper1, ball7, ball3, rgripper1, room4, rgripper2, room2, room1, ball4, robot3, ball6, lgripper2 and ball1, is not defined? Write None if all are defined.", "answer": "robot3", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "28bdf07a-e088-493f-b987-3a12707a1e6d", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, rgripper1 of robot1 is free, lgripper1 of robot1 is free, ball6 is at room3, robot1 is at room1, ball7 is at room2, lgripper2 of robot2 is free, ball2 is at room2 and rgripper2 of robot2 is free, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "07496639-6429-482e-9ee2-67fe70052bb6", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, rgripper1 of robot1 is broken, ball1 is at room2, robot2 is at room2, ball4 is at room2, lgripper2 of robot2 is free, lgripper1 of robot1 is free, ball3 is at room1, rgripper2 of robot2 is free, ball5 is at room2, ball2 is at room2 and ball7 is at room2, is not defined? Write None if all are defined.", "answer": "rgripper1 of robot1 is broken", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "cf446707-cc75-4537-957b-407f6e6f07aa", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, robot2 is at room2, rgripper2 of robot2 is broken, rgripper1 of robot1 is free, ball5 is at room2, lgripper1 of robot1 is free and lgripper2 of robot2 is free, is not defined? Write None if all are defined.", "answer": "rgripper2 of robot2 is broken", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "cb302609-94ee-4354-968f-3e7c6d8db2bf", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, robot1 is at room1, rgripper1 of robot1 is free and ball7 is at room2, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "263ab7c2-1b9b-4169-92e7-5cdeb279d34e", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball4 is not at room1, robot2 is not carrying ball3 with lgripper1, ball5 is not at room4, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball1 with rgripper2, robot1 is not at room2, robot1 is not carrying ball7 with rgripper2, robot1 is not carrying ball6 with rgripper1, robot1 is not carrying ball5 with rgripper2, ball2 is not at room3, lgripper2 of robot1 is not free, robot1 is not at room4, ball1 is not at room1, ball4 is not at room4, ball2 is not at room4, robot1 is not carrying ball1 with lgripper1, ball1 is not transported to room3, robot2 is not carrying ball5 with rgripper2, robot2 is not carrying ball4 with rgripper1, robot2 is not carrying ball6 with rgripper1, robot1 is not carrying ball2 with rgripper2, robot1 is not at room3, robot1 is not carrying ball1 with lgripper2, robot1 is not carrying ball4 with lgripper1, ball6 is not at room4, robot1 is not carrying ball3 with rgripper2, robot1 is not carrying ball4 with rgripper2, robot2 is not carrying ball1 with lgripper1, robot2 is not carrying ball5 with lgripper1, ball7 is not at room4, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball3 with lgripper2, ball4 is not at room3, robot1 is not carrying ball7 with rgripper1, robot2 is not carrying ball6 with lgripper1, robot2 is not carrying ball3 with lgripper2, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball1 with rgripper1, ball2 is not at room1, robot2 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper1, robot1 is not carrying ball3 with rgripper1, ball7 is not at room1, robot2 is not carrying ball2 with rgripper1, robot1 is not carrying ball5 with lgripper1, robot1 is not carrying ball5 with lgripper2, ball3 is not at room4, rgripper1 of robot2 is not free, robot2 is not carrying ball5 with rgripper1, robot2 is not carrying ball7 with lgripper2, ball3 is not at room2, lgripper1 of robot2 is not free, robot1 is not carrying ball7 with lgripper1, robot2 is not at room4, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball2 with lgripper2, robot1 is not carrying ball2 with rgripper1, robot2 is not carrying ball7 with rgripper1, ball5 is not at room1, robot2 is not at room1, ball1 is not at room4, ball3 is not at room3, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not carrying ball6 with rgripper2, ball5 is not at room3, robot2 is not carrying ball2 with rgripper2, robot2 is not carrying ball7 with lgripper1, robot2 is not at room3, robot2 is not carrying ball7 with rgripper2, robot2 is not carrying ball5 with lgripper2, robot2 is not carrying ball2 with lgripper2, ball6 is not at room1, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball4 with lgripper2 and robot2 is not carrying ball4 with lgripper1, is not defined? Write None if all are defined.", "answer": "ball1 is not transported to room3", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "50496d7e-b6e1-459d-aa92-9b0bf082b849", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, robot2 is not carrying ball3 with lgripper1, robot1 is not engaged in room4, robot2 is not carrying ball4 with rgripper1, robot2 is not carrying ball1 with rgripper1, robot2 is not carrying ball1 with lgripper2, robot1 is not carrying ball5 with lgripper2, lgripper1 of robot2 is not free, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball2 with lgripper2, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball2 with lgripper1, robot2 is not carrying ball4 with lgripper2, robot1 is not carrying ball1 with rgripper2 and ball5 is not at room1, is not defined? Write None if all are defined.", "answer": "robot1 is not engaged in room4", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "797c9e1b-245e-4b68-97a2-69f3c0c5750d", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, robot2 is not carrying ball2 with rgripper2, robot2 is not carrying ball6 with lgripper2, robot1 is not carrying ball1 with lgripper1, lgripper1 of robot2 is not free, robot1 is not carrying ball3 with lgripper2, ball2 is not at room1, robot2 is not carrying ball6 with rgripper1, robot1 is not carrying ball2 with rgripper1, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball1 with lgripper2, rgripper2 of robot1 is not free, ball2 is not at room4, robot1 is not carrying ball2 with lgripper2, robot2 is not carrying ball5 with lgripper1, ball6 is not at room2, ball4 is not at room1, robot1 is not at room4, ball7 is not at room3, ball5 is not at room4, robot2 is not carrying ball5 with rgripper2, robot1 is not carrying ball5 with rgripper2, robot2 is not carrying ball4 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot2 is not carrying ball4 with lgripper1, robot2 is not carrying ball5 with rgripper1, ball5 is not at room3, robot2 is not carrying ball1 with lgripper1, ball4 is not at room4, robot1 is not carrying ball4 with rgripper2, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball7 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot1 is not at room2, robot1 is not carrying ball1 with lgripper2, ball7 is not at room1, lgripper2 of robot1 is not free, robot2 is not carrying ball2 with lgripper2, robot1 is not carrying ball7 with lgripper2, robot1 is not carrying ball1 with rgripper2, robot2 is not at room3, robot2 is not at room4, ball4 is not at room3, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball7 with lgripper1, robot1 is not at room3, ball6 is not at room1, robot2 is not carrying ball5 with lgripper2, robot2 is not carrying ball4 with rgripper1, robot2 is not carrying ball7 with lgripper1, ball3 is not at room3, ball3 is not at room2, robot1 is not carrying ball4 with lgripper1, robot2 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with lgripper1, robot2 is not carrying ball7 with lgripper2, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball3 with lgripper1, ball1 is not at room4, robot2 is not carrying ball6 with lgripper1, robot2 is not carrying ball3 with lgripper2, ball2 is not at room3, robot1 is not carrying ball6 with lgripper1, robot2 is not at room1, ball6 is not at room4, robot1 is not carrying ball7 with rgripper2, ball7 is not at room4, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball2 with rgripper2, robot1 is not carrying ball3 with rgripper1 and robot1 is not carrying ball5 with rgripper1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "75fc79a8-4d0a-4e60-b222-19bcc86aff4a", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, robot2 is not carrying ball4 with rgripper1, robot2 is not carrying ball3 with lgripper1, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball1 with lgripper1, ball7 is not at room3, robot2 is not carrying ball5 with rgripper1, robot1 is not at room4, robot2 is not carrying ball6 with rgripper1 and ball3 is not at room3, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "83fb3f33-748a-4e7e-9c05-7d7c552a8f0c", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 checks room3 and then checks room2 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "robot2 checks room3 and then checks room2", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "115fb0b3-c349-4443-bf3e-cc4c4d32bd5f", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "5a3064a6-38f8-4f94-a203-3034254217c7", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that rgripper3 is part of the state?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "11aea416-a03c-4449-9174-4dfd1b2553bb", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that robot2 is part of the state?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "26dc8c8b-530e-426e-8d56-e305de471853", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that room5 is part of the state?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "e3f73fc7-140a-4472-a9a8-dba785a3c944", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that ball4 is part of the state?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "d7b8755e-174b-4b37-af28-197c58d91393", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that ball6 is at room3?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "ab772d6c-f544-44da-b7de-87890d022c32", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that lgripper1 of robot1 is broken?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "b0803000-b9cb-4d22-b782-acf41d1ad04f", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that lgripper2 of robot2 is free?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "93d5e143-7dc7-4422-8030-9835ba96e643", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that lgripper1 of robot1 is free?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "a0f11cef-00b7-47b7-b7c5-703c95dbc647", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that ball4 is not transported to room2?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "c19069ca-ca1f-42f8-acd5-8c6a53f19a4a", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that ball4 is not at room1?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "8cbf4043-42dc-4935-8484-d1bb9ef01295", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that ball1 is not transported to room1?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "4f18cdce-471b-476a-a272-3025087581db", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that robot2 is not loading ball7 with rgripper2?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "5c36e6b4-be31-44ba-8f12-4a80991e7720", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, robot2 checks room3 and then checks room1, is defined?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "5df2209f-25b8-4b0f-9335-2b6062f232ce", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, robot2 checks room3 and then checks room2, is defined?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "bcd3b6f3-6394-4fe6-8aac-1dd6bc273055", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, ball6 is picked from room3 with lgripper2 by robot2, is defined?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "7a0fe79a-ef38-4a4f-8f23-e69281da1792", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, robot2 checks room3 and then checks room4, is defined?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "6b9bb5f0-242a-43f2-98a0-d9c6c91bcd25", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, ball1 is inspected in room2 with lgripper1 by robot1, is defined?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "69bb486a-c510-4f01-9210-6b35f012bf7f", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, ball1 is collected in room1 with rgripper2 by robot1, is defined?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "6b2c098d-09dc-4abb-82d1-0f3c881941f7", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, ball2 is dropped in room2 with lgripper2 by robot1, is defined?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "29c53da4-7f66-4994-b332-be519a1c8aac", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, ball5 is picked from room1 with lgripper1 by robot2, is defined?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "1fcd94ef-8ed4-41ba-ac4c-0760e007d765", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, ball4, room4, room1, rgripper3, robot2, lgripper2, ball6, ball2 and room3, is not defined? Write None if all are defined.", "answer": "rgripper3", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "0e5ec7cf-2a3f-46c1-ab25-e8745685b157", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, lgripper1, ball7, rgripper1, ball3 and ball2, is not defined? Write None if all are defined.", "answer": "rgripper1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "724bed3d-233a-45f6-ba63-1d5794451d01", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, ball7, ball4, lgripper1, rgripper1, rgripper2, ball2, room4, ball5, room1, robot2, ball3, room2, ball1 and room3, is not defined? Write None if all are defined.", "answer": "rgripper1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "3400656b-e9a7-4eba-8f11-9068703c363d", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, ball3, room5, ball7, rgripper2 and rgripper1, is not defined? Write None if all are defined.", "answer": "room5", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "9a218d32-3e4e-450f-9859-909c925a98fb", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, robot2 is carrying ball4 with rgripper2, ball6 is at room3, rgripper1 of robot1 is free, ball7 is at room2, lgripper2 of robot2 is free, robot1 is at room1, lgripper1 of robot1 is free, ball3 is at room1, ball1 is at room3, ball5 is at room2, ball2 is at room2 and robot2 is at room3, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "02891045-6817-4108-88c8-9b2aed232007", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, robot1 is at room1, ball1 is at room3, robot2 is at room3, lgripper1 of robot1 is free, ball5 is at room2, rgripper1 of robot1 is free, ball7 is at room2, lgripper2 of robot2 is free, ball3 is at room1 and robot2 is carrying ball4 with rgripper2, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "45f6375f-b818-4ad4-9126-d31d32288085", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball6 is at room3, robot2 is engaged in room3 and ball3 is at room1, is not defined? Write None if all are defined.", "answer": "robot2 is engaged in room3", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "2f1dfa84-4776-466f-95c9-22d41754e6f5", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, lgripper2 of robot2 is free, ball1 is at room3, robot2 is carrying ball4 with rgripper2, ball6 is at room3, ball2 is at room2, ball3 is at room1 and ball5 is at room2, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "9d91dfb1-695e-4dd5-84d8-5f2b2cccb41e", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball6 is not at room4, ball2 is not at room3, robot1 is not carrying ball3 with lgripper1, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball7 with rgripper2, ball4 is not at room2, robot2 is not carrying ball7 with lgripper2, ball7 is not at room1, robot1 is not carrying ball7 with lgripper2, robot1 is not carrying ball1 with rgripper1, lgripper1 of robot2 is not free, robot2 is not loading ball5 with lgripper1, ball4 is not at room3, robot1 is not carrying ball5 with rgripper1, robot2 is not carrying ball5 with lgripper2, ball2 is not at room4, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball2 with lgripper1, robot2 is not at room2 and ball7 is not at room4, is not defined? Write None if all are defined.", "answer": "robot2 is not loading ball5 with lgripper1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "7a8e83d4-cf36-40a7-80c2-297b8b32d16c", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, robot1 is not carrying ball1 with lgripper1, rgripper2 of robot2 is not free, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball5 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball6 with lgripper1, robot1 is not carrying ball5 with rgripper2, rgripper2 of robot1 is not free, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball4 with lgripper1, robot2 is not at room1, ball5 is not at room4, robot2 is not carrying ball4 with rgripper1, ball4 is not at room4, lgripper1 of robot2 is not free, robot1 is not carrying ball1 with rgripper1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball6 with lgripper1, ball7 is not at room4, robot2 is not carrying ball5 with lgripper2, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball7 with lgripper2, robot2 is not carrying ball7 with rgripper2, robot2 is not carrying ball5 with lgripper1, ball1 is not at room2, robot2 is not carrying ball2 with lgripper2, robot2 is not carrying ball7 with lgripper2, ball3 is not at room3, robot1 is not at room3, ball7 is not at room3, ball7 is not at room1, ball4 is not at room3, robot2 is not carrying ball4 with lgripper2, ball2 is not at room3, robot2 is not carrying ball1 with rgripper1, robot2 is not carrying ball3 with lgripper1, robot1 is not carrying ball4 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot2 is not carrying ball3 with rgripper2, ball6 is not at room1, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper2, robot1 is not carrying ball3 with rgripper2, robot1 is not at room4, robot2 is not carrying ball5 with rgripper2, ball2 is not at room1, robot1 is not carrying ball5 with rgripper1, robot1 is not at room2, ball6 is not at room2, ball1 is not at room1, ball4 is not at room1, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball5 with lgripper2, robot2 is not carrying ball3 with lgripper2, robot1 is not carrying ball6 with lgripper2, robot1 is not carrying ball6 with rgripper1, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with lgripper1, robot1 is not carrying ball2 with lgripper1, robot2 is not at room2, robot2 is not carrying ball2 with rgripper1, robot2 is not at room4, ball3 is not at room2, robot2 is not carrying ball4 with lgripper1, ball5 is not at room3, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball7 with lgripper1, ball6 is not at room4, robot1 is not carrying ball2 with rgripper1, ball2 is not at room4, rgripper1 of robot2 is not free, robot1 is not carrying ball1 with lgripper2, ball4 is not at room2, robot2 is not carrying ball3 with rgripper1, robot1 is not loading ball7 with rgripper1, robot2 is not carrying ball1 with lgripper2, robot1 is not carrying ball2 with rgripper2, ball5 is not at room1, robot1 is not carrying ball6 with rgripper2, lgripper2 of robot1 is not free, robot2 is not carrying ball6 with lgripper2, robot1 is not carrying ball2 with lgripper2, robot1 is not carrying ball3 with lgripper1, ball1 is not at room4 and robot2 is not carrying ball5 with rgripper1, is not defined? Write None if all are defined.", "answer": "robot1 is not loading ball7 with rgripper1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "d16a33c0-a9a4-4c86-87d3-3b8edb34ec00", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball6 is not at room2, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball3 with rgripper1, robot2 is not carrying ball2 with rgripper1, robot1 is not carrying ball6 with lgripper1, robot2 is not carrying ball6 with lgripper2, ball5 is not at room3, rgripper1 of robot2 is not free, robot1 is not carrying ball3 with lgripper2, robot1 is not at room3, robot1 is not carrying ball1 with rgripper1, rgripper2 of robot2 is not free, ball5 is not at room4, ball7 is not at room4, robot1 is not carrying ball2 with rgripper2, ball7 is not at room1, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball7 with lgripper2, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball5 with lgripper1, robot1 is not carrying ball7 with rgripper1, ball2 is not at room3, ball1 is not at room1, robot1 is not carrying ball5 with rgripper2, ball4 is not at room3, robot2 is not at room4, robot2 is not carrying ball7 with lgripper1, robot2 is not carrying ball3 with lgripper1, ball3 is not at room3, robot2 is not carrying ball1 with lgripper1, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball6 with rgripper1, robot2 is not engaged in room2, ball7 is not at room3, robot2 is not carrying ball4 with rgripper1, lgripper2 of robot1 is not free, robot2 is not carrying ball2 with lgripper2, ball3 is not at room2, robot1 is not carrying ball4 with lgripper2 and robot2 is not carrying ball1 with rgripper2, is not defined? Write None if all are defined.", "answer": "robot2 is not engaged in room2", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "98f6f1b1-806c-459a-bd9d-b0813986b035", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, robot1 is not carrying ball3 with rgripper1, robot2 is not carrying ball1 with lgripper2, ball7 is not at room3, ball1 is not at room1, robot2 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball5 with lgripper2, ball5 is not at room3, robot1 is not carrying ball3 with lgripper2, robot1 is not at room4, robot1 is not carrying ball6 with rgripper1, ball2 is not at room3, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball2 with rgripper2, robot1 is not at room2, robot2 is not carrying ball4 with lgripper2, robot2 is not carrying ball7 with lgripper2, robot2 is not carrying ball1 with lgripper1, lgripper1 of robot2 is not free, robot1 is not carrying ball4 with rgripper2, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball6 with lgripper1, robot1 is not carrying ball1 with rgripper2, robot1 is not carrying ball2 with rgripper2, ball1 is not at room4, robot2 is not carrying ball3 with lgripper1, ball3 is not at room2, rgripper2 of robot1 is not free, robot2 is not carrying ball6 with lgripper1, robot1 is not carrying ball2 with lgripper2, robot1 is not carrying ball7 with lgripper1, robot1 is not carrying ball1 with rgripper1, ball2 is not at room4, ball6 is not at room2, robot2 is not carrying ball1 with rgripper1, ball4 is not at room4, robot2 is not carrying ball3 with rgripper1, robot2 is not carrying ball2 with lgripper2, robot2 is not carrying ball4 with lgripper1, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball5 with lgripper1, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball3 with lgripper2, robot1 is not carrying ball2 with lgripper1, ball4 is not at room2, ball3 is not at room3, robot2 is not carrying ball2 with lgripper1, robot1 is not carrying ball4 with lgripper2, lgripper2 of robot1 is not free, robot2 is not at room4, ball3 is not at room4, ball2 is not at room1, ball4 is not at room3, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with rgripper1, ball1 is not at room2, robot1 is not carrying ball6 with rgripper2, robot2 is not carrying ball7 with rgripper2, robot1 is not at room3, robot1 is not carrying ball1 with lgripper2, ball7 is not at room4, ball7 is not at room1, rgripper1 of robot2 is not free, robot2 is not loading ball3 with rgripper2, robot1 is not carrying ball5 with rgripper2, ball5 is not at room4 and robot2 is not carrying ball4 with rgripper1, is not defined? Write None if all are defined.", "answer": "robot2 is not loading ball3 with rgripper2", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "33797400-f6fc-46fb-9238-d30fd5a7c253", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "63bb236b-4419-452b-a467-3fc31b6e91e6", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is inspected in room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "ball4 is inspected in room2 with rgripper2 by robot2", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "10c13ecf-8dcf-45a0-a778-00562a1281ca", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is collected in room3 with lgripper2 by robot2 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "ball1 is collected in room3 with lgripper2 by robot2", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "158b0516-53cf-4da2-8a3c-6604c4cdd208", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is inspected in room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3 and ball1 is dropped in room3 with lgripper2 by robot2 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "ball1 is inspected in room2 with lgripper2 by robot2", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "6fc12bd6-0b89-4e60-8eb6-6591f75d860b", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that robot3 is part of the state?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "aabc57fd-253c-48bc-8e23-561074508eb2", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that lgripper3 is part of the state?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "b60c03ad-cd4c-44a1-b26d-94be0abc3ad5", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that robot2 is part of the state?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "8f822a93-07b8-43af-b069-60adf1bff8e2", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that ball8 is part of the state?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "4f94eb02-4afe-48e1-8ff0-9160d7b61622", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that robot1 is at room1?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "f09bfbe7-7b1e-45ba-8907-e9f2ea97b217", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that ball6 is at room2?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "feee96e6-ffa4-4258-9954-0e0b7dea7d5f", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that lgripper2 of robot2 is broken?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "24b262d6-5385-4e30-97f0-d7c1b2af7db9", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that ball7 is transported to room2?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "eacc5c34-ebbd-4ac0-8cd3-bed39eefd16e", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that robot2 is not carrying ball6 with rgripper1?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "f94e1d67-aaa2-4ba3-9bfc-0c1fa01292c3", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that ball1 is not transported to room4?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "00b62bde-6b78-4c92-a211-1411d8a067cf", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that robot1 is not loading ball5 with rgripper1?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "81971b27-441c-44f1-a2ec-d906560a12bd", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that robot1 is not at room2?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "6c4c8f58-901c-4bd4-99f7-97d888aabe71", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, robot2 moves from room2 to room1, is defined?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "3bfeaef4-fae6-447f-9136-8011a908f7fc", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, robot2 moves from room2 to room3, is defined?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "61abd5b1-487c-402f-a883-c2043f1e0724", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, robot1 moves from room1 to room3, is defined?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "8153e34b-66fb-446c-9ed1-3ee0a55f161c", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, ball5 is inspected in room2 with lgripper2 by robot2, is defined?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "08c7e1f7-e147-45fe-b30f-9a39dc83b20c", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, ball2 is collected in room2 with lgripper2 by robot2, is defined?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "69cbeeb2-cb17-43d8-b170-c4c414756742", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, ball4 is collected in room4 with lgripper1 by robot2, is defined?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "68d2cc9f-26f1-41fb-a458-617dc2b31c8a", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, ball4 is inspected in room2 with lgripper1 by robot1, is defined?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "0fef6a6d-7cb8-4519-aebf-23a977945e9a", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, ball3 is dropped in room3 with rgripper1 by robot2, is defined?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "765c4d60-eebf-4607-bc5f-6749be246063", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, lgripper1, ball8, ball6, ball2, rgripper1, room4, robot1 and robot2, is not defined? Write None if all are defined.", "answer": "ball8", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "2c3a0edc-240a-4a0c-aa62-9c5196cffff2", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, robot2, lgripper2, rgripper3 and room3, is not defined? Write None if all are defined.", "answer": "rgripper3", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "6a0c033f-6672-4282-b326-fbbdbdc2b279", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, ball6, rgripper2, ball5, room3, robot2, ball4, ball7, robot1, ball2, lgripper1, room4, ball1, rgripper1 and room2, is not defined? Write None if all are defined.", "answer": "ball6", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "281cd2c1-5e1a-4a13-a76a-af796051cd7c", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, ball2, robot2 and rgripper1, is not defined? Write None if all are defined.", "answer": "robot2", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "b262809e-bcb7-4de5-9e2a-95258b7073bb", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, robot2 is at room2, ball6 is transported to room2, lgripper2 of robot2 is free, ball1 is at room3, ball7 is at room2, ball4 is at room3, ball5 is at room2 and ball3 is at room1, is not defined? Write None if all are defined.", "answer": "ball6 is transported to room2", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "f8320ff8-c98c-424e-a443-fc9193101f9f", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball1 is at room3, robot2 is at room2, ball3 is transported to room1, ball5 is at room2, lgripper2 of robot2 is free, rgripper1 of robot1 is free, ball7 is at room2, ball4 is at room3, lgripper1 of robot1 is free, robot1 is at room1, ball6 is at room2 and robot2 is carrying ball2 with rgripper2, is not defined? Write None if all are defined.", "answer": "ball3 is transported to room1", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "5db1d9c8-33bd-4a47-b0c8-64265668a0fc", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, robot2 is at room2, ball6 is at room2, lgripper1 of robot1 is broken, ball4 is at room3, rgripper1 of robot1 is free and ball5 is at room2, is not defined? Write None if all are defined.", "answer": "lgripper1 of robot1 is broken", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "c50dc44a-b771-4ff2-a1c0-d5094ddb6481", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball5 is at room2, lgripper2 of robot2 is free, ball4 is at room3, ball7 is at room2, ball6 is at room2, robot2 is at room2, ball1 is at room3, robot1 is at room1, robot2 is carrying ball2 with rgripper2, lgripper1 of robot1 is broken, ball3 is at room1 and rgripper1 of robot1 is free, is not defined? Write None if all are defined.", "answer": "lgripper1 of robot1 is broken", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "3c301bee-d61c-4844-a7e7-1aa905e8e653", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball1 is not at room4, robot2 is not carrying ball3 with rgripper1, ball3 is not at room4, robot1 is not carrying ball2 with lgripper2, ball4 is not at room1, robot2 is not carrying ball7 with lgripper2, robot1 is not loading ball6 with rgripper1, robot2 is not at room3, robot2 is not carrying ball7 with rgripper2, robot2 is not carrying ball3 with rgripper2, robot2 is not carrying ball1 with lgripper1, robot2 is not carrying ball2 with lgripper1, robot2 is not carrying ball1 with lgripper2, lgripper2 of robot1 is not free, robot1 is not carrying ball7 with lgripper1, robot2 is not at room1, rgripper1 of robot2 is not free, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball6 with rgripper1, robot2 is not carrying ball4 with rgripper1, robot2 is not carrying ball2 with lgripper2, robot2 is not carrying ball6 with lgripper1, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball5 with lgripper2, robot2 is not carrying ball1 with rgripper1, ball5 is not at room3, ball7 is not at room1, ball5 is not at room1, robot2 is not carrying ball4 with lgripper1, robot1 is not carrying ball4 with rgripper2, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball7 with lgripper2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot2 is not carrying ball1 with rgripper2 and robot1 is not carrying ball1 with lgripper1, is not defined? Write None if all are defined.", "answer": "robot1 is not loading ball6 with rgripper1", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "61ad2add-cdb1-4d90-af16-df21840bba4e", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball7 is not at room1, robot1 is not carrying ball7 with rgripper1, robot2 is not at room4, robot2 is not carrying ball4 with lgripper2, ball4 is not at room2, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball2 with lgripper2, ball5 is not at room4, ball4 is not at room4, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball5 with rgripper1, ball2 is not at room2, robot1 is not carrying ball1 with lgripper2, ball2 is not transported to room1, robot2 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball4 with rgripper1, robot2 is not carrying ball6 with lgripper2, ball3 is not at room2, robot1 is not carrying ball3 with rgripper2, robot1 is not carrying ball1 with rgripper2, ball5 is not at room3, robot2 is not carrying ball7 with rgripper2, robot2 is not carrying ball3 with lgripper2, robot2 is not carrying ball5 with rgripper1, robot2 is not carrying ball6 with lgripper1, robot2 is not carrying ball3 with rgripper1, ball5 is not at room1, robot1 is not carrying ball2 with rgripper2, ball2 is not at room4, robot1 is not at room3, robot2 is not carrying ball6 with rgripper1, robot2 is not carrying ball5 with rgripper2, robot1 is not carrying ball3 with lgripper2, robot2 is not carrying ball7 with lgripper2, ball7 is not at room4 and ball6 is not at room4, is not defined? Write None if all are defined.", "answer": "ball2 is not transported to room1", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "20f2975e-cd32-4981-99cb-d783d2c5488c", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball4 with lgripper2, robot1 is not carrying ball3 with rgripper1, ball5 is not at room1, robot2 is not carrying ball3 with lgripper1, robot1 is not at room3, ball3 is not at room2, robot2 is not carrying ball5 with rgripper1, ball2 is not at room1, ball1 is not at room2, ball6 is not at room3, robot2 is not carrying ball4 with rgripper1, ball6 is not at room1, robot2 is not carrying ball6 with rgripper1, robot1 is not at room2, robot1 is not carrying ball4 with rgripper1, robot2 is not carrying ball5 with rgripper2, ball7 is not at room4, robot2 is not carrying ball6 with lgripper1, robot1 is not carrying ball7 with rgripper2, ball3 is not at room4, robot1 is not at room4, robot1 is not carrying ball1 with lgripper1, robot2 is not carrying ball5 with lgripper2, ball4 is not at room2, robot2 is not at room1, robot1 is not carrying ball5 with lgripper1, robot1 is not carrying ball5 with rgripper2, robot2 is not carrying ball2 with lgripper1, robot2 is not carrying ball3 with rgripper2, robot2 is not carrying ball4 with lgripper1, ball2 is not at room3, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball3 with rgripper1, rgripper2 of robot2 is not free, ball5 is not at room4, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball3 with lgripper2, robot1 is not carrying ball4 with rgripper2, robot1 is not carrying ball6 with lgripper1, robot2 is not carrying ball6 with lgripper2, ball1 is not at room1, ball5 is not at room3, robot1 is not carrying ball3 with lgripper1, ball3 is not at room3, rgripper1 of robot2 is not free, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball7 with rgripper2, ball4 is not at room1, robot1 is not carrying ball5 with rgripper1, robot2 is not at room4, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball3 with lgripper2, ball1 is not at room4 and ball7 is not at room1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "101850af-285e-476c-81df-99e4323a5d67", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, robot2 is not carrying ball5 with lgripper2, robot1 is not carrying ball4 with lgripper2, robot2 is not carrying ball1 with rgripper1, robot2 is not carrying ball7 with rgripper2, robot2 is not carrying ball1 with rgripper2, robot2 is not carrying ball1 with lgripper1, ball3 is not at room2, robot2 is not carrying ball4 with lgripper2, robot1 is not carrying ball2 with lgripper2, robot2 is not carrying ball5 with lgripper1, robot1 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with lgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball5 with rgripper2, robot1 is not carrying ball1 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball4 with lgripper1, ball1 is not at room1, ball2 is not at room4, robot1 is not carrying ball2 with rgripper2, robot2 is not carrying ball3 with rgripper1, lgripper2 of robot1 is not free, robot2 is not carrying ball6 with rgripper1, rgripper2 of robot2 is not free, robot1 is not carrying ball3 with rgripper2, robot1 is not carrying ball6 with rgripper2, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball6 with lgripper2, ball4 is not at room4, robot1 is not carrying ball1 with rgripper1, robot2 is not at room3, robot2 is not carrying ball4 with rgripper2, lgripper1 of robot2 is not free, robot2 is not carrying ball2 with lgripper2, robot2 is not carrying ball4 with lgripper1, robot2 is not carrying ball3 with lgripper1, robot1 is not at room4, robot2 is not carrying ball1 with lgripper2, ball6 is not at room4, ball4 is not at room1, robot1 is not carrying ball3 with rgripper1, ball5 is not at room3, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball5 with rgripper2, robot1 is not carrying ball2 with rgripper1, ball3 is not at room3, ball5 is not at room1, robot2 is not carrying ball5 with rgripper1, ball7 is not at room1, ball2 is not at room2, robot1 is not carrying ball6 with lgripper1, robot2 is not carrying ball6 with rgripper2, robot2 is not at room1, robot2 is not carrying ball3 with lgripper2, robot2 is not carrying ball7 with lgripper2, rgripper2 of robot1 is not free, robot2 is not carrying ball6 with lgripper2, ball6 is not at room1, ball7 is not at room4, robot2 is not carrying ball6 with lgripper1, robot2 is not at room4, robot1 is not carrying ball5 with lgripper1, ball5 is not at room4, robot1 is not carrying ball7 with rgripper1, robot1 is not at room2, ball2 is not at room3, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball5 with lgripper2, ball1 is not at room2 and robot1 is not carrying ball3 with lgripper1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "2380d035-2fe0-4293-8af1-87b410d62db4", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "74e5f99c-38b9-4c70-b33f-ffd68edffcd2", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is collected in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "ball4 is collected in room3 with rgripper2 by robot2", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "e10757be-b58a-4a54-94a2-e23496daf778", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 checks room3 and then checks room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 checks room3 and then checks room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "robot2 checks room3 and then checks room2", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "5e536856-0bf8-45a7-b141-9aa3fbeef827", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 checks room2 and then checks room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2 and ball6 is dropped in room2 with lgripper2 by robot2 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "robot2 checks room2 and then checks room3", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "48d7ecac-b379-4b89-8287-5919a2385bd5", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that ball8 is part of the state?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "c75d3093-7e8c-45cf-82b7-99e161039045", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that ball7 is part of the state?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "84790618-2ed8-460a-9281-15a1c1aa0304", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that ball1 is part of the state?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "bf49f01e-b825-4b41-8366-19ca2355c0ad", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that room2 is part of the state?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "76acc8a5-df07-4ff5-8fed-a88b418b8eba", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that lgripper2 of robot2 is broken?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "1283d613-f5f6-4b38-813d-7ea102ab98b4", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that ball6 is transported to room2?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "9f1137ce-a4d0-49e7-8205-f8ff0ff8789e", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that ball7 is at room2?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "a48bea56-44e2-4141-840f-f67dc6fda271", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that ball6 is at room2?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "42a27a92-3784-45f0-915a-cb25b52c2e9e", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that robot2 is not loading ball5 with lgripper1?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "d0a6e9ab-9030-4b42-bd00-75f0b6011816", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that ball1 is not transported to room4?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "fc6d2f2b-e8e8-4b45-a3fd-629bb32323ef", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that ball6 is not at room3?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "c80b6c3a-fc7a-4cc8-a100-992d2aca4a5d", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that ball2 is not at room3?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "48b936fe-74a3-47f5-90f7-65ad815ab56e", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, ball3 is collected in room2 with lgripper1 by robot1, is defined?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "272b74bd-bed2-49b7-bb4c-96717ce6c153", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, robot2 checks room4 and then checks room2, is defined?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "371c33e5-d98d-4b2b-9b09-ab9c6d705b1f", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, ball2 is inspected in room4 with rgripper2 by robot2, is defined?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "40d35451-1cfb-42ab-bc44-159b012a5965", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, robot2 moves from room4 to room3, is defined?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "faf24dbd-4839-4822-9830-6b074506ff30", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, ball7 is inspected in room4 with lgripper1 by robot1, is defined?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "dd54beac-4891-490f-ae8e-1156b04962ee", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, ball3 is dropped in room3 with rgripper1 by robot2, is defined?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "61bcd10c-cc13-4dff-995f-5947bf830a86", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, ball6 is collected in room2 with rgripper1 by robot1, is defined?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "e08c7695-94b1-41ef-ae35-7e938dad5ce6", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, ball1 is dropped in room2 with lgripper1 by robot1, is defined?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "d7e0b660-beab-4b46-8900-94a1ff736f80", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, ball8, room4 and rgripper2, is not defined? Write None if all are defined.", "answer": "ball8", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "4c9a2d51-45c2-4e15-a3a0-7ac16c740175", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, lgripper1, rgripper1, ball3, ball1, room3 and robot2, is not defined? Write None if all are defined.", "answer": "robot2", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "4118faa3-c483-48ef-b3b5-9edb6470a6fc", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, room4, ball1, robot1, ball6, robot2, ball7, ball3, ball5, rgripper2 and room2, is not defined? Write None if all are defined.", "answer": "ball5", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "1779a531-72b5-4d44-a926-322f33e08d3a", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, rgripper2 and ball1, is not defined? Write None if all are defined.", "answer": "rgripper2", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "6ff4bd5e-a70f-4320-8395-bc7fe145ef20", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball7 is at room2, ball6 is at room2, ball1 is at room3, rgripper2 of robot2 is broken, robot1 is carrying ball5 with rgripper1, robot1 is at room2, lgripper2 of robot2 is free, robot2 is at room4, ball2 is at room4 and robot1 is carrying ball3 with lgripper1, is not defined? Write None if all are defined.", "answer": "rgripper2 of robot2 is broken", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "dff4c57a-ef44-44b8-b8ff-ac4a374a0af1", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, lgripper2 of robot2 is free, ball2 is at room4, robot1 is carrying ball5 with rgripper1, ball6 is transported to room2, robot2 is at room4, ball1 is at room3, robot1 is at room2, ball7 is at room2, ball4 is at room3, robot1 is carrying ball3 with lgripper1 and rgripper2 of robot2 is free, is not defined? Write None if all are defined.", "answer": "ball6 is transported to room2", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "9c2c457f-cbff-45e7-8603-22ac72e96756", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, rgripper2 of robot2 is free, robot2 is at room4, lgripper2 of robot2 is free and robot1 is carrying ball5 with rgripper1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "cf8009c8-b8ff-48b8-bd3c-067294bb2b39", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, robot1 is at room2, ball1 is transported to room3, ball4 is at room3, ball6 is at room2 and ball7 is at room2, is not defined? Write None if all are defined.", "answer": "ball1 is transported to room3", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "86eecc8b-b87b-4684-9eed-f8104975e19e", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, robot1 is not carrying ball2 with rgripper2, robot2 is not carrying ball7 with rgripper1, ball6 is not at room3, robot1 is not carrying ball3 with lgripper2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball4 with lgripper1, robot2 is not carrying ball6 with lgripper2, robot1 is not carrying ball1 with lgripper2, ball3 is not at room1, robot1 is not loading ball4 with rgripper1, ball2 is not at room3, ball7 is not at room1, ball5 is not at room1, rgripper1 of robot1 is not free, robot2 is not at room2, robot1 is not carrying ball2 with rgripper1, rgripper2 of robot1 is not free, robot1 is not carrying ball1 with lgripper1, robot2 is not carrying ball1 with lgripper2, ball4 is not at room1, ball3 is not at room3, robot1 is not carrying ball5 with lgripper2, ball7 is not at room4, robot2 is not carrying ball7 with lgripper2, robot1 is not carrying ball2 with lgripper1, robot2 is not carrying ball1 with lgripper1, lgripper2 of robot1 is not free, ball1 is not at room1, ball2 is not at room1, robot2 is not at room3, robot1 is not carrying ball6 with lgripper2, robot1 is not carrying ball2 with lgripper2, ball2 is not at room2, robot2 is not carrying ball2 with rgripper1, ball5 is not at room2, ball7 is not at room3, robot2 is not carrying ball7 with rgripper2 and robot2 is not carrying ball6 with rgripper2, is not defined? Write None if all are defined.", "answer": "robot1 is not loading ball4 with rgripper1", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "5c6cb12b-5e32-4248-88be-04178be649b0", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball4 is not at room2, robot2 is not at room2, robot2 is not carrying ball4 with lgripper1, robot1 is not carrying ball2 with rgripper1, rgripper2 of robot1 is not free, ball7 is not at room4, robot1 is not carrying ball6 with rgripper1, robot2 is not carrying ball7 with lgripper1, robot2 is not at room1, ball1 is not at room1, ball3 is not at room1, lgripper1 of robot2 is not free, robot2 is not carrying ball1 with rgripper1, robot2 is not carrying ball5 with rgripper1, robot2 is not carrying ball5 with rgripper2, robot2 is not carrying ball7 with rgripper1, robot1 is not carrying ball2 with rgripper2, robot1 is not carrying ball2 with lgripper2, robot2 is not carrying ball5 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot2 is not carrying ball6 with lgripper1, ball2 is not at room1, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball5 with lgripper1, robot1 is not carrying ball4 with lgripper2, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball6 with lgripper2, ball1 is not at room2, robot2 is not carrying ball3 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room2, robot2 is not carrying ball2 with lgripper1, ball4 is not at room1, ball7 is not at room1, robot1 is not at room3, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball2 with rgripper2, ball3 is not at room4, ball4 is not at room4, robot1 is not carrying ball4 with lgripper1, robot1 is not at room1, robot1 is not carrying ball3 with lgripper2, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball7 with lgripper2, ball6 is not at room4, ball6 is not at room3, robot2 is not carrying ball6 with rgripper1, robot1 is not carrying ball4 with rgripper2, robot2 is not carrying ball4 with rgripper1, robot1 is not carrying ball5 with rgripper2, robot1 is not carrying ball3 with rgripper2, ball3 is not at room2, lgripper2 of robot1 is not free, robot2 is not carrying ball7 with rgripper2, robot2 is not carrying ball1 with lgripper2, ball6 is not at room1, ball2 is not at room3, robot2 is not carrying ball3 with rgripper1, robot1 is not at room4, robot1 is not carrying ball6 with rgripper2, robot2 is not carrying ball3 with lgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball2 with lgripper2, rgripper1 of robot1 is not free, robot1 is not carrying ball1 with rgripper2, ball5 is not at room3, ball1 is not at room4, ball7 is not at room3, robot1 is not carrying ball1 with lgripper2 and robot1 is not carrying ball7 with lgripper2, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "c46f6aff-162e-46e1-a957-a558a9af4953", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, robot2 is not carrying ball7 with lgripper2, robot2 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball1 with lgripper1, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball1 with lgripper1, ball4 is not at room4, robot1 is not carrying ball3 with lgripper2, robot2 is not at room1, robot1 is not carrying ball4 with lgripper2, lgripper1 of robot1 is not free, ball5 is not at room2, robot2 is not carrying ball3 with rgripper1, ball3 is not at room1, ball7 is not at room4, robot2 is not carrying ball2 with lgripper2, robot1 is not at room3, robot2 is not carrying ball4 with lgripper2, ball6 is not at room4, robot2 is not carrying ball4 with lgripper1, robot1 is not carrying ball5 with rgripper2, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball5 with lgripper1, robot2 is not carrying ball5 with lgripper2, lgripper2 of robot1 is not free, ball6 is not at room3, ball6 is not at room1, robot2 is not carrying ball7 with rgripper2, robot1 is not at room1, ball3 is not at room4, ball2 is not at room2, robot2 is not carrying ball1 with rgripper1, ball2 is not at room3, robot1 is not carrying ball6 with lgripper2, robot1 is not carrying ball1 with lgripper2, ball4 is not at room1, lgripper1 of robot2 is not free, robot2 is not carrying ball4 with rgripper2, robot2 is not carrying ball6 with rgripper1, ball1 is not at room4, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball5 with rgripper1, robot1 is not carrying ball2 with lgripper1, rgripper1 of robot1 is not free, ball7 is not at room3, robot1 is not carrying ball2 with rgripper2, robot1 is not carrying ball4 with lgripper1, robot2 is not carrying ball6 with lgripper2, robot1 is not carrying ball4 with rgripper2, robot1 is not carrying ball2 with lgripper2, robot2 is not loading ball2 with lgripper1, ball3 is not at room2, robot1 is not carrying ball6 with lgripper1, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with rgripper2, robot2 is not carrying ball4 with rgripper1, robot2 is not carrying ball6 with lgripper1, robot2 is not carrying ball6 with rgripper2 and robot2 is not carrying ball1 with rgripper2, is not defined? Write None if all are defined.", "answer": "robot2 is not loading ball2 with lgripper1", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "1c00d722-4627-42af-903e-23f6d9f49623", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball5 is not at room3, robot2 is not carrying ball7 with lgripper1, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball4 with rgripper2, robot2 is not carrying ball2 with rgripper1, robot1 is not loading ball1 with rgripper1, robot1 is not carrying ball6 with rgripper2, robot2 is not carrying ball1 with lgripper1, ball7 is not at room1, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball4 with lgripper2, robot2 is not carrying ball4 with lgripper1, rgripper1 of robot2 is not free, robot2 is not carrying ball6 with lgripper1, ball2 is not at room2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with rgripper1, robot1 is not carrying ball3 with rgripper1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball6 with lgripper2, rgripper2 of robot1 is not free, ball3 is not at room4, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with rgripper2, robot1 is not carrying ball2 with rgripper1 and robot2 is not carrying ball7 with rgripper2, is not defined? Write None if all are defined.", "answer": "robot1 is not loading ball1 with rgripper1", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "4e115af8-18d9-4171-9c64-f0621d029e90", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "6e80c091-73d6-4d15-8bd5-091385e7b65e", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is collected in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "ball1 is collected in room3 with lgripper2 by robot2", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "516600d7-2cbb-468b-a6ad-ba6fb2d5d9c3", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is inspected in room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "ball2 is inspected in room2 with rgripper2 by robot2", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "21d663be-27e2-49f1-abc9-285c11acc8c7", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is inspected in room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "ball4 is inspected in room2 with rgripper2 by robot2", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "2555f383-f643-471f-aa97-c4ffcd7661cd", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that rgripper1 is part of the state?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "c701b2fb-d9ef-406a-b1a9-4ca1398996a5", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that ball3 is part of the state?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "d8ff3dd2-24ad-4ba6-894c-c639cab46444", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that ball2 is part of the state?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "85a8e4e7-2499-4f7a-b0b4-68163064aa2d", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that ball5 is part of the state?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "14e307d6-ca69-4166-9296-19086d1a1fc8", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that ball6 is transported to room2?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "3d3c5b5f-4b17-45ec-acd6-a4e5f91924ca", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that ball1 is transported to room3?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "e171a108-670a-48d8-972e-66fc057af58e", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that ball3 is transported to room2?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "63203c20-a5ed-489a-81ca-ae34d068f1e0", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that ball4 is transported to room3?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "af523fc8-40cb-4d74-a431-38d5594d4c1a", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that robot2 is not loading ball1 with lgripper1?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "62b1592b-a7cf-45c7-a004-db43d96063c4", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that robot2 is not loading ball4 with lgripper1?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "e6434891-1561-4856-8159-8120f7232f9e", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that robot2 is not loading ball6 with rgripper2?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "91c8c675-f85d-4003-aeaf-b426cd54abdb", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that ball4 is not at room2?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "9b9a99f0-a452-42a5-af6c-aed37abb4ec7", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, robot2 checks room4 and then checks room3, is defined?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "4076e806-1c74-4762-8493-18b31500ba04", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, robot1 checks room3 and then checks room4, is defined?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "5d5e8910-5e73-44db-b18e-785ceb86c777", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, ball1 is picked from room3 with lgripper1 by robot1, is defined?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "b0fd2efd-ffc8-48b0-a308-2110e29574e7", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, ball7 is inspected in room3 with lgripper1 by robot1, is defined?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "1500089a-ea30-4aff-a0e6-d7b7b856b604", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, ball7 is picked from room3 with lgripper2 by robot2, is defined?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "b80104c2-e29d-4f3b-821b-575e6f10b981", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, ball4 is dropped in room1 with rgripper2 by robot1, is defined?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "becb8297-2a25-4b22-8b55-b2017925f242", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, ball3 is dropped in room2 with lgripper1 by robot2, is defined?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "d150e782-1db2-44f4-b70f-8ea089776b26", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, robot2 checks room1 and then checks room4, is defined?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "2135581f-e7b0-40d2-a941-fb7c785daaa9", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, rgripper2, lgripper2, ball4, ball1, ball3, ball5, ball2 and rgripper1, is not defined? Write None if all are defined.", "answer": "ball3", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "0ed7ea5f-23b4-4b4f-bb70-a8f44beb831f", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, ball5, rgripper2, room1, lgripper2, room4 and room3, is not defined? Write None if all are defined.", "answer": "room4", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "fecf648e-b9c4-4aff-bd80-406a3952fa7f", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, room4, rgripper1, ball7 and ball8, is not defined? Write None if all are defined.", "answer": "ball8", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "7f2bbdf0-8f76-4e34-aecb-b635318face5", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, lgripper1, room2 and robot3, is not defined? Write None if all are defined.", "answer": "robot3", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "43d90f9b-927c-433e-9af8-3961058969c9", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball1 is at room3, ball6 is at room2, lgripper2 of robot2 is free, ball4 is at room3, robot1 is carrying ball5 with rgripper1, rgripper2 of robot2 is free, ball3 is at room2, robot2 is engaged in room4 and lgripper1 of robot1 is free, is not defined? Write None if all are defined.", "answer": "robot2 is engaged in room4", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "15a9c736-d050-46c9-b3dc-7f4e759cf80e", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, robot1 is loading ball5 with rgripper1, ball7 is at room3 and ball2 is at room4, is not defined? Write None if all are defined.", "answer": "robot1 is loading ball5 with rgripper1", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "4f491202-167c-4a64-9c60-d94f9bfeebab", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball3 is transported to room2, robot1 is at room3 and robot2 is at room4, is not defined? Write None if all are defined.", "answer": "ball3 is transported to room2", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "8581ed42-1d3f-4caa-a2da-74fb90b2ef47", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, robot2 is at room4, lgripper1 of robot1 is free, robot1 is at room3, rgripper2 of robot2 is free, ball3 is transported to room2, lgripper2 of robot2 is free, robot1 is carrying ball5 with rgripper1 and ball7 is at room3, is not defined? Write None if all are defined.", "answer": "ball3 is transported to room2", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "45f51c0b-7aaf-4eba-8213-8cbae501bae0", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball5 is not at room3, robot1 is not carrying ball5 with lgripper2 and robot1 is not carrying ball3 with rgripper2, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "18e02b0c-7faf-43be-9365-cbdea865e58c", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, robot2 is not carrying ball6 with rgripper1, lgripper2 of robot1 is not free, robot1 is not at room2, robot1 is not carrying ball4 with rgripper1, robot2 is not carrying ball1 with lgripper2, ball2 is not at room1, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball2 with lgripper2, robot2 is not at room3, robot2 is not carrying ball6 with lgripper2, rgripper1 of robot1 is not free, ball6 is not at room1, ball5 is not at room4, ball7 is not at room2, robot1 is not carrying ball5 with rgripper2, ball4 is not at room2, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball6 with rgripper1, ball7 is not at room4, robot2 is not carrying ball6 with lgripper1, ball1 is not at room4, ball7 is not at room1, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball3 with lgripper1, robot2 is not carrying ball3 with lgripper2, robot2 is not carrying ball2 with rgripper2, robot1 is not carrying ball6 with rgripper2, robot2 is not carrying ball7 with lgripper2, rgripper1 of robot2 is not free, robot2 is not carrying ball1 with lgripper1, ball1 is not at room2, ball6 is not at room3, ball4 is not at room4, robot2 is not carrying ball7 with rgripper2, robot1 is not carrying ball1 with lgripper2, ball5 is not at room2, ball2 is not at room3, robot1 is not carrying ball2 with rgripper2, robot1 is not carrying ball5 with lgripper1, robot1 is not carrying ball4 with lgripper2, robot2 is not carrying ball5 with rgripper1, ball6 is not at room4, robot1 is not carrying ball7 with rgripper1, robot2 is not carrying ball3 with rgripper1, ball2 is not at room2, robot1 is not carrying ball1 with rgripper1, robot2 is not carrying ball2 with lgripper1, lgripper1 of robot2 is not free, robot2 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with lgripper2, robot1 is not carrying ball3 with rgripper2, robot1 is not carrying ball1 with lgripper1, robot2 is not carrying ball1 with rgripper1, robot1 is not carrying ball4 with rgripper2, robot2 is not carrying ball5 with rgripper2, ball3 is not at room1, robot1 is not carrying ball3 with lgripper2, robot2 is not carrying ball7 with rgripper1, rgripper2 of robot1 is not free, robot2 is not at room2, ball3 is not at room3, ball3 is not at room4, robot2 is not carrying ball4 with rgripper1 and ball5 is not at room3, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "d00f3903-11ae-477f-ad89-54bd21e777bb", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, robot2 is not carrying ball4 with rgripper2, robot1 is not carrying ball4 with lgripper2, robot1 is not carrying ball2 with rgripper1, ball5 is not at room3, ball7 is not at room1, robot2 is not carrying ball5 with lgripper1, robot1 is not at room2, robot2 is not carrying ball2 with lgripper2, ball5 is not at room4, robot2 is not carrying ball4 with lgripper1, ball1 is not at room4, robot1 is not carrying ball2 with lgripper2, ball2 is not at room1, lgripper2 of robot1 is not free, ball6 is not at room1, ball4 is not at room2, robot1 is not carrying ball4 with rgripper2, robot2 is not carrying ball2 with rgripper1, robot1 is not carrying ball3 with lgripper2, robot2 is not carrying ball2 with lgripper1, robot2 is not carrying ball3 with lgripper1, robot2 is not at room3, robot2 is not carrying ball1 with rgripper2, ball3 is not at room1, robot2 is not carrying ball1 with lgripper1, robot1 is not at room4, robot1 is not carrying ball3 with rgripper2, robot2 is not carrying ball7 with rgripper1, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball4 with rgripper1, robot1 is not at room1, robot2 is not at room2, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball1 with rgripper1, ball2 is not at room2, ball1 is not at room2, robot2 is not carrying ball6 with lgripper1, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball5 with rgripper2, ball7 is not at room4, robot2 is not carrying ball3 with rgripper2, robot2 is not carrying ball4 with rgripper1, robot1 is not carrying ball1 with lgripper2, ball6 is not at room4, robot2 is not carrying ball3 with lgripper2, rgripper2 of robot1 is not free, robot2 is not carrying ball7 with rgripper2, robot2 is not carrying ball5 with rgripper1, robot1 is not carrying ball6 with rgripper1, robot2 is not at room1, robot1 is not carrying ball4 with lgripper1, ball4 is not at room4, robot2 is not carrying ball3 with rgripper1, robot1 is not carrying ball6 with rgripper2, robot2 is not carrying ball6 with rgripper2, robot2 is not carrying ball5 with rgripper2, robot1 is not carrying ball5 with lgripper1 and ball5 is not at room2, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "b76aac79-8eb6-4708-967d-f3905fb24b53", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, lgripper2 of robot1 is not free, robot2 is not carrying ball7 with lgripper2, robot2 is not at room1, robot1 is not at room1, ball2 is not transported to room1, robot2 is not carrying ball7 with rgripper2, robot2 is not carrying ball1 with lgripper2, robot2 is not carrying ball6 with rgripper1, ball3 is not at room4, ball4 is not at room1, robot1 is not carrying ball2 with lgripper2, robot2 is not carrying ball6 with lgripper2, robot2 is not carrying ball1 with lgripper1, ball7 is not at room4, rgripper1 of robot2 is not free, robot1 is not carrying ball6 with lgripper2, robot2 is not carrying ball6 with rgripper2, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball4 with rgripper1, ball4 is not at room4, ball5 is not at room4, robot1 is not carrying ball4 with rgripper2, rgripper2 of robot1 is not free, robot2 is not carrying ball6 with lgripper1, ball7 is not at room2, robot2 is not carrying ball5 with lgripper1, ball1 is not at room1, robot1 is not carrying ball7 with lgripper1, robot2 is not carrying ball2 with lgripper1, ball3 is not at room1, ball5 is not at room2, robot1 is not carrying ball6 with rgripper2, robot1 is not carrying ball7 with rgripper1, robot2 is not at room2, ball2 is not at room2, robot1 is not carrying ball6 with lgripper1, robot1 is not carrying ball1 with rgripper1, robot2 is not carrying ball5 with lgripper2, ball6 is not at room3, robot2 is not carrying ball1 with rgripper2, ball2 is not at room3, robot1 is not carrying ball4 with lgripper2, robot2 is not carrying ball5 with rgripper2, ball5 is not at room3, robot1 is not carrying ball6 with rgripper1, rgripper1 of robot1 is not free, robot1 is not carrying ball1 with lgripper1, robot2 is not carrying ball7 with rgripper1, robot2 is not carrying ball3 with rgripper2, robot1 is not carrying ball5 with lgripper2, robot1 is not at room4, robot1 is not at room2, robot2 is not carrying ball4 with lgripper1, robot2 is not carrying ball1 with rgripper1, ball1 is not at room2, robot2 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper2, robot2 is not carrying ball5 with rgripper1, ball6 is not at room1, robot2 is not carrying ball2 with rgripper1, robot1 is not carrying ball1 with lgripper2, robot2 is not carrying ball2 with rgripper2, ball6 is not at room4, ball3 is not at room3, ball4 is not at room2, lgripper1 of robot2 is not free, ball5 is not at room1, robot1 is not carrying ball2 with rgripper2, robot1 is not carrying ball5 with rgripper2, robot2 is not carrying ball3 with rgripper1 and robot1 is not carrying ball2 with rgripper1, is not defined? Write None if all are defined.", "answer": "ball2 is not transported to room1", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "20cf6c4a-5a15-4d32-936f-6ab57a70260b", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is inspected in room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "ball7 is inspected in room2 with lgripper1 by robot1", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "2e379127-dda3-4ccd-8f71-9f93dc14f3a0", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "ec18d37c-aed9-454c-aa50-146b3ecbe0bc", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is dropped in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is collected in room3 with lgripper1 by robot1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "ball7 is collected in room3 with lgripper1 by robot1", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
{"id": "88178e19-3f6b-44e0-8f4c-c97c26284254", "domain_name": "grippers", "instance_id": "Instance_6", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot2 moves from room3 to room2, ball1 is picked from room2 with lgripper2 by robot2, ball4 is picked from room2 with rgripper2 by robot2, robot2 moves from room2 to room3, ball1 is dropped in room3 with lgripper2 by robot2, ball6 is picked from room3 with lgripper2 by robot2, ball4 is dropped in room3 with rgripper2 by robot2, robot2 moves from room3 to room2, ball2 is picked from room2 with rgripper2 by robot2, ball6 is collected in room2 with lgripper2 by robot2, robot2 moves from room2 to room4, ball2 is dropped in room4 with rgripper2 by robot2, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball5 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room3 and ball7 is dropped in room3 with lgripper1 by robot1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "ball6 is collected in room2 with lgripper2 by robot2", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball5,room2)", "free(robot1,lgripper1)", "at(ball7,room2)", "at(ball1,room2)", "at_robby(robot2,room3)", "at(ball6,room3)", "at(ball4,room2)", "at(ball2,room2)", "free(robot2,lgripper2)", "at(ball3,room1)", "at_robby(robot1,room1)", "free(robot2,rgripper2)"], "neg_fluents": ["-carry(robot1,ball6,rgripper1)", "-carry(robot2,ball6,rgripper2)", "-carry(robot2,ball1,rgripper2)", "-carry(robot1,ball7,rgripper2)", "-carry(robot2,ball6,lgripper2)", "-carry(robot2,ball2,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-free(robot2,lgripper1)", "-at_robby(robot2,room2)", "-at(ball5,room4)", "-carry(robot2,ball6,lgripper1)", "-carry(robot2,ball4,rgripper2)", "-carry(robot1,ball1,lgripper1)", "-carry(robot1,ball4,lgripper2)", "-carry(robot1,ball5,lgripper2)", "-at(ball7,room3)", "-carry(robot2,ball5,lgripper2)", "-carry(robot1,ball7,rgripper1)", "-free(robot1,rgripper2)", "-at(ball1,room4)", "-at(ball2,room1)", "-carry(robot1,ball6,rgripper2)", "-carry(robot1,ball6,lgripper2)", "-carry(robot2,ball1,rgripper1)", "-carry(robot1,ball1,lgripper2)", "-carry(robot2,ball7,lgripper2)", "-at(ball4,room1)", "-carry(robot2,ball7,rgripper1)", "-carry(robot2,ball7,rgripper2)", "-at_robby(robot1,room2)", "-carry(robot2,ball1,lgripper2)", "-carry(robot2,ball3,rgripper1)", "-carry(robot2,ball5,lgripper1)", "-at(ball4,room4)", "-at(ball2,room3)", "-carry(robot2,ball2,rgripper2)", "-carry(robot1,ball3,rgripper2)", "-carry(robot2,ball3,rgripper2)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball2,rgripper2)", "-free(robot2,rgripper1)", "-carry(robot2,ball1,lgripper1)", "-at_robby(robot2,room1)", "-at(ball6,room1)", "-carry(robot1,ball2,lgripper2)", "-at(ball1,room3)", "-free(robot1,lgripper2)", "-at_robby(robot1,room4)", "-at(ball7,room4)", "-carry(robot2,ball3,lgripper1)", "-at_robby(robot1,room3)", "-at(ball6,room4)", "-carry(robot2,ball5,rgripper2)", "-at(ball1,room1)", "-at(ball3,room2)", "-at(ball3,room3)", "-carry(robot2,ball6,rgripper1)", "-at(ball3,room4)", "-at(ball7,room1)", "-at(ball6,room2)", "-carry(robot1,ball2,rgripper1)", "-carry(robot1,ball7,lgripper1)", "-carry(robot2,ball4,lgripper1)", "-at(ball5,room3)", "-carry(robot2,ball2,lgripper2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball4,room3)", "-at(ball5,room1)", "-carry(robot1,ball1,rgripper2)", "-carry(robot2,ball7,lgripper1)", "-carry(robot1,ball7,lgripper2)", "-at_robby(robot2,room4)", "-carry(robot1,ball5,rgripper2)", "-carry(robot1,ball4,rgripper1)", "-carry(robot2,ball4,lgripper2)", "-carry(robot1,ball1,rgripper1)", "-carry(robot1,ball3,lgripper2)", "-carry(robot1,ball5,rgripper1)", "-carry(robot1,ball4,rgripper2)", "-carry(robot2,ball4,rgripper1)", "-at(ball2,room4)", "-carry(robot1,ball5,lgripper1)", "-carry(robot2,ball2,rgripper1)", "-carry(robot2,ball3,lgripper2)", "-carry(robot2,ball5,rgripper1)"], "objects": {"robot": ["robot2", "robot1"], "gripper": ["rgripper1", "lgripper1", "lgripper2", "rgripper2"], "room": ["room1", "room2", "room3", "room4"], "object": ["ball6", "ball4", "ball1", "ball3", "ball5", "ball7", "ball2"]}, "executable?": true}, "action_sequence": ["action_move(robot2,room3,room2)", "action_pick(robot2,ball1,room2,lgripper2)", "action_pick(robot2,ball4,room2,rgripper2)", "action_move(robot2,room2,room3)", "action_drop(robot2,ball1,room3,lgripper2)", "action_pick(robot2,ball6,room3,lgripper2)", "action_drop(robot2,ball4,room3,rgripper2)", "action_move(robot2,room3,room2)", "action_pick(robot2,ball2,room2,rgripper2)", "action_drop(robot2,ball6,room2,lgripper2)", "action_move(robot2,room2,room4)", "action_drop(robot2,ball2,room4,rgripper2)", "action_pick(robot1,ball3,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_pick(robot1,ball5,room2,rgripper1)", "action_drop(robot1,ball3,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball7,room3,lgripper1)", "action_drop(robot1,ball5,room3,rgripper1)"]}
