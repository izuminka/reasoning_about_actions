{"id": "baf38a20-11b0-4489-837e-8c958fc6036a", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is it True or False that person3 is in plane1?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "bbde6b17-fb80-43e0-9452-59223d1f13ae", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is it True or False that person6 is at city0?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "dd0016f1-1887-4bec-b64e-e38fa740d1c6", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is it True or False that fuel level fl3 is next to fuel level fl2?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "ef8a6adb-6dbc-4cee-b3c3-61a79f704789", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is it True or False that fuel level fl6 is next to fuel level fl4?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "bec8b3db-ddf9-4934-8711-0ed680125fa0", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is it True or False that plane1 is not at city2 and person1 is not at city2?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "70876957-3d76-43bf-8cc2-08c42330212f", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is it True or False that fuel level fl0 is not next to fuel level fl2, plane1 does not have fuel level fl2, fuel level fl2 is not next to fuel level fl1 and fuel level fl5 is not next to fuel level fl2?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "e10cc950-2c5a-4947-8205-e0732dc4d252", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is it True or False that person5 is not at city0, person1 is not at city0, plane1 is not at city0, person4 is not at city0, person2 is not at city0, person3 is not at city0, person8 is not at city0 and person7 is not at city0?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "7fa016f1-4679-4f0a-9409-8eaa0043ebfd", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is it True or False that person2 is not at city2, plane1 is not at city2, person1 is not at city2, person4 is not at city2 and person3 is not at city2?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "51a08cb1-53f9-4b39-b5cd-830913396852", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, list all objects associated with type person. Write None if there are none.", "answer": "person1, person2, person3, person4, person5, person6, person7 and person8", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "8eda75ac-0021-446c-8d50-c34e127786f2", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, list all objects associated with type aircraft. Write None if there are none.", "answer": "plane1", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "87cbb28f-e8b0-45e3-876d-dee4e46bc3d1", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, list all objects associated with type flevel. Write None if there are none.", "answer": "fl0, fl1, fl2, fl3, fl4, fl5 and fl6", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "4b74a1a6-0f9c-4b2f-8bbf-dce0f7b018f0", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, list all objects associated with type city. Write None if there are none.", "answer": "city0, city1, city2 and city3", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "0dd6cc65-ea24-41f1-9f6f-abb4d617d5a7", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, what is the object type for person8 and person2. Write None if there are none.", "answer": "person", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "323f3215-3473-4920-b9a0-3c27abbe59f4", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, what is the object type for plane1. Write None if there are none.", "answer": "aircraft", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "a435f114-c8d3-4a6c-b92c-acf2e8c36fa9", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, what is the object type for city2, city1 and city3. Write None if there are none.", "answer": "city", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "c8506502-6a07-4964-99cd-f10825a6116e", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, what is the object type for fl5, fl2 and fl1. Write None if there are none.", "answer": "flevel", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "5a85fb83-89cf-4600-93a9-943b0b8ec32b", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, is it True or False that person3 is at city3?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "12f03fd6-4130-4002-8f69-2ebbec8e7827", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, is it True or False that fuel level fl1 is next to fuel level fl0?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "d095d997-ec7c-4087-9730-4032a864b818", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, is it True or False that fuel level fl5 is next to fuel level fl4?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "5b39fd04-4626-4c0c-86e3-39d04b71ee11", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, is it True or False that person6 is at city2?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "f63db7c1-1a9b-47fa-b0fe-9df3363e3e17", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, is it True or False that fuel level fl2 is not next to fuel level fl5, fuel level fl5 is not next to fuel level fl0, fuel level fl6 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl5, fuel level fl5 is not next to fuel level fl1, fuel level fl1 is not next to fuel level fl5, fuel level fl5 is not next to fuel level fl6, fuel level fl5 is not next to fuel level fl2 and fuel level fl5 is not next to fuel level fl3?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "4f1c4572-f46a-4a32-972a-6bf91010ad03", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, is it True or False that person3 is not in plane1, plane1 does not have fuel level fl5, plane1 does not have fuel level fl3, plane1 does not have fuel level fl1, person2 is not in plane1, plane1 does not have fuel level fl2 and plane1 does not have fuel level fl6?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "f9bfeb8f-8f05-4bfc-810d-dba04e5aaa6f", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, is it True or False that fuel level fl4 is not next to fuel level fl6?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "46cddfdb-1054-454c-b24b-4d4d98a0f980", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, is it True or False that person6 is not at city3, person6 is not at city2 and person6 is not in plane1?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "a33e518b-53ed-447d-9c3e-97bdc9d91ce5", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, list all objects associated with type flevel. Write None if there are none.", "answer": "fl0, fl1, fl2, fl3, fl4, fl5 and fl6", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "2baf0fde-fdcf-4a15-9b09-2e414261b031", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, list all objects associated with type aircraft. Write None if there are none.", "answer": "plane1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "c450a496-f246-48c2-ae4c-a1eac6868125", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, list all objects associated with type person. Write None if there are none.", "answer": "person1, person2, person3, person4, person5, person6, person7 and person8", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "355084af-1dfd-4c0c-b905-65b2d6cd0685", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, list all objects associated with type city. Write None if there are none.", "answer": "city0, city1, city2 and city3", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "c3b51649-cf44-4589-a138-3ccf3dcaf550", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, what is the object type for fl6. Write None if there are none.", "answer": "flevel", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "fbb5bc66-6f73-42fc-80d1-b6dc8befe767", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, what is the object type for person3, person8, person7, person2, person1, person5, person4 and person6. Write None if there are none.", "answer": "person", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "759712e9-070f-4132-bc3f-50e48556aa1f", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, what is the object type for fl5, fl1, fl3, fl0 and fl6. Write None if there are none.", "answer": "flevel", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "9fc8b484-7c17-4be6-871d-10c5405613e0", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, what is the object type for plane1. Write None if there are none.", "answer": "aircraft", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "6bb5a0d6-4c5d-4486-be0c-dc330bb21993", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, is it True or False that plane1 is at city3 and person7 is in plane1?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "cac5f86d-aa14-427d-a999-71e098ed144e", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, is it True or False that person3 is at city3?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "e4f2e614-8d6c-492c-bbd6-73ceebc40d81", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, is it True or False that person3 is at city0?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "9e113bcd-6404-4147-b05e-8749bd1ac462", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, is it True or False that person4 is in plane1?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "c960d52c-4c7e-4bde-b914-a157ad769751", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, is it True or False that person3 is not at city2, person3 is not at city3 and person3 is not at city1?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "315076d0-fa23-4c52-ab6b-1a0f6582a5c7", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, is it True or False that person4 is not at city2, person8 is not at city2, person3 is not at city2, person2 is not at city2, plane1 is not at city2 and person1 is not at city2?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "cb22c682-a360-4021-836e-d045af0f86cc", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, is it True or False that fuel level fl6 is not next to fuel level fl1, plane1 does not have fuel level fl1, fuel level fl1 is not next to fuel level fl4 and fuel level fl3 is not next to fuel level fl1?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "41047a34-8bd8-47cc-b453-16ec62d7a2e1", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, is it True or False that person1 is not at city0, person1 is not in plane1, person1 is not at city2 and person1 is not at city3?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "44f5a989-9ffd-4b34-a403-2bbd48525788", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, list all objects associated with type aircraft. Write None if there are none.", "answer": "plane1", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "52eafd87-168e-4bec-9c7d-0846b5aee7b7", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, list all objects associated with type city. Write None if there are none.", "answer": "city0, city1, city2 and city3", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "41866c31-013e-4051-9c66-c08cb5f6af9b", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, list all objects associated with type person. Write None if there are none.", "answer": "person1, person2, person3, person4, person5, person6, person7 and person8", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "782a38c3-df1c-476c-8fab-a2a5a42e2dd2", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, list all objects associated with type flevel. Write None if there are none.", "answer": "fl0, fl1, fl2, fl3, fl4, fl5 and fl6", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "a9293c0e-23fc-4b5a-9497-e8d5fe591fed", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, what is the object type for city0, city2 and city1. Write None if there are none.", "answer": "city", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "bb28beab-cf7a-49c5-a245-fd85d77caaab", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, what is the object type for plane1. Write None if there are none.", "answer": "aircraft", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "34e9731f-b712-42d9-8878-d154e5c6f69b", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, what is the object type for fl2, fl0, fl4 and fl3. Write None if there are none.", "answer": "flevel", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "ec4096c1-7356-47d8-8be9-b588b960803e", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, what is the object type for fl0, fl3, fl4, fl5, fl2 and fl6. Write None if there are none.", "answer": "flevel", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "e59f3419-5263-4450-a726-17390cd370d7", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, is it True or False that person5 is at city3?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "ebfe0bdf-d882-4e69-9171-b0e130a0b42a", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, is it True or False that fuel level fl1 is next to fuel level fl0?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "fe77e30c-7f83-4400-be66-a14ab92757d0", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, is it True or False that fuel level fl1 is next to fuel level fl0 and fuel level fl0 is next to fuel level fl1?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "c87977bc-ac6e-4462-a7d7-6a376ee2dcb0", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, is it True or False that fuel level fl6 is next to fuel level fl5?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "e8bf6aa1-48e1-4b8b-811f-ed4dbc175c32", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, is it True or False that fuel level fl3 is not next to fuel level fl2?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "a1a76eef-043e-43e4-a673-e1d5689016da", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, is it True or False that person8 is not at city0?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "4b209420-3088-4a04-93ed-1f767cbc4de0", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, is it True or False that fuel level fl3 is not next to fuel level fl0, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl3, fuel level fl2 is not next to fuel level fl3, fuel level fl3 is not next to fuel level fl6, fuel level fl0 is not next to fuel level fl3, fuel level fl3 is not next to fuel level fl4 and fuel level fl6 is not next to fuel level fl3?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "68d31b4d-98b5-47aa-b5d4-b28a12121999", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, is it True or False that person6 is not at city2?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "8c632d01-ad7d-44b7-9a2e-884fc0ae08f5", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, list all objects associated with type flevel. Write None if there are none.", "answer": "fl0, fl1, fl2, fl3, fl4, fl5 and fl6", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "08fc809e-80ba-4b3a-93b4-761141fa1d2e", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, list all objects associated with type aircraft. Write None if there are none.", "answer": "plane1", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "04941c64-dc82-4dbb-8732-ef8d13762399", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, list all objects associated with type city. Write None if there are none.", "answer": "city0, city1, city2 and city3", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "3ad66031-7a37-42d3-933c-41f971b4e7d0", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, list all objects associated with type person. Write None if there are none.", "answer": "person1, person2, person3, person4, person5, person6, person7 and person8", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "a3eb7d7e-d26d-4009-b19a-388f39825e03", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, what is the object type for fl6, fl5, fl3, fl1 and fl0. Write None if there are none.", "answer": "flevel", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "b4ba7cfa-28aa-407e-bc84-275144ca3803", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, what is the object type for city1. Write None if there are none.", "answer": "city", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "d4d8e61e-2c93-4002-8aa6-dbdeb64a3f0a", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, what is the object type for city1, city2 and city3. Write None if there are none.", "answer": "city", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "78ca1ad8-48b9-43e0-9276-9b5edb1b75c2", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, what is the object type for person6, person5, person2 and person1. Write None if there are none.", "answer": "person", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "92de40f4-6c31-4547-a5cd-caff31601047", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is it True or False that plane1 is at city1 and person1 is at city1?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "fed37174-a6b2-42bf-bdbb-525b77c759ae", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is it True or False that fuel level fl3 is next to fuel level fl2?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "2c2ab6fc-6bfb-4681-9687-13b07fd316c7", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is it True or False that person4 is at city2?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "e8e86832-0bda-4683-87cf-f3d1809a35f5", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is it True or False that person4 is in plane1?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "cf7e29e0-89dd-4c19-8df6-9e5df444c8cb", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is it True or False that person8 is not at city2, person2 is not at city2, person5 is not at city2, person4 is not at city2, person1 is not at city2 and person3 is not at city2?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "645d6936-813f-43e2-8813-d8c2dfbdab1f", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is it True or False that person7 is not at city2?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "7d561d56-920c-4dd3-af19-985b852a19a4", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is it True or False that plane1 does not have fuel level fl4, fuel level fl4 is not next to fuel level fl6, fuel level fl1 is not next to fuel level fl4, fuel level fl6 is not next to fuel level fl4, fuel level fl4 is not next to fuel level fl1, fuel level fl0 is not next to fuel level fl4, fuel level fl4 is not next to fuel level fl2 and fuel level fl4 is not next to fuel level fl0?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "60609b4e-5c5b-4213-a356-7d7cbad1ab85", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is it True or False that person5 is not in plane1, person5 is not at city2 and person5 is not at city1?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "b4852de9-1ab0-40fe-9474-bda863bdc674", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, list all objects associated with type person. Write None if there are none.", "answer": "person1, person2, person3, person4, person5, person6, person7 and person8", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "d7cd68e2-9c3c-43b5-ba78-fb0ce5237b5e", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, list all objects associated with type aircraft. Write None if there are none.", "answer": "plane1", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "facbb085-4b19-483f-ae69-5659b73df35c", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, list all objects associated with type city. Write None if there are none.", "answer": "city0, city1, city2 and city3", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "be341de6-2e47-4232-adc9-df945e9f73f0", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, list all objects associated with type flevel. Write None if there are none.", "answer": "fl0, fl1, fl2, fl3, fl4, fl5 and fl6", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "3468d3aa-f3d7-46ba-8908-0744dfaf460b", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, what is the object type for fl5, fl4, fl2, fl3, fl6, fl1 and fl0. Write None if there are none.", "answer": "flevel", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "b870c5fc-9c07-465a-a7b9-2d563b06912e", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, what is the object type for plane1. Write None if there are none.", "answer": "aircraft", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "af0748db-adae-496c-b7cc-b13a48093c5b", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, what is the object type for city2. Write None if there are none.", "answer": "city", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "c89f5f49-e77a-408e-909a-38a14681c2b0", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, what is the object type for person8, person1, person3, person6 and person4. Write None if there are none.", "answer": "person", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "2a436837-4203-44ee-be1f-7955b2f048ac", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is it True or False that plane1 is at city0?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "f0e189ea-e767-455d-bce9-62c0545bdc0d", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is it True or False that fuel level fl4 is next to fuel level fl2?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "c3c3a2a3-d6da-4ebc-8b5c-6a359a9f3588", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is it True or False that plane1 has fuel level fl2?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "dc1b0d3b-2df5-45ed-b772-a5d73de09b0d", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is it True or False that fuel level fl2 is next to fuel level fl6?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "c46edcfd-bc75-43a7-9e8b-722718f03349", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is it True or False that fuel level fl0 is not next to fuel level fl3?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "985f9e91-0b3e-4a95-aae0-267cd5f76538", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is it True or False that person7 is not at city3?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "fd50c002-822d-46ba-8033-5c121d8f802c", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is it True or False that person4 is not at city1?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "f265fdd9-aa08-4748-b027-db5497a6a356", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is it True or False that person4 is not at city2?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "4467c442-d6a3-4a0c-b066-7cf7d276b76f", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level fl1 is next to fuel level fl0, plane1 is at city1, person8 is at city1, person2 is at city1, fuel level fl4 is next to fuel level fl3, person3 is at city0, person5 is at city2, fuel level fl2 is next to fuel level fl1, person7 is at city3, person1 is at city1, person6 is at city2, plane1 has fuel level fl0, person4 is at city3, fuel level fl5 is next to fuel level fl4, fuel level fl6 is next to fuel level fl5 and fuel level fl3 is next to fuel level fl2?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "fbb2fa64-6367-4edd-9ffe-167a590e87d7", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, are all of the following properties of the state True or False: plane1 has fuel level fl2, person8 is in plane1, fuel level fl3 is next to fuel level fl1, fuel level fl5 is next to fuel level fl0, fuel level fl1 is next to fuel level fl0, plane1 is at city1, person8 is at city1, person2 is at city1, fuel level fl4 is next to fuel level fl3, person3 is at city0, person5 is at city2, fuel level fl2 is next to fuel level fl1, person7 is at city3, person1 is at city1, person6 is at city2 and plane1 has fuel level fl0?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "5a200616-badd-4596-a828-738bd213b1dd", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, are all of the following properties of the state True or False: person5 is at city0, fuel level fl5 is next to fuel level fl0, fuel level fl1 is next to fuel level fl0, plane1 is at city1, person8 is at city1, person2 is at city1, fuel level fl4 is next to fuel level fl3, person3 is at city0, person5 is at city2, fuel level fl2 is next to fuel level fl1, person7 is at city3, person1 is at city1, person6 is at city2, plane1 has fuel level fl0, person4 is at city3 and fuel level fl5 is next to fuel level fl4?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "0e7dc224-dc2e-4d98-a2c6-34a676878157", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level fl5 is next to fuel level fl1, person3 is at city3, plane1 has fuel level fl6, person8 is in plane1, fuel level fl5 is next to fuel level fl3, person3 is in plane1, person5 is in plane1, fuel level fl3 is next to fuel level fl5, fuel level fl1 is next to fuel level fl0, plane1 is at city1, person8 is at city1, person2 is at city1, fuel level fl4 is next to fuel level fl3, person3 is at city0, person5 is at city2 and fuel level fl2 is next to fuel level fl1?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "9225daa4-7be1-4d47-9865-969b7cde0588", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, are all of the following properties of the state True or False: person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl2, person3 is not in plane1, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, plane1 does not have fuel level fl1, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, person7 is not at city2, fuel level fl2 is not next to fuel level fl4, plane1 does not have fuel level fl4, fuel level fl5 is not next to fuel level fl2, plane1 does not have fuel level fl3, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person2 is not in plane1, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, person8 is not at city0, plane1 does not have fuel level fl2, person8 is not in plane1, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, fuel level fl6 is not next to fuel level fl3, person5 is not at city0, plane1 is not at city2, plane1 is not at city3, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not in plane1, person4 is not in plane1, person1 is not in plane1, fuel level fl5 is not next to fuel level fl0, person2 is not at city2, fuel level fl2 is not next to fuel level fl6, plane1 is not at city0, fuel level fl4 is not next to fuel level fl6, person7 is not at city0, person2 is not at city3, person8 is not at city2, fuel level fl1 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl1, fuel level fl3 is not next to fuel level fl0, person5 is not in plane1, person1 is not at city3, person3 is not at city2, person6 is not at city0, person5 is not at city3 and fuel level fl3 is not next to fuel level fl5?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "9387237e-ddd4-4cc9-9de5-3e8fb718e391", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level fl4 is not next to fuel level fl3, fuel level fl6 is not next to fuel level fl5, person7 is not at city3, plane1 is not at city1, person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl2, person3 is not in plane1, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, plane1 does not have fuel level fl1, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, person7 is not at city2, fuel level fl2 is not next to fuel level fl4, plane1 does not have fuel level fl4, fuel level fl5 is not next to fuel level fl2, plane1 does not have fuel level fl3, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person2 is not in plane1, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, person8 is not at city0, plane1 does not have fuel level fl2, person8 is not in plane1, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, fuel level fl6 is not next to fuel level fl3, person5 is not at city0, plane1 is not at city2, plane1 is not at city3, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not in plane1, person4 is not in plane1, person1 is not in plane1, fuel level fl5 is not next to fuel level fl0, person2 is not at city2, fuel level fl2 is not next to fuel level fl6, plane1 is not at city0, fuel level fl4 is not next to fuel level fl6, person7 is not at city0, person2 is not at city3, person8 is not at city2, fuel level fl1 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl1, fuel level fl3 is not next to fuel level fl0, person5 is not in plane1 and person1 is not at city3?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "20964985-6ec1-48d3-af1f-0b0af8e21793", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, are all of the following properties of the state True or False: plane1 is not at city1, person8 is not at city1, person4 is not at city3, person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl2, person3 is not in plane1, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, plane1 does not have fuel level fl1, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, person7 is not at city2, fuel level fl2 is not next to fuel level fl4, plane1 does not have fuel level fl4, fuel level fl5 is not next to fuel level fl2, plane1 does not have fuel level fl3, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person2 is not in plane1, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, person8 is not at city0, plane1 does not have fuel level fl2, person8 is not in plane1, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, fuel level fl6 is not next to fuel level fl3, person5 is not at city0, plane1 is not at city2, plane1 is not at city3, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not in plane1, person4 is not in plane1, person1 is not in plane1, fuel level fl5 is not next to fuel level fl0, person2 is not at city2, fuel level fl2 is not next to fuel level fl6, plane1 is not at city0, fuel level fl4 is not next to fuel level fl6, person7 is not at city0, person2 is not at city3, person8 is not at city2, fuel level fl1 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl1, fuel level fl3 is not next to fuel level fl0, person5 is not in plane1, person1 is not at city3 and person3 is not at city2?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "1ee30396-cf8c-4313-ab1e-67f56ba0e754", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level fl2 is not next to fuel level fl1, fuel level fl4 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl0, fuel level fl6 is not next to fuel level fl5, plane1 does not have fuel level fl0, person8 is not at city1, fuel level fl3 is not next to fuel level fl2, person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl2, person3 is not in plane1, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, plane1 does not have fuel level fl1, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, person7 is not at city2, fuel level fl2 is not next to fuel level fl4, plane1 does not have fuel level fl4, fuel level fl5 is not next to fuel level fl2, plane1 does not have fuel level fl3, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person2 is not in plane1, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, person8 is not at city0, plane1 does not have fuel level fl2, person8 is not in plane1, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, fuel level fl6 is not next to fuel level fl3, person5 is not at city0, plane1 is not at city2, plane1 is not at city3, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not in plane1, person4 is not in plane1, person1 is not in plane1, fuel level fl5 is not next to fuel level fl0, person2 is not at city2, fuel level fl2 is not next to fuel level fl6, plane1 is not at city0, fuel level fl4 is not next to fuel level fl6, person7 is not at city0, person2 is not at city3, person8 is not at city2 and fuel level fl1 is not next to fuel level fl2?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "cd75d02f-27df-4a21-bfab-a486fc1a8f1b", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, list all valid properties of the state that involve person4. Write None if there are none.", "answer": "person4 is at city3", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "21f3debf-f0dd-496f-9333-ee65da5e2396", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, list all valid properties of the state that involve city3. Write None if there are none.", "answer": "person7 is at city3 and person4 is at city3", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "60e4cd8f-6103-4dcc-9bb2-c53322f6bda7", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, list all valid properties of the state that involve fl6. Write None if there are none.", "answer": "fuel level fl6 is next to fuel level fl5", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "8042057a-31b8-44e3-ab08-e8f8fb0bb5c3", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, list all valid properties of the state that involve city2. Write None if there are none.", "answer": "person5 is at city2 and person6 is at city2", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "cb507331-2f1e-468a-a509-15ae0ae46bca", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, list all valid properties of the state that involve negations that involve person4. Write None if there are none.", "answer": "person4 is not at city2, person4 is not at city0, person4 is not at city1 and person4 is not in plane1", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "0d1ab374-c8eb-4269-bc44-e11d24e87f97", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, list all valid properties of the state that involve negations that involve person5. Write None if there are none.", "answer": "person5 is not at city1, person5 is not at city0, person5 is not in plane1 and person5 is not at city3", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "dfdc8802-2d6a-46cd-a0a3-c6138257efa3", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, list all valid properties of the state that involve negations that involve fl2. Write None if there are none.", "answer": "fuel level fl0 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl2, fuel level fl2 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl2, fuel level fl2 is not next to fuel level fl3, fuel level fl2 is not next to fuel level fl0, fuel level fl2 is not next to fuel level fl5, plane1 does not have fuel level fl2, fuel level fl4 is not next to fuel level fl2, fuel level fl2 is not next to fuel level fl6 and fuel level fl1 is not next to fuel level fl2", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "41a57e89-d76a-4f42-a1c8-51a58707ac14", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, list all valid properties of the state that involve negations that involve person6. Write None if there are none.", "answer": "person6 is not in plane1, person6 is not at city1, person6 is not at city3 and person6 is not at city0", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "f0b5465d-262b-44cd-ac3e-b5bf28861cf4", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, is it True or False that plane1 has fuel level fl4?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "ab3b7cd5-320a-46cd-a33e-7a7bc63cebd9", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, is it True or False that person5 is at city1?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "03d57132-9546-44b7-b1f3-1e52a26dbf19", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, is it True or False that fuel level fl2 is next to fuel level fl5?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "9c3eba01-b107-48e1-9c7b-e5c6fd3f7d2a", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, is it True or False that fuel level fl3 is next to fuel level fl6?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "abbed963-f2e0-478f-82e8-bedd84111392", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, is it True or False that person3 is not at city1?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "83075c4e-04d4-4ca0-82d1-b941930938d0", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, is it True or False that person5 is not at city2?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "67629db3-e1b3-4a87-9661-74ccc3c69646", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, is it True or False that person1 is not at city1?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "081f5ac2-7823-4bd1-83a5-78f9533b4b6a", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, is it True or False that fuel level fl5 is not next to fuel level fl4?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "28c2531c-9d1b-4318-a920-451d37675c29", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level fl4 is next to fuel level fl5, fuel level fl6 is next to fuel level fl1, fuel level fl6 is next to fuel level fl0, person2 is at city0, fuel level fl0 is next to fuel level fl6, person5 is at city0, person7 is in plane1, person2 is at city3, plane1 has fuel level fl2, fuel level fl1 is next to fuel level fl6, fuel level fl4 is next to fuel level fl6, person1 is at city0, fuel level fl3 is next to fuel level fl1, person8 is at city2, fuel level fl1 is next to fuel level fl2 and fuel level fl1 is next to fuel level fl0?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "db5f45d2-39a8-4455-9dc2-be89dd1550ff", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, are all of the following properties of the state True or False: person2 is at city0, person5 is at city1, fuel level fl1 is next to fuel level fl0, plane1 is at city1, person8 is at city1, person2 is at city1, fuel level fl4 is next to fuel level fl3, person3 is at city0, person5 is at city2, fuel level fl2 is next to fuel level fl1, person7 is at city3, person1 is at city1, person4 is at city3, person6 is at city2, plane1 has fuel level fl4 and fuel level fl5 is next to fuel level fl4?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "0b9d77fa-4a61-4bb0-a61b-ddef05bf8ea6", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level fl1 is next to fuel level fl0, plane1 is at city1, person8 is at city1, person2 is at city1, fuel level fl4 is next to fuel level fl3, person3 is at city0, person5 is at city2, fuel level fl2 is next to fuel level fl1, person7 is at city3, person1 is at city1, person4 is at city3, person6 is at city2, plane1 has fuel level fl4, fuel level fl5 is next to fuel level fl4, fuel level fl6 is next to fuel level fl5 and fuel level fl3 is next to fuel level fl2?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "165e8978-6f28-4024-af22-773eb73cdf8a", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level fl0 is next to fuel level fl3, fuel level fl1 is next to fuel level fl0, plane1 is at city1, person8 is at city1, person2 is at city1, fuel level fl4 is next to fuel level fl3, person3 is at city0, person5 is at city2, fuel level fl2 is next to fuel level fl1, person7 is at city3, person1 is at city1, person4 is at city3, person6 is at city2, plane1 has fuel level fl4, fuel level fl5 is next to fuel level fl4 and fuel level fl6 is next to fuel level fl5?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "79a383a2-b1a4-4d02-bc93-c7b55dc4f506", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, are all of the following properties of the state True or False: person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl2, person3 is not in plane1, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, plane1 does not have fuel level fl1, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, person7 is not at city2, fuel level fl2 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl2, plane1 does not have fuel level fl3, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person2 is not in plane1, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, person8 is not at city0, plane1 does not have fuel level fl2, person8 is not in plane1, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, fuel level fl6 is not next to fuel level fl3, person5 is not at city0, plane1 is not at city2, plane1 is not at city3, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not in plane1, person4 is not in plane1, person1 is not in plane1, plane1 does not have fuel level fl0, fuel level fl5 is not next to fuel level fl0, person2 is not at city2, fuel level fl2 is not next to fuel level fl6, plane1 is not at city0, fuel level fl4 is not next to fuel level fl6, person7 is not at city0, person2 is not at city3, person8 is not at city2, fuel level fl1 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl1, fuel level fl3 is not next to fuel level fl0, person5 is not in plane1, person1 is not at city3, person3 is not at city2, person6 is not at city0, person5 is not at city3 and fuel level fl3 is not next to fuel level fl5?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "1de579b8-dd02-4575-b530-6e6308b63218", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level fl3 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl5, person3 is not at city0, fuel level fl2 is not next to fuel level fl1, person6 is not at city2, person2 is not at city1, person5 is not at city2, fuel level fl5 is not next to fuel level fl4, plane1 is not at city1, person8 is not at city1, person1 is not at city1, plane1 does not have fuel level fl4, person4 is not at city3, person7 is not at city3, person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl2, person3 is not in plane1, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, plane1 does not have fuel level fl1, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, person7 is not at city2, fuel level fl2 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl2, plane1 does not have fuel level fl3, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person2 is not in plane1, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, person8 is not at city0, plane1 does not have fuel level fl2, person8 is not in plane1, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, fuel level fl6 is not next to fuel level fl3, person5 is not at city0, plane1 is not at city2, plane1 is not at city3, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not in plane1, person4 is not in plane1, person1 is not in plane1, plane1 does not have fuel level fl0, fuel level fl5 is not next to fuel level fl0, person2 is not at city2 and fuel level fl2 is not next to fuel level fl6?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "759c2404-fbc5-4b2d-9cfc-ed3cf64b92f4", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, are all of the following properties of the state True or False: plane1 is not at city1, person1 is not at city1, person5 is not at city2, fuel level fl6 is not next to fuel level fl5, fuel level fl1 is not next to fuel level fl0, fuel level fl4 is not next to fuel level fl3, person3 is not at city0, person4 is not at city3, plane1 does not have fuel level fl4, person8 is not at city1, person2 is not at city1, fuel level fl2 is not next to fuel level fl1, person6 is not at city2, person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl2, person3 is not in plane1, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, plane1 does not have fuel level fl1, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, person7 is not at city2, fuel level fl2 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl2, plane1 does not have fuel level fl3, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person2 is not in plane1, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, person8 is not at city0, plane1 does not have fuel level fl2, person8 is not in plane1, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, fuel level fl6 is not next to fuel level fl3, person5 is not at city0, plane1 is not at city2, plane1 is not at city3, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not in plane1, person4 is not in plane1, person1 is not in plane1, plane1 does not have fuel level fl0, fuel level fl5 is not next to fuel level fl0, person2 is not at city2, fuel level fl2 is not next to fuel level fl6 and plane1 is not at city0?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "4f0deca6-44f4-43e4-9b83-bf5fe3ebaef0", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, are all of the following properties of the state True or False: plane1 is not at city1, fuel level fl6 is not next to fuel level fl5, person3 is not at city0, fuel level fl1 is not next to fuel level fl0, person1 is not at city1, plane1 does not have fuel level fl4, person4 is not at city3, fuel level fl3 is not next to fuel level fl2, person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl2, person3 is not in plane1, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, plane1 does not have fuel level fl1, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, person7 is not at city2, fuel level fl2 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl2, plane1 does not have fuel level fl3, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person2 is not in plane1, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, person8 is not at city0, plane1 does not have fuel level fl2, person8 is not in plane1, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, fuel level fl6 is not next to fuel level fl3, person5 is not at city0, plane1 is not at city2, plane1 is not at city3, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not in plane1, person4 is not in plane1, person1 is not in plane1, plane1 does not have fuel level fl0, fuel level fl5 is not next to fuel level fl0, person2 is not at city2, fuel level fl2 is not next to fuel level fl6, plane1 is not at city0, fuel level fl4 is not next to fuel level fl6, person7 is not at city0, person2 is not at city3, person8 is not at city2 and fuel level fl1 is not next to fuel level fl2?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "1f0d2d06-3a3f-4c12-8db4-e987f08260ec", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, list all valid properties of the state that involve plane1. Write None if there are none.", "answer": "plane1 is at city1 and plane1 has fuel level fl4", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "cb1dd092-4a90-4c81-a755-4f9b4e4fc228", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, list all valid properties of the state that involve city2. Write None if there are none.", "answer": "person5 is at city2 and person6 is at city2", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "0764c603-b4d0-497c-b4d7-918d5aad5345", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, list all valid properties of the state that involve city3. Write None if there are none.", "answer": "person7 is at city3 and person4 is at city3", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "acec3bc7-d283-46c6-96a3-c738a4150e18", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, list all valid properties of the state that involve fl0. Write None if there are none.", "answer": "fuel level fl1 is next to fuel level fl0", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "f79d9c4d-d642-427b-a2a8-cb2cd561a5cd", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, list all valid properties of the state that involve negations that involve fl6. Write None if there are none.", "answer": "fuel level fl6 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl0, fuel level fl0 is not next to fuel level fl6, fuel level fl5 is not next to fuel level fl6, fuel level fl6 is not next to fuel level fl4, fuel level fl6 is not next to fuel level fl3, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl2 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl6 and fuel level fl6 is not next to fuel level fl1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "c9e9b973-4e79-4237-a1d9-116f3abb86b0", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, list all valid properties of the state that involve negations that involve city2. Write None if there are none.", "answer": "person4 is not at city2, person1 is not at city2, person7 is not at city2, plane1 is not at city2, person2 is not at city2, person8 is not at city2 and person3 is not at city2", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "44aea76e-2e3c-4740-821f-393baaa65ffc", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, list all valid properties of the state that involve negations that involve fl0. Write None if there are none.", "answer": "fuel level fl4 is not next to fuel level fl0, fuel level fl0 is not next to fuel level fl1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl0, fuel level fl0 is not next to fuel level fl6, fuel level fl2 is not next to fuel level fl0, fuel level fl0 is not next to fuel level fl4, fuel level fl0 is not next to fuel level fl3, plane1 does not have fuel level fl0, fuel level fl5 is not next to fuel level fl0 and fuel level fl3 is not next to fuel level fl0", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "7d6a9d91-db6b-4b52-974e-8f37a886e058", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, list all valid properties of the state that involve negations that involve fl3. Write None if there are none.", "answer": "plane1 does not have fuel level fl3, fuel level fl2 is not next to fuel level fl3, fuel level fl3 is not next to fuel level fl1, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl3, fuel level fl0 is not next to fuel level fl3, fuel level fl6 is not next to fuel level fl3, fuel level fl3 is not next to fuel level fl6, fuel level fl3 is not next to fuel level fl0 and fuel level fl3 is not next to fuel level fl5", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "a38dee7c-7d96-4652-aee7-f8441525cd08", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, is it True or False that fuel level fl0 is next to fuel level fl2?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "b6ab8106-e684-45af-a66c-cb2888d923ee", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, is it True or False that plane1 is at city0?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "b07d118d-e127-4114-9299-e704c951122e", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, is it True or False that fuel level fl1 is next to fuel level fl6?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "e9b0a7f9-c6bc-4d1c-8e88-5894f2ae84da", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, is it True or False that plane1 has fuel level fl5?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "5b00d1c1-91a3-4118-afaa-3ae823cfc8a9", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, is it True or False that fuel level fl5 is not next to fuel level fl4?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "213e9c8e-707b-4775-aaf6-6dc578b236a6", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, is it True or False that fuel level fl3 is not next to fuel level fl0?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "1f8a8503-1585-4078-9631-ba0bc0ef212b", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, is it True or False that person1 is not at city0?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "1d04ac3a-f939-40c5-a605-082ffd193e50", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, is it True or False that fuel level fl2 is not next to fuel level fl3?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "436cd531-b611-4eec-abb2-9f0b60d9ea27", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level fl1 is next to fuel level fl0, person2 is in plane1, person8 is in plane1, person3 is at city0, fuel level fl4 is next to fuel level fl3, person5 is at city2, person7 is in plane1, fuel level fl2 is next to fuel level fl1, plane1 is at city3, person4 is in plane1, person1 is at city1, plane1 has fuel level fl3, person6 is at city2, fuel level fl5 is next to fuel level fl4, fuel level fl6 is next to fuel level fl5 and fuel level fl3 is next to fuel level fl2?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "1fb8f31e-89bb-4c8d-95df-6b42c3a29dc3", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level fl1 is next to fuel level fl2, person8 is at city3, plane1 has fuel level fl0, person7 is at city2, person8 is at city0, person3 is at city1, fuel level fl1 is next to fuel level fl0, person2 is in plane1, person8 is in plane1, person3 is at city0, fuel level fl4 is next to fuel level fl3, person5 is at city2, person7 is in plane1, fuel level fl2 is next to fuel level fl1, plane1 is at city3 and person4 is in plane1?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "42668882-f551-4358-9699-b82ab7e4c91b", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, are all of the following properties of the state True or False: person6 is in plane1, fuel level fl1 is next to fuel level fl5, fuel level fl1 is next to fuel level fl4, person5 is at city0, fuel level fl1 is next to fuel level fl0, person2 is in plane1, person8 is in plane1, person3 is at city0, fuel level fl4 is next to fuel level fl3, person5 is at city2, person7 is in plane1, fuel level fl2 is next to fuel level fl1, plane1 is at city3, person4 is in plane1, person1 is at city1 and plane1 has fuel level fl3?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "b1ecb10f-3fe2-46ad-850c-810465d4bcc4", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, are all of the following properties of the state True or False: plane1 has fuel level fl0, fuel level fl4 is next to fuel level fl2, plane1 has fuel level fl1, fuel level fl1 is next to fuel level fl2, fuel level fl0 is next to fuel level fl6, fuel level fl2 is next to fuel level fl0, fuel level fl5 is next to fuel level fl2, person4 is at city3, fuel level fl4 is next to fuel level fl5, fuel level fl0 is next to fuel level fl2, fuel level fl4 is next to fuel level fl6, person6 is in plane1, person5 is at city0, person5 is in plane1, fuel level fl1 is next to fuel level fl0 and person2 is in plane1?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "8463388b-628a-4dc6-90e2-1ad7ac1acdba", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, are all of the following properties of the state True or False: person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl2, person3 is not in plane1, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, plane1 does not have fuel level fl1, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, person7 is not at city2, fuel level fl2 is not next to fuel level fl4, plane1 does not have fuel level fl4, fuel level fl5 is not next to fuel level fl2, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, person4 is not at city3, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, person8 is not at city0, plane1 does not have fuel level fl2, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person8 is not at city1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, fuel level fl6 is not next to fuel level fl3, person5 is not at city0, plane1 is not at city2, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not at city3, person1 is not in plane1, plane1 does not have fuel level fl0, fuel level fl5 is not next to fuel level fl0, person2 is not at city2, person2 is not at city1, fuel level fl2 is not next to fuel level fl6, plane1 is not at city0, plane1 is not at city1, fuel level fl4 is not next to fuel level fl6, person7 is not at city0, person2 is not at city3, person8 is not at city2, fuel level fl1 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl1, fuel level fl3 is not next to fuel level fl0, person5 is not in plane1, person1 is not at city3, person3 is not at city2, person6 is not at city0, person5 is not at city3 and fuel level fl3 is not next to fuel level fl5?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "550b6517-fa61-48e5-8de6-04951b93be0b", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level fl6 is not next to fuel level fl5, person2 is not in plane1, person7 is not in plane1, fuel level fl5 is not next to fuel level fl4, fuel level fl3 is not next to fuel level fl2, person8 is not in plane1, fuel level fl4 is not next to fuel level fl3, fuel level fl2 is not next to fuel level fl1, person4 is not in plane1, plane1 does not have fuel level fl3, person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl2, person3 is not in plane1, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, plane1 does not have fuel level fl1, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, person7 is not at city2, fuel level fl2 is not next to fuel level fl4, plane1 does not have fuel level fl4, fuel level fl5 is not next to fuel level fl2, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, person4 is not at city3, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, person8 is not at city0, plane1 does not have fuel level fl2, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person8 is not at city1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, fuel level fl6 is not next to fuel level fl3, person5 is not at city0, plane1 is not at city2, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not at city3, person1 is not in plane1, plane1 does not have fuel level fl0, fuel level fl5 is not next to fuel level fl0, person2 is not at city2, person2 is not at city1, fuel level fl2 is not next to fuel level fl6, plane1 is not at city0, plane1 is not at city1, fuel level fl4 is not next to fuel level fl6, person7 is not at city0 and person2 is not at city3?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "203fcc58-1ba0-45b0-a1ba-54d180d4f973", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level fl5 is not next to fuel level fl4, person1 is not at city1, plane1 does not have fuel level fl3, person8 is not in plane1, fuel level fl2 is not next to fuel level fl1, person2 is not in plane1, fuel level fl3 is not next to fuel level fl2, plane1 is not at city3, person4 is not in plane1, person6 is not at city2, person3 is not at city0, fuel level fl1 is not next to fuel level fl0, person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl2, person3 is not in plane1, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, plane1 does not have fuel level fl1, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, person7 is not at city2, fuel level fl2 is not next to fuel level fl4, plane1 does not have fuel level fl4, fuel level fl5 is not next to fuel level fl2, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, person4 is not at city3, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, person8 is not at city0, plane1 does not have fuel level fl2, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person8 is not at city1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, fuel level fl6 is not next to fuel level fl3, person5 is not at city0, plane1 is not at city2, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not at city3, person1 is not in plane1, plane1 does not have fuel level fl0, fuel level fl5 is not next to fuel level fl0, person2 is not at city2, person2 is not at city1, fuel level fl2 is not next to fuel level fl6, plane1 is not at city0, plane1 is not at city1 and fuel level fl4 is not next to fuel level fl6?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "9408097f-b1d5-4e9a-9b50-244bc95fc628", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, are all of the following properties of the state True or False: person6 is not at city2, person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl2, person3 is not in plane1, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, plane1 does not have fuel level fl1, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, person7 is not at city2, fuel level fl2 is not next to fuel level fl4, plane1 does not have fuel level fl4, fuel level fl5 is not next to fuel level fl2, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, person4 is not at city3, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, person8 is not at city0, plane1 does not have fuel level fl2, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person8 is not at city1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, fuel level fl6 is not next to fuel level fl3, person5 is not at city0, plane1 is not at city2, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not at city3, person1 is not in plane1, plane1 does not have fuel level fl0, fuel level fl5 is not next to fuel level fl0, person2 is not at city2, person2 is not at city1, fuel level fl2 is not next to fuel level fl6, plane1 is not at city0, plane1 is not at city1, fuel level fl4 is not next to fuel level fl6, person7 is not at city0, person2 is not at city3, person8 is not at city2, fuel level fl1 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl1, fuel level fl3 is not next to fuel level fl0, person5 is not in plane1, person1 is not at city3, person3 is not at city2, person6 is not at city0 and person5 is not at city3?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "0ddc4ee0-97a9-462a-8d53-8d3d7bdada53", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, list all valid properties of the state that involve fl2. Write None if there are none.", "answer": "fuel level fl2 is next to fuel level fl1 and fuel level fl3 is next to fuel level fl2", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "b76d37d0-d6d8-421a-9bd8-4401523bdb41", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, list all valid properties of the state that involve city2. Write None if there are none.", "answer": "person5 is at city2 and person6 is at city2", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "0d63b86d-b7b0-45c5-ad93-db5c96cb89f5", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, list all valid properties of the state that involve person3. Write None if there are none.", "answer": "person3 is at city0", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "fd74e54e-c94b-4a61-a990-0adb2176ca86", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, list all valid properties of the state that involve city0. Write None if there are none.", "answer": "person3 is at city0", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "6f30f28c-e181-4371-aeba-68de1379ff20", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, list all valid properties of the state that involve negations that involve city0. Write None if there are none.", "answer": "person2 is not at city0, person1 is not at city0, person8 is not at city0, person4 is not at city0, person5 is not at city0, plane1 is not at city0, person7 is not at city0 and person6 is not at city0", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "85395ebd-87ee-4bb6-9c63-740e7c0e0e26", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, list all valid properties of the state that involve negations that involve person4. Write None if there are none.", "answer": "person4 is not at city2, person4 is not at city3, person4 is not at city0 and person4 is not at city1", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "d105c269-5add-48ef-a07e-5cedbae94dc0", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, list all valid properties of the state that involve negations that involve person5. Write None if there are none.", "answer": "person5 is not at city1, person5 is not at city0, person5 is not in plane1 and person5 is not at city3", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "4ef6763e-a2c5-4ba6-869b-4ae1a33c91eb", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, list all valid properties of the state that involve negations that involve fl4. Write None if there are none.", "answer": "fuel level fl4 is not next to fuel level fl0, fuel level fl2 is not next to fuel level fl4, plane1 does not have fuel level fl4, fuel level fl4 is not next to fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl0 is not next to fuel level fl4, fuel level fl6 is not next to fuel level fl4, fuel level fl4 is not next to fuel level fl1, fuel level fl1 is not next to fuel level fl4, fuel level fl4 is not next to fuel level fl2 and fuel level fl4 is not next to fuel level fl6", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "81bbfd5c-df50-4608-a6df-7732f984eeda", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, is it True or False that fuel level fl3 is next to fuel level fl1?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "5d0d9e7f-70dd-47de-a01c-b05ad5f77838", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, is it True or False that person4 is in plane1?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "ae201db6-134a-4b2f-b622-4d5cfa86e4e7", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, is it True or False that person1 is at city1?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "d45e9080-5098-4216-9ee6-aff650cf3f74", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, is it True or False that person7 is at city0?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "ceaa9dbc-a411-4da9-8197-02ececc54508", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, is it True or False that fuel level fl0 is not next to fuel level fl5?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "49afc2a4-46f6-4650-8785-6c0ff7b3e004", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, is it True or False that person7 is not at city2?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "366aae10-5394-43a7-89ce-9ed9f3f11503", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, is it True or False that fuel level fl6 is not next to fuel level fl5?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "b7bf2911-12f4-46e6-9693-4a9d55ca3b14", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, is it True or False that fuel level fl0 is not next to fuel level fl1?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "7104156a-50d5-467f-ad1d-ef861d4c3de2", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level fl3 is next to fuel level fl1, person5 is at city0, fuel level fl5 is next to fuel level fl2, person1 is in plane1, fuel level fl2 is next to fuel level fl3, person4 is at city1, person3 is in plane1, fuel level fl6 is next to fuel level fl1, fuel level fl3 is next to fuel level fl4, fuel level fl2 is next to fuel level fl6, plane1 is at city1, plane1 has fuel level fl5, fuel level fl6 is next to fuel level fl2, fuel level fl4 is next to fuel level fl5, plane1 has fuel level fl3 and person2 is at city3?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "3aef8eff-0ca9-4a86-83d7-24185b01a154", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level fl2 is next to fuel level fl6, fuel level fl3 is next to fuel level fl6, plane1 is at city1, fuel level fl1 is next to fuel level fl2, fuel level fl1 is next to fuel level fl6, fuel level fl0 is next to fuel level fl1, fuel level fl1 is next to fuel level fl3, fuel level fl3 is next to fuel level fl4, fuel level fl6 is next to fuel level fl4, fuel level fl1 is next to fuel level fl5, person8 is at city1, plane1 is at city2, plane1 has fuel level fl6, fuel level fl5 is next to fuel level fl6, person2 is at city3 and fuel level fl1 is next to fuel level fl0?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "30a6ca8e-f475-426c-8e82-791418b396e5", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, are all of the following properties of the state True or False: person2 is at city3, fuel level fl1 is next to fuel level fl0, person8 is in plane1, fuel level fl4 is next to fuel level fl3, person3 is at city0, fuel level fl2 is next to fuel level fl1, person4 is in plane1, plane1 has fuel level fl1, person1 is at city1, person5 is in plane1, person7 is at city2, person6 is at city2, plane1 is at city0, fuel level fl5 is next to fuel level fl4, fuel level fl6 is next to fuel level fl5 and fuel level fl3 is next to fuel level fl2?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "a6b238a5-2fa9-48e2-a85b-3bf45eba4f6c", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, are all of the following properties of the state True or False: person3 is at city1, person2 is in plane1, plane1 is at city2, fuel level fl6 is next to fuel level fl2, person2 is at city3, fuel level fl1 is next to fuel level fl0, person8 is in plane1, fuel level fl4 is next to fuel level fl3, person3 is at city0, fuel level fl2 is next to fuel level fl1, person4 is in plane1, plane1 has fuel level fl1, person1 is at city1, person5 is in plane1, person7 is at city2 and person6 is at city2?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "6b22acad-c05d-43ed-9b5a-c25d81b3d426", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, are all of the following properties of the state True or False: person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl2, person3 is not in plane1, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl4, plane1 does not have fuel level fl4, fuel level fl5 is not next to fuel level fl2, plane1 does not have fuel level fl3, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person2 is not in plane1, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, person4 is not at city3, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, person8 is not at city0, plane1 does not have fuel level fl2, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person8 is not at city1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, person5 is not at city2, fuel level fl6 is not next to fuel level fl3, person5 is not at city0, plane1 is not at city2, plane1 is not at city3, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not in plane1, person7 is not at city3, person1 is not in plane1, plane1 does not have fuel level fl0, fuel level fl5 is not next to fuel level fl0, person2 is not at city2, person2 is not at city1, fuel level fl2 is not next to fuel level fl6, plane1 is not at city1, fuel level fl4 is not next to fuel level fl6, person7 is not at city0, person8 is not at city2, fuel level fl1 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl1, fuel level fl3 is not next to fuel level fl0, person1 is not at city3, person3 is not at city2, person6 is not at city0, person5 is not at city3 and fuel level fl3 is not next to fuel level fl5?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "3178e051-59d3-44c5-8a65-ceb6d2b07e39", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, are all of the following properties of the state True or False: person4 is not in plane1, plane1 does not have fuel level fl1, person3 is not at city0, person5 is not in plane1, fuel level fl3 is not next to fuel level fl2, person6 is not at city2, person1 is not at city1, fuel level fl2 is not next to fuel level fl1, fuel level fl5 is not next to fuel level fl4, person8 is not in plane1, plane1 is not at city0, fuel level fl6 is not next to fuel level fl5, person7 is not at city2, fuel level fl1 is not next to fuel level fl0, person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl2, person3 is not in plane1, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl4, plane1 does not have fuel level fl4, fuel level fl5 is not next to fuel level fl2, plane1 does not have fuel level fl3, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person2 is not in plane1, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, person4 is not at city3, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, person8 is not at city0, plane1 does not have fuel level fl2, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person8 is not at city1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, person5 is not at city2, fuel level fl6 is not next to fuel level fl3, person5 is not at city0, plane1 is not at city2, plane1 is not at city3, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not in plane1, person7 is not at city3, person1 is not in plane1, plane1 does not have fuel level fl0, fuel level fl5 is not next to fuel level fl0 and person2 is not at city2?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "9f633502-5398-4aab-a751-d205055ebb3c", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level fl4 is not next to fuel level fl3, person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl2, person3 is not in plane1, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl4, plane1 does not have fuel level fl4, fuel level fl5 is not next to fuel level fl2, plane1 does not have fuel level fl3, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person2 is not in plane1, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, person4 is not at city3, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, person8 is not at city0, plane1 does not have fuel level fl2, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person8 is not at city1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, person5 is not at city2, fuel level fl6 is not next to fuel level fl3, person5 is not at city0, plane1 is not at city2, plane1 is not at city3, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not in plane1, person7 is not at city3, person1 is not in plane1, plane1 does not have fuel level fl0, fuel level fl5 is not next to fuel level fl0, person2 is not at city2, person2 is not at city1, fuel level fl2 is not next to fuel level fl6, plane1 is not at city1, fuel level fl4 is not next to fuel level fl6, person7 is not at city0, person8 is not at city2, fuel level fl1 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl1, fuel level fl3 is not next to fuel level fl0, person1 is not at city3, person3 is not at city2, person6 is not at city0 and person5 is not at city3?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "d3f17e00-b152-4dc8-b824-b6eda917c947", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, are all of the following properties of the state True or False: person6 is not at city2, fuel level fl3 is not next to fuel level fl2, person1 is not at city1, person2 is not at city3, person3 is not at city0, plane1 does not have fuel level fl1, person8 is not in plane1, person4 is not in plane1, fuel level fl4 is not next to fuel level fl3, person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl2, person3 is not in plane1, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl4, plane1 does not have fuel level fl4, fuel level fl5 is not next to fuel level fl2, plane1 does not have fuel level fl3, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person2 is not in plane1, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, person4 is not at city3, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, person8 is not at city0, plane1 does not have fuel level fl2, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person8 is not at city1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, person5 is not at city2, fuel level fl6 is not next to fuel level fl3, person5 is not at city0, plane1 is not at city2, plane1 is not at city3, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not in plane1, person7 is not at city3, person1 is not in plane1, plane1 does not have fuel level fl0, fuel level fl5 is not next to fuel level fl0, person2 is not at city2, person2 is not at city1, fuel level fl2 is not next to fuel level fl6, plane1 is not at city1, fuel level fl4 is not next to fuel level fl6 and person7 is not at city0?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "38629b26-0db6-481a-9fc3-94b9a2bda09f", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, list all valid properties of the state that involve fl4. Write None if there are none.", "answer": "fuel level fl4 is next to fuel level fl3 and fuel level fl5 is next to fuel level fl4", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "eac39af4-31c2-4fcd-b512-995fedb2c4f6", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, list all valid properties of the state that involve plane1. Write None if there are none.", "answer": "person8 is in plane1, person4 is in plane1, plane1 has fuel level fl1, person5 is in plane1 and plane1 is at city0", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "dec4b2b4-2366-4c19-8779-0e6f948d34d7", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, list all valid properties of the state that involve person4. Write None if there are none.", "answer": "person4 is in plane1", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "b36438a3-e9b2-442d-881f-46e79eefdc07", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, list all valid properties of the state that involve city0. Write None if there are none.", "answer": "person3 is at city0 and plane1 is at city0", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "01c41dcb-d74f-4e55-9957-46b2de095cb4", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, list all valid properties of the state that involve negations that involve city1. Write None if there are none.", "answer": "person7 is not at city1, person3 is not at city1, person5 is not at city1, person6 is not at city1, person8 is not at city1, person4 is not at city1, person2 is not at city1 and plane1 is not at city1", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "5eaf53ad-4b58-4003-82f4-ca65b5a00c35", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, list all valid properties of the state that involve negations that involve person6. Write None if there are none.", "answer": "person6 is not in plane1, person6 is not at city1, person6 is not at city3 and person6 is not at city0", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "4dae40a0-8c1c-4291-b4ed-cb35c1de949f", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, list all valid properties of the state that involve negations that involve fl0. Write None if there are none.", "answer": "fuel level fl4 is not next to fuel level fl0, fuel level fl0 is not next to fuel level fl1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl0, fuel level fl0 is not next to fuel level fl6, fuel level fl2 is not next to fuel level fl0, fuel level fl0 is not next to fuel level fl4, fuel level fl0 is not next to fuel level fl3, plane1 does not have fuel level fl0, fuel level fl5 is not next to fuel level fl0 and fuel level fl3 is not next to fuel level fl0", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "750ee552-8650-4d05-a5a5-4b996325b001", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, list all valid properties of the state that involve negations that involve fl3. Write None if there are none.", "answer": "plane1 does not have fuel level fl3, fuel level fl2 is not next to fuel level fl3, fuel level fl3 is not next to fuel level fl1, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl3, fuel level fl0 is not next to fuel level fl3, fuel level fl6 is not next to fuel level fl3, fuel level fl3 is not next to fuel level fl6, fuel level fl3 is not next to fuel level fl0 and fuel level fl3 is not next to fuel level fl5", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "a782ec7f-4b3f-40fe-aa44-c8b5886e4353", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is it True or False that person5 is at city0?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "fc5d1a77-db5c-4965-a2ad-f12efee18ae3", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is it True or False that person7 is at city3?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "451831dc-b848-432a-a93e-f1b56ba7d5ec", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is it True or False that plane1 is at city1?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "a51fa6c5-66e7-46c7-bda7-0af5a6fc18ec", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is it True or False that fuel level fl6 is next to fuel level fl4?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "6b5e4c20-7dd6-4612-8ae0-ada5738bfdb2", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is it True or False that fuel level fl0 is not next to fuel level fl1?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "bbb4fa5a-23f2-42d2-92a7-70c13191178c", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is it True or False that person7 is not at city3?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "e5910347-04d1-490d-be6a-66e3a05d683d", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is it True or False that person2 is not in plane1?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "c0701bc9-6e6c-4357-90b7-4827600e77ef", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is it True or False that person1 is not at city1?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "da084246-d348-4028-a3eb-c31378bd863d", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, are all of the following properties of the state True or False: person2 is at city3, fuel level fl1 is next to fuel level fl0, plane1 is at city1, fuel level fl4 is next to fuel level fl3, person8 is at city0, person5 is at city0, fuel level fl2 is next to fuel level fl1, person4 is in plane1, person1 is at city1, person7 is at city2, person6 is at city2, plane1 has fuel level fl0, person3 is in plane1, fuel level fl5 is next to fuel level fl4, fuel level fl6 is next to fuel level fl5 and fuel level fl3 is next to fuel level fl2?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "bdd68c5d-7192-4dc7-be85-5d4aac4e3207", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, are all of the following properties of the state True or False: person6 is at city3, fuel level fl6 is next to fuel level fl3, person1 is at city2, fuel level fl1 is next to fuel level fl3, person6 is at city0, person2 is at city3, fuel level fl1 is next to fuel level fl0, plane1 is at city1, fuel level fl4 is next to fuel level fl3, person8 is at city0, person5 is at city0, fuel level fl2 is next to fuel level fl1, person4 is in plane1, person1 is at city1, person7 is at city2 and person6 is at city2?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "6b532b40-2fc1-47cc-8ad4-10cba61191b3", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, are all of the following properties of the state True or False: person2 is at city2, fuel level fl5 is next to fuel level fl6, person2 is at city0, person5 is in plane1, fuel level fl4 is next to fuel level fl6, person2 is at city3, fuel level fl1 is next to fuel level fl0, plane1 is at city1, fuel level fl4 is next to fuel level fl3, person8 is at city0, person5 is at city0, fuel level fl2 is next to fuel level fl1, person4 is in plane1, person1 is at city1, person7 is at city2 and person6 is at city2?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "ad393439-07eb-4d92-a9f6-5ff0a65dbf95", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level fl5 is next to fuel level fl1, person2 is at city3, fuel level fl1 is next to fuel level fl0, plane1 is at city1, fuel level fl4 is next to fuel level fl3, person8 is at city0, person5 is at city0, fuel level fl2 is next to fuel level fl1, person4 is in plane1, person1 is at city1, person7 is at city2, person6 is at city2, plane1 has fuel level fl0, person3 is in plane1, fuel level fl5 is next to fuel level fl4 and fuel level fl6 is next to fuel level fl5?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "cc679643-e177-4b19-885b-6441c05cd16e", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, are all of the following properties of the state True or False: plane1 does not have fuel level fl0, fuel level fl2 is not next to fuel level fl1, fuel level fl1 is not next to fuel level fl0, person6 is not at city2, fuel level fl6 is not next to fuel level fl5, fuel level fl3 is not next to fuel level fl2, person3 is not in plane1, fuel level fl4 is not next to fuel level fl3, person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, person3 is not at city0, fuel level fl6 is not next to fuel level fl2, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, plane1 does not have fuel level fl1, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl4, plane1 does not have fuel level fl4, fuel level fl5 is not next to fuel level fl2, plane1 does not have fuel level fl3, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person2 is not in plane1, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, person4 is not at city3, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, plane1 does not have fuel level fl2, person8 is not in plane1, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person8 is not at city1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, person5 is not at city2, fuel level fl6 is not next to fuel level fl3, plane1 is not at city3, plane1 is not at city2, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not in plane1, person7 is not at city3, person1 is not in plane1, fuel level fl5 is not next to fuel level fl0, person2 is not at city2, person2 is not at city1, fuel level fl2 is not next to fuel level fl6, plane1 is not at city0, fuel level fl4 is not next to fuel level fl6, person7 is not at city0, person8 is not at city2 and fuel level fl1 is not next to fuel level fl2?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "a6bdfaf9-c4d2-4800-a124-fbc037e41fab", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, are all of the following properties of the state True or False: person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, person3 is not at city0, fuel level fl6 is not next to fuel level fl2, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, plane1 does not have fuel level fl1, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl4, plane1 does not have fuel level fl4, fuel level fl5 is not next to fuel level fl2, plane1 does not have fuel level fl3, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person2 is not in plane1, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, person4 is not at city3, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, plane1 does not have fuel level fl2, person8 is not in plane1, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person8 is not at city1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, person5 is not at city2, fuel level fl6 is not next to fuel level fl3, plane1 is not at city3, plane1 is not at city2, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not in plane1, person7 is not at city3, person1 is not in plane1, fuel level fl5 is not next to fuel level fl0, person2 is not at city2, person2 is not at city1, fuel level fl2 is not next to fuel level fl6, plane1 is not at city0, fuel level fl4 is not next to fuel level fl6, person7 is not at city0, person8 is not at city2, fuel level fl1 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl1, fuel level fl3 is not next to fuel level fl0, person5 is not in plane1, person1 is not at city3, person3 is not at city2, person6 is not at city0, person5 is not at city3 and fuel level fl3 is not next to fuel level fl5?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "e4b0ea30-0116-41a5-8aa0-e4286701d799", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level fl2 is not next to fuel level fl1, plane1 does not have fuel level fl0, person6 is not at city2, fuel level fl6 is not next to fuel level fl5, person2 is not at city3, fuel level fl1 is not next to fuel level fl0, person5 is not at city0, person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, person3 is not at city0, fuel level fl6 is not next to fuel level fl2, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, plane1 does not have fuel level fl1, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl4, plane1 does not have fuel level fl4, fuel level fl5 is not next to fuel level fl2, plane1 does not have fuel level fl3, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person2 is not in plane1, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, person4 is not at city3, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, plane1 does not have fuel level fl2, person8 is not in plane1, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person8 is not at city1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, person5 is not at city2, fuel level fl6 is not next to fuel level fl3, plane1 is not at city3, plane1 is not at city2, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not in plane1, person7 is not at city3, person1 is not in plane1, fuel level fl5 is not next to fuel level fl0, person2 is not at city2, person2 is not at city1, fuel level fl2 is not next to fuel level fl6, plane1 is not at city0, fuel level fl4 is not next to fuel level fl6, person7 is not at city0, person8 is not at city2, fuel level fl1 is not next to fuel level fl2 and fuel level fl6 is not next to fuel level fl1?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "de6945b0-36d5-416a-9d39-b1562f310c8d", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level fl3 is not next to fuel level fl2, person8 is not at city0, person7 is not at city2, fuel level fl2 is not next to fuel level fl1, fuel level fl4 is not next to fuel level fl3, person2 is not at city3, plane1 is not at city1, fuel level fl6 is not next to fuel level fl5, person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, person3 is not at city0, fuel level fl6 is not next to fuel level fl2, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, plane1 does not have fuel level fl1, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl4, plane1 does not have fuel level fl4, fuel level fl5 is not next to fuel level fl2, plane1 does not have fuel level fl3, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person2 is not in plane1, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, person4 is not at city3, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, plane1 does not have fuel level fl2, person8 is not in plane1, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person8 is not at city1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, person5 is not at city2, fuel level fl6 is not next to fuel level fl3, plane1 is not at city3, plane1 is not at city2, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not in plane1, person7 is not at city3, person1 is not in plane1, fuel level fl5 is not next to fuel level fl0, person2 is not at city2, person2 is not at city1, fuel level fl2 is not next to fuel level fl6, plane1 is not at city0, fuel level fl4 is not next to fuel level fl6, person7 is not at city0, person8 is not at city2 and fuel level fl1 is not next to fuel level fl2?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "cc9012a3-34b7-42d7-9f12-8ae288173d85", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, list all valid properties of the state that involve person1. Write None if there are none.", "answer": "person1 is at city1", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "b791fc0e-82a3-446d-942e-6c294a649588", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, list all valid properties of the state that involve person8. Write None if there are none.", "answer": "person8 is at city0", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "53a6e9b4-2144-4abe-81f7-c0d63f61a507", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, list all valid properties of the state that involve person5. Write None if there are none.", "answer": "person5 is at city0", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "6ef99025-ca4f-4452-a85d-1cf8f6c1f4ea", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, list all valid properties of the state that involve city0. Write None if there are none.", "answer": "person8 is at city0 and person5 is at city0", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "a33bc9df-1b68-4edf-9b8e-e37c63fb794c", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, list all valid properties of the state that involve negations that involve person4. Write None if there are none.", "answer": "person4 is not at city2, person4 is not at city3, person4 is not at city0 and person4 is not at city1", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "6750b291-4d9a-44c2-a7ab-3edf1a274359", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, list all valid properties of the state that involve negations that involve person8. Write None if there are none.", "answer": "person8 is not at city3, person8 is not in plane1, person8 is not at city1 and person8 is not at city2", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "00104ec3-e8e3-433b-bfea-e3991d06343c", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, list all valid properties of the state that involve negations that involve fl0. Write None if there are none.", "answer": "fuel level fl4 is not next to fuel level fl0, fuel level fl0 is not next to fuel level fl1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl0, fuel level fl0 is not next to fuel level fl6, fuel level fl2 is not next to fuel level fl0, fuel level fl0 is not next to fuel level fl4, fuel level fl0 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl0 and fuel level fl3 is not next to fuel level fl0", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "179fc494-bbc6-409e-8bce-2699b71cc727", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, list all valid properties of the state that involve negations that involve person3. Write None if there are none.", "answer": "person3 is not at city1, person3 is not at city0, person3 is not at city3 and person3 is not at city2", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "8bcb5ae5-7fca-4daf-ab12-a2af39616523", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, are all of the following properties: person2 is at city2, person8 is at city2, person2 is at city0, person3 is at city2, fuel level fl0 is next to fuel level fl4, fuel level fl3 is next to fuel level fl5, fuel level fl0 is next to fuel level fl1, fuel level fl3 is next to fuel level fl6, person4 is at city0, plane1 is at city2, plane1 is at city3, person1 is at city2, fuel level fl2 is next to fuel level fl6, person8 is at city3, person6 is in plane1 and fuel level fl1 is next to fuel level fl0, correct? Respond with True or False.", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "3390a83b-03c5-4708-9ccd-b8795b12d2c5", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, are all of the following properties: fuel level fl1 is next to fuel level fl0, plane1 is at city1, person8 is at city1, person2 is at city1, fuel level fl4 is next to fuel level fl3, person3 is at city0, person5 is at city2, fuel level fl2 is next to fuel level fl1, person7 is at city3, person1 is at city1, person6 is at city2, plane1 has fuel level fl0, person4 is at city3, fuel level fl5 is next to fuel level fl4, fuel level fl6 is next to fuel level fl5 and fuel level fl3 is next to fuel level fl2, correct? Respond with True or False.", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "3d660261-6d14-4384-927e-e74048baf9ba", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, are all of the following properties: person2 is in plane1, fuel level fl5 is next to fuel level fl2, fuel level fl1 is next to fuel level fl6, fuel level fl3 is next to fuel level fl5, plane1 is at city0, plane1 has fuel level fl3, fuel level fl6 is next to fuel level fl1, fuel level fl4 is next to fuel level fl0, fuel level fl0 is next to fuel level fl3, fuel level fl1 is next to fuel level fl0, plane1 is at city1, person8 is at city1, person2 is at city1, fuel level fl4 is next to fuel level fl3, person3 is at city0 and person5 is at city2, correct? Respond with True or False.", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "819131fa-bc78-4a7b-8746-c04c7f05fd40", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, are all of the following properties: fuel level fl1 is next to fuel level fl5, fuel level fl4 is next to fuel level fl5, plane1 is at city3, fuel level fl1 is next to fuel level fl0, plane1 is at city1, person8 is at city1, person2 is at city1, fuel level fl4 is next to fuel level fl3, person3 is at city0, person5 is at city2, fuel level fl2 is next to fuel level fl1, person7 is at city3, person1 is at city1, person6 is at city2, plane1 has fuel level fl0 and person4 is at city3, correct? Respond with True or False.", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "2dcda6dc-5683-4a80-9030-3db8e2336b57", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, are all of the following properties: fuel level fl2 is not next to fuel level fl1, fuel level fl1 is not next to fuel level fl0, plane1 does not have fuel level fl0, fuel level fl6 is not next to fuel level fl5, person3 is not at city0, fuel level fl3 is not next to fuel level fl2, person7 is not at city3, person6 is not at city2, fuel level fl4 is not next to fuel level fl3, person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl2, person3 is not in plane1, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, plane1 does not have fuel level fl1, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, person7 is not at city2, fuel level fl2 is not next to fuel level fl4, plane1 does not have fuel level fl4, fuel level fl5 is not next to fuel level fl2, plane1 does not have fuel level fl3, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person2 is not in plane1, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, person8 is not at city0, plane1 does not have fuel level fl2, person8 is not in plane1, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, fuel level fl6 is not next to fuel level fl3, person5 is not at city0, plane1 is not at city2, plane1 is not at city3, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not in plane1, person4 is not in plane1, person1 is not in plane1, fuel level fl5 is not next to fuel level fl0, person2 is not at city2, fuel level fl2 is not next to fuel level fl6, plane1 is not at city0, fuel level fl4 is not next to fuel level fl6, person7 is not at city0, person2 is not at city3 and person8 is not at city2, correct? Respond with True or False.", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "2b0fe0a2-8509-4cce-a57d-bf86c1ccde9d", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, are all of the following properties: person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl2, person3 is not in plane1, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, plane1 does not have fuel level fl1, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, person7 is not at city2, fuel level fl2 is not next to fuel level fl4, plane1 does not have fuel level fl4, fuel level fl5 is not next to fuel level fl2, plane1 does not have fuel level fl3, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person2 is not in plane1, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, person8 is not at city0, plane1 does not have fuel level fl2, person8 is not in plane1, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, fuel level fl6 is not next to fuel level fl3, person5 is not at city0, plane1 is not at city2, plane1 is not at city3, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not in plane1, person4 is not in plane1, person1 is not in plane1, fuel level fl5 is not next to fuel level fl0, person2 is not at city2, fuel level fl2 is not next to fuel level fl6, plane1 is not at city0, fuel level fl4 is not next to fuel level fl6, person7 is not at city0, person2 is not at city3, person8 is not at city2, fuel level fl1 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl1, fuel level fl3 is not next to fuel level fl0, person5 is not in plane1, person1 is not at city3, person3 is not at city2, person6 is not at city0, person5 is not at city3 and fuel level fl3 is not next to fuel level fl5, correct? Respond with True or False.", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "5d90db18-4692-4b40-8a37-c7a90b39e153", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, are all of the following properties: person5 is not at city2, person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl2, person3 is not in plane1, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, plane1 does not have fuel level fl1, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, person7 is not at city2, fuel level fl2 is not next to fuel level fl4, plane1 does not have fuel level fl4, fuel level fl5 is not next to fuel level fl2, plane1 does not have fuel level fl3, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person2 is not in plane1, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, person8 is not at city0, plane1 does not have fuel level fl2, person8 is not in plane1, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, fuel level fl6 is not next to fuel level fl3, person5 is not at city0, plane1 is not at city2, plane1 is not at city3, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not in plane1, person4 is not in plane1, person1 is not in plane1, fuel level fl5 is not next to fuel level fl0, person2 is not at city2, fuel level fl2 is not next to fuel level fl6, plane1 is not at city0, fuel level fl4 is not next to fuel level fl6, person7 is not at city0, person2 is not at city3, person8 is not at city2, fuel level fl1 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl1, fuel level fl3 is not next to fuel level fl0, person5 is not in plane1, person1 is not at city3, person3 is not at city2, person6 is not at city0 and person5 is not at city3, correct? Respond with True or False.", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "c1deb21f-2a7f-413c-9dbb-da4c33dac5e7", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, are all of the following properties: fuel level fl3 is not next to fuel level fl2, person2 is not at city1, person3 is not at city0, fuel level fl6 is not next to fuel level fl5, plane1 is not at city1, fuel level fl1 is not next to fuel level fl0, fuel level fl2 is not next to fuel level fl1, person7 is not at city3, person1 is not at city1, plane1 does not have fuel level fl0, fuel level fl5 is not next to fuel level fl4, person8 is not at city1, fuel level fl4 is not next to fuel level fl3, person6 is not at city2, person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl2, person3 is not in plane1, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, plane1 does not have fuel level fl1, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, person7 is not at city2, fuel level fl2 is not next to fuel level fl4, plane1 does not have fuel level fl4, fuel level fl5 is not next to fuel level fl2, plane1 does not have fuel level fl3, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person2 is not in plane1, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, person8 is not at city0, plane1 does not have fuel level fl2, person8 is not in plane1, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, fuel level fl6 is not next to fuel level fl3, person5 is not at city0, plane1 is not at city2, plane1 is not at city3, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not in plane1, person4 is not in plane1, person1 is not in plane1, fuel level fl5 is not next to fuel level fl0, person2 is not at city2 and fuel level fl2 is not next to fuel level fl6, correct? Respond with True or False.", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "8104adbc-4b32-4904-9f69-ea3753d3ad29", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "fuel level fl1 is next to fuel level fl0, plane1 is at city1, person8 is at city1, person2 is at city1, fuel level fl4 is next to fuel level fl3, person3 is at city0, person5 is at city2, fuel level fl2 is next to fuel level fl1, person7 is at city3, person1 is at city1, person6 is at city2, plane1 has fuel level fl0, person4 is at city3, fuel level fl5 is next to fuel level fl4, fuel level fl6 is next to fuel level fl5 and fuel level fl3 is next to fuel level fl2", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "200cdfcd-dab6-490c-a793-a5da4bd48650", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl2, person3 is not in plane1, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, plane1 does not have fuel level fl1, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, person7 is not at city2, fuel level fl2 is not next to fuel level fl4, plane1 does not have fuel level fl4, fuel level fl5 is not next to fuel level fl2, plane1 does not have fuel level fl3, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person2 is not in plane1, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, person8 is not at city0, plane1 does not have fuel level fl2, person8 is not in plane1, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, fuel level fl6 is not next to fuel level fl3, person5 is not at city0, plane1 is not at city2, plane1 is not at city3, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not in plane1, person4 is not in plane1, person1 is not in plane1, fuel level fl5 is not next to fuel level fl0, person2 is not at city2, fuel level fl2 is not next to fuel level fl6, plane1 is not at city0, fuel level fl4 is not next to fuel level fl6, person7 is not at city0, person2 is not at city3, person8 is not at city2, fuel level fl1 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl1, fuel level fl3 is not next to fuel level fl0, person5 is not in plane1, person1 is not at city3, person3 is not at city2, person6 is not at city0, person5 is not at city3 and fuel level fl3 is not next to fuel level fl5", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "363b9265-8d48-42a3-aaff-14cc2df456ec", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, are all of the following properties: fuel level fl1 is next to fuel level fl0, plane1 is at city1, person8 is at city1, person2 is at city1, fuel level fl4 is next to fuel level fl3, person3 is at city0, person5 is at city2, fuel level fl2 is next to fuel level fl1, person7 is at city3, person1 is at city1, person4 is at city3, person6 is at city2, plane1 has fuel level fl4, fuel level fl5 is next to fuel level fl4, fuel level fl6 is next to fuel level fl5 and fuel level fl3 is next to fuel level fl2, correct? Respond with True or False.", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "a80bd01a-22f0-4b85-9d64-b5913bd10716", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, are all of the following properties: person7 is at city0, fuel level fl1 is next to fuel level fl0, plane1 is at city1, person8 is at city1, person2 is at city1, fuel level fl4 is next to fuel level fl3, person3 is at city0, person5 is at city2, fuel level fl2 is next to fuel level fl1, person7 is at city3, person1 is at city1, person4 is at city3, person6 is at city2, plane1 has fuel level fl4, fuel level fl5 is next to fuel level fl4 and fuel level fl6 is next to fuel level fl5, correct? Respond with True or False.", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "5eb1c396-dfed-4e30-b99e-5c33145eb96f", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, are all of the following properties: person2 is at city3, person3 is at city2, fuel level fl1 is next to fuel level fl0, plane1 is at city1, person8 is at city1, person2 is at city1, fuel level fl4 is next to fuel level fl3, person3 is at city0, person5 is at city2, fuel level fl2 is next to fuel level fl1, person7 is at city3, person1 is at city1, person4 is at city3, person6 is at city2, plane1 has fuel level fl4 and fuel level fl5 is next to fuel level fl4, correct? Respond with True or False.", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "b1f7c9c2-0b2f-475f-bf9f-aac4d0b0e2ad", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, are all of the following properties: person3 is in plane1, person5 is in plane1, person1 is at city2, person3 is at city2, fuel level fl5 is next to fuel level fl6, fuel level fl1 is next to fuel level fl0, plane1 is at city1, person8 is at city1, person2 is at city1, fuel level fl4 is next to fuel level fl3, person3 is at city0, person5 is at city2, fuel level fl2 is next to fuel level fl1, person7 is at city3, person1 is at city1 and person4 is at city3, correct? Respond with True or False.", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "5df52d2f-b153-4ad6-afa7-31ca76ea17bd", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, are all of the following properties: plane1 is not at city1, person5 is not at city2, person1 is not at city1, person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl2, person3 is not in plane1, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, plane1 does not have fuel level fl1, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, person7 is not at city2, fuel level fl2 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl2, plane1 does not have fuel level fl3, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person2 is not in plane1, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, person8 is not at city0, plane1 does not have fuel level fl2, person8 is not in plane1, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, fuel level fl6 is not next to fuel level fl3, person5 is not at city0, plane1 is not at city2, plane1 is not at city3, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not in plane1, person4 is not in plane1, person1 is not in plane1, plane1 does not have fuel level fl0, fuel level fl5 is not next to fuel level fl0, person2 is not at city2, fuel level fl2 is not next to fuel level fl6, plane1 is not at city0, fuel level fl4 is not next to fuel level fl6, person7 is not at city0, person2 is not at city3, person8 is not at city2, fuel level fl1 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl1, fuel level fl3 is not next to fuel level fl0, person5 is not in plane1, person1 is not at city3 and person3 is not at city2, correct? Respond with True or False.", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "daa87cb1-2bb4-468a-ad1e-dc14dc9befae", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, are all of the following properties: person1 is not at city1, person5 is not at city2, fuel level fl1 is not next to fuel level fl0, person3 is not at city0, person4 is not at city3, person8 is not at city1, fuel level fl3 is not next to fuel level fl2, fuel level fl2 is not next to fuel level fl1, person2 is not at city1, person6 is not at city2, person7 is not at city3, plane1 does not have fuel level fl4, plane1 is not at city1, person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl2, person3 is not in plane1, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, plane1 does not have fuel level fl1, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, person7 is not at city2, fuel level fl2 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl2, plane1 does not have fuel level fl3, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person2 is not in plane1, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, person8 is not at city0, plane1 does not have fuel level fl2, person8 is not in plane1, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, fuel level fl6 is not next to fuel level fl3, person5 is not at city0, plane1 is not at city2, plane1 is not at city3, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not in plane1, person4 is not in plane1, person1 is not in plane1, plane1 does not have fuel level fl0, fuel level fl5 is not next to fuel level fl0, person2 is not at city2, fuel level fl2 is not next to fuel level fl6 and plane1 is not at city0, correct? Respond with True or False.", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "a9d19937-86bc-4a5d-8cbd-4b2032988deb", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, are all of the following properties: fuel level fl5 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl0, plane1 does not have fuel level fl4, person3 is not at city0, person4 is not at city3, fuel level fl4 is not next to fuel level fl3, fuel level fl2 is not next to fuel level fl1, person2 is not at city1, person8 is not at city1, person7 is not at city3, person6 is not at city2, fuel level fl6 is not next to fuel level fl5, fuel level fl3 is not next to fuel level fl2, person5 is not at city2, plane1 is not at city1, person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl2, person3 is not in plane1, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, plane1 does not have fuel level fl1, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, person7 is not at city2, fuel level fl2 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl2, plane1 does not have fuel level fl3, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person2 is not in plane1, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, person8 is not at city0, plane1 does not have fuel level fl2, person8 is not in plane1, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, fuel level fl6 is not next to fuel level fl3, person5 is not at city0, plane1 is not at city2, plane1 is not at city3, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not in plane1, person4 is not in plane1, person1 is not in plane1, plane1 does not have fuel level fl0, fuel level fl5 is not next to fuel level fl0 and person2 is not at city2, correct? Respond with True or False.", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "a61df2e9-5dea-48c2-87af-89a7cb5ef4a0", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, are all of the following properties: plane1 is not at city1, person7 is not at city3, person5 is not at city2, fuel level fl3 is not next to fuel level fl2, fuel level fl4 is not next to fuel level fl3, person4 is not at city3, fuel level fl5 is not next to fuel level fl4, person1 is not at city1, fuel level fl1 is not next to fuel level fl0, fuel level fl6 is not next to fuel level fl5, plane1 does not have fuel level fl4, person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl2, person3 is not in plane1, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, plane1 does not have fuel level fl1, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, person7 is not at city2, fuel level fl2 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl2, plane1 does not have fuel level fl3, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person2 is not in plane1, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, person8 is not at city0, plane1 does not have fuel level fl2, person8 is not in plane1, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, fuel level fl6 is not next to fuel level fl3, person5 is not at city0, plane1 is not at city2, plane1 is not at city3, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not in plane1, person4 is not in plane1, person1 is not in plane1, plane1 does not have fuel level fl0, fuel level fl5 is not next to fuel level fl0, person2 is not at city2, fuel level fl2 is not next to fuel level fl6, plane1 is not at city0, fuel level fl4 is not next to fuel level fl6 and person7 is not at city0, correct? Respond with True or False.", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "129c23ac-b8b1-4b9d-8b7c-c7b65e6e71d0", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "fuel level fl1 is next to fuel level fl0, plane1 is at city1, person8 is at city1, person2 is at city1, fuel level fl4 is next to fuel level fl3, person3 is at city0, person5 is at city2, fuel level fl2 is next to fuel level fl1, person7 is at city3, person1 is at city1, person4 is at city3, person6 is at city2, plane1 has fuel level fl4, fuel level fl5 is next to fuel level fl4, fuel level fl6 is next to fuel level fl5 and fuel level fl3 is next to fuel level fl2", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "ae17b00b-727d-4a0d-b9f9-eb13711aabe4", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl2, person3 is not in plane1, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, plane1 does not have fuel level fl1, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, person7 is not at city2, fuel level fl2 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl2, plane1 does not have fuel level fl3, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person2 is not in plane1, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, person8 is not at city0, plane1 does not have fuel level fl2, person8 is not in plane1, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, fuel level fl6 is not next to fuel level fl3, person5 is not at city0, plane1 is not at city2, plane1 is not at city3, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not in plane1, person4 is not in plane1, person1 is not in plane1, plane1 does not have fuel level fl0, fuel level fl5 is not next to fuel level fl0, person2 is not at city2, fuel level fl2 is not next to fuel level fl6, plane1 is not at city0, fuel level fl4 is not next to fuel level fl6, person7 is not at city0, person2 is not at city3, person8 is not at city2, fuel level fl1 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl1, fuel level fl3 is not next to fuel level fl0, person5 is not in plane1, person1 is not at city3, person3 is not at city2, person6 is not at city0, person5 is not at city3 and fuel level fl3 is not next to fuel level fl5", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "33d42437-8ff3-4cc5-9e3d-c26bf2f7d4bb", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, are all of the following properties: fuel level fl1 is next to fuel level fl0, person2 is in plane1, person8 is in plane1, person3 is at city0, fuel level fl4 is next to fuel level fl3, person5 is at city2, person7 is in plane1, fuel level fl2 is next to fuel level fl1, plane1 is at city3, person4 is in plane1, person1 is at city1, plane1 has fuel level fl3, person6 is at city2, fuel level fl5 is next to fuel level fl4, fuel level fl6 is next to fuel level fl5 and fuel level fl3 is next to fuel level fl2, correct? Respond with True or False.", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "70692920-62e0-46a0-9d7d-5afb33d28853", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, are all of the following properties: person8 is at city0, fuel level fl1 is next to fuel level fl3, person8 is at city2, fuel level fl1 is next to fuel level fl5, person3 is at city2, fuel level fl1 is next to fuel level fl0, person2 is in plane1, person8 is in plane1, person3 is at city0, fuel level fl4 is next to fuel level fl3, person5 is at city2, person7 is in plane1, fuel level fl2 is next to fuel level fl1, plane1 is at city3, person4 is in plane1 and person1 is at city1, correct? Respond with True or False.", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "9aa4a400-489f-45b5-88d2-90c241d77674", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, are all of the following properties: fuel level fl0 is next to fuel level fl1, plane1 is at city1, plane1 has fuel level fl6, person6 is at city0, person8 is at city0, fuel level fl1 is next to fuel level fl0, person2 is in plane1, person8 is in plane1, person3 is at city0, fuel level fl4 is next to fuel level fl3, person5 is at city2, person7 is in plane1, fuel level fl2 is next to fuel level fl1, plane1 is at city3, person4 is in plane1 and person1 is at city1, correct? Respond with True or False.", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "d7644f56-5d10-4d25-8628-7b1068b07012", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, are all of the following properties: person5 is at city0, person2 is at city3, fuel level fl1 is next to fuel level fl5, person8 is at city3, plane1 has fuel level fl2, plane1 has fuel level fl1, fuel level fl1 is next to fuel level fl4, person5 is at city3, plane1 is at city1, fuel level fl1 is next to fuel level fl0, person2 is in plane1, person8 is in plane1, person3 is at city0, fuel level fl4 is next to fuel level fl3, person5 is at city2 and person7 is in plane1, correct? Respond with True or False.", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "b71a9216-4a67-4a8d-9b13-77cf54995445", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, are all of the following properties: person5 is not at city2, fuel level fl3 is not next to fuel level fl2, fuel level fl4 is not next to fuel level fl3, person1 is not at city1, person8 is not in plane1, person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl2, person3 is not in plane1, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, plane1 does not have fuel level fl1, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, person7 is not at city2, fuel level fl2 is not next to fuel level fl4, plane1 does not have fuel level fl4, fuel level fl5 is not next to fuel level fl2, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, person4 is not at city3, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, person8 is not at city0, plane1 does not have fuel level fl2, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person8 is not at city1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, fuel level fl6 is not next to fuel level fl3, person5 is not at city0, plane1 is not at city2, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not at city3, person1 is not in plane1, plane1 does not have fuel level fl0, fuel level fl5 is not next to fuel level fl0, person2 is not at city2, person2 is not at city1, fuel level fl2 is not next to fuel level fl6, plane1 is not at city0, plane1 is not at city1, fuel level fl4 is not next to fuel level fl6, person7 is not at city0, person2 is not at city3, person8 is not at city2, fuel level fl1 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl1, fuel level fl3 is not next to fuel level fl0 and person5 is not in plane1, correct? Respond with True or False.", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "39cb0959-a23b-4ac6-8193-119af3b4b4af", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, are all of the following properties: person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl2, person3 is not in plane1, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, plane1 does not have fuel level fl1, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, person7 is not at city2, fuel level fl2 is not next to fuel level fl4, plane1 does not have fuel level fl4, fuel level fl5 is not next to fuel level fl2, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, person4 is not at city3, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, person8 is not at city0, plane1 does not have fuel level fl2, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person8 is not at city1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, fuel level fl6 is not next to fuel level fl3, person5 is not at city0, plane1 is not at city2, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not at city3, person1 is not in plane1, plane1 does not have fuel level fl0, fuel level fl5 is not next to fuel level fl0, person2 is not at city2, person2 is not at city1, fuel level fl2 is not next to fuel level fl6, plane1 is not at city0, plane1 is not at city1, fuel level fl4 is not next to fuel level fl6, person7 is not at city0, person2 is not at city3, person8 is not at city2, fuel level fl1 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl1, fuel level fl3 is not next to fuel level fl0, person5 is not in plane1, person1 is not at city3, person3 is not at city2, person6 is not at city0, person5 is not at city3 and fuel level fl3 is not next to fuel level fl5, correct? Respond with True or False.", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "540447af-a230-40fd-9640-6469a3fad56c", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, are all of the following properties: fuel level fl1 is not next to fuel level fl0, person1 is not at city1, fuel level fl3 is not next to fuel level fl2, person7 is not in plane1, fuel level fl6 is not next to fuel level fl5, plane1 is not at city3, fuel level fl2 is not next to fuel level fl1, fuel level fl5 is not next to fuel level fl4, person6 is not at city2, person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl2, person3 is not in plane1, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, plane1 does not have fuel level fl1, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, person7 is not at city2, fuel level fl2 is not next to fuel level fl4, plane1 does not have fuel level fl4, fuel level fl5 is not next to fuel level fl2, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, person4 is not at city3, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, person8 is not at city0, plane1 does not have fuel level fl2, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person8 is not at city1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, fuel level fl6 is not next to fuel level fl3, person5 is not at city0, plane1 is not at city2, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not at city3, person1 is not in plane1, plane1 does not have fuel level fl0, fuel level fl5 is not next to fuel level fl0, person2 is not at city2, person2 is not at city1, fuel level fl2 is not next to fuel level fl6, plane1 is not at city0, plane1 is not at city1, fuel level fl4 is not next to fuel level fl6, person7 is not at city0, person2 is not at city3 and person8 is not at city2, correct? Respond with True or False.", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "1aeaf734-5541-413a-86f8-263deed6bf18", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, are all of the following properties: person5 is not at city2, person8 is not in plane1, plane1 is not at city3, person6 is not at city2, plane1 does not have fuel level fl3, person1 is not at city1, fuel level fl3 is not next to fuel level fl2, person7 is not in plane1, person2 is not in plane1, fuel level fl2 is not next to fuel level fl1, fuel level fl5 is not next to fuel level fl4, person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl2, person3 is not in plane1, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, plane1 does not have fuel level fl1, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, person7 is not at city2, fuel level fl2 is not next to fuel level fl4, plane1 does not have fuel level fl4, fuel level fl5 is not next to fuel level fl2, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, person4 is not at city3, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, person8 is not at city0, plane1 does not have fuel level fl2, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person8 is not at city1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, fuel level fl6 is not next to fuel level fl3, person5 is not at city0, plane1 is not at city2, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not at city3, person1 is not in plane1, plane1 does not have fuel level fl0, fuel level fl5 is not next to fuel level fl0, person2 is not at city2, person2 is not at city1, fuel level fl2 is not next to fuel level fl6, plane1 is not at city0, plane1 is not at city1, fuel level fl4 is not next to fuel level fl6 and person7 is not at city0, correct? Respond with True or False.", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "657cfccf-4e91-438e-8cf6-8d3a8505a3e9", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "fuel level fl1 is next to fuel level fl0, person2 is in plane1, person8 is in plane1, person3 is at city0, fuel level fl4 is next to fuel level fl3, person5 is at city2, person7 is in plane1, fuel level fl2 is next to fuel level fl1, plane1 is at city3, person4 is in plane1, person1 is at city1, plane1 has fuel level fl3, person6 is at city2, fuel level fl5 is next to fuel level fl4, fuel level fl6 is next to fuel level fl5 and fuel level fl3 is next to fuel level fl2", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "989579b0-a3ad-42b4-9d76-baf1bb79e354", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl2, person3 is not in plane1, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, plane1 does not have fuel level fl1, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, person7 is not at city2, fuel level fl2 is not next to fuel level fl4, plane1 does not have fuel level fl4, fuel level fl5 is not next to fuel level fl2, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, person4 is not at city3, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, person8 is not at city0, plane1 does not have fuel level fl2, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person8 is not at city1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, fuel level fl6 is not next to fuel level fl3, person5 is not at city0, plane1 is not at city2, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not at city3, person1 is not in plane1, plane1 does not have fuel level fl0, fuel level fl5 is not next to fuel level fl0, person2 is not at city2, person2 is not at city1, fuel level fl2 is not next to fuel level fl6, plane1 is not at city0, plane1 is not at city1, fuel level fl4 is not next to fuel level fl6, person7 is not at city0, person2 is not at city3, person8 is not at city2, fuel level fl1 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl1, fuel level fl3 is not next to fuel level fl0, person5 is not in plane1, person1 is not at city3, person3 is not at city2, person6 is not at city0, person5 is not at city3 and fuel level fl3 is not next to fuel level fl5", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "526e139e-0149-42c8-b208-82edd8069870", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, are all of the following properties: person5 is at city1, person6 is at city3, fuel level fl4 is next to fuel level fl1, fuel level fl0 is next to fuel level fl4, person2 is at city3, fuel level fl1 is next to fuel level fl0, person8 is in plane1, fuel level fl4 is next to fuel level fl3, person3 is at city0, fuel level fl2 is next to fuel level fl1, person4 is in plane1, plane1 has fuel level fl1, person1 is at city1, person5 is in plane1, person7 is at city2 and person6 is at city2, correct? Respond with True or False.", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "c0cd779d-c493-48d5-8248-ce82ad1c7461", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, are all of the following properties: fuel level fl1 is next to fuel level fl5, person7 is at city0, plane1 has fuel level fl3, person3 is at city3, person4 is at city0, fuel level fl2 is next to fuel level fl5, plane1 has fuel level fl2, person3 is in plane1, fuel level fl4 is next to fuel level fl1, person2 is at city3, fuel level fl1 is next to fuel level fl0, person8 is in plane1, fuel level fl4 is next to fuel level fl3, person3 is at city0, fuel level fl2 is next to fuel level fl1 and person4 is in plane1, correct? Respond with True or False.", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "57ad3903-ae4a-4af4-af65-a8fb16aeaec8", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, are all of the following properties: person2 is at city3, fuel level fl1 is next to fuel level fl0, person8 is in plane1, fuel level fl4 is next to fuel level fl3, person3 is at city0, fuel level fl2 is next to fuel level fl1, person4 is in plane1, plane1 has fuel level fl1, person1 is at city1, person5 is in plane1, person7 is at city2, person6 is at city2, plane1 is at city0, fuel level fl5 is next to fuel level fl4, fuel level fl6 is next to fuel level fl5 and fuel level fl3 is next to fuel level fl2, correct? Respond with True or False.", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "3c54eee8-f668-4ab7-9957-518c57be32e1", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, are all of the following properties: person5 is at city2, person4 is at city1, fuel level fl2 is next to fuel level fl3, fuel level fl4 is next to fuel level fl0, fuel level fl2 is next to fuel level fl6, person1 is in plane1, person5 is at city1, person8 is at city3, fuel level fl1 is next to fuel level fl6, person2 is at city3, fuel level fl1 is next to fuel level fl0, person8 is in plane1, fuel level fl4 is next to fuel level fl3, person3 is at city0, fuel level fl2 is next to fuel level fl1 and person4 is in plane1, correct? Respond with True or False.", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "989c6e88-1c37-433a-8a2e-dae990ad568c", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, are all of the following properties: person1 is not at city1, fuel level fl6 is not next to fuel level fl5, fuel level fl5 is not next to fuel level fl4, person6 is not at city2, person5 is not in plane1, person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl2, person3 is not in plane1, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl4, plane1 does not have fuel level fl4, fuel level fl5 is not next to fuel level fl2, plane1 does not have fuel level fl3, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person2 is not in plane1, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, person4 is not at city3, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, person8 is not at city0, plane1 does not have fuel level fl2, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person8 is not at city1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, person5 is not at city2, fuel level fl6 is not next to fuel level fl3, person5 is not at city0, plane1 is not at city2, plane1 is not at city3, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not in plane1, person7 is not at city3, person1 is not in plane1, plane1 does not have fuel level fl0, fuel level fl5 is not next to fuel level fl0, person2 is not at city2, person2 is not at city1, fuel level fl2 is not next to fuel level fl6, plane1 is not at city1, fuel level fl4 is not next to fuel level fl6, person7 is not at city0, person8 is not at city2, fuel level fl1 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl1 and fuel level fl3 is not next to fuel level fl0, correct? Respond with True or False.", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "25cc812e-019a-4a28-9b29-54d2b9554945", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, are all of the following properties: person2 is not at city3, person4 is not in plane1, person6 is not at city2, plane1 does not have fuel level fl1, fuel level fl4 is not next to fuel level fl3, plane1 is not at city0, fuel level fl1 is not next to fuel level fl0, fuel level fl6 is not next to fuel level fl5, person5 is not in plane1, person7 is not at city2, fuel level fl5 is not next to fuel level fl4, fuel level fl3 is not next to fuel level fl2, person1 is not at city1, person8 is not in plane1, fuel level fl2 is not next to fuel level fl1, person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl2, person3 is not in plane1, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl4, plane1 does not have fuel level fl4, fuel level fl5 is not next to fuel level fl2, plane1 does not have fuel level fl3, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person2 is not in plane1, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, person4 is not at city3, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, person8 is not at city0, plane1 does not have fuel level fl2, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person8 is not at city1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, person5 is not at city2, fuel level fl6 is not next to fuel level fl3, person5 is not at city0, plane1 is not at city2, plane1 is not at city3, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not in plane1, person7 is not at city3, person1 is not in plane1, plane1 does not have fuel level fl0 and fuel level fl5 is not next to fuel level fl0, correct? Respond with True or False.", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "6acfe9ac-9a30-4538-af20-00a2b42877c7", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, are all of the following properties: person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl2, person3 is not in plane1, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl4, plane1 does not have fuel level fl4, fuel level fl5 is not next to fuel level fl2, plane1 does not have fuel level fl3, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person2 is not in plane1, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, person4 is not at city3, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, person8 is not at city0, plane1 does not have fuel level fl2, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person8 is not at city1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, person5 is not at city2, fuel level fl6 is not next to fuel level fl3, person5 is not at city0, plane1 is not at city2, plane1 is not at city3, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not in plane1, person7 is not at city3, person1 is not in plane1, plane1 does not have fuel level fl0, fuel level fl5 is not next to fuel level fl0, person2 is not at city2, person2 is not at city1, fuel level fl2 is not next to fuel level fl6, plane1 is not at city1, fuel level fl4 is not next to fuel level fl6, person7 is not at city0, person8 is not at city2, fuel level fl1 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl1, fuel level fl3 is not next to fuel level fl0, person1 is not at city3, person3 is not at city2, person6 is not at city0, person5 is not at city3 and fuel level fl3 is not next to fuel level fl5, correct? Respond with True or False.", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "3e91833d-b24b-4f8e-a037-9f37b169eb26", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, are all of the following properties: plane1 is not at city0, fuel level fl3 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl5, person8 is not in plane1, fuel level fl2 is not next to fuel level fl1, fuel level fl5 is not next to fuel level fl4, person5 is not in plane1, person6 is not at city2, person7 is not at city2, fuel level fl1 is not next to fuel level fl0, person2 is not at city3, person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl2, person3 is not in plane1, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl4, plane1 does not have fuel level fl4, fuel level fl5 is not next to fuel level fl2, plane1 does not have fuel level fl3, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person2 is not in plane1, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, person4 is not at city3, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, person8 is not at city0, plane1 does not have fuel level fl2, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person8 is not at city1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, person5 is not at city2, fuel level fl6 is not next to fuel level fl3, person5 is not at city0, plane1 is not at city2, plane1 is not at city3, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not in plane1, person7 is not at city3, person1 is not in plane1, plane1 does not have fuel level fl0, fuel level fl5 is not next to fuel level fl0, person2 is not at city2, person2 is not at city1, fuel level fl2 is not next to fuel level fl6 and plane1 is not at city1, correct? Respond with True or False.", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "75a7443b-f0ef-40f2-8e2c-57633da30538", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "person2 is at city3, fuel level fl1 is next to fuel level fl0, person8 is in plane1, fuel level fl4 is next to fuel level fl3, person3 is at city0, fuel level fl2 is next to fuel level fl1, person4 is in plane1, plane1 has fuel level fl1, person1 is at city1, person5 is in plane1, person7 is at city2, person6 is at city2, plane1 is at city0, fuel level fl5 is next to fuel level fl4, fuel level fl6 is next to fuel level fl5 and fuel level fl3 is next to fuel level fl2", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "c36499b7-7cb8-4f7c-862b-c4a1c7f34df9", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl2, person3 is not in plane1, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl4, plane1 does not have fuel level fl4, fuel level fl5 is not next to fuel level fl2, plane1 does not have fuel level fl3, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person2 is not in plane1, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, person4 is not at city3, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, person8 is not at city0, plane1 does not have fuel level fl2, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person8 is not at city1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, person5 is not at city2, fuel level fl6 is not next to fuel level fl3, person5 is not at city0, plane1 is not at city2, plane1 is not at city3, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not in plane1, person7 is not at city3, person1 is not in plane1, plane1 does not have fuel level fl0, fuel level fl5 is not next to fuel level fl0, person2 is not at city2, person2 is not at city1, fuel level fl2 is not next to fuel level fl6, plane1 is not at city1, fuel level fl4 is not next to fuel level fl6, person7 is not at city0, person8 is not at city2, fuel level fl1 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl1, fuel level fl3 is not next to fuel level fl0, person1 is not at city3, person3 is not at city2, person6 is not at city0, person5 is not at city3 and fuel level fl3 is not next to fuel level fl5", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "3900574c-9e41-4325-bbd8-ecbbd58bfed3", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, are all of the following properties: person2 is at city0, fuel level fl5 is next to fuel level fl0, person7 is at city1, person1 is at city0, fuel level fl1 is next to fuel level fl2, plane1 has fuel level fl4, plane1 has fuel level fl6, person1 is in plane1, plane1 has fuel level fl1, person6 is at city0, plane1 has fuel level fl3, fuel level fl6 is next to fuel level fl4, person5 is at city2, fuel level fl4 is next to fuel level fl1, person2 is at city3 and fuel level fl1 is next to fuel level fl0, correct? Respond with True or False.", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "7e2f3d35-6c44-484d-8a6d-54d826063756", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, are all of the following properties: person2 is at city3, fuel level fl1 is next to fuel level fl0, plane1 is at city1, fuel level fl4 is next to fuel level fl3, person8 is at city0, person5 is at city0, fuel level fl2 is next to fuel level fl1, person4 is in plane1, person1 is at city1, person7 is at city2, person6 is at city2, plane1 has fuel level fl0, person3 is in plane1, fuel level fl5 is next to fuel level fl4, fuel level fl6 is next to fuel level fl5 and fuel level fl3 is next to fuel level fl2, correct? Respond with True or False.", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "3161d2e6-3508-4049-afdd-f38d3801f39a", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, are all of the following properties: fuel level fl6 is next to fuel level fl0, person2 is at city2, plane1 is at city3, fuel level fl5 is next to fuel level fl0, plane1 has fuel level fl3, fuel level fl2 is next to fuel level fl3, person4 is at city2, person8 is in plane1, person6 is at city0, fuel level fl1 is next to fuel level fl6, person1 is at city0, person2 is at city0, fuel level fl6 is next to fuel level fl3, person2 is at city3, fuel level fl1 is next to fuel level fl0 and plane1 is at city1, correct? Respond with True or False.", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "5874e921-0028-47e8-b855-0ee68740cc8a", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, are all of the following properties: fuel level fl2 is next to fuel level fl3, person2 is in plane1, person2 is at city2, fuel level fl6 is next to fuel level fl2, fuel level fl4 is next to fuel level fl1, person7 is at city3, fuel level fl2 is next to fuel level fl0, person1 is at city3, fuel level fl2 is next to fuel level fl5, fuel level fl1 is next to fuel level fl6, person4 is at city1, person7 is at city1, plane1 has fuel level fl4, plane1 has fuel level fl6, person5 is at city2 and person2 is at city3, correct? Respond with True or False.", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "2b1b706c-3935-4fa1-b7d1-2417461f3f9d", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, are all of the following properties: plane1 does not have fuel level fl0, fuel level fl5 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl0, plane1 is not at city1, person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, person3 is not at city0, fuel level fl6 is not next to fuel level fl2, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, plane1 does not have fuel level fl1, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl4, plane1 does not have fuel level fl4, fuel level fl5 is not next to fuel level fl2, plane1 does not have fuel level fl3, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person2 is not in plane1, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, person4 is not at city3, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, plane1 does not have fuel level fl2, person8 is not in plane1, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person8 is not at city1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, person5 is not at city2, fuel level fl6 is not next to fuel level fl3, plane1 is not at city3, plane1 is not at city2, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not in plane1, person7 is not at city3, person1 is not in plane1, fuel level fl5 is not next to fuel level fl0, person2 is not at city2, person2 is not at city1, fuel level fl2 is not next to fuel level fl6, plane1 is not at city0, fuel level fl4 is not next to fuel level fl6, person7 is not at city0, person8 is not at city2, fuel level fl1 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl1, fuel level fl3 is not next to fuel level fl0, person5 is not in plane1 and person1 is not at city3, correct? Respond with True or False.", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "81ac59d3-4131-4ed9-b07d-a64a95d22ab8", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, are all of the following properties: fuel level fl4 is not next to fuel level fl3, person6 is not at city2, person3 is not in plane1, fuel level fl6 is not next to fuel level fl5, person7 is not at city2, plane1 does not have fuel level fl0, plane1 is not at city1, fuel level fl1 is not next to fuel level fl0, person8 is not at city0, fuel level fl3 is not next to fuel level fl2, fuel level fl5 is not next to fuel level fl4, fuel level fl2 is not next to fuel level fl1, person4 is not in plane1, person5 is not at city0, person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, person3 is not at city0, fuel level fl6 is not next to fuel level fl2, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, plane1 does not have fuel level fl1, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl4, plane1 does not have fuel level fl4, fuel level fl5 is not next to fuel level fl2, plane1 does not have fuel level fl3, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person2 is not in plane1, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, person4 is not at city3, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, plane1 does not have fuel level fl2, person8 is not in plane1, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person8 is not at city1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, person5 is not at city2, fuel level fl6 is not next to fuel level fl3, plane1 is not at city3, plane1 is not at city2, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not in plane1, person7 is not at city3, person1 is not in plane1, fuel level fl5 is not next to fuel level fl0, person2 is not at city2 and person2 is not at city1, correct? Respond with True or False.", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "9de1672c-e394-445b-b4a2-56bf858f887c", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, are all of the following properties: person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, person3 is not at city0, fuel level fl6 is not next to fuel level fl2, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, plane1 does not have fuel level fl1, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl4, plane1 does not have fuel level fl4, fuel level fl5 is not next to fuel level fl2, plane1 does not have fuel level fl3, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person2 is not in plane1, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, person4 is not at city3, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, plane1 does not have fuel level fl2, person8 is not in plane1, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person8 is not at city1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, person5 is not at city2, fuel level fl6 is not next to fuel level fl3, plane1 is not at city3, plane1 is not at city2, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not in plane1, person7 is not at city3, person1 is not in plane1, fuel level fl5 is not next to fuel level fl0, person2 is not at city2, person2 is not at city1, fuel level fl2 is not next to fuel level fl6, plane1 is not at city0, fuel level fl4 is not next to fuel level fl6, person7 is not at city0, person8 is not at city2, fuel level fl1 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl1, fuel level fl3 is not next to fuel level fl0, person5 is not in plane1, person1 is not at city3, person3 is not at city2, person6 is not at city0, person5 is not at city3 and fuel level fl3 is not next to fuel level fl5, correct? Respond with True or False.", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "52e6c83a-aca1-40b2-86f4-fb9f8308a161", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, are all of the following properties: person2 is not at city3, plane1 does not have fuel level fl0, fuel level fl3 is not next to fuel level fl2, person4 is not in plane1, fuel level fl4 is not next to fuel level fl3, fuel level fl2 is not next to fuel level fl1, person3 is not in plane1, plane1 is not at city1, person1 is not at city1, person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, person3 is not at city0, fuel level fl6 is not next to fuel level fl2, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, plane1 does not have fuel level fl1, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl4, plane1 does not have fuel level fl4, fuel level fl5 is not next to fuel level fl2, plane1 does not have fuel level fl3, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person2 is not in plane1, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, person4 is not at city3, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, plane1 does not have fuel level fl2, person8 is not in plane1, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person8 is not at city1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, person5 is not at city2, fuel level fl6 is not next to fuel level fl3, plane1 is not at city3, plane1 is not at city2, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not in plane1, person7 is not at city3, person1 is not in plane1, fuel level fl5 is not next to fuel level fl0, person2 is not at city2, person2 is not at city1, fuel level fl2 is not next to fuel level fl6, plane1 is not at city0, fuel level fl4 is not next to fuel level fl6, person7 is not at city0 and person8 is not at city2, correct? Respond with True or False.", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "820d830b-2371-4273-a0ca-2976af2cd2a6", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "person2 is at city3, fuel level fl1 is next to fuel level fl0, plane1 is at city1, fuel level fl4 is next to fuel level fl3, person8 is at city0, person5 is at city0, fuel level fl2 is next to fuel level fl1, person4 is in plane1, person1 is at city1, person7 is at city2, person6 is at city2, plane1 has fuel level fl0, person3 is in plane1, fuel level fl5 is next to fuel level fl4, fuel level fl6 is next to fuel level fl5 and fuel level fl3 is next to fuel level fl2", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "392ec68f-9d72-4c20-86f0-37389a9c6e4e", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "state_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, person3 is not at city0, fuel level fl6 is not next to fuel level fl2, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, plane1 does not have fuel level fl1, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl4, plane1 does not have fuel level fl4, fuel level fl5 is not next to fuel level fl2, plane1 does not have fuel level fl3, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person2 is not in plane1, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, person4 is not at city3, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, plane1 does not have fuel level fl2, person8 is not in plane1, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person8 is not at city1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, person5 is not at city2, fuel level fl6 is not next to fuel level fl3, plane1 is not at city3, plane1 is not at city2, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not in plane1, person7 is not at city3, person1 is not in plane1, fuel level fl5 is not next to fuel level fl0, person2 is not at city2, person2 is not at city1, fuel level fl2 is not next to fuel level fl6, plane1 is not at city0, fuel level fl4 is not next to fuel level fl6, person7 is not at city0, person8 is not at city2, fuel level fl1 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl1, fuel level fl3 is not next to fuel level fl0, person5 is not in plane1, person1 is not at city3, person3 is not at city2, person6 is not at city0, person5 is not at city3 and fuel level fl3 is not next to fuel level fl5", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "24193155-514d-42da-934b-3c3706d716a7", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 zooms from city0 to city1 with fuel level fl2 to fl6. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "5291a8bc-df71-4f71-a48f-7d94a90232fb", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "0947c551-b840-40a2-ab66-5bc375c55bf3", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city2 with fuel level fl0 to fl6. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "ed9f7d40-d812-42ab-b095-e8e9c7f868ba", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 zooms from city3 to city0 with fuel level fl3 to fl5. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "8f363f50-196b-40a9-bef0-09c580f56ce5", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 1 the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0. Is the action: plane1 flies from city3 to city1 with fuel level fl1 to fl0 executable at step 1, True or False?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "e82345f6-5c52-4c65-aff2-1b8752d10e60", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 1 the following actions are planned to be performed: plane1 flies from city0 to city1 with fuel level fl6 to fl4. Is the action: plane1 flies from city0 to city1 with fuel level fl6 to fl4 executable at step 1, True or False?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "20d0c84d-4862-426a-a275-10bc7af50b92", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 1 the following actions are planned to be performed: plane1 zooms from city1 to city3 with fuel level fl2 to fl3. Is the action: plane1 zooms from city1 to city3 with fuel level fl2 to fl3 executable at step 1, True or False?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "33482a9c-55ca-48d9-9998-6f9215f3dfc1", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 1 the following actions are planned to be performed: plane1 zooms from city2 to city0 with fuel level fl2 to fl4. Is the action: plane1 zooms from city2 to city0 with fuel level fl2 to fl4 executable at step 1, True or False?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "312a05f4-ea98-49b4-a367-985d6dfaae0c", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "person2 boards plane1 at city1, plane1 gets refueled at city1 with fuel level fl0 to fl1, person8 boards plane1 at city1 and person1 boards plane1 at city1", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "c8567465-f076-482f-8c91-724196132c46", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "plane1 zooms from city2 to city1 with fuel level fl2 to fl4, plane1 zooms from city2 to city0 with fuel level fl1 to fl3, plane1 zooms from city3 to city0 with fuel level fl0 to fl3, plane1 zooms from city1 to city3 with fuel level fl6 to fl0, plane1 zooms from city2 to city3 with fuel level fl1 to fl3, plane1 zooms from city1 to city2 with fuel level fl1 to fl5, plane1 zooms from city1 to city0 with fuel level fl4 to fl1, plane1 zooms from city3 to city0 with fuel level fl2 to fl4, plane1 flies from city0 to city2 with fuel level fl3 to fl6, plane1 flies from city0 to city1 with fuel level fl0 to fl3, plane1 zooms from city1 to city0 with fuel level fl6 to fl5, plane1 flies from city2 to city0 with fuel level fl1 to fl4, plane1 flies from city0 to city2 with fuel level fl0 to fl1, plane1 zooms from city2 to city3 with fuel level fl1 to fl5, plane1 zooms from city1 to city3 with fuel level fl2 to fl6, plane1 zooms from city3 to city0 with fuel level fl3 to fl1, plane1 zooms from city0 to city3 with fuel level fl2 to fl6, plane1 zooms from city3 to city1 with fuel level fl4 to fl5, plane1 zooms from city2 to city0 with fuel level fl5 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl0, plane1 zooms from city0 to city1 with fuel level fl0 to fl5, plane1 flies from city0 to city2 with fuel level fl1 to fl4, plane1 flies from city3 to city1 with fuel level fl6 to fl2, plane1 zooms from city3 to city1 with fuel level fl6 to fl4, plane1 zooms from city1 to city3 with fuel level fl6 to fl2, plane1 zooms from city0 to city1 with fuel level fl5 to fl4, plane1 zooms from city0 to city2 with fuel level fl1 to fl4, plane1 zooms from city0 to city1 with fuel level fl6 to fl4, plane1 zooms from city3 to city0 with fuel level fl5 to fl3, plane1 zooms from city2 to city1 with fuel level fl6 to fl3, plane1 zooms from city1 to city2 with fuel level fl3 to fl2, plane1 zooms from city1 to city3 with fuel level fl2 to fl5, plane1 zooms from city0 to city3 with fuel level fl2 to fl0, plane1 zooms from city1 to city3 with fuel level fl0 to fl5, plane1 flies from city0 to city3 with fuel level fl2 to fl3, plane1 zooms from city1 to city0 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl2 to fl0, plane1 zooms from city1 to city0 with fuel level fl0 to fl2, plane1 flies from city0 to city3 with fuel level fl1 to fl6, plane1 zooms from city1 to city2 with fuel level fl0 to fl5, plane1 flies from city1 to city0 with fuel level fl1 to fl3, plane1 zooms from city2 to city1 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl4 to fl2, plane1 zooms from city1 to city2 with fuel level fl1 to fl4, person3 boards plane1 at city1, plane1 zooms from city0 to city2 with fuel level fl6 to fl1, plane1 zooms from city0 to city1 with fuel level fl0 to fl1, plane1 zooms from city3 to city1 with fuel level fl4 to fl2, plane1 zooms from city0 to city3 with fuel level fl4 to fl1, plane1 zooms from city3 to city1 with fuel level fl1 to fl6, plane1 flies from city0 to city3 with fuel level fl1 to fl0, plane1 zooms from city2 to city1 with fuel level fl2 to fl4, plane1 zooms from city3 to city0 with fuel level fl4 to fl1, plane1 zooms from city0 to city2 with fuel level fl6 to fl2, plane1 zooms from city3 to city1 with fuel level fl4 to fl1, plane1 zooms from city2 to city0 with fuel level fl3 to fl5, plane1 zooms from city0 to city2 with fuel level fl4 to fl1, plane1 gets refueled at city1 with fuel level fl3 to fl0, plane1 zooms from city0 to city2 with fuel level fl0 to fl2, plane1 flies from city3 to city2 with fuel level fl1 to fl5, plane1 zooms from city2 to city3 with fuel level fl6 to fl4, plane1 zooms from city3 to city2 with fuel level fl0 to fl1, plane1 zooms from city2 to city3 with fuel level fl1 to fl4, plane1 zooms from city2 to city0 with fuel level fl4 to fl5, plane1 zooms from city2 to city1 with fuel level fl1 to fl2, plane1 zooms from city0 to city3 with fuel level fl3 to fl4, plane1 flies from city3 to city1 with fuel level fl0 to fl4, plane1 zooms from city2 to city1 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl5 to fl4, plane1 zooms from city1 to city3 with fuel level fl2 to fl5, plane1 flies from city0 to city2 with fuel level fl5 to fl1, plane1 zooms from city1 to city2 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl5 to fl2, plane1 zooms from city1 to city2 with fuel level fl1 to fl6, plane1 zooms from city2 to city1 with fuel level fl1 to fl5, plane1 gets refueled at city3 with fuel level fl0 to fl4, plane1 zooms from city0 to city1 with fuel level fl5 to fl1, plane1 flies from city0 to city2 with fuel level fl4 to fl1, plane1 flies from city2 to city3 with fuel level fl1 to fl0, plane1 flies from city0 to city1 with fuel level fl1 to fl0, plane1 flies from city2 to city1 with fuel level fl3 to fl1, plane1 zooms from city1 to city0 with fuel level fl3 to fl1, plane1 zooms from city2 to city1 with fuel level fl6 to fl2, plane1 zooms from city3 to city1 with fuel level fl3 to fl2, plane1 zooms from city0 to city1 with fuel level fl5 to fl4, plane1 flies from city2 to city0 with fuel level fl6 to fl5, plane1 zooms from city2 to city0 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl3 to fl1, plane1 zooms from city3 to city1 with fuel level fl2 to fl0, plane1 zooms from city0 to city1 with fuel level fl4 to fl0, plane1 zooms from city1 to city3 with fuel level fl2 to fl4, plane1 zooms from city2 to city3 with fuel level fl3 to fl0, plane1 zooms from city1 to city2 with fuel level fl2 to fl6, plane1 flies from city3 to city2 with fuel level fl0 to fl5, plane1 zooms from city1 to city2 with fuel level fl4 to fl2, plane1 zooms from city0 to city3 with fuel level fl0 to fl2, plane1 zooms from city1 to city0 with fuel level fl4 to fl2, plane1 zooms from city0 to city3 with fuel level fl2 to fl1, plane1 zooms from city1 to city2 with fuel level fl3 to fl2, plane1 zooms from city2 to city3 with fuel level fl0 to fl1, plane1 zooms from city2 to city0 with fuel level fl3 to fl0, plane1 zooms from city1 to city0 with fuel level fl2 to fl0, plane1 zooms from city1 to city3 with fuel level fl5 to fl0, plane1 zooms from city0 to city2 with fuel level fl6 to fl1, plane1 zooms from city2 to city3 with fuel level fl1 to fl0, plane1 zooms from city1 to city0 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl5 to fl0, plane1 zooms from city3 to city0 with fuel level fl5 to fl0, plane1 flies from city1 to city2 with fuel level fl0 to fl4, plane1 zooms from city0 to city2 with fuel level fl6 to fl3, plane1 zooms from city3 to city0 with fuel level fl4 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl2, plane1 zooms from city3 to city0 with fuel level fl4 to fl3, plane1 gets refueled at city2 with fuel level fl6 to fl2, plane1 zooms from city2 to city3 with fuel level fl2 to fl0, plane1 zooms from city1 to city2 with fuel level fl2 to fl5, plane1 zooms from city1 to city2 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl5 to fl4, plane1 flies from city0 to city1 with fuel level fl1 to fl2, plane1 flies from city3 to city2 with fuel level fl2 to fl0, plane1 zooms from city2 to city1 with fuel level fl3 to fl1, plane1 zooms from city0 to city1 with fuel level fl1 to fl5, plane1 zooms from city3 to city2 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl2 to fl3, plane1 zooms from city2 to city1 with fuel level fl1 to fl4, plane1 flies from city0 to city3 with fuel level fl5 to fl2, plane1 flies from city2 to city3 with fuel level fl0 to fl1, plane1 gets refueled at city2 with fuel level fl5 to fl0, plane1 zooms from city3 to city1 with fuel level fl3 to fl4, plane1 zooms from city3 to city2 with fuel level fl5 to fl0, plane1 zooms from city0 to city1 with fuel level fl2 to fl1, plane1 flies from city1 to city2 with fuel level fl0 to fl6, plane1 zooms from city0 to city1 with fuel level fl0 to fl2, plane1 flies from city3 to city2 with fuel level fl3 to fl0, plane1 gets refueled at city2 with fuel level fl2 to fl3, plane1 zooms from city2 to city0 with fuel level fl6 to fl4, plane1 zooms from city0 to city2 with fuel level fl2 to fl4, plane1 zooms from city3 to city0 with fuel level fl0 to fl5, plane1 zooms from city3 to city1 with fuel level fl1 to fl2, plane1 zooms from city3 to city2 with fuel level fl2 to fl5, plane1 zooms from city1 to city2 with fuel level fl6 to fl4, plane1 zooms from city0 to city1 with fuel level fl3 to fl6, plane1 zooms from city0 to city2 with fuel level fl2 to fl3, plane1 zooms from city3 to city1 with fuel level fl0 to fl4, plane1 zooms from city3 to city0 with fuel level fl1 to fl3, plane1 zooms from city1 to city3 with fuel level fl3 to fl2, plane1 flies from city1 to city3 with fuel level fl3 to fl6, plane1 zooms from city1 to city3 with fuel level fl6 to fl2, plane1 zooms from city0 to city2 with fuel level fl4 to fl3, plane1 zooms from city1 to city3 with fuel level fl1 to fl6, plane1 zooms from city1 to city2 with fuel level fl5 to fl1, plane1 zooms from city0 to city2 with fuel level fl5 to fl0, plane1 gets refueled at city3 with fuel level fl6 to fl3, plane1 zooms from city2 to city3 with fuel level fl4 to fl3, plane1 zooms from city2 to city1 with fuel level fl3 to fl6, plane1 zooms from city3 to city2 with fuel level fl5 to fl3, plane1 zooms from city2 to city1 with fuel level fl0 to fl4, plane1 flies from city1 to city2 with fuel level fl6 to fl1, plane1 flies from city0 to city2 with fuel level fl4 to fl2, plane1 zooms from city1 to city3 with fuel level fl0 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl0, plane1 zooms from city2 to city0 with fuel level fl3 to fl0, plane1 zooms from city3 to city1 with fuel level fl6 to fl1, plane1 zooms from city2 to city0 with fuel level fl4 to fl3, plane1 flies from city0 to city1 with fuel level fl0 to fl4, plane1 flies from city0 to city2 with fuel level fl5 to fl3, plane1 zooms from city3 to city2 with fuel level fl1 to fl0, plane1 zooms from city2 to city1 with fuel level fl2 to fl1, plane1 gets refueled at city0 with fuel level fl4 to fl2, plane1 zooms from city1 to city3 with fuel level fl6 to fl3, plane1 zooms from city0 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city3 with fuel level fl6 to fl3, plane1 flies from city1 to city3 with fuel level fl0 to fl4, plane1 zooms from city1 to city3 with fuel level fl1 to fl2, plane1 zooms from city0 to city1 with fuel level fl6 to fl3, plane1 zooms from city0 to city2 with fuel level fl5 to fl4, plane1 zooms from city3 to city1 with fuel level fl2 to fl5, plane1 zooms from city0 to city2 with fuel level fl5 to fl3, plane1 zooms from city1 to city3 with fuel level fl6 to fl2, plane1 flies from city1 to city0 with fuel level fl4 to fl2, plane1 zooms from city0 to city2 with fuel level fl0 to fl4, plane1 zooms from city3 to city2 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl4 to fl2, plane1 zooms from city3 to city0 with fuel level fl4 to fl6, plane1 flies from city1 to city2 with fuel level fl6 to fl5, plane1 zooms from city3 to city0 with fuel level fl0 to fl6, plane1 flies from city2 to city0 with fuel level fl0 to fl2, plane1 flies from city1 to city0 with fuel level fl4 to fl5, plane1 zooms from city3 to city0 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl6 to fl4, plane1 zooms from city2 to city3 with fuel level fl4 to fl0, plane1 zooms from city2 to city0 with fuel level fl2 to fl0, plane1 zooms from city3 to city0 with fuel level fl4 to fl3, plane1 zooms from city1 to city0 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl5 to fl1, plane1 zooms from city2 to city1 with fuel level fl3 to fl5, plane1 zooms from city2 to city0 with fuel level fl5 to fl2, plane1 zooms from city2 to city1 with fuel level fl5 to fl4, plane1 zooms from city0 to city1 with fuel level fl6 to fl5, plane1 zooms from city3 to city2 with fuel level fl4 to fl3, plane1 zooms from city3 to city0 with fuel level fl0 to fl5, plane1 zooms from city3 to city2 with fuel level fl5 to fl2, plane1 zooms from city2 to city3 with fuel level fl3 to fl0, plane1 zooms from city0 to city1 with fuel level fl4 to fl5, plane1 zooms from city2 to city1 with fuel level fl0 to fl5, plane1 zooms from city3 to city1 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl1 to fl0, plane1 zooms from city0 to city2 with fuel level fl4 to fl3, plane1 zooms from city1 to city3 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl1 to fl3, plane1 zooms from city1 to city2 with fuel level fl3 to fl1, person1 boards plane1 at city0, plane1 zooms from city0 to city3 with fuel level fl4 to fl2, plane1 flies from city3 to city0 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl1 to fl6, plane1 flies from city1 to city2 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl4 to fl1, plane1 zooms from city1 to city0 with fuel level fl6 to fl0, plane1 zooms from city0 to city2 with fuel level fl5 to fl2, plane1 flies from city0 to city2 with fuel level fl5 to fl4, plane1 flies from city2 to city0 with fuel level fl4 to fl3, plane1 zooms from city1 to city3 with fuel level fl2 to fl4, plane1 gets refueled at city0 with fuel level fl2 to fl1, plane1 flies from city2 to city3 with fuel level fl5 to fl4, plane1 zooms from city0 to city2 with fuel level fl6 to fl2, plane1 zooms from city0 to city1 with fuel level fl4 to fl5, plane1 zooms from city0 to city3 with fuel level fl1 to fl2, plane1 zooms from city0 to city1 with fuel level fl4 to fl3, plane1 zooms from city3 to city2 with fuel level fl4 to fl3, plane1 zooms from city0 to city3 with fuel level fl6 to fl2, plane1 zooms from city1 to city0 with fuel level fl6 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl3, plane1 zooms from city2 to city0 with fuel level fl2 to fl5, plane1 zooms from city2 to city3 with fuel level fl4 to fl0, plane1 zooms from city0 to city3 with fuel level fl5 to fl1, plane1 flies from city2 to city1 with fuel level fl6 to fl4, plane1 zooms from city2 to city3 with fuel level fl5 to fl4, plane1 zooms from city1 to city0 with fuel level fl6 to fl3, plane1 flies from city1 to city0 with fuel level fl4 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl0, plane1 zooms from city0 to city1 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl0 to fl4, plane1 zooms from city0 to city2 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl0 to fl3, plane1 flies from city3 to city0 with fuel level fl2 to fl3, plane1 flies from city3 to city0 with fuel level fl6 to fl3, plane1 zooms from city3 to city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl6 to fl0, plane1 flies from city0 to city1 with fuel level fl3 to fl1, plane1 zooms from city0 to city1 with fuel level fl3 to fl1, plane1 zooms from city2 to city1 with fuel level fl0 to fl4, plane1 flies from city1 to city3 with fuel level fl3 to fl1, plane1 zooms from city2 to city0 with fuel level fl5 to fl0, plane1 zooms from city2 to city3 with fuel level fl6 to fl3, plane1 zooms from city2 to city1 with fuel level fl4 to fl0, plane1 gets refueled at city2 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl2 to fl6, plane1 zooms from city3 to city2 with fuel level fl5 to fl6, plane1 zooms from city1 to city0 with fuel level fl2 to fl3, plane1 zooms from city0 to city3 with fuel level fl5 to fl0, plane1 zooms from city2 to city3 with fuel level fl2 to fl5, plane1 zooms from city0 to city3 with fuel level fl6 to fl1, plane1 zooms from city1 to city2 with fuel level fl2 to fl3, plane1 zooms from city0 to city1 with fuel level fl5 to fl4, plane1 flies from city2 to city0 with fuel level fl1 to fl5, plane1 flies from city0 to city1 with fuel level fl2 to fl6, plane1 zooms from city2 to city1 with fuel level fl1 to fl5, plane1 flies from city0 to city1 with fuel level fl6 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl0, plane1 flies from city1 to city3 with fuel level fl4 to fl1, plane1 zooms from city1 to city0 with fuel level fl2 to fl6, plane1 zooms from city2 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city0 with fuel level fl1 to fl5, plane1 zooms from city3 to city2 with fuel level fl1 to fl3, plane1 zooms from city2 to city0 with fuel level fl0 to fl5, plane1 zooms from city1 to city0 with fuel level fl1 to fl4, plane1 zooms from city1 to city2 with fuel level fl5 to fl2, person8 departs plane1 at city3, plane1 flies from city3 to city0 with fuel level fl2 to fl5, plane1 zooms from city2 to city1 with fuel level fl2 to fl0, plane1 zooms from city1 to city2 with fuel level fl0 to fl3, plane1 zooms from city2 to city0 with fuel level fl2 to fl6, plane1 zooms from city2 to city1 with fuel level fl2 to fl6, plane1 zooms from city3 to city1 with fuel level fl5 to fl3, plane1 flies from city1 to city3 with fuel level fl1 to fl5, plane1 zooms from city0 to city1 with fuel level fl1 to fl4, plane1 zooms from city2 to city3 with fuel level fl2 to fl4, plane1 zooms from city1 to city3 with fuel level fl0 to fl6, plane1 zooms from city0 to city3 with fuel level fl2 to fl3, plane1 zooms from city0 to city2 with fuel level fl2 to fl1, plane1 zooms from city0 to city3 with fuel level fl5 to fl6, plane1 zooms from city0 to city3 with fuel level fl6 to fl3, plane1 zooms from city2 to city3 with fuel level fl2 to fl1, plane1 zooms from city2 to city0 with fuel level fl1 to fl2, plane1 zooms from city1 to city3 with fuel level fl4 to fl3, plane1 zooms from city2 to city1 with fuel level fl1 to fl2, plane1 flies from city3 to city2 with fuel level fl0 to fl1, plane1 zooms from city3 to city0 with fuel level fl6 to fl1, plane1 flies from city3 to city1 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl0 to fl3, plane1 flies from city1 to city0 with fuel level fl2 to fl4, plane1 zooms from city3 to city1 with fuel level fl4 to fl1, plane1 zooms from city1 to city0 with fuel level fl6 to fl4, plane1 zooms from city0 to city3 with fuel level fl2 to fl5, plane1 zooms from city1 to city2 with fuel level fl1 to fl3, plane1 zooms from city0 to city2 with fuel level fl1 to fl0, plane1 flies from city3 to city2 with fuel level fl6 to fl5, plane1 flies from city2 to city0 with fuel level fl6 to fl4, plane1 zooms from city2 to city1 with fuel level fl1 to fl3, plane1 zooms from city0 to city1 with fuel level fl0 to fl4, plane1 zooms from city3 to city2 with fuel level fl4 to fl5, person7 boards plane1 at city2, plane1 zooms from city1 to city2 with fuel level fl1 to fl2, plane1 zooms from city0 to city2 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl0 to fl6, plane1 zooms from city1 to city0 with fuel level fl5 to fl3, plane1 zooms from city3 to city2 with fuel level fl6 to fl2, plane1 flies from city3 to city1 with fuel level fl0 to fl6, plane1 flies from city2 to city1 with fuel level fl4 to fl2, plane1 gets refueled at city3 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl1 to fl2, plane1 zooms from city3 to city2 with fuel level fl6 to fl1, plane1 zooms from city1 to city2 with fuel level fl4 to fl3, plane1 zooms from city0 to city1 with fuel level fl5 to fl3, plane1 zooms from city0 to city3 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl6 to fl3, plane1 zooms from city2 to city0 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl2 to fl5, plane1 gets refueled at city3 with fuel level fl4 to fl1, plane1 flies from city3 to city2 with fuel level fl3 to fl5, plane1 zooms from city0 to city1 with fuel level fl4 to fl0, plane1 flies from city0 to city1 with fuel level fl5 to fl2, plane1 gets refueled at city0 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl6 to fl0, plane1 zooms from city2 to city0 with fuel level fl2 to fl3, plane1 zooms from city1 to city0 with fuel level fl3 to fl4, plane1 zooms from city2 to city3 with fuel level fl1 to fl0, plane1 zooms from city3 to city0 with fuel level fl3 to fl0, plane1 zooms from city2 to city3 with fuel level fl2 to fl5, plane1 zooms from city1 to city2 with fuel level fl4 to fl6, plane1 zooms from city2 to city0 with fuel level fl3 to fl1, plane1 zooms from city3 to city0 with fuel level fl5 to fl4, plane1 zooms from city2 to city1 with fuel level fl5 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl4, plane1 zooms from city0 to city1 with fuel level fl0 to fl4, plane1 gets refueled at city0 with fuel level fl3 to fl1, plane1 zooms from city3 to city1 with fuel level fl0 to fl6, plane1 zooms from city1 to city0 with fuel level fl2 to fl4, plane1 zooms from city1 to city0 with fuel level fl6 to fl3, plane1 zooms from city2 to city0 with fuel level fl0 to fl1, plane1 flies from city1 to city0 with fuel level fl4 to fl1, plane1 flies from city0 to city1 with fuel level fl2 to fl0, plane1 zooms from city0 to city3 with fuel level fl6 to fl4, plane1 zooms from city3 to city2 with fuel level fl6 to fl0, plane1 zooms from city2 to city3 with fuel level fl6 to fl5, plane1 zooms from city1 to city0 with fuel level fl5 to fl4, plane1 zooms from city2 to city0 with fuel level fl5 to fl6, plane1 flies from city3 to city0 with fuel level fl5 to fl0, plane1 zooms from city0 to city3 with fuel level fl6 to fl0, plane1 zooms from city2 to city0 with fuel level fl6 to fl0, person2 boards plane1 at city2, plane1 zooms from city1 to city2 with fuel level fl1 to fl3, plane1 zooms from city0 to city2 with fuel level fl3 to fl2, plane1 zooms from city1 to city2 with fuel level fl0 to fl6, plane1 zooms from city2 to city0 with fuel level fl0 to fl2, plane1 flies from city0 to city1 with fuel level fl3 to fl0, plane1 flies from city2 to city1 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl5 to fl3, plane1 zooms from city2 to city0 with fuel level fl2 to fl6, plane1 zooms from city1 to city2 with fuel level fl5 to fl0, plane1 zooms from city0 to city2 with fuel level fl0 to fl1, plane1 flies from city0 to city3 with fuel level fl0 to fl2, plane1 gets refueled at city1 with fuel level fl0 to fl4, plane1 zooms from city1 to city0 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl0 to fl4, plane1 zooms from city1 to city3 with fuel level fl5 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl5, plane1 gets refueled at city1 with fuel level fl5 to fl1, plane1 zooms from city0 to city2 with fuel level fl4 to fl2, plane1 zooms from city0 to city2 with fuel level fl4 to fl1, plane1 zooms from city0 to city1 with fuel level fl4 to fl5, plane1 zooms from city2 to city1 with fuel level fl3 to fl2, plane1 flies from city3 to city0 with fuel level fl6 to fl2, plane1 zooms from city3 to city1 with fuel level fl3 to fl1, plane1 zooms from city2 to city3 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl2 to fl3, plane1 zooms from city1 to city0 with fuel level fl3 to fl5, plane1 zooms from city1 to city0 with fuel level fl2 to fl3, plane1 zooms from city2 to city3 with fuel level fl3 to fl5, plane1 flies from city0 to city2 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl0 to fl5, plane1 gets refueled at city3 with fuel level fl2 to fl1, plane1 zooms from city3 to city1 with fuel level fl2 to fl4, plane1 zooms from city0 to city3 with fuel level fl6 to fl5, plane1 flies from city2 to city1 with fuel level fl1 to fl2, plane1 zooms from city1 to city3 with fuel level fl0 to fl2, plane1 zooms from city2 to city1 with fuel level fl6 to fl0, plane1 zooms from city2 to city0 with fuel level fl3 to fl5, plane1 zooms from city2 to city1 with fuel level fl6 to fl1, plane1 zooms from city3 to city2 with fuel level fl3 to fl5, plane1 zooms from city1 to city2 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl0, plane1 zooms from city3 to city1 with fuel level fl5 to fl2, plane1 flies from city3 to city2 with fuel level fl2 to fl1, plane1 zooms from city0 to city2 with fuel level fl1 to fl0, plane1 zooms from city1 to city3 with fuel level fl5 to fl1, plane1 zooms from city0 to city1 with fuel level fl5 to fl1, plane1 zooms from city3 to city1 with fuel level fl0 to fl6, plane1 zooms from city1 to city2 with fuel level fl1 to fl2, plane1 zooms from city3 to city1 with fuel level fl1 to fl5, plane1 flies from city3 to city2 with fuel level fl5 to fl4, plane1 zooms from city3 to city1 with fuel level fl6 to fl0, plane1 zooms from city0 to city1 with fuel level fl1 to fl2, plane1 flies from city2 to city0 with fuel level fl6 to fl0, plane1 zooms from city1 to city2 with fuel level fl6 to fl4, plane1 flies from city2 to city3 with fuel level fl1 to fl3, plane1 flies from city0 to city3 with fuel level fl3 to fl1, plane1 zooms from city1 to city0 with fuel level fl3 to fl1, plane1 zooms from city3 to city1 with fuel level fl2 to fl6, plane1 zooms from city0 to city1 with fuel level fl4 to fl6, plane1 zooms from city3 to city2 with fuel level fl4 to fl2, plane1 flies from city0 to city3 with fuel level fl5 to fl4, plane1 zooms from city2 to city0 with fuel level fl4 to fl2, plane1 flies from city0 to city3 with fuel level fl1 to fl5, plane1 zooms from city0 to city2 with fuel level fl4 to fl6, plane1 zooms from city3 to city1 with fuel level fl3 to fl4, plane1 zooms from city2 to city1 with fuel level fl4 to fl5, plane1 zooms from city3 to city2 with fuel level fl0 to fl1, plane1 zooms from city2 to city0 with fuel level fl4 to fl1, plane1 gets refueled at city1 with fuel level fl2 to fl4, plane1 zooms from city3 to city1 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl1 to fl4, plane1 zooms from city3 to city0 with fuel level fl4 to fl1, plane1 zooms from city1 to city2 with fuel level fl2 to fl6, plane1 flies from city2 to city1 with fuel level fl4 to fl0, plane1 zooms from city1 to city2 with fuel level fl2 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl5, person8 departs plane1 at city1, plane1 flies from city3 to city1 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl2 to fl3, plane1 zooms from city3 to city2 with fuel level fl6 to fl5, plane1 zooms from city1 to city0 with fuel level fl1 to fl4, plane1 zooms from city2 to city1 with fuel level fl1 to fl6, plane1 zooms from city0 to city1 with fuel level fl2 to fl5, plane1 zooms from city3 to city1 with fuel level fl0 to fl2, plane1 zooms from city3 to city1 with fuel level fl2 to fl3, plane1 zooms from city2 to city3 with fuel level fl2 to fl6, plane1 zooms from city0 to city3 with fuel level fl6 to fl0, plane1 zooms from city0 to city1 with fuel level fl4 to fl1, plane1 zooms from city2 to city1 with fuel level fl5 to fl1, plane1 zooms from city0 to city3 with fuel level fl6 to fl0, plane1 flies from city3 to city2 with fuel level fl4 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl5, plane1 zooms from city3 to city1 with fuel level fl3 to fl5, plane1 zooms from city2 to city1 with fuel level fl4 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl3, plane1 zooms from city2 to city1 with fuel level fl2 to fl1, plane1 zooms from city1 to city0 with fuel level fl2 to fl3, plane1 flies from city2 to city1 with fuel level fl3 to fl0, plane1 zooms from city0 to city2 with fuel level fl1 to fl6, plane1 zooms from city0 to city2 with fuel level fl1 to fl0, plane1 gets refueled at city2 with fuel level fl0 to fl5, plane1 zooms from city2 to city0 with fuel level fl3 to fl4, plane1 zooms from city2 to city0 with fuel level fl3 to fl0, plane1 zooms from city0 to city1 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl5 to fl3, plane1 zooms from city3 to city2 with fuel level fl1 to fl2, plane1 zooms from city1 to city3 with fuel level fl1 to fl6, plane1 zooms from city2 to city3 with fuel level fl5 to fl6, plane1 zooms from city0 to city2 with fuel level fl4 to fl5, plane1 flies from city0 to city1 with fuel level fl2 to fl4, plane1 zooms from city1 to city3 with fuel level fl4 to fl1, plane1 zooms from city0 to city2 with fuel level fl3 to fl2, plane1 zooms from city1 to city3 with fuel level fl0 to fl4, plane1 zooms from city1 to city0 with fuel level fl6 to fl1, plane1 zooms from city3 to city0 with fuel level fl3 to fl0, plane1 zooms from city3 to city2 with fuel level fl6 to fl2, plane1 zooms from city2 to city3 with fuel level fl0 to fl3, plane1 flies from city2 to city3 with fuel level fl4 to fl3, plane1 gets refueled at city0 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl2 to fl4, plane1 zooms from city2 to city0 with fuel level fl6 to fl3, plane1 zooms from city0 to city1 with fuel level fl3 to fl2, plane1 zooms from city2 to city3 with fuel level fl2 to fl5, plane1 zooms from city1 to city2 with fuel level fl5 to fl3, plane1 zooms from city2 to city3 with fuel level fl0 to fl1, plane1 zooms from city3 to city2 with fuel level fl1 to fl6, plane1 zooms from city1 to city2 with fuel level fl1 to fl3, plane1 flies from city3 to city0 with fuel level fl0 to fl6, plane1 gets refueled at city2 with fuel level fl6 to fl4, plane1 zooms from city0 to city1 with fuel level fl2 to fl5, plane1 flies from city1 to city2 with fuel level fl3 to fl5, plane1 zooms from city2 to city1 with fuel level fl1 to fl2, person2 boards plane1 at city3, plane1 zooms from city2 to city0 with fuel level fl5 to fl0, plane1 zooms from city3 to city2 with fuel level fl3 to fl2, plane1 zooms from city2 to city0 with fuel level fl1 to fl0, plane1 zooms from city2 to city0 with fuel level fl3 to fl0, plane1 zooms from city2 to city0 with fuel level fl6 to fl2, plane1 zooms from city0 to city3 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl2 to fl3, plane1 zooms from city2 to city0 with fuel level fl6 to fl0, plane1 zooms from city3 to city2 with fuel level fl3 to fl0, plane1 zooms from city3 to city0 with fuel level fl3 to fl2, plane1 flies from city3 to city0 with fuel level fl0 to fl2, plane1 zooms from city2 to city1 with fuel level fl1 to fl0, plane1 flies from city3 to city0 with fuel level fl4 to fl0, plane1 zooms from city2 to city1 with fuel level fl0 to fl4, plane1 zooms from city3 to city1 with fuel level fl6 to fl5, plane1 flies from city1 to city0 with fuel level fl2 to fl6, plane1 zooms from city1 to city2 with fuel level fl5 to fl6, plane1 flies from city1 to city0 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl6 to fl2, plane1 zooms from city2 to city1 with fuel level fl2 to fl5, plane1 flies from city2 to city0 with fuel level fl6 to fl2, person7 boards plane1 at city1, plane1 zooms from city3 to city1 with fuel level fl3 to fl1, plane1 gets refueled at city2 with fuel level fl6 to fl5, plane1 zooms from city1 to city2 with fuel level fl0 to fl1, plane1 zooms from city0 to city2 with fuel level fl3 to fl0, plane1 zooms from city0 to city3 with fuel level fl5 to fl1, plane1 zooms from city2 to city3 with fuel level fl2 to fl5, plane1 zooms from city0 to city2 with fuel level fl2 to fl5, plane1 zooms from city0 to city1 with fuel level fl6 to fl3, plane1 zooms from city0 to city2 with fuel level fl4 to fl3, plane1 flies from city2 to city1 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl4 to fl6, plane1 flies from city2 to city1 with fuel level fl0 to fl6, plane1 zooms from city3 to city2 with fuel level fl0 to fl2, plane1 zooms from city2 to city3 with fuel level fl0 to fl2, plane1 zooms from city2 to city0 with fuel level fl2 to fl5, plane1 zooms from city1 to city0 with fuel level fl6 to fl4, plane1 zooms from city3 to city2 with fuel level fl1 to fl3, plane1 zooms from city3 to city1 with fuel level fl0 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl5, plane1 zooms from city2 to city1 with fuel level fl0 to fl5, plane1 zooms from city2 to city3 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl1 to fl6, plane1 zooms from city3 to city0 with fuel level fl3 to fl1, plane1 zooms from city3 to city0 with fuel level fl1 to fl3, plane1 flies from city2 to city0 with fuel level fl4 to fl6, plane1 gets refueled at city3 with fuel level fl0 to fl2, plane1 zooms from city0 to city1 with fuel level fl5 to fl1, plane1 zooms from city3 to city0 with fuel level fl2 to fl6, plane1 zooms from city3 to city2 with fuel level fl6 to fl4, plane1 zooms from city1 to city2 with fuel level fl6 to fl3, plane1 flies from city2 to city0 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl6 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl3, plane1 zooms from city2 to city1 with fuel level fl4 to fl1, plane1 zooms from city0 to city3 with fuel level fl1 to fl6, plane1 zooms from city2 to city3 with fuel level fl1 to fl5, plane1 zooms from city0 to city3 with fuel level fl6 to fl0, plane1 flies from city3 to city1 with fuel level fl2 to fl5, plane1 flies from city1 to city3 with fuel level fl5 to fl6, plane1 flies from city2 to city1 with fuel level fl0 to fl4, plane1 zooms from city2 to city1 with fuel level fl1 to fl5, plane1 zooms from city3 to city2 with fuel level fl5 to fl2, plane1 zooms from city0 to city3 with fuel level fl0 to fl6, plane1 zooms from city0 to city3 with fuel level fl6 to fl1, plane1 flies from city3 to city1 with fuel level fl2 to fl4, plane1 zooms from city3 to city1 with fuel level fl5 to fl2, plane1 flies from city0 to city2 with fuel level fl3 to fl1, plane1 zooms from city0 to city1 with fuel level fl6 to fl2, plane1 zooms from city3 to city1 with fuel level fl4 to fl2, plane1 zooms from city2 to city0 with fuel level fl2 to fl0, plane1 zooms from city2 to city0 with fuel level fl2 to fl6, plane1 zooms from city0 to city3 with fuel level fl1 to fl0, plane1 zooms from city3 to city2 with fuel level fl3 to fl4, plane1 zooms from city0 to city1 with fuel level fl6 to fl1, plane1 zooms from city2 to city0 with fuel level fl1 to fl3, plane1 flies from city0 to city1 with fuel level fl0 to fl1, plane1 zooms from city0 to city1 with fuel level fl1 to fl3, plane1 flies from city1 to city2 with fuel level fl0 to fl3, plane1 zooms from city3 to city0 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl5 to fl6, plane1 zooms from city1 to city2 with fuel level fl0 to fl5, plane1 zooms from city1 to city3 with fuel level fl1 to fl4, plane1 zooms from city1 to city3 with fuel level fl0 to fl4, plane1 gets refueled at city1 with fuel level fl2 to fl6, plane1 zooms from city0 to city2 with fuel level fl3 to fl5, plane1 zooms from city3 to city0 with fuel level fl4 to fl0, plane1 flies from city1 to city0 with fuel level fl6 to fl5, plane1 zooms from city1 to city2 with fuel level fl5 to fl2, plane1 zooms from city1 to city0 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl2 to fl4, plane1 zooms from city2 to city3 with fuel level fl0 to fl6, plane1 zooms from city1 to city0 with fuel level fl4 to fl6, plane1 gets refueled at city1 with fuel level fl5 to fl0, plane1 zooms from city2 to city3 with fuel level fl6 to fl4, plane1 zooms from city2 to city0 with fuel level fl3 to fl0, plane1 zooms from city2 to city3 with fuel level fl0 to fl4, plane1 zooms from city1 to city3 with fuel level fl0 to fl2, plane1 zooms from city1 to city0 with fuel level fl2 to fl5, plane1 zooms from city1 to city3 with fuel level fl5 to fl4, plane1 zooms from city3 to city2 with fuel level fl3 to fl1, plane1 flies from city0 to city1 with fuel level fl0 to fl5, plane1 zooms from city1 to city2 with fuel level fl0 to fl2, plane1 zooms from city1 to city3 with fuel level fl6 to fl1, plane1 flies from city2 to city0 with fuel level fl1 to fl3, plane1 flies from city1 to city2 with fuel level fl1 to fl5, plane1 zooms from city3 to city2 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl2 to fl5, plane1 flies from city1 to city2 with fuel level fl6 to fl4, plane1 flies from city0 to city3 with fuel level fl2 to fl5, plane1 flies from city0 to city1 with fuel level fl6 to fl0, plane1 zooms from city3 to city2 with fuel level fl3 to fl0, plane1 zooms from city2 to city3 with fuel level fl3 to fl5, plane1 zooms from city3 to city0 with fuel level fl0 to fl2, plane1 zooms from city0 to city1 with fuel level fl5 to fl3, plane1 zooms from city1 to city0 with fuel level fl5 to fl0, plane1 zooms from city1 to city3 with fuel level fl6 to fl5, plane1 zooms from city1 to city2 with fuel level fl1 to fl0, plane1 zooms from city1 to city3 with fuel level fl1 to fl5, plane1 zooms from city3 to city0 with fuel level fl2 to fl5, plane1 gets refueled at city2 with fuel level fl4 to fl3, plane1 zooms from city3 to city2 with fuel level fl0 to fl3, plane1 zooms from city0 to city3 with fuel level fl4 to fl3, plane1 zooms from city2 to city3 with fuel level fl0 to fl2, plane1 zooms from city3 to city0 with fuel level fl2 to fl6, plane1 zooms from city1 to city0 with fuel level fl5 to fl6, plane1 zooms from city0 to city1 with fuel level fl1 to fl6, plane1 zooms from city0 to city3 with fuel level fl6 to fl1, plane1 flies from city2 to city0 with fuel level fl2 to fl6, plane1 zooms from city2 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city0 with fuel level fl4 to fl5, plane1 zooms from city1 to city3 with fuel level fl5 to fl0, person1 boards plane1 at city3, plane1 flies from city0 to city2 with fuel level fl0 to fl6, plane1 flies from city2 to city1 with fuel level fl1 to fl0, plane1 flies from city0 to city3 with fuel level fl6 to fl4, plane1 zooms from city2 to city3 with fuel level fl1 to fl6, person6 boards plane1 at city3, plane1 zooms from city1 to city0 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl1, plane1 zooms from city2 to city3 with fuel level fl4 to fl1, plane1 zooms from city1 to city2 with fuel level fl6 to fl3, plane1 zooms from city1 to city3 with fuel level fl0 to fl2, plane1 zooms from city0 to city1 with fuel level fl0 to fl5, plane1 gets refueled at city0 with fuel level fl1 to fl6, plane1 flies from city1 to city2 with fuel level fl1 to fl3, plane1 zooms from city1 to city2 with fuel level fl1 to fl6, plane1 zooms from city3 to city1 with fuel level fl3 to fl0, plane1 zooms from city3 to city1 with fuel level fl0 to fl2, plane1 zooms from city2 to city3 with fuel level fl1 to fl5, plane1 zooms from city2 to city1 with fuel level fl2 to fl5, plane1 zooms from city3 to city0 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl2 to fl1, plane1 flies from city3 to city0 with fuel level fl2 to fl4, plane1 zooms from city1 to city3 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl1 to fl2, person5 departs plane1 at city0, plane1 flies from city1 to city2 with fuel level fl4 to fl5, plane1 zooms from city0 to city3 with fuel level fl5 to fl1, plane1 zooms from city3 to city0 with fuel level fl0 to fl2, plane1 zooms from city1 to city2 with fuel level fl0 to fl2, plane1 zooms from city1 to city0 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl6 to fl2, plane1 zooms from city3 to city1 with fuel level fl5 to fl3, plane1 zooms from city1 to city2 with fuel level fl2 to fl0, plane1 zooms from city1 to city2 with fuel level fl3 to fl0, plane1 zooms from city3 to city0 with fuel level fl6 to fl2, plane1 flies from city0 to city2 with fuel level fl2 to fl5, plane1 zooms from city2 to city0 with fuel level fl2 to fl3, plane1 zooms from city1 to city2 with fuel level fl5 to fl6, plane1 flies from city0 to city1 with fuel level fl4 to fl5, plane1 zooms from city1 to city2 with fuel level fl2 to fl6, plane1 zooms from city2 to city1 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl3 to fl4, plane1 zooms from city2 to city1 with fuel level fl0 to fl1, plane1 zooms from city0 to city1 with fuel level fl3 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl3, plane1 zooms from city3 to city1 with fuel level fl3 to fl4, plane1 zooms from city1 to city0 with fuel level fl3 to fl4, plane1 zooms from city0 to city2 with fuel level fl2 to fl5, plane1 zooms from city0 to city1 with fuel level fl4 to fl0, plane1 zooms from city3 to city0 with fuel level fl1 to fl2, plane1 zooms from city3 to city0 with fuel level fl6 to fl1, plane1 flies from city1 to city3 with fuel level fl3 to fl0, plane1 zooms from city2 to city1 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl4 to fl5, plane1 zooms from city2 to city1 with fuel level fl3 to fl2, plane1 zooms from city0 to city2 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl5 to fl2, plane1 flies from city1 to city3 with fuel level fl6 to fl3, plane1 zooms from city3 to city0 with fuel level fl4 to fl1, plane1 zooms from city3 to city2 with fuel level fl6 to fl5, plane1 zooms from city3 to city0 with fuel level fl3 to fl6, plane1 zooms from city3 to city1 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl3 to fl4, plane1 zooms from city0 to city3 with fuel level fl5 to fl6, plane1 flies from city0 to city2 with fuel level fl4 to fl3, plane1 zooms from city2 to city3 with fuel level fl0 to fl6, plane1 zooms from city0 to city2 with fuel level fl0 to fl4, plane1 zooms from city0 to city2 with fuel level fl0 to fl6, plane1 zooms from city0 to city2 with fuel level fl2 to fl6, plane1 zooms from city0 to city1 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl1 to fl0, plane1 flies from city2 to city0 with fuel level fl2 to fl1, plane1 flies from city2 to city3 with fuel level fl4 to fl2, plane1 zooms from city2 to city1 with fuel level fl4 to fl2, plane1 zooms from city1 to city2 with fuel level fl0 to fl2, plane1 zooms from city0 to city1 with fuel level fl4 to fl2, plane1 zooms from city3 to city0 with fuel level fl3 to fl1, plane1 zooms from city1 to city0 with fuel level fl3 to fl1, plane1 zooms from city1 to city3 with fuel level fl1 to fl2, plane1 gets refueled at city3 with fuel level fl0 to fl5, plane1 zooms from city0 to city2 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl6 to fl0, plane1 zooms from city3 to city2 with fuel level fl2 to fl6, plane1 zooms from city0 to city2 with fuel level fl2 to fl5, person7 boards plane1 at city0, plane1 zooms from city0 to city2 with fuel level fl6 to fl5, plane1 zooms from city3 to city2 with fuel level fl5 to fl4, plane1 zooms from city3 to city0 with fuel level fl3 to fl5, plane1 zooms from city3 to city2 with fuel level fl5 to fl3, plane1 zooms from city3 to city0 with fuel level fl0 to fl3, plane1 zooms from city0 to city2 with fuel level fl2 to fl0, plane1 zooms from city2 to city1 with fuel level fl5 to fl2, plane1 gets refueled at city0 with fuel level fl6 to fl4, plane1 flies from city0 to city3 with fuel level fl4 to fl3, plane1 zooms from city3 to city0 with fuel level fl4 to fl2, plane1 flies from city3 to city1 with fuel level fl0 to fl5, plane1 gets refueled at city2 with fuel level fl2 to fl6, plane1 flies from city3 to city2 with fuel level fl3 to fl6, plane1 zooms from city0 to city2 with fuel level fl3 to fl4, plane1 zooms from city2 to city0 with fuel level fl2 to fl4, plane1 flies from city2 to city1 with fuel level fl5 to fl1, plane1 zooms from city1 to city0 with fuel level fl4 to fl0, plane1 zooms from city3 to city1 with fuel level fl5 to fl3, plane1 zooms from city3 to city2 with fuel level fl6 to fl5, plane1 zooms from city3 to city0 with fuel level fl3 to fl4, plane1 zooms from city0 to city2 with fuel level fl5 to fl4, plane1 gets refueled at city1 with fuel level fl1 to fl6, plane1 zooms from city2 to city0 with fuel level fl3 to fl6, plane1 zooms from city0 to city1 with fuel level fl1 to fl6, plane1 zooms from city2 to city1 with fuel level fl4 to fl2, plane1 zooms from city3 to city1 with fuel level fl6 to fl1, plane1 zooms from city2 to city0 with fuel level fl6 to fl3, plane1 zooms from city3 to city1 with fuel level fl0 to fl4, plane1 zooms from city1 to city2 with fuel level fl1 to fl0, plane1 zooms from city0 to city2 with fuel level fl2 to fl0, plane1 flies from city3 to city0 with fuel level fl0 to fl5, plane1 gets refueled at city3 with fuel level fl3 to fl1, plane1 zooms from city1 to city3 with fuel level fl2 to fl1, plane1 flies from city3 to city0 with fuel level fl6 to fl4, plane1 zooms from city3 to city0 with fuel level fl6 to fl3, plane1 zooms from city3 to city1 with fuel level fl4 to fl5, plane1 zooms from city3 to city0 with fuel level fl0 to fl5, plane1 zooms from city1 to city2 with fuel level fl1 to fl2, plane1 zooms from city2 to city0 with fuel level fl3 to fl5, plane1 zooms from city2 to city0 with fuel level fl4 to fl6, person6 departs plane1 at city1, plane1 zooms from city3 to city0 with fuel level fl3 to fl1, plane1 flies from city1 to city0 with fuel level fl0 to fl3, plane1 flies from city3 to city2 with fuel level fl2 to fl3, plane1 zooms from city1 to city3 with fuel level fl3 to fl2, plane1 gets refueled at city1 with fuel level fl0 to fl6, plane1 zooms from city3 to city0 with fuel level fl5 to fl6, plane1 zooms from city3 to city2 with fuel level fl6 to fl4, plane1 gets refueled at city3 with fuel level fl4 to fl2, plane1 zooms from city3 to city0 with fuel level fl4 to fl0, plane1 zooms from city1 to city2 with fuel level fl6 to fl1, plane1 zooms from city3 to city2 with fuel level fl1 to fl0, plane1 flies from city2 to city1 with fuel level fl5 to fl2, plane1 zooms from city3 to city2 with fuel level fl2 to fl3, plane1 zooms from city0 to city1 with fuel level fl5 to fl0, plane1 zooms from city1 to city3 with fuel level fl1 to fl3, plane1 zooms from city1 to city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl5 to fl0, plane1 zooms from city3 to city2 with fuel level fl2 to fl5, plane1 gets refueled at city0 with fuel level fl0 to fl3, plane1 zooms from city2 to city1 with fuel level fl5 to fl1, plane1 zooms from city1 to city0 with fuel level fl0 to fl4, plane1 zooms from city3 to city1 with fuel level fl0 to fl5, plane1 flies from city0 to city3 with fuel level fl4 to fl5, plane1 zooms from city1 to city2 with fuel level fl1 to fl3, plane1 zooms from city1 to city0 with fuel level fl6 to fl2, plane1 gets refueled at city0 with fuel level fl1 to fl5, plane1 zooms from city3 to city1 with fuel level fl1 to fl4, plane1 flies from city3 to city0 with fuel level fl2 to fl1, plane1 zooms from city1 to city3 with fuel level fl3 to fl0, plane1 zooms from city0 to city3 with fuel level fl3 to fl5, plane1 zooms from city3 to city1 with fuel level fl0 to fl5, plane1 zooms from city0 to city2 with fuel level fl4 to fl5, plane1 zooms from city3 to city1 with fuel level fl0 to fl4, plane1 zooms from city3 to city1 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl0 to fl3, plane1 zooms from city2 to city0 with fuel level fl5 to fl1, plane1 flies from city1 to city2 with fuel level fl3 to fl4, plane1 zooms from city2 to city3 with fuel level fl1 to fl6, plane1 zooms from city0 to city1 with fuel level fl3 to fl1, plane1 flies from city1 to city0 with fuel level fl1 to fl6, plane1 zooms from city0 to city3 with fuel level fl1 to fl0, plane1 flies from city1 to city0 with fuel level fl4 to fl6, plane1 zooms from city2 to city0 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl2 to fl4, plane1 zooms from city2 to city1 with fuel level fl0 to fl2, plane1 flies from city0 to city1 with fuel level fl6 to fl4, plane1 zooms from city0 to city2 with fuel level fl4 to fl3, plane1 zooms from city3 to city2 with fuel level fl4 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl1, plane1 zooms from city3 to city2 with fuel level fl6 to fl3, plane1 zooms from city1 to city0 with fuel level fl0 to fl1, plane1 flies from city1 to city0 with fuel level fl0 to fl4, plane1 zooms from city2 to city0 with fuel level fl5 to fl0, plane1 zooms from city2 to city1 with fuel level fl2 to fl1, plane1 flies from city2 to city3 with fuel level fl0 to fl2, plane1 zooms from city2 to city0 with fuel level fl2 to fl1, plane1 zooms from city0 to city2 with fuel level fl1 to fl0, plane1 zooms from city1 to city2 with fuel level fl4 to fl3, plane1 zooms from city0 to city1 with fuel level fl4 to fl3, plane1 flies from city3 to city2 with fuel level fl6 to fl3, plane1 zooms from city1 to city2 with fuel level fl4 to fl2, plane1 zooms from city0 to city3 with fuel level fl1 to fl0, plane1 gets refueled at city2 with fuel level fl5 to fl6, plane1 zooms from city1 to city0 with fuel level fl0 to fl4, plane1 zooms from city0 to city3 with fuel level fl0 to fl3, plane1 zooms from city0 to city1 with fuel level fl3 to fl4, plane1 zooms from city1 to city0 with fuel level fl5 to fl6, plane1 zooms from city0 to city3 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl2 to fl0, plane1 gets refueled at city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl6 to fl1, plane1 zooms from city1 to city3 with fuel level fl4 to fl1, plane1 zooms from city2 to city3 with fuel level fl6 to fl5, plane1 zooms from city1 to city3 with fuel level fl2 to fl4, plane1 zooms from city2 to city1 with fuel level fl1 to fl4, plane1 zooms from city2 to city1 with fuel level fl4 to fl0, plane1 gets refueled at city2 with fuel level fl1 to fl5, plane1 zooms from city3 to city2 with fuel level fl0 to fl2, plane1 flies from city3 to city0 with fuel level fl1 to fl6, plane1 zooms from city2 to city0 with fuel level fl5 to fl6, plane1 zooms from city2 to city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl0 to fl5, plane1 zooms from city3 to city2 with fuel level fl2 to fl3, plane1 zooms from city1 to city0 with fuel level fl6 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl4, plane1 zooms from city2 to city1 with fuel level fl3 to fl4, plane1 flies from city2 to city1 with fuel level fl5 to fl6, person8 boards plane1 at city3, plane1 flies from city1 to city0 with fuel level fl5 to fl3, person3 boards plane1 at city0, plane1 zooms from city1 to city3 with fuel level fl3 to fl1, plane1 zooms from city1 to city0 with fuel level fl1 to fl0, plane1 zooms from city1 to city2 with fuel level fl3 to fl6, plane1 zooms from city1 to city0 with fuel level fl3 to fl4, plane1 flies from city3 to city1 with fuel level fl5 to fl1, plane1 zooms from city0 to city1 with fuel level fl6 to fl3, plane1 flies from city3 to city1 with fuel level fl5 to fl3, plane1 zooms from city0 to city2 with fuel level fl1 to fl4, plane1 zooms from city2 to city3 with fuel level fl5 to fl3, plane1 zooms from city0 to city2 with fuel level fl0 to fl4, plane1 flies from city2 to city0 with fuel level fl4 to fl5, plane1 zooms from city1 to city0 with fuel level fl1 to fl5, plane1 zooms from city2 to city3 with fuel level fl0 to fl2, person6 boards plane1 at city0, plane1 zooms from city2 to city0 with fuel level fl6 to fl4, plane1 zooms from city1 to city3 with fuel level fl2 to fl3, plane1 zooms from city0 to city2 with fuel level fl5 to fl2, plane1 zooms from city3 to city1 with fuel level fl4 to fl5, plane1 zooms from city2 to city0 with fuel level fl5 to fl3, plane1 zooms from city2 to city3 with fuel level fl4 to fl3, plane1 zooms from city0 to city2 with fuel level fl2 to fl3, plane1 flies from city2 to city1 with fuel level fl6 to fl2, plane1 flies from city3 to city1 with fuel level fl6 to fl4, plane1 flies from city0 to city1 with fuel level fl6 to fl1, plane1 zooms from city2 to city3 with fuel level fl4 to fl2, plane1 zooms from city0 to city3 with fuel level fl1 to fl6, plane1 zooms from city0 to city1 with fuel level fl5 to fl2, plane1 zooms from city0 to city1 with fuel level fl6 to fl1, plane1 zooms from city3 to city1 with fuel level fl3 to fl0, plane1 zooms from city3 to city1 with fuel level fl5 to fl2, plane1 zooms from city2 to city1 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl1 to fl5, plane1 zooms from city2 to city3 with fuel level fl0 to fl2, plane1 zooms from city1 to city3 with fuel level fl1 to fl5, plane1 zooms from city0 to city1 with fuel level fl1 to fl0, plane1 zooms from city0 to city3 with fuel level fl5 to fl4, person8 boards plane1 at city2, plane1 zooms from city0 to city2 with fuel level fl5 to fl0, plane1 zooms from city2 to city1 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl1 to fl4, plane1 zooms from city0 to city3 with fuel level fl4 to fl0, plane1 flies from city0 to city1 with fuel level fl5 to fl0, plane1 zooms from city1 to city2 with fuel level fl3 to fl4, plane1 gets refueled at city0 with fuel level fl1 to fl2, plane1 zooms from city0 to city3 with fuel level fl6 to fl1, plane1 zooms from city1 to city0 with fuel level fl3 to fl4, plane1 zooms from city3 to city2 with fuel level fl3 to fl2, plane1 zooms from city2 to city0 with fuel level fl4 to fl3, plane1 zooms from city3 to city0 with fuel level fl3 to fl2, plane1 zooms from city1 to city2 with fuel level fl0 to fl6, plane1 zooms from city0 to city2 with fuel level fl3 to fl5, plane1 zooms from city3 to city2 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl1 to fl6, plane1 zooms from city0 to city3 with fuel level fl3 to fl6, plane1 zooms from city1 to city0 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl5 to fl2, plane1 zooms from city0 to city3 with fuel level fl5 to fl6, plane1 zooms from city0 to city1 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl0 to fl4, plane1 zooms from city2 to city3 with fuel level fl5 to fl4, plane1 zooms from city2 to city1 with fuel level fl1 to fl4, plane1 flies from city2 to city3 with fuel level fl5 to fl2, plane1 zooms from city0 to city1 with fuel level fl0 to fl5, plane1 zooms from city2 to city3 with fuel level fl6 to fl3, plane1 zooms from city2 to city0 with fuel level fl1 to fl6, plane1 zooms from city0 to city2 with fuel level fl2 to fl6, plane1 flies from city2 to city0 with fuel level fl6 to fl1, plane1 zooms from city3 to city2 with fuel level fl3 to fl1, plane1 zooms from city3 to city2 with fuel level fl4 to fl0, plane1 zooms from city1 to city0 with fuel level fl0 to fl4, plane1 gets refueled at city1 with fuel level fl4 to fl2, plane1 zooms from city2 to city1 with fuel level fl5 to fl6, plane1 flies from city3 to city1 with fuel level fl6 to fl5, plane1 zooms from city0 to city2 with fuel level fl0 to fl1, plane1 zooms from city2 to city3 with fuel level fl6 to fl2, plane1 zooms from city3 to city2 with fuel level fl2 to fl5, plane1 flies from city2 to city0 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl3 to fl1, plane1 zooms from city3 to city2 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl3 to fl1, plane1 zooms from city3 to city2 with fuel level fl4 to fl3, plane1 zooms from city1 to city2 with fuel level fl3 to fl6, plane1 zooms from city0 to city2 with fuel level fl5 to fl4, plane1 flies from city2 to city0 with fuel level fl3 to fl2, plane1 zooms from city1 to city3 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl2 to fl6, plane1 zooms from city2 to city3 with fuel level fl6 to fl3, plane1 zooms from city2 to city0 with fuel level fl3 to fl4, plane1 zooms from city0 to city3 with fuel level fl2 to fl5, plane1 flies from city1 to city3 with fuel level fl0 to fl3, plane1 zooms from city1 to city3 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl1 to fl3, plane1 zooms from city1 to city2 with fuel level fl4 to fl1, plane1 zooms from city2 to city3 with fuel level fl3 to fl5, plane1 flies from city3 to city2 with fuel level fl6 to fl2, plane1 zooms from city1 to city3 with fuel level fl1 to fl6, plane1 zooms from city1 to city0 with fuel level fl4 to fl5, plane1 zooms from city0 to city1 with fuel level fl0 to fl1, plane1 zooms from city3 to city1 with fuel level fl6 to fl0, plane1 zooms from city1 to city2 with fuel level fl0 to fl1, plane1 zooms from city0 to city2 with fuel level fl6 to fl4, plane1 flies from city3 to city1 with fuel level fl1 to fl5, plane1 zooms from city0 to city3 with fuel level fl3 to fl1, plane1 zooms from city0 to city3 with fuel level fl2 to fl0, plane1 zooms from city3 to city1 with fuel level fl2 to fl6, plane1 zooms from city2 to city3 with fuel level fl3 to fl1, plane1 zooms from city2 to city3 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl5 to fl4, plane1 zooms from city0 to city2 with fuel level fl1 to fl2, plane1 zooms from city3 to city0 with fuel level fl3 to fl1, plane1 flies from city1 to city0 with fuel level fl2 to fl3, plane1 zooms from city0 to city3 with fuel level fl6 to fl5, plane1 gets refueled at city1 with fuel level fl6 to fl5, plane1 zooms from city2 to city1 with fuel level fl4 to fl1, plane1 flies from city1 to city0 with fuel level fl5 to fl6, plane1 zooms from city3 to city1 with fuel level fl3 to fl0, plane1 zooms from city2 to city0 with fuel level fl4 to fl3, plane1 flies from city2 to city0 with fuel level fl0 to fl4, plane1 zooms from city3 to city0 with fuel level fl3 to fl5, plane1 zooms from city0 to city3 with fuel level fl2 to fl4, plane1 zooms from city3 to city2 with fuel level fl1 to fl4, plane1 zooms from city3 to city2 with fuel level fl3 to fl4, plane1 zooms from city2 to city1 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl1 to fl6, person3 boards plane1 at city3, plane1 zooms from city1 to city2 with fuel level fl3 to fl1, plane1 zooms from city3 to city2 with fuel level fl6 to fl1, plane1 zooms from city3 to city0 with fuel level fl0 to fl4, plane1 zooms from city0 to city3 with fuel level fl3 to fl5, plane1 flies from city1 to city0 with fuel level fl3 to fl5, plane1 zooms from city2 to city1 with fuel level fl5 to fl3, plane1 zooms from city0 to city3 with fuel level fl2 to fl6, plane1 zooms from city3 to city2 with fuel level fl3 to fl2, plane1 zooms from city2 to city3 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl6 to fl2, plane1 zooms from city0 to city1 with fuel level fl1 to fl2, plane1 flies from city0 to city3 with fuel level fl4 to fl0, plane1 zooms from city3 to city2 with fuel level fl5 to fl1, plane1 zooms from city0 to city3 with fuel level fl5 to fl0, plane1 zooms from city2 to city3 with fuel level fl6 to fl1, plane1 flies from city1 to city2 with fuel level fl2 to fl6, plane1 zooms from city0 to city3 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl0 to fl1, plane1 flies from city0 to city3 with fuel level fl3 to fl2, plane1 zooms from city2 to city1 with fuel level fl6 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl4 to fl5, plane1 zooms from city0 to city2 with fuel level fl1 to fl4, plane1 zooms from city1 to city0 with fuel level fl1 to fl5, plane1 zooms from city0 to city2 with fuel level fl4 to fl0, plane1 zooms from city2 to city1 with fuel level fl5 to fl3, plane1 zooms from city2 to city0 with fuel level fl6 to fl3, plane1 flies from city2 to city0 with fuel level fl3 to fl0, plane1 zooms from city2 to city3 with fuel level fl5 to fl0, plane1 zooms from city3 to city0 with fuel level fl6 to fl2, plane1 zooms from city1 to city0 with fuel level fl6 to fl5, plane1 flies from city1 to city3 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl2 to fl4, plane1 zooms from city0 to city1 with fuel level fl5 to fl0, plane1 zooms from city2 to city0 with fuel level fl3 to fl1, plane1 flies from city2 to city3 with fuel level fl2 to fl1, person8 departs plane1 at city0, plane1 zooms from city0 to city1 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl1 to fl2, plane1 zooms from city0 to city1 with fuel level fl4 to fl2, plane1 zooms from city2 to city3 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl0 to fl3, plane1 flies from city1 to city2 with fuel level fl4 to fl2, plane1 zooms from city3 to city1 with fuel level fl0 to fl1, plane1 zooms from city3 to city1 with fuel level fl4 to fl2, plane1 flies from city0 to city3 with fuel level fl6 to fl5, plane1 zooms from city2 to city0 with fuel level fl6 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl0, plane1 zooms from city0 to city3 with fuel level fl6 to fl4, plane1 zooms from city3 to city1 with fuel level fl3 to fl6, plane1 zooms from city1 to city3 with fuel level fl6 to fl3, plane1 zooms from city3 to city2 with fuel level fl2 to fl1, plane1 zooms from city3 to city1 with fuel level fl5 to fl0, plane1 zooms from city1 to city0 with fuel level fl4 to fl0, plane1 zooms from city3 to city0 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl3 to fl0, plane1 zooms from city1 to city3 with fuel level fl0 to fl6, plane1 zooms from city3 to city0 with fuel level fl3 to fl4, plane1 zooms from city2 to city1 with fuel level fl0 to fl1, plane1 zooms from city2 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city2 with fuel level fl4 to fl3, plane1 zooms from city3 to city1 with fuel level fl2 to fl3, plane1 zooms from city2 to city3 with fuel level fl0 to fl4, plane1 flies from city2 to city3 with fuel level fl4 to fl5, plane1 zooms from city0 to city3 with fuel level fl6 to fl4, plane1 zooms from city1 to city0 with fuel level fl0 to fl6, plane1 zooms from city1 to city0 with fuel level fl3 to fl1, plane1 zooms from city2 to city0 with fuel level fl2 to fl4, plane1 zooms from city0 to city2 with fuel level fl4 to fl6, plane1 zooms from city0 to city2 with fuel level fl0 to fl1, plane1 flies from city2 to city0 with fuel level fl5 to fl2, plane1 zooms from city0 to city2 with fuel level fl2 to fl0, plane1 zooms from city3 to city0 with fuel level fl1 to fl4, plane1 zooms from city2 to city0 with fuel level fl5 to fl3, plane1 zooms from city0 to city2 with fuel level fl5 to fl1, plane1 gets refueled at city3 with fuel level fl3 to fl0, plane1 zooms from city3 to city1 with fuel level fl0 to fl1, plane1 zooms from city3 to city0 with fuel level fl4 to fl5, plane1 zooms from city1 to city3 with fuel level fl5 to fl3, plane1 zooms from city3 to city0 with fuel level fl0 to fl3, plane1 zooms from city3 to city1 with fuel level fl4 to fl1, plane1 zooms from city0 to city2 with fuel level fl5 to fl4, plane1 zooms from city1 to city3 with fuel level fl3 to fl6, plane1 zooms from city1 to city2 with fuel level fl3 to fl2, plane1 zooms from city1 to city3 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city3 with fuel level fl0 to fl4, plane1 zooms from city0 to city1 with fuel level fl2 to fl6, plane1 zooms from city3 to city1 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl5 to fl1, plane1 gets refueled at city1 with fuel level fl3 to fl4, plane1 flies from city1 to city0 with fuel level fl0 to fl2, plane1 flies from city0 to city3 with fuel level fl3 to fl6, plane1 flies from city0 to city3 with fuel level fl6 to fl0, person1 departs plane1 at city2, plane1 zooms from city2 to city3 with fuel level fl1 to fl2, plane1 zooms from city3 to city0 with fuel level fl6 to fl4, plane1 zooms from city1 to city3 with fuel level fl5 to fl1, plane1 zooms from city3 to city2 with fuel level fl0 to fl4, plane1 zooms from city3 to city2 with fuel level fl6 to fl3, plane1 zooms from city3 to city1 with fuel level fl6 to fl4, plane1 zooms from city3 to city1 with fuel level fl3 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl6, plane1 zooms from city1 to city0 with fuel level fl0 to fl3, plane1 zooms from city1 to city3 with fuel level fl3 to fl5, plane1 zooms from city3 to city2 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl6 to fl1, plane1 zooms from city1 to city3 with fuel level fl3 to fl5, plane1 zooms from city3 to city0 with fuel level fl0 to fl6, plane1 zooms from city3 to city1 with fuel level fl4 to fl6, plane1 zooms from city3 to city0 with fuel level fl2 to fl1, plane1 zooms from city1 to city0 with fuel level fl2 to fl3, plane1 zooms from city0 to city1 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl1 to fl5, plane1 zooms from city3 to city0 with fuel level fl4 to fl5, plane1 zooms from city2 to city3 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl2 to fl3, plane1 zooms from city3 to city1 with fuel level fl3 to fl5, plane1 zooms from city2 to city0 with fuel level fl6 to fl1, plane1 zooms from city1 to city2 with fuel level fl0 to fl3, plane1 flies from city1 to city2 with fuel level fl5 to fl1, plane1 zooms from city0 to city2 with fuel level fl5 to fl6, plane1 zooms from city0 to city1 with fuel level fl5 to fl6, plane1 zooms from city0 to city1 with fuel level fl5 to fl4, plane1 flies from city0 to city2 with fuel level fl5 to fl6, plane1 zooms from city0 to city1 with fuel level fl0 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl4, plane1 zooms from city0 to city3 with fuel level fl3 to fl4, plane1 zooms from city0 to city1 with fuel level fl0 to fl1, plane1 zooms from city3 to city2 with fuel level fl2 to fl4, plane1 flies from city0 to city3 with fuel level fl4 to fl1, plane1 zooms from city3 to city0 with fuel level fl4 to fl3, plane1 flies from city2 to city1 with fuel level fl2 to fl3, plane1 zooms from city2 to city1 with fuel level fl4 to fl6, plane1 zooms from city3 to city0 with fuel level fl6 to fl2, plane1 zooms from city3 to city0 with fuel level fl1 to fl6, plane1 zooms from city2 to city1 with fuel level fl5 to fl4, plane1 zooms from city0 to city1 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl2 to fl5, plane1 zooms from city1 to city3 with fuel level fl6 to fl2, plane1 zooms from city2 to city0 with fuel level fl6 to fl2, plane1 gets refueled at city1 with fuel level fl3 to fl1, plane1 zooms from city1 to city0 with fuel level fl5 to fl3, plane1 zooms from city1 to city3 with fuel level fl0 to fl1, plane1 zooms from city1 to city0 with fuel level fl4 to fl3, plane1 zooms from city1 to city2 with fuel level fl5 to fl4, plane1 zooms from city0 to city2 with fuel level fl6 to fl0, plane1 flies from city3 to city1 with fuel level fl0 to fl1, plane1 gets refueled at city3 with fuel level fl0 to fl1, plane1 zooms from city1 to city3 with fuel level fl5 to fl3, plane1 zooms from city0 to city3 with fuel level fl4 to fl0, plane1 flies from city0 to city3 with fuel level fl2 to fl0, plane1 zooms from city1 to city2 with fuel level fl2 to fl3, plane1 zooms from city0 to city2 with fuel level fl3 to fl1, plane1 zooms from city0 to city1 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl1 to fl6, plane1 zooms from city3 to city1 with fuel level fl1 to fl0, plane1 zooms from city1 to city3 with fuel level fl3 to fl0, plane1 flies from city1 to city0 with fuel level fl4 to fl3, plane1 zooms from city0 to city2 with fuel level fl4 to fl1, plane1 gets refueled at city3 with fuel level fl1 to fl6, plane1 zooms from city2 to city0 with fuel level fl6 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl3, plane1 zooms from city1 to city2 with fuel level fl3 to fl2, plane1 zooms from city2 to city0 with fuel level fl2 to fl5, plane1 gets refueled at city0 with fuel level fl3 to fl4, plane1 zooms from city2 to city3 with fuel level fl3 to fl2, plane1 zooms from city2 to city0 with fuel level fl6 to fl5, plane1 zooms from city0 to city1 with fuel level fl3 to fl6, plane1 zooms from city0 to city2 with fuel level fl6 to fl1, plane1 zooms from city2 to city0 with fuel level fl0 to fl4, plane1 zooms from city2 to city1 with fuel level fl6 to fl2, plane1 zooms from city3 to city2 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl2 to fl0, plane1 zooms from city1 to city2 with fuel level fl0 to fl4, plane1 zooms from city2 to city3 with fuel level fl4 to fl5, plane1 zooms from city0 to city2 with fuel level fl2 to fl0, plane1 zooms from city3 to city1 with fuel level fl2 to fl6, plane1 zooms from city0 to city2 with fuel level fl0 to fl3, plane1 zooms from city0 to city1 with fuel level fl6 to fl4, plane1 zooms from city2 to city3 with fuel level fl5 to fl6, plane1 zooms from city2 to city1 with fuel level fl5 to fl4, plane1 zooms from city1 to city0 with fuel level fl2 to fl1, plane1 zooms from city1 to city2 with fuel level fl2 to fl1, plane1 zooms from city1 to city0 with fuel level fl5 to fl2, plane1 zooms from city0 to city2 with fuel level fl2 to fl3, plane1 zooms from city3 to city0 with fuel level fl3 to fl6, plane1 zooms from city3 to city2 with fuel level fl6 to fl3, plane1 zooms from city2 to city1 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl5, plane1 flies from city0 to city2 with fuel level fl2 to fl0, plane1 zooms from city0 to city2 with fuel level fl5 to fl0, plane1 zooms from city3 to city2 with fuel level fl0 to fl4, plane1 zooms from city1 to city3 with fuel level fl4 to fl2, plane1 zooms from city2 to city1 with fuel level fl4 to fl5, plane1 zooms from city0 to city2 with fuel level fl0 to fl6, plane1 zooms from city1 to city3 with fuel level fl5 to fl3, plane1 gets refueled at city0 with fuel level fl0 to fl6, plane1 zooms from city3 to city0 with fuel level fl1 to fl2, plane1 gets refueled at city2 with fuel level fl2 to fl1, plane1 zooms from city1 to city0 with fuel level fl1 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl4, plane1 flies from city1 to city0 with fuel level fl2 to fl5, plane1 zooms from city1 to city0 with fuel level fl2 to fl0, plane1 zooms from city1 to city0 with fuel level fl0 to fl1, plane1 flies from city2 to city1 with fuel level fl2 to fl0, plane1 zooms from city2 to city3 with fuel level fl4 to fl1, plane1 zooms from city0 to city1 with fuel level fl0 to fl6, plane1 zooms from city2 to city1 with fuel level fl1 to fl2, plane1 zooms from city0 to city1 with fuel level fl6 to fl1, plane1 zooms from city0 to city3 with fuel level fl5 to fl3, plane1 flies from city2 to city3 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl2 to fl0, plane1 zooms from city0 to city2 with fuel level fl0 to fl5, plane1 zooms from city3 to city0 with fuel level fl3 to fl6, plane1 flies from city1 to city3 with fuel level fl1 to fl6, plane1 zooms from city2 to city1 with fuel level fl3 to fl6, plane1 zooms from city3 to city1 with fuel level fl2 to fl0, plane1 zooms from city3 to city2 with fuel level fl5 to fl1, plane1 zooms from city2 to city0 with fuel level fl4 to fl1, plane1 zooms from city1 to city3 with fuel level fl2 to fl6, plane1 flies from city0 to city3 with fuel level fl0 to fl4, plane1 zooms from city1 to city2 with fuel level fl1 to fl4, plane1 zooms from city0 to city3 with fuel level fl5 to fl1, plane1 gets refueled at city3 with fuel level fl5 to fl6, person8 boards plane1 at city0, plane1 flies from city3 to city1 with fuel level fl6 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl4, plane1 zooms from city3 to city0 with fuel level fl4 to fl3, plane1 zooms from city2 to city1 with fuel level fl5 to fl0, plane1 zooms from city0 to city2 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl3 to fl6, plane1 flies from city3 to city1 with fuel level fl5 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl6, plane1 zooms from city0 to city2 with fuel level fl2 to fl1, plane1 flies from city1 to city3 with fuel level fl0 to fl5, plane1 flies from city3 to city1 with fuel level fl5 to fl4, plane1 zooms from city1 to city0 with fuel level fl5 to fl0, plane1 zooms from city3 to city0 with fuel level fl2 to fl5, plane1 zooms from city1 to city0 with fuel level fl5 to fl3, person4 boards plane1 at city1, plane1 zooms from city2 to city1 with fuel level fl2 to fl4, plane1 zooms from city3 to city0 with fuel level fl3 to fl0, plane1 zooms from city2 to city0 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl1 to fl4, plane1 zooms from city3 to city0 with fuel level fl6 to fl3, plane1 zooms from city2 to city3 with fuel level fl0 to fl1, plane1 zooms from city2 to city1 with fuel level fl6 to fl3, plane1 zooms from city1 to city0 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl5 to fl2, plane1 flies from city1 to city3 with fuel level fl2 to fl4, plane1 zooms from city1 to city3 with fuel level fl1 to fl6, plane1 zooms from city3 to city2 with fuel level fl4 to fl0, plane1 zooms from city2 to city0 with fuel level fl5 to fl1, plane1 zooms from city0 to city3 with fuel level fl4 to fl3, plane1 zooms from city1 to city2 with fuel level fl6 to fl5, plane1 zooms from city1 to city3 with fuel level fl3 to fl5, plane1 zooms from city2 to city0 with fuel level fl6 to fl1, plane1 zooms from city0 to city2 with fuel level fl2 to fl1, plane1 zooms from city3 to city0 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl6 to fl0, plane1 zooms from city1 to city3 with fuel level fl6 to fl5, plane1 zooms from city2 to city1 with fuel level fl0 to fl6, plane1 zooms from city0 to city2 with fuel level fl2 to fl4, plane1 zooms from city2 to city1 with fuel level fl1 to fl4, plane1 zooms from city2 to city1 with fuel level fl2 to fl4, plane1 zooms from city3 to city1 with fuel level fl6 to fl5, plane1 zooms from city1 to city2 with fuel level fl4 to fl5, plane1 zooms from city2 to city0 with fuel level fl0 to fl6, plane1 zooms from city2 to city0 with fuel level fl1 to fl0, plane1 flies from city3 to city0 with fuel level fl3 to fl4, plane1 zooms from city3 to city0 with fuel level fl6 to fl5, plane1 zooms from city3 to city0 with fuel level fl4 to fl5, plane1 zooms from city3 to city2 with fuel level fl5 to fl6, plane1 zooms from city3 to city2 with fuel level fl3 to fl6, plane1 zooms from city0 to city1 with fuel level fl0 to fl2, plane1 zooms from city2 to city3 with fuel level fl0 to fl3, plane1 zooms from city2 to city1 with fuel level fl3 to fl5, plane1 zooms from city0 to city3 with fuel level fl4 to fl5, plane1 flies from city1 to city0 with fuel level fl2 to fl0, plane1 zooms from city1 to city0 with fuel level fl4 to fl6, plane1 gets refueled at city2 with fuel level fl3 to fl2, plane1 zooms from city2 to city0 with fuel level fl5 to fl0, plane1 zooms from city3 to city2 with fuel level fl0 to fl1, plane1 flies from city0 to city2 with fuel level fl6 to fl2, plane1 flies from city3 to city0 with fuel level fl5 to fl3, plane1 zooms from city0 to city2 with fuel level fl4 to fl1, plane1 flies from city1 to city0 with fuel level fl0 to fl5, plane1 zooms from city0 to city3 with fuel level fl6 to fl4, plane1 zooms from city1 to city3 with fuel level fl1 to fl2, plane1 zooms from city1 to city0 with fuel level fl2 to fl1, plane1 zooms from city0 to city3 with fuel level fl3 to fl0, plane1 zooms from city3 to city2 with fuel level fl3 to fl2, plane1 zooms from city0 to city1 with fuel level fl1 to fl2, plane1 flies from city2 to city0 with fuel level fl3 to fl1, plane1 flies from city1 to city3 with fuel level fl1 to fl3, plane1 zooms from city1 to city3 with fuel level fl1 to fl4, plane1 zooms from city0 to city1 with fuel level fl1 to fl4, plane1 zooms from city0 to city3 with fuel level fl1 to fl2, plane1 zooms from city1 to city2 with fuel level fl5 to fl1, plane1 zooms from city1 to city0 with fuel level fl0 to fl5, plane1 zooms from city2 to city0 with fuel level fl2 to fl1, person7 departs plane1 at city2, plane1 gets refueled at city0 with fuel level fl2 to fl6, plane1 zooms from city3 to city0 with fuel level fl5 to fl2, plane1 zooms from city0 to city2 with fuel level fl4 to fl0, plane1 zooms from city2 to city0 with fuel level fl1 to fl4, plane1 zooms from city2 to city1 with fuel level fl6 to fl4, plane1 zooms from city2 to city1 with fuel level fl0 to fl2, plane1 zooms from city2 to city0 with fuel level fl2 to fl3, plane1 flies from city3 to city2 with fuel level fl6 to fl4, plane1 zooms from city3 to city2 with fuel level fl5 to fl0, plane1 zooms from city2 to city1 with fuel level fl4 to fl3, person2 departs plane1 at city3, plane1 zooms from city3 to city0 with fuel level fl3 to fl6, plane1 flies from city0 to city2 with fuel level fl2 to fl6, plane1 flies from city2 to city3 with fuel level fl2 to fl6, person7 departs plane1 at city3, plane1 zooms from city0 to city1 with fuel level fl2 to fl6, plane1 zooms from city1 to city3 with fuel level fl6 to fl4, plane1 zooms from city3 to city1 with fuel level fl1 to fl3, plane1 zooms from city2 to city1 with fuel level fl3 to fl0, plane1 gets refueled at city2 with fuel level fl6 to fl0, plane1 gets refueled at city3 with fuel level fl2 to fl4, plane1 zooms from city0 to city1 with fuel level fl6 to fl1, plane1 zooms from city0 to city2 with fuel level fl1 to fl0, plane1 zooms from city1 to city3 with fuel level fl1 to fl2, plane1 zooms from city2 to city0 with fuel level fl2 to fl6, plane1 zooms from city3 to city2 with fuel level fl6 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl2, plane1 zooms from city1 to city0 with fuel level fl5 to fl3, plane1 zooms from city3 to city1 with fuel level fl5 to fl1, plane1 flies from city1 to city3 with fuel level fl3 to fl5, plane1 flies from city1 to city2 with fuel level fl2 to fl5, plane1 zooms from city0 to city1 with fuel level fl0 to fl5, plane1 zooms from city1 to city0 with fuel level fl6 to fl1, plane1 zooms from city2 to city3 with fuel level fl5 to fl3, plane1 gets refueled at city1 with fuel level fl5 to fl2, plane1 zooms from city1 to city2 with fuel level fl5 to fl4, plane1 zooms from city2 to city3 with fuel level fl0 to fl3, person7 boards plane1 at city3, plane1 zooms from city3 to city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city0 with fuel level fl6 to fl0, plane1 zooms from city2 to city0 with fuel level fl6 to fl5, person1 boards plane1 at city2, plane1 flies from city3 to city1 with fuel level fl4 to fl0, plane1 zooms from city0 to city1 with fuel level fl1 to fl5, plane1 zooms from city2 to city0 with fuel level fl1 to fl2, plane1 flies from city3 to city2 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl3 to fl4, plane1 flies from city1 to city3 with fuel level fl4 to fl3, plane1 zooms from city3 to city0 with fuel level fl5 to fl3, plane1 zooms from city2 to city0 with fuel level fl4 to fl5, plane1 zooms from city3 to city0 with fuel level fl0 to fl6, plane1 flies from city2 to city0 with fuel level fl4 to fl1, plane1 zooms from city2 to city0 with fuel level fl2 to fl6, plane1 zooms from city3 to city0 with fuel level fl3 to fl0, plane1 zooms from city3 to city0 with fuel level fl3 to fl0, plane1 flies from city1 to city2 with fuel level fl5 to fl4, plane1 flies from city2 to city0 with fuel level fl4 to fl0, plane1 zooms from city2 to city1 with fuel level fl3 to fl1, plane1 zooms from city1 to city3 with fuel level fl5 to fl1, plane1 gets refueled at city0 with fuel level fl2 to fl4, plane1 flies from city0 to city2 with fuel level fl2 to fl3, plane1 zooms from city3 to city2 with fuel level fl0 to fl4, plane1 zooms from city0 to city1 with fuel level fl5 to fl2, plane1 zooms from city2 to city3 with fuel level fl4 to fl5, plane1 zooms from city3 to city1 with fuel level fl1 to fl3, plane1 zooms from city2 to city0 with fuel level fl4 to fl6, plane1 zooms from city3 to city2 with fuel level fl6 to fl0, plane1 zooms from city0 to city1 with fuel level fl1 to fl3, plane1 zooms from city1 to city3 with fuel level fl6 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl2 to fl0, plane1 zooms from city1 to city0 with fuel level fl3 to fl6, plane1 zooms from city0 to city1 with fuel level fl2 to fl3, plane1 flies from city3 to city1 with fuel level fl5 to fl2, plane1 zooms from city3 to city2 with fuel level fl0 to fl5, plane1 zooms from city3 to city0 with fuel level fl1 to fl2, plane1 flies from city2 to city1 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl3 to fl1, plane1 zooms from city2 to city0 with fuel level fl6 to fl1, plane1 gets refueled at city1 with fuel level fl4 to fl5, plane1 zooms from city2 to city3 with fuel level fl2 to fl4, plane1 zooms from city0 to city3 with fuel level fl1 to fl2, plane1 zooms from city3 to city2 with fuel level fl6 to fl0, plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 zooms from city0 to city1 with fuel level fl6 to fl3, plane1 flies from city3 to city2 with fuel level fl0 to fl2, plane1 flies from city0 to city3 with fuel level fl5 to fl0, plane1 flies from city2 to city1 with fuel level fl6 to fl3, plane1 zooms from city0 to city1 with fuel level fl1 to fl0, plane1 zooms from city0 to city3 with fuel level fl0 to fl1, plane1 zooms from city3 to city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city3 with fuel level fl3 to fl1, plane1 zooms from city2 to city3 with fuel level fl3 to fl4, plane1 zooms from city3 to city2 with fuel level fl5 to fl3, plane1 zooms from city0 to city1 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl1 to fl4, plane1 zooms from city2 to city0 with fuel level fl2 to fl4, plane1 gets refueled at city2 with fuel level fl5 to fl2, plane1 flies from city2 to city0 with fuel level fl3 to fl4, plane1 zooms from city3 to city1 with fuel level fl6 to fl3, plane1 flies from city0 to city1 with fuel level fl1 to fl6, plane1 zooms from city3 to city0 with fuel level fl0 to fl2, plane1 zooms from city3 to city1 with fuel level fl1 to fl0, plane1 flies from city3 to city2 with fuel level fl2 to fl5, plane1 zooms from city1 to city0 with fuel level fl0 to fl2, plane1 zooms from city1 to city2 with fuel level fl2 to fl3, plane1 flies from city2 to city3 with fuel level fl4 to fl0, plane1 flies from city3 to city2 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl1 to fl4, plane1 zooms from city2 to city0 with fuel level fl6 to fl1, plane1 zooms from city2 to city1 with fuel level fl6 to fl1, plane1 zooms from city1 to city0 with fuel level fl5 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl2, plane1 zooms from city0 to city3 with fuel level fl0 to fl4, plane1 zooms from city1 to city2 with fuel level fl1 to fl4, plane1 zooms from city1 to city0 with fuel level fl3 to fl0, plane1 zooms from city0 to city2 with fuel level fl2 to fl5, plane1 zooms from city2 to city0 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl3 to fl4, plane1 zooms from city2 to city1 with fuel level fl6 to fl5, plane1 zooms from city1 to city2 with fuel level fl3 to fl1, plane1 flies from city1 to city3 with fuel level fl6 to fl4, plane1 gets refueled at city0 with fuel level fl4 to fl1, plane1 gets refueled at city0 with fuel level fl6 to fl0, plane1 zooms from city0 to city3 with fuel level fl0 to fl3, plane1 zooms from city1 to city2 with fuel level fl0 to fl6, plane1 zooms from city2 to city0 with fuel level fl1 to fl5, plane1 zooms from city3 to city0 with fuel level fl1 to fl2, plane1 flies from city3 to city1 with fuel level fl2 to fl6, plane1 zooms from city2 to city1 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl0 to fl2, plane1 zooms from city1 to city2 with fuel level fl2 to fl5, plane1 zooms from city3 to city0 with fuel level fl1 to fl0, plane1 zooms from city0 to city2 with fuel level fl3 to fl4, plane1 zooms from city2 to city3 with fuel level fl3 to fl0, plane1 zooms from city3 to city1 with fuel level fl2 to fl3, plane1 zooms from city2 to city0 with fuel level fl0 to fl5, plane1 zooms from city3 to city1 with fuel level fl4 to fl1, plane1 gets refueled at city2 with fuel level fl1 to fl4, plane1 zooms from city2 to city3 with fuel level fl6 to fl1, plane1 zooms from city2 to city0 with fuel level fl6 to fl3, plane1 zooms from city3 to city2 with fuel level fl6 to fl5, plane1 flies from city3 to city1 with fuel level fl3 to fl2, plane1 zooms from city2 to city1 with fuel level fl2 to fl5, plane1 flies from city1 to city3 with fuel level fl5 to fl3, plane1 zooms from city0 to city1 with fuel level fl2 to fl3, plane1 zooms from city3 to city2 with fuel level fl2 to fl0, plane1 flies from city2 to city3 with fuel level fl2 to fl3, person6 departs plane1 at city0, plane1 zooms from city3 to city2 with fuel level fl5 to fl3, plane1 zooms from city0 to city1 with fuel level fl1 to fl4, plane1 flies from city3 to city2 with fuel level fl3 to fl4, plane1 zooms from city3 to city1 with fuel level fl0 to fl1, plane1 gets refueled at city0 with fuel level fl6 to fl3, plane1 zooms from city2 to city1 with fuel level fl5 to fl1, plane1 zooms from city3 to city1 with fuel level fl6 to fl2, plane1 zooms from city3 to city0 with fuel level fl5 to fl3, plane1 zooms from city0 to city2 with fuel level fl5 to fl0, plane1 zooms from city2 to city1 with fuel level fl0 to fl1, plane1 zooms from city3 to city0 with fuel level fl2 to fl6, plane1 zooms from city1 to city3 with fuel level fl5 to fl6, plane1 gets refueled at city2 with fuel level fl4 to fl5, plane1 zooms from city2 to city0 with fuel level fl2 to fl3, plane1 zooms from city2 to city0 with fuel level fl4 to fl6, plane1 zooms from city0 to city3 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl4 to fl0, plane1 zooms from city2 to city1 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl4 to fl2, plane1 zooms from city3 to city0 with fuel level fl1 to fl5, plane1 flies from city2 to city1 with fuel level fl1 to fl3, plane1 zooms from city2 to city1 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl5 to fl2, plane1 zooms from city2 to city0 with fuel level fl4 to fl0, plane1 flies from city2 to city0 with fuel level fl0 to fl6, plane1 zooms from city0 to city3 with fuel level fl1 to fl3, plane1 zooms from city2 to city0 with fuel level fl0 to fl4, plane1 zooms from city2 to city3 with fuel level fl2 to fl0, plane1 gets refueled at city3 with fuel level fl4 to fl0, plane1 zooms from city1 to city0 with fuel level fl6 to fl2, plane1 zooms from city2 to city1 with fuel level fl3 to fl6, plane1 zooms from city1 to city0 with fuel level fl5 to fl0, plane1 zooms from city3 to city1 with fuel level fl1 to fl6, plane1 zooms from city0 to city2 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl1 to fl3, plane1 gets refueled at city0 with fuel level fl6 to fl5, plane1 zooms from city2 to city1 with fuel level fl5 to fl2, plane1 zooms from city3 to city2 with fuel level fl6 to fl1, plane1 zooms from city1 to city3 with fuel level fl6 to fl1, plane1 flies from city2 to city1 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl2 to fl0, plane1 zooms from city2 to city1 with fuel level fl4 to fl6, plane1 zooms from city2 to city0 with fuel level fl6 to fl3, plane1 zooms from city3 to city2 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl1 to fl4, plane1 zooms from city0 to city3 with fuel level fl0 to fl3, plane1 zooms from city0 to city1 with fuel level fl3 to fl0, plane1 zooms from city0 to city1 with fuel level fl3 to fl1, plane1 zooms from city1 to city0 with fuel level fl0 to fl5, plane1 zooms from city0 to city2 with fuel level fl3 to fl2, plane1 flies from city0 to city3 with fuel level fl1 to fl2, plane1 zooms from city2 to city1 with fuel level fl6 to fl2, plane1 flies from city3 to city0 with fuel level fl1 to fl0, plane1 zooms from city3 to city0 with fuel level fl1 to fl3, plane1 zooms from city3 to city0 with fuel level fl6 to fl0, plane1 zooms from city0 to city1 with fuel level fl5 to fl3, plane1 zooms from city2 to city3 with fuel level fl6 to fl4, plane1 flies from city2 to city3 with fuel level fl5 to fl0, plane1 zooms from city3 to city0 with fuel level fl2 to fl5, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 zooms from city0 to city3 with fuel level fl2 to fl5, plane1 zooms from city3 to city2 with fuel level fl5 to fl4, plane1 zooms from city0 to city3 with fuel level fl4 to fl2, plane1 zooms from city1 to city0 with fuel level fl2 to fl4, plane1 zooms from city3 to city1 with fuel level fl2 to fl1, plane1 zooms from city1 to city3 with fuel level fl3 to fl5, plane1 zooms from city1 to city2 with fuel level fl3 to fl5, plane1 zooms from city0 to city1 with fuel level fl6 to fl2, plane1 zooms from city0 to city2 with fuel level fl5 to fl4, plane1 zooms from city1 to city0 with fuel level fl1 to fl2, plane1 zooms from city2 to city0 with fuel level fl4 to fl3, plane1 zooms from city2 to city0 with fuel level fl0 to fl6, plane1 zooms from city3 to city0 with fuel level fl6 to fl1, plane1 flies from city1 to city0 with fuel level fl5 to fl2, plane1 zooms from city3 to city2 with fuel level fl5 to fl0, plane1 zooms from city0 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city3 with fuel level fl0 to fl4, plane1 zooms from city3 to city2 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl0 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl2, plane1 zooms from city2 to city1 with fuel level fl0 to fl6, plane1 zooms from city3 to city0 with fuel level fl2 to fl0, plane1 zooms from city0 to city2 with fuel level fl1 to fl3, plane1 zooms from city3 to city0 with fuel level fl5 to fl4, plane1 zooms from city1 to city0 with fuel level fl0 to fl5, plane1 zooms from city1 to city3 with fuel level fl3 to fl1, plane1 zooms from city1 to city2 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl6 to fl4, plane1 zooms from city1 to city2 with fuel level fl2 to fl0, plane1 gets refueled at city0 with fuel level fl5 to fl2, plane1 zooms from city2 to city3 with fuel level fl1 to fl2, plane1 zooms from city0 to city2 with fuel level fl1 to fl4, plane1 zooms from city0 to city1 with fuel level fl2 to fl4, plane1 zooms from city1 to city3 with fuel level fl2 to fl1, plane1 zooms from city0 to city2 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl5 to fl2, plane1 zooms from city2 to city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city0 with fuel level fl2 to fl1, plane1 gets refueled at city0 with fuel level fl6 to fl1, plane1 zooms from city0 to city3 with fuel level fl4 to fl3, plane1 flies from city0 to city1 with fuel level fl2 to fl1, plane1 zooms from city1 to city2 with fuel level fl0 to fl1, plane1 zooms from city1 to city0 with fuel level fl0 to fl3, plane1 zooms from city1 to city0 with fuel level fl1 to fl5, plane1 zooms from city2 to city1 with fuel level fl5 to fl6, plane1 zooms from city2 to city0 with fuel level fl5 to fl0, plane1 zooms from city3 to city1 with fuel level fl5 to fl0, plane1 zooms from city2 to city3 with fuel level fl1 to fl6, plane1 zooms from city1 to city2 with fuel level fl4 to fl1, plane1 zooms from city1 to city3 with fuel level fl6 to fl0, plane1 zooms from city2 to city1 with fuel level fl5 to fl3, plane1 zooms from city2 to city0 with fuel level fl1 to fl6, plane1 zooms from city0 to city1 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl5 to fl0, plane1 zooms from city3 to city0 with fuel level fl4 to fl0, plane1 flies from city2 to city3 with fuel level fl5 to fl6, plane1 zooms from city2 to city0 with fuel level fl3 to fl5, plane1 zooms from city3 to city1 with fuel level fl1 to fl0, plane1 zooms from city3 to city1 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl4 to fl1, plane1 zooms from city2 to city3 with fuel level fl5 to fl3, plane1 flies from city2 to city3 with fuel level fl0 to fl3, plane1 zooms from city0 to city2 with fuel level fl3 to fl1, plane1 zooms from city0 to city3 with fuel level fl4 to fl5, plane1 zooms from city1 to city3 with fuel level fl5 to fl4, plane1 zooms from city3 to city2 with fuel level fl5 to fl0, plane1 zooms from city3 to city1 with fuel level fl2 to fl0, plane1 flies from city3 to city1 with fuel level fl1 to fl2, plane1 zooms from city1 to city3 with fuel level fl3 to fl4, plane1 flies from city2 to city0 with fuel level fl2 to fl5, plane1 flies from city2 to city0 with fuel level fl0 to fl1, plane1 zooms from city3 to city1 with fuel level fl6 to fl2, plane1 zooms from city0 to city1 with fuel level fl1 to fl2, plane1 zooms from city3 to city2 with fuel level fl6 to fl3, plane1 zooms from city1 to city0 with fuel level fl6 to fl3, plane1 zooms from city1 to city0 with fuel level fl4 to fl3, plane1 zooms from city0 to city1 with fuel level fl5 to fl0, plane1 zooms from city1 to city0 with fuel level fl4 to fl6, plane1 flies from city2 to city0 with fuel level fl2 to fl3, plane1 zooms from city3 to city0 with fuel level fl3 to fl5, plane1 zooms from city3 to city1 with fuel level fl1 to fl6, plane1 zooms from city1 to city2 with fuel level fl3 to fl0, plane1 zooms from city2 to city0 with fuel level fl1 to fl3, plane1 zooms from city3 to city0 with fuel level fl1 to fl4, plane1 zooms from city3 to city2 with fuel level fl4 to fl1, plane1 zooms from city1 to city0 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl3 to fl4, plane1 zooms from city3 to city1 with fuel level fl1 to fl4, plane1 zooms from city1 to city3 with fuel level fl2 to fl5, plane1 zooms from city2 to city0 with fuel level fl1 to fl4, plane1 flies from city0 to city2 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl1 to fl5, plane1 zooms from city0 to city1 with fuel level fl5 to fl3, plane1 zooms from city2 to city3 with fuel level fl2 to fl6, plane1 flies from city3 to city0 with fuel level fl4 to fl1, plane1 flies from city2 to city3 with fuel level fl5 to fl1, plane1 zooms from city2 to city1 with fuel level fl2 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl2, plane1 zooms from city0 to city1 with fuel level fl4 to fl2, plane1 gets refueled at city2 with fuel level fl3 to fl1, plane1 zooms from city2 to city0 with fuel level fl1 to fl0, plane1 zooms from city2 to city1 with fuel level fl3 to fl1, plane1 zooms from city1 to city2 with fuel level fl5 to fl1, plane1 flies from city1 to city3 with fuel level fl5 to fl0, plane1 flies from city1 to city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl4 to fl6, plane1 zooms from city3 to city1 with fuel level fl4 to fl5, plane1 zooms from city2 to city1 with fuel level fl1 to fl6, plane1 flies from city3 to city0 with fuel level fl0 to fl3, plane1 zooms from city0 to city3 with fuel level fl4 to fl5, plane1 zooms from city0 to city2 with fuel level fl3 to fl6, plane1 zooms from city3 to city1 with fuel level fl5 to fl4, plane1 zooms from city1 to city2 with fuel level fl0 to fl2, plane1 zooms from city1 to city2 with fuel level fl0 to fl1, plane1 zooms from city0 to city2 with fuel level fl0 to fl4, plane1 zooms from city3 to city1 with fuel level fl4 to fl3, plane1 zooms from city0 to city1 with fuel level fl3 to fl2, plane1 zooms from city1 to city2 with fuel level fl6 to fl5, plane1 zooms from city1 to city3 with fuel level fl6 to fl5, plane1 gets refueled at city1 with fuel level fl4 to fl3, plane1 zooms from city0 to city1 with fuel level fl0 to fl3, plane1 zooms from city1 to city0 with fuel level fl5 to fl4, plane1 zooms from city0 to city3 with fuel level fl6 to fl3, plane1 zooms from city1 to city3 with fuel level fl3 to fl0, plane1 zooms from city0 to city2 with fuel level fl0 to fl6, plane1 zooms from city3 to city0 with fuel level fl5 to fl0, plane1 zooms from city0 to city1 with fuel level fl1 to fl5, plane1 zooms from city1 to city3 with fuel level fl1 to fl5, plane1 gets refueled at city0 with fuel level fl3 to fl6, plane1 zooms from city0 to city3 with fuel level fl1 to fl4, plane1 zooms from city3 to city2 with fuel level fl5 to fl6, plane1 gets refueled at city0 with fuel level fl0 to fl4, plane1 flies from city1 to city2 with fuel level fl3 to fl0, plane1 zooms from city1 to city2 with fuel level fl6 to fl2, plane1 zooms from city2 to city1 with fuel level fl2 to fl0, plane1 zooms from city0 to city2 with fuel level fl3 to fl0, plane1 zooms from city1 to city3 with fuel level fl5 to fl4, plane1 flies from city0 to city2 with fuel level fl6 to fl3, plane1 zooms from city3 to city2 with fuel level fl1 to fl0, plane1 flies from city0 to city2 with fuel level fl3 to fl0, plane1 flies from city1 to city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl2 to fl6, plane1 zooms from city2 to city3 with fuel level fl4 to fl5, plane1 zooms from city2 to city3 with fuel level fl5 to fl4, plane1 zooms from city0 to city3 with fuel level fl3 to fl0, plane1 gets refueled at city1 with fuel level fl4 to fl6, plane1 flies from city3 to city1 with fuel level fl2 to fl1, plane1 zooms from city1 to city2 with fuel level fl4 to fl6, plane1 flies from city0 to city2 with fuel level fl1 to fl2, plane1 zooms from city2 to city1 with fuel level fl3 to fl6, plane1 zooms from city0 to city1 with fuel level fl0 to fl3, plane1 zooms from city2 to city0 with fuel level fl6 to fl5, plane1 flies from city2 to city3 with fuel level fl4 to fl6, plane1 gets refueled at city0 with fuel level fl4 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl5, plane1 zooms from city1 to city3 with fuel level fl5 to fl2, plane1 zooms from city0 to city2 with fuel level fl5 to fl6, plane1 zooms from city3 to city2 with fuel level fl5 to fl2, plane1 gets refueled at city3 with fuel level fl5 to fl0, plane1 flies from city0 to city2 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl0 to fl2, plane1 zooms from city2 to city0 with fuel level fl0 to fl4, plane1 zooms from city3 to city1 with fuel level fl1 to fl0, plane1 zooms from city2 to city3 with fuel level fl5 to fl6, plane1 gets refueled at city0 with fuel level fl1 to fl0, plane1 zooms from city1 to city2 with fuel level fl2 to fl1, plane1 flies from city1 to city2 with fuel level fl1 to fl4, plane1 flies from city3 to city1 with fuel level fl4 to fl6, plane1 zooms from city3 to city1 with fuel level fl3 to fl6, plane1 zooms from city2 to city3 with fuel level fl4 to fl6, plane1 zooms from city0 to city2 with fuel level fl5 to fl3, plane1 flies from city1 to city3 with fuel level fl4 to fl6, plane1 zooms from city3 to city1 with fuel level fl2 to fl6, plane1 zooms from city2 to city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl0 to fl2, plane1 zooms from city2 to city3 with fuel level fl0 to fl3, plane1 zooms from city3 to city2 with fuel level fl3 to fl4, person8 departs plane1 at city2, plane1 flies from city1 to city2 with fuel level fl1 to fl0, plane1 zooms from city1 to city3 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl5 to fl4, plane1 zooms from city3 to city0 with fuel level fl4 to fl0, plane1 zooms from city0 to city1 with fuel level fl3 to fl5, plane1 zooms from city3 to city1 with fuel level fl5 to fl1, plane1 zooms from city0 to city1 with fuel level fl3 to fl0, plane1 flies from city3 to city1 with fuel level fl0 to fl2, plane1 flies from city1 to city3 with fuel level fl2 to fl1, plane1 zooms from city0 to city2 with fuel level fl5 to fl3, plane1 zooms from city1 to city2 with fuel level fl6 to fl0, plane1 zooms from city2 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city0 with fuel level fl5 to fl2, plane1 zooms from city1 to city2 with fuel level fl5 to fl2, plane1 zooms from city2 to city3 with fuel level fl5 to fl0, plane1 zooms from city2 to city3 with fuel level fl0 to fl1, plane1 zooms from city0 to city2 with fuel level fl3 to fl0, plane1 gets refueled at city0 with fuel level fl2 to fl5, plane1 zooms from city2 to city1 with fuel level fl6 to fl5, plane1 zooms from city3 to city1 with fuel level fl2 to fl5, plane1 zooms from city0 to city2 with fuel level fl1 to fl3, plane1 zooms from city0 to city1 with fuel level fl0 to fl3, plane1 flies from city1 to city3 with fuel level fl3 to fl4, plane1 zooms from city3 to city1 with fuel level fl5 to fl4, plane1 zooms from city0 to city1 with fuel level fl6 to fl2, plane1 zooms from city2 to city0 with fuel level fl4 to fl2, plane1 flies from city0 to city1 with fuel level fl4 to fl6, plane1 zooms from city0 to city2 with fuel level fl2 to fl4, plane1 zooms from city0 to city1 with fuel level fl1 to fl0, plane1 zooms from city3 to city1 with fuel level fl2 to fl4, plane1 flies from city3 to city0 with fuel level fl0 to fl4, plane1 zooms from city0 to city2 with fuel level fl6 to fl1, plane1 zooms from city2 to city1 with fuel level fl4 to fl3, plane1 zooms from city3 to city2 with fuel level fl3 to fl5, plane1 flies from city1 to city2 with fuel level fl0 to fl2, plane1 zooms from city2 to city3 with fuel level fl6 to fl0, plane1 zooms from city3 to city1 with fuel level fl1 to fl3, plane1 gets refueled at city2 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl2 to fl3, plane1 zooms from city1 to city2 with fuel level fl1 to fl6, plane1 gets refueled at city2 with fuel level fl2 to fl5, plane1 flies from city3 to city0 with fuel level fl6 to fl5, plane1 zooms from city3 to city0 with fuel level fl1 to fl0, plane1 flies from city1 to city3 with fuel level fl0 to fl2, plane1 zooms from city2 to city1 with fuel level fl0 to fl5, plane1 zooms from city3 to city1 with fuel level fl5 to fl3, plane1 flies from city0 to city2 with fuel level fl3 to fl4, plane1 zooms from city3 to city2 with fuel level fl6 to fl3, plane1 zooms from city0 to city3 with fuel level fl5 to fl6, plane1 zooms from city1 to city3 with fuel level fl4 to fl0, plane1 zooms from city1 to city2 with fuel level fl2 to fl6, plane1 zooms from city0 to city1 with fuel level fl6 to fl5, plane1 zooms from city0 to city1 with fuel level fl6 to fl5, plane1 zooms from city0 to city1 with fuel level fl4 to fl1, plane1 zooms from city3 to city1 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl2 to fl3, plane1 zooms from city2 to city1 with fuel level fl5 to fl0, plane1 gets refueled at city1 with fuel level fl1 to fl0, plane1 zooms from city0 to city1 with fuel level fl1 to fl6, plane1 flies from city2 to city1 with fuel level fl3 to fl4, plane1 zooms from city2 to city1 with fuel level fl5 to fl0, plane1 zooms from city0 to city3 with fuel level fl0 to fl6, plane1 zooms from city1 to city3 with fuel level fl6 to fl0, plane1 zooms from city1 to city3 with fuel level fl6 to fl4, plane1 zooms from city0 to city2 with fuel level fl1 to fl6, plane1 zooms from city1 to city0 with fuel level fl4 to fl3, plane1 zooms from city2 to city3 with fuel level fl0 to fl6, plane1 flies from city1 to city2 with fuel level fl2 to fl3, plane1 gets refueled at city3 with fuel level fl5 to fl3, plane1 zooms from city3 to city2 with fuel level fl3 to fl1, plane1 zooms from city1 to city0 with fuel level fl5 to fl4, plane1 zooms from city3 to city1 with fuel level fl3 to fl1, plane1 zooms from city3 to city1 with fuel level fl5 to fl6, plane1 zooms from city3 to city1 with fuel level fl1 to fl4, plane1 zooms from city0 to city3 with fuel level fl0 to fl5, plane1 flies from city1 to city2 with fuel level fl4 to fl3, plane1 zooms from city3 to city1 with fuel level fl6 to fl3, plane1 zooms from city1 to city0 with fuel level fl5 to fl6, plane1 zooms from city2 to city1 with fuel level fl5 to fl0, plane1 zooms from city0 to city3 with fuel level fl2 to fl1, plane1 zooms from city3 to city0 with fuel level fl6 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl2 to fl4, plane1 zooms from city3 to city2 with fuel level fl0 to fl6, plane1 zooms from city2 to city0 with fuel level fl0 to fl3, plane1 zooms from city1 to city3 with fuel level fl4 to fl3, plane1 zooms from city3 to city0 with fuel level fl0 to fl4, plane1 zooms from city3 to city2 with fuel level fl3 to fl4, plane1 flies from city3 to city0 with fuel level fl1 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl2, plane1 gets refueled at city2 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl3 to fl1, plane1 flies from city2 to city1 with fuel level fl2 to fl5, plane1 zooms from city0 to city1 with fuel level fl2 to fl0, plane1 zooms from city1 to city0 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl1 to fl0, plane1 zooms from city2 to city3 with fuel level fl3 to fl1, plane1 zooms from city2 to city1 with fuel level fl6 to fl0, plane1 zooms from city3 to city2 with fuel level fl5 to fl4, plane1 zooms from city0 to city2 with fuel level fl3 to fl5, plane1 zooms from city1 to city3 with fuel level fl1 to fl2, plane1 zooms from city2 to city1 with fuel level fl4 to fl5, plane1 zooms from city2 to city3 with fuel level fl1 to fl2, plane1 zooms from city2 to city3 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl2 to fl5, plane1 flies from city2 to city1 with fuel level fl1 to fl4, plane1 flies from city3 to city2 with fuel level fl0 to fl4, person4 boards plane1 at city2, plane1 zooms from city3 to city2 with fuel level fl4 to fl6, plane1 zooms from city1 to city3 with fuel level fl3 to fl5, plane1 zooms from city2 to city1 with fuel level fl0 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl4, plane1 zooms from city2 to city0 with fuel level fl1 to fl5, plane1 flies from city3 to city0 with fuel level fl3 to fl1, plane1 zooms from city3 to city0 with fuel level fl0 to fl4, plane1 zooms from city2 to city3 with fuel level fl1 to fl5, plane1 zooms from city0 to city1 with fuel level fl1 to fl4, plane1 zooms from city2 to city1 with fuel level fl1 to fl6, plane1 zooms from city0 to city2 with fuel level fl4 to fl5, plane1 zooms from city3 to city1 with fuel level fl3 to fl2, plane1 zooms from city1 to city2 with fuel level fl0 to fl2, plane1 flies from city2 to city1 with fuel level fl2 to fl6, plane1 flies from city3 to city0 with fuel level fl4 to fl6, plane1 zooms from city1 to city3 with fuel level fl5 to fl0, plane1 zooms from city1 to city3 with fuel level fl5 to fl6, plane1 zooms from city0 to city1 with fuel level fl6 to fl1, plane1 zooms from city3 to city1 with fuel level fl1 to fl3, plane1 zooms from city3 to city0 with fuel level fl6 to fl0, plane1 zooms from city2 to city0 with fuel level fl5 to fl1, plane1 zooms from city1 to city2 with fuel level fl6 to fl1, plane1 zooms from city0 to city1 with fuel level fl4 to fl2, plane1 zooms from city0 to city3 with fuel level fl3 to fl1, plane1 flies from city3 to city0 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl5 to fl1, plane1 zooms from city2 to city1 with fuel level fl4 to fl0, plane1 zooms from city0 to city1 with fuel level fl6 to fl4, plane1 zooms from city3 to city0 with fuel level fl3 to fl2, plane1 zooms from city0 to city2 with fuel level fl5 to fl1, plane1 flies from city0 to city2 with fuel level fl1 to fl0, plane1 flies from city3 to city2 with fuel level fl0 to fl6, plane1 flies from city3 to city0 with fuel level fl1 to fl2, plane1 zooms from city0 to city2 with fuel level fl4 to fl0, plane1 zooms from city3 to city2 with fuel level fl2 to fl6, plane1 zooms from city1 to city0 with fuel level fl0 to fl5, plane1 flies from city1 to city2 with fuel level fl3 to fl6, plane1 zooms from city0 to city2 with fuel level fl1 to fl5, person6 boards plane1 at city1, plane1 zooms from city2 to city0 with fuel level fl5 to fl4, plane1 zooms from city3 to city0 with fuel level fl6 to fl2, plane1 gets refueled at city0 with fuel level fl6 to fl2, plane1 zooms from city3 to city2 with fuel level fl4 to fl1, plane1 zooms from city1 to city0 with fuel level fl5 to fl1, plane1 zooms from city3 to city2 with fuel level fl1 to fl0, plane1 flies from city1 to city0 with fuel level fl3 to fl0, plane1 zooms from city2 to city3 with fuel level fl6 to fl0, plane1 flies from city0 to city1 with fuel level fl2 to fl5, plane1 zooms from city1 to city2 with fuel level fl3 to fl4, plane1 zooms from city3 to city0 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl6 to fl2, person7 departs plane1 at city0, plane1 flies from city3 to city2 with fuel level fl1 to fl6, plane1 zooms from city0 to city3 with fuel level fl6 to fl2, plane1 flies from city3 to city1 with fuel level fl2 to fl0, plane1 zooms from city1 to city2 with fuel level fl4 to fl6, plane1 zooms from city1 to city3 with fuel level fl3 to fl0, plane1 zooms from city3 to city2 with fuel level fl6 to fl5, plane1 zooms from city1 to city3 with fuel level fl6 to fl3, plane1 zooms from city1 to city0 with fuel level fl1 to fl2, plane1 zooms from city0 to city2 with fuel level fl6 to fl0, plane1 zooms from city2 to city3 with fuel level fl4 to fl1, plane1 gets refueled at city2 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl4 to fl5, plane1 flies from city2 to city3 with fuel level fl0 to fl6, plane1 flies from city0 to city3 with fuel level fl3 to fl0, plane1 zooms from city3 to city1 with fuel level fl4 to fl3, plane1 zooms from city0 to city1 with fuel level fl1 to fl6, plane1 zooms from city3 to city1 with fuel level fl4 to fl3, plane1 zooms from city2 to city1 with fuel level fl3 to fl6, person4 departs plane1 at city1, plane1 zooms from city0 to city1 with fuel level fl1 to fl4, plane1 zooms from city3 to city0 with fuel level fl6 to fl1, plane1 zooms from city0 to city3 with fuel level fl2 to fl0, plane1 zooms from city3 to city1 with fuel level fl2 to fl0, plane1 gets refueled at city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl6 to fl5, plane1 zooms from city3 to city0 with fuel level fl5 to fl1, plane1 zooms from city1 to city0 with fuel level fl4 to fl5, plane1 zooms from city3 to city2 with fuel level fl0 to fl5, plane1 zooms from city1 to city2 with fuel level fl6 to fl2, plane1 zooms from city0 to city1 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl0 to fl6, plane1 zooms from city0 to city2 with fuel level fl3 to fl0, plane1 zooms from city0 to city3 with fuel level fl5 to fl1, plane1 zooms from city2 to city1 with fuel level fl6 to fl1, plane1 zooms from city1 to city0 with fuel level fl6 to fl0, plane1 zooms from city1 to city0 with fuel level fl2 to fl5, plane1 gets refueled at city0 with fuel level fl4 to fl3, plane1 zooms from city0 to city3 with fuel level fl3 to fl2, plane1 zooms from city0 to city1 with fuel level fl2 to fl1, plane1 zooms from city2 to city1 with fuel level fl1 to fl3, plane1 zooms from city3 to city1 with fuel level fl2 to fl6, plane1 zooms from city0 to city3 with fuel level fl0 to fl5, plane1 zooms from city0 to city2 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl2 to fl1, plane1 zooms from city2 to city1 with fuel level fl6 to fl5, plane1 zooms from city0 to city3 with fuel level fl5 to fl0, plane1 zooms from city2 to city1 with fuel level fl5 to fl6, plane1 zooms from city1 to city2 with fuel level fl6 to fl5, plane1 flies from city0 to city3 with fuel level fl5 to fl3, plane1 flies from city1 to city0 with fuel level fl1 to fl0, plane1 zooms from city1 to city3 with fuel level fl3 to fl6, plane1 zooms from city3 to city1 with fuel level fl2 to fl1, plane1 zooms from city3 to city0 with fuel level fl1 to fl4, plane1 zooms from city2 to city1 with fuel level fl2 to fl4, plane1 flies from city0 to city2 with fuel level fl6 to fl1, plane1 zooms from city2 to city3 with fuel level fl4 to fl6, plane1 zooms from city1 to city0 with fuel level fl5 to fl0, plane1 zooms from city0 to city2 with fuel level fl6 to fl0, plane1 zooms from city2 to city1 with fuel level fl0 to fl3, plane1 gets refueled at city2 with fuel level fl2 to fl4, plane1 zooms from city3 to city2 with fuel level fl3 to fl0, plane1 zooms from city3 to city0 with fuel level fl1 to fl5, plane1 zooms from city0 to city3 with fuel level fl3 to fl6, plane1 flies from city2 to city3 with fuel level fl6 to fl1, plane1 zooms from city2 to city3 with fuel level fl6 to fl1, person2 departs plane1 at city2, plane1 zooms from city2 to city3 with fuel level fl6 to fl4, plane1 flies from city2 to city3 with fuel level fl6 to fl0, plane1 zooms from city1 to city3 with fuel level fl2 to fl0, plane1 zooms from city1 to city2 with fuel level fl4 to fl5, plane1 zooms from city3 to city1 with fuel level fl2 to fl5, plane1 flies from city3 to city2 with fuel level fl5 to fl1, plane1 flies from city1 to city3 with fuel level fl2 to fl6, plane1 zooms from city0 to city3 with fuel level fl1 to fl5, plane1 zooms from city2 to city1 with fuel level fl5 to fl1, plane1 zooms from city3 to city0 with fuel level fl2 to fl5, plane1 zooms from city0 to city2 with fuel level fl4 to fl2, plane1 zooms from city1 to city0 with fuel level fl5 to fl2, plane1 zooms from city0 to city3 with fuel level fl3 to fl1, plane1 flies from city1 to city0 with fuel level fl6 to fl3, plane1 zooms from city2 to city3 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl0 to fl4, plane1 zooms from city0 to city3 with fuel level fl2 to fl1, plane1 zooms from city2 to city1 with fuel level fl4 to fl2, plane1 zooms from city1 to city3 with fuel level fl4 to fl5, plane1 zooms from city2 to city0 with fuel level fl6 to fl0, plane1 flies from city1 to city2 with fuel level fl5 to fl0, plane1 zooms from city0 to city3 with fuel level fl5 to fl4, plane1 zooms from city3 to city2 with fuel level fl4 to fl0, plane1 zooms from city1 to city0 with fuel level fl2 to fl6, plane1 flies from city1 to city2 with fuel level fl4 to fl0, plane1 flies from city3 to city1 with fuel level fl6 to fl1, plane1 zooms from city1 to city2 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl1 to fl0, plane1 zooms from city0 to city3 with fuel level fl3 to fl2, plane1 zooms from city1 to city0 with fuel level fl6 to fl0, plane1 zooms from city2 to city1 with fuel level fl0 to fl1, plane1 zooms from city0 to city2 with fuel level fl0 to fl1, plane1 zooms from city3 to city1 with fuel level fl6 to fl5, plane1 zooms from city3 to city1 with fuel level fl1 to fl2, plane1 zooms from city3 to city2 with fuel level fl2 to fl1, plane1 zooms from city2 to city0 with fuel level fl2 to fl1, plane1 zooms from city1 to city0 with fuel level fl0 to fl5, plane1 zooms from city1 to city2 with fuel level fl5 to fl2, plane1 zooms from city3 to city1 with fuel level fl1 to fl5, plane1 zooms from city0 to city3 with fuel level fl2 to fl3, plane1 zooms from city2 to city1 with fuel level fl4 to fl1, plane1 gets refueled at city0 with fuel level fl0 to fl5, plane1 zooms from city0 to city1 with fuel level fl2 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl2, plane1 zooms from city1 to city2 with fuel level fl3 to fl0, plane1 gets refueled at city2 with fuel level fl4 to fl6, plane1 zooms from city2 to city1 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl2 to fl0, plane1 zooms from city1 to city3 with fuel level fl3 to fl0, plane1 flies from city2 to city1 with fuel level fl6 to fl5, plane1 gets refueled at city3 with fuel level fl2 to fl5, plane1 gets refueled at city1 with fuel level fl6 to fl1, plane1 zooms from city3 to city1 with fuel level fl2 to fl4, plane1 flies from city0 to city1 with fuel level fl1 to fl3, person5 boards plane1 at city1, plane1 zooms from city2 to city1 with fuel level fl5 to fl2, plane1 zooms from city0 to city2 with fuel level fl1 to fl6, plane1 zooms from city0 to city3 with fuel level fl6 to fl5, plane1 zooms from city1 to city3 with fuel level fl3 to fl6, plane1 zooms from city0 to city1 with fuel level fl2 to fl3, plane1 zooms from city2 to city0 with fuel level fl1 to fl5, plane1 flies from city2 to city3 with fuel level fl3 to fl5, plane1 zooms from city1 to city0 with fuel level fl4 to fl0, plane1 flies from city2 to city3 with fuel level fl6 to fl3, plane1 gets refueled at city3 with fuel level fl5 to fl4, plane1 zooms from city3 to city1 with fuel level fl6 to fl1, plane1 zooms from city1 to city3 with fuel level fl2 to fl6, plane1 flies from city2 to city3 with fuel level fl5 to fl3, plane1 zooms from city2 to city0 with fuel level fl3 to fl6, plane1 gets refueled at city1 with fuel level fl1 to fl3, plane1 zooms from city1 to city2 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl3 to fl4, plane1 zooms from city2 to city1 with fuel level fl2 to fl5, plane1 zooms from city3 to city0 with fuel level fl2 to fl5, plane1 zooms from city0 to city3 with fuel level fl1 to fl5, plane1 flies from city1 to city2 with fuel level fl0 to fl5, plane1 zooms from city0 to city3 with fuel level fl6 to fl4, plane1 flies from city1 to city2 with fuel level fl5 to fl2, plane1 zooms from city3 to city1 with fuel level fl5 to fl0, plane1 zooms from city3 to city1 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl1 to fl0, plane1 zooms from city3 to city1 with fuel level fl6 to fl1, plane1 zooms from city1 to city3 with fuel level fl0 to fl3, plane1 flies from city3 to city0 with fuel level fl5 to fl2, plane1 zooms from city1 to city0 with fuel level fl2 to fl3, plane1 zooms from city3 to city1 with fuel level fl4 to fl0, plane1 zooms from city0 to city3 with fuel level fl3 to fl5, plane1 zooms from city0 to city3 with fuel level fl1 to fl3, plane1 zooms from city2 to city0 with fuel level fl3 to fl1, plane1 flies from city2 to city1 with fuel level fl4 to fl3, plane1 zooms from city2 to city3 with fuel level fl4 to fl1, plane1 zooms from city1 to city2 with fuel level fl6 to fl2, plane1 zooms from city2 to city3 with fuel level fl4 to fl6, plane1 zooms from city2 to city0 with fuel level fl5 to fl3, plane1 zooms from city0 to city3 with fuel level fl0 to fl5, plane1 flies from city3 to city0 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl5 to fl1, plane1 zooms from city2 to city3 with fuel level fl4 to fl6, plane1 zooms from city3 to city0 with fuel level fl2 to fl4, plane1 zooms from city1 to city0 with fuel level fl3 to fl4, plane1 zooms from city0 to city3 with fuel level fl1 to fl2, plane1 zooms from city3 to city1 with fuel level fl5 to fl1, plane1 gets refueled at city3 with fuel level fl6 to fl0, plane1 flies from city3 to city1 with fuel level fl3 to fl4, plane1 zooms from city1 to city2 with fuel level fl1 to fl4, plane1 zooms from city2 to city1 with fuel level fl4 to fl3, plane1 zooms from city0 to city2 with fuel level fl5 to fl0, plane1 zooms from city1 to city3 with fuel level fl2 to fl3, plane1 flies from city2 to city0 with fuel level fl3 to fl6, plane1 zooms from city1 to city2 with fuel level fl5 to fl1, plane1 zooms from city3 to city1 with fuel level fl0 to fl5, plane1 flies from city1 to city3 with fuel level fl2 to fl3, plane1 flies from city2 to city1 with fuel level fl2 to fl4, plane1 zooms from city1 to city0 with fuel level fl5 to fl4, plane1 zooms from city0 to city1 with fuel level fl1 to fl3, plane1 zooms from city3 to city2 with fuel level fl3 to fl0, plane1 zooms from city2 to city1 with fuel level fl2 to fl3, plane1 zooms from city3 to city0 with fuel level fl1 to fl0, plane1 gets refueled at city3 with fuel level fl1 to fl0, plane1 zooms from city0 to city2 with fuel level fl6 to fl4, plane1 zooms from city1 to city2 with fuel level fl1 to fl6, plane1 zooms from city1 to city3 with fuel level fl0 to fl3, plane1 zooms from city0 to city3 with fuel level fl6 to fl3, plane1 flies from city1 to city0 with fuel level fl3 to fl2, plane1 zooms from city1 to city3 with fuel level fl5 to fl6, plane1 flies from city3 to city2 with fuel level fl1 to fl2, plane1 zooms from city0 to city2 with fuel level fl3 to fl6, plane1 gets refueled at city2 with fuel level fl3 to fl5, plane1 zooms from city0 to city2 with fuel level fl0 to fl2, plane1 flies from city0 to city2 with fuel level fl0 to fl4, plane1 flies from city2 to city1 with fuel level fl5 to fl0, plane1 zooms from city2 to city1 with fuel level fl2 to fl3, plane1 zooms from city2 to city1 with fuel level fl1 to fl0, plane1 zooms from city0 to city1 with fuel level fl2 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl1 to fl3, plane1 flies from city1 to city0 with fuel level fl6 to fl2, plane1 zooms from city0 to city3 with fuel level fl0 to fl6, plane1 flies from city0 to city2 with fuel level fl6 to fl5, plane1 zooms from city2 to city0 with fuel level fl4 to fl1, plane1 zooms from city0 to city3 with fuel level fl4 to fl3, plane1 flies from city3 to city0 with fuel level fl5 to fl1, plane1 flies from city1 to city2 with fuel level fl1 to fl6, plane1 zooms from city2 to city1 with fuel level fl0 to fl1, plane1 zooms from city2 to city0 with fuel level fl3 to fl2, plane1 zooms from city3 to city0 with fuel level fl6 to fl5, plane1 zooms from city0 to city3 with fuel level fl2 to fl6, plane1 zooms from city0 to city3 with fuel level fl5 to fl0, plane1 zooms from city1 to city0 with fuel level fl2 to fl0, plane1 flies from city0 to city3 with fuel level fl4 to fl6, plane1 zooms from city0 to city3 with fuel level fl5 to fl4, plane1 zooms from city1 to city0 with fuel level fl3 to fl0, plane1 flies from city2 to city3 with fuel level fl1 to fl4, plane1 zooms from city2 to city0 with fuel level fl6 to fl0, plane1 zooms from city2 to city3 with fuel level fl2 to fl3, plane1 zooms from city1 to city0 with fuel level fl0 to fl1, plane1 zooms from city0 to city3 with fuel level fl3 to fl6, plane1 zooms from city1 to city3 with fuel level fl0 to fl6, plane1 zooms from city2 to city0 with fuel level fl5 to fl2, plane1 gets refueled at city3 with fuel level fl1 to fl4, plane1 zooms from city2 to city3 with fuel level fl6 to fl1, plane1 zooms from city3 to city1 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl1 to fl5, plane1 zooms from city2 to city0 with fuel level fl1 to fl3, plane1 zooms from city0 to city2 with fuel level fl3 to fl4, plane1 zooms from city2 to city3 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl0, plane1 zooms from city2 to city1 with fuel level fl0 to fl3, plane1 zooms from city3 to city0 with fuel level fl2 to fl1, plane1 flies from city0 to city1 with fuel level fl2 to fl3, plane1 flies from city3 to city2 with fuel level fl3 to fl1, plane1 zooms from city3 to city0 with fuel level fl4 to fl3, plane1 zooms from city3 to city2 with fuel level fl2 to fl0, plane1 zooms from city0 to city3 with fuel level fl0 to fl6, plane1 zooms from city0 to city2 with fuel level fl1 to fl6, plane1 zooms from city3 to city2 with fuel level fl6 to fl2, plane1 flies from city0 to city3 with fuel level fl0 to fl3, plane1 zooms from city1 to city0 with fuel level fl3 to fl5, plane1 zooms from city0 to city1 with fuel level fl3 to fl2, plane1 zooms from city1 to city0 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl4 to fl5, plane1 zooms from city0 to city1 with fuel level fl6 to fl0, plane1 flies from city1 to city2 with fuel level fl5 to fl6, plane1 zooms from city3 to city1 with fuel level fl0 to fl2, plane1 flies from city0 to city3 with fuel level fl5 to fl1, plane1 zooms from city1 to city0 with fuel level fl0 to fl6, plane1 flies from city2 to city1 with fuel level fl0 to fl5, plane1 flies from city0 to city2 with fuel level fl5 to fl2, plane1 zooms from city1 to city0 with fuel level fl3 to fl5, plane1 flies from city1 to city0 with fuel level fl6 to fl0, plane1 flies from city0 to city1 with fuel level fl1 to fl5, plane1 zooms from city3 to city2 with fuel level fl2 to fl3, plane1 zooms from city0 to city2 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl1 to fl0, plane1 zooms from city3 to city2 with fuel level fl4 to fl5, plane1 flies from city3 to city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl5 to fl4, plane1 zooms from city1 to city3 with fuel level fl2 to fl1, plane1 zooms from city0 to city3 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl5 to fl0, plane1 zooms from city0 to city2 with fuel level fl0 to fl1, plane1 zooms from city3 to city1 with fuel level fl2 to fl3, plane1 zooms from city0 to city2 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl4 to fl3, plane1 zooms from city3 to city2 with fuel level fl5 to fl4, plane1 zooms from city0 to city3 with fuel level fl6 to fl3, plane1 zooms from city2 to city3 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl5 to fl2, plane1 zooms from city1 to city0 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl5 to fl2, plane1 flies from city3 to city0 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl3 to fl2, plane1 zooms from city0 to city2 with fuel level fl4 to fl3, plane1 zooms from city1 to city0 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl0 to fl5, plane1 zooms from city1 to city3 with fuel level fl5 to fl3, plane1 zooms from city1 to city2 with fuel level fl2 to fl3, plane1 zooms from city1 to city3 with fuel level fl6 to fl1, plane1 zooms from city1 to city0 with fuel level fl4 to fl1, plane1 zooms from city2 to city1 with fuel level fl0 to fl2, plane1 flies from city3 to city1 with fuel level fl1 to fl3, plane1 flies from city3 to city2 with fuel level fl5 to fl3, plane1 zooms from city1 to city0 with fuel level fl1 to fl0, plane1 zooms from city2 to city1 with fuel level fl3 to fl2, plane1 zooms from city0 to city1 with fuel level fl4 to fl1, plane1 zooms from city0 to city1 with fuel level fl2 to fl6, plane1 zooms from city1 to city3 with fuel level fl2 to fl3, plane1 zooms from city1 to city3 with fuel level fl6 to fl1, plane1 zooms from city2 to city1 with fuel level fl6 to fl1, plane1 zooms from city0 to city3 with fuel level fl5 to fl2, plane1 flies from city1 to city2 with fuel level fl0 to fl1, plane1 zooms from city3 to city2 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl6 to fl3, plane1 zooms from city0 to city1 with fuel level fl4 to fl3, plane1 zooms from city1 to city0 with fuel level fl4 to fl1, plane1 zooms from city2 to city0 with fuel level fl4 to fl5, plane1 zooms from city3 to city0 with fuel level fl2 to fl3, plane1 zooms from city3 to city1 with fuel level fl6 to fl4, plane1 zooms from city1 to city0 with fuel level fl5 to fl1, plane1 gets refueled at city3 with fuel level fl2 to fl6, plane1 zooms from city0 to city1 with fuel level fl3 to fl1, plane1 zooms from city1 to city0 with fuel level fl3 to fl2, plane1 zooms from city2 to city1 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl3 to fl5, plane1 zooms from city1 to city0 with fuel level fl3 to fl5, plane1 zooms from city0 to city2 with fuel level fl3 to fl5, plane1 zooms from city3 to city0 with fuel level fl5 to fl4, plane1 gets refueled at city3 with fuel level fl1 to fl5, plane1 zooms from city2 to city0 with fuel level fl0 to fl5, plane1 zooms from city3 to city1 with fuel level fl6 to fl2, person1 departs plane1 at city3, plane1 zooms from city2 to city1 with fuel level fl1 to fl0, plane1 zooms from city3 to city1 with fuel level fl1 to fl5, plane1 flies from city1 to city2 with fuel level fl1 to fl2, plane1 zooms from city0 to city3 with fuel level fl4 to fl3, plane1 zooms from city1 to city0 with fuel level fl1 to fl6, plane1 zooms from city2 to city1 with fuel level fl0 to fl5, plane1 flies from city2 to city3 with fuel level fl6 to fl2, plane1 zooms from city1 to city0 with fuel level fl4 to fl5, plane1 zooms from city1 to city2 with fuel level fl6 to fl1, plane1 flies from city2 to city1 with fuel level fl4 to fl1, plane1 flies from city1 to city3 with fuel level fl1 to fl0, plane1 flies from city3 to city2 with fuel level fl5 to fl6, plane1 zooms from city1 to city3 with fuel level fl2 to fl1, plane1 zooms from city1 to city3 with fuel level fl1 to fl3, plane1 zooms from city3 to city1 with fuel level fl6 to fl1, plane1 zooms from city0 to city1 with fuel level fl5 to fl6, plane1 zooms from city0 to city2 with fuel level fl0 to fl5, plane1 zooms from city2 to city3 with fuel level fl1 to fl3, plane1 zooms from city1 to city2 with fuel level fl5 to fl0, plane1 zooms from city3 to city0 with fuel level fl6 to fl3, plane1 zooms from city0 to city2 with fuel level fl1 to fl5, plane1 zooms from city2 to city1 with fuel level fl1 to fl4, plane1 zooms from city1 to city2 with fuel level fl6 to fl2, plane1 zooms from city3 to city1 with fuel level fl3 to fl1, plane1 zooms from city2 to city3 with fuel level fl1 to fl2, plane1 gets refueled at city0 with fuel level fl1 to fl3, plane1 flies from city0 to city1 with fuel level fl3 to fl2, plane1 zooms from city0 to city2 with fuel level fl0 to fl3, plane1 zooms from city1 to city3 with fuel level fl1 to fl4, plane1 zooms from city3 to city2 with fuel level fl4 to fl0, plane1 zooms from city1 to city3 with fuel level fl0 to fl1, plane1 zooms from city3 to city1 with fuel level fl4 to fl0, plane1 zooms from city3 to city0 with fuel level fl2 to fl6, plane1 flies from city0 to city2 with fuel level fl0 to fl3, plane1 flies from city1 to city3 with fuel level fl4 to fl0, plane1 flies from city2 to city3 with fuel level fl1 to fl2, person1 departs plane1 at city0, plane1 zooms from city2 to city0 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl5 to fl6, plane1 flies from city0 to city1 with fuel level fl4 to fl2, person6 departs plane1 at city3, plane1 zooms from city2 to city3 with fuel level fl6 to fl1, plane1 zooms from city2 to city1 with fuel level fl4 to fl1, plane1 flies from city3 to city1 with fuel level fl4 to fl3, plane1 zooms from city0 to city2 with fuel level fl6 to fl3, plane1 zooms from city1 to city2 with fuel level fl6 to fl3, plane1 zooms from city2 to city1 with fuel level fl5 to fl2, plane1 flies from city0 to city1 with fuel level fl4 to fl1, plane1 zooms from city0 to city3 with fuel level fl2 to fl0, plane1 zooms from city0 to city1 with fuel level fl3 to fl4, plane1 zooms from city0 to city2 with fuel level fl1 to fl5, plane1 zooms from city0 to city1 with fuel level fl0 to fl1, plane1 zooms from city2 to city1 with fuel level fl1 to fl0, plane1 zooms from city0 to city1 with fuel level fl6 to fl3, plane1 zooms from city2 to city0 with fuel level fl2 to fl1, plane1 zooms from city0 to city3 with fuel level fl0 to fl4, plane1 zooms from city2 to city0 with fuel level fl1 to fl2, plane1 zooms from city1 to city2 with fuel level fl1 to fl0, plane1 flies from city1 to city2 with fuel level fl3 to fl1, plane1 zooms from city3 to city1 with fuel level fl1 to fl3, plane1 flies from city1 to city3 with fuel level fl2 to fl0, plane1 zooms from city0 to city3 with fuel level fl4 to fl6, plane1 flies from city1 to city0 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl5 to fl2, plane1 zooms from city2 to city3 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl1 to fl2, plane1 zooms from city3 to city1 with fuel level fl4 to fl0, plane1 zooms from city2 to city3 with fuel level fl1 to fl6, plane1 zooms from city1 to city0 with fuel level fl0 to fl4, plane1 zooms from city3 to city0 with fuel level fl0 to fl1, plane1 zooms from city3 to city1 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl5 to fl4, plane1 gets refueled at city1 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl4 to fl1, plane1 zooms from city1 to city3 with fuel level fl2 to fl5, plane1 zooms from city3 to city2 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl5 to fl2, plane1 zooms from city0 to city3 with fuel level fl2 to fl0, plane1 zooms from city2 to city0 with fuel level fl5 to fl3, plane1 zooms from city1 to city3 with fuel level fl0 to fl1, plane1 zooms from city2 to city3 with fuel level fl6 to fl5, plane1 zooms from city2 to city3 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl4 to fl5, plane1 gets refueled at city3 with fuel level fl4 to fl5, plane1 zooms from city2 to city3 with fuel level fl0 to fl6, plane1 zooms from city1 to city0 with fuel level fl6 to fl3, plane1 zooms from city1 to city3 with fuel level fl5 to fl1, plane1 flies from city0 to city2 with fuel level fl5 to fl0, plane1 zooms from city1 to city0 with fuel level fl1 to fl2, plane1 zooms from city2 to city3 with fuel level fl6 to fl0, plane1 zooms from city2 to city0 with fuel level fl6 to fl1, plane1 zooms from city3 to city0 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl1 to fl2, plane1 flies from city1 to city0 with fuel level fl5 to fl1, plane1 zooms from city2 to city0 with fuel level fl1 to fl0, plane1 flies from city2 to city1 with fuel level fl5 to fl3, plane1 zooms from city2 to city1 with fuel level fl0 to fl6, plane1 flies from city3 to city1 with fuel level fl3 to fl1, plane1 zooms from city2 to city3 with fuel level fl4 to fl5, plane1 zooms from city3 to city0 with fuel level fl4 to fl0, plane1 zooms from city1 to city0 with fuel level fl1 to fl0, plane1 zooms from city2 to city1 with fuel level fl4 to fl5, plane1 zooms from city0 to city1 with fuel level fl2 to fl5, plane1 zooms from city3 to city1 with fuel level fl6 to fl3, plane1 zooms from city1 to city3 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl3 to fl2, plane1 zooms from city1 to city2 with fuel level fl3 to fl4, plane1 zooms from city3 to city1 with fuel level fl1 to fl2, plane1 zooms from city3 to city2 with fuel level fl1 to fl6, plane1 zooms from city0 to city1 with fuel level fl6 to fl5, plane1 zooms from city0 to city3 with fuel level fl5 to fl2, plane1 zooms from city2 to city0 with fuel level fl1 to fl2, plane1 zooms from city3 to city0 with fuel level fl5 to fl0, plane1 zooms from city3 to city2 with fuel level fl0 to fl2, plane1 zooms from city0 to city1 with fuel level fl5 to fl2, plane1 flies from city3 to city1 with fuel level fl6 to fl3, plane1 zooms from city0 to city1 with fuel level fl1 to fl0, plane1 zooms from city1 to city2 with fuel level fl5 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl3, plane1 zooms from city0 to city3 with fuel level fl2 to fl6, plane1 zooms from city3 to city0 with fuel level fl6 to fl4, plane1 zooms from city2 to city1 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl6 to fl4, plane1 flies from city0 to city2 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl5 to fl3, plane1 zooms from city2 to city1 with fuel level fl3 to fl4, plane1 zooms from city0 to city2 with fuel level fl4 to fl5, plane1 zooms from city1 to city2 with fuel level fl0 to fl3, plane1 zooms from city1 to city0 with fuel level fl5 to fl0, plane1 zooms from city0 to city1 with fuel level fl6 to fl4, plane1 zooms from city0 to city3 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl0 to fl6, plane1 zooms from city3 to city2 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl3 to fl2, plane1 zooms from city0 to city3 with fuel level fl0 to fl2, plane1 zooms from city1 to city0 with fuel level fl2 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl5, plane1 gets refueled at city0 with fuel level fl2 to fl0, plane1 flies from city0 to city3 with fuel level fl2 to fl6, plane1 flies from city3 to city2 with fuel level fl4 to fl2, plane1 gets refueled at city3 with fuel level fl5 to fl1, plane1 zooms from city1 to city2 with fuel level fl5 to fl6, plane1 zooms from city3 to city1 with fuel level fl3 to fl6, plane1 zooms from city0 to city2 with fuel level fl2 to fl6, person4 boards plane1 at city0, plane1 zooms from city3 to city2 with fuel level fl1 to fl4, plane1 zooms from city1 to city3 with fuel level fl3 to fl2, plane1 gets refueled at city3 with fuel level fl6 to fl5, plane1 zooms from city2 to city0 with fuel level fl6 to fl0, plane1 zooms from city2 to city3 with fuel level fl3 to fl1, plane1 zooms from city1 to city2 with fuel level fl5 to fl1, plane1 zooms from city0 to city3 with fuel level fl2 to fl3, plane1 flies from city3 to city0 with fuel level fl4 to fl5, plane1 flies from city0 to city3 with fuel level fl0 to fl6, plane1 zooms from city1 to city2 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl0 to fl3, plane1 flies from city3 to city0 with fuel level fl3 to fl5, plane1 zooms from city1 to city0 with fuel level fl3 to fl2, plane1 zooms from city1 to city2 with fuel level fl1 to fl6, plane1 zooms from city2 to city3 with fuel level fl1 to fl3, plane1 zooms from city1 to city2 with fuel level fl1 to fl2, plane1 flies from city2 to city1 with fuel level fl4 to fl6, plane1 zooms from city0 to city1 with fuel level fl1 to fl2, plane1 flies from city3 to city2 with fuel level fl2 to fl6, plane1 zooms from city3 to city1 with fuel level fl3 to fl0, plane1 flies from city0 to city2 with fuel level fl1 to fl3, plane1 gets refueled at city3 with fuel level fl2 to fl0, plane1 zooms from city0 to city1 with fuel level fl5 to fl6, plane1 zooms from city0 to city2 with fuel level fl6 to fl1, plane1 zooms from city0 to city1 with fuel level fl2 to fl4, plane1 zooms from city0 to city2 with fuel level fl5 to fl3, plane1 flies from city3 to city1 with fuel level fl3 to fl0, plane1 zooms from city2 to city0 with fuel level fl4 to fl0, plane1 flies from city2 to city3 with fuel level fl3 to fl1, plane1 flies from city3 to city0 with fuel level fl5 to fl4, plane1 zooms from city3 to city0 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl2 to fl3, plane1 zooms from city1 to city0 with fuel level fl2 to fl0, plane1 zooms from city0 to city2 with fuel level fl3 to fl1, plane1 gets refueled at city2 with fuel level fl1 to fl6, plane1 flies from city0 to city1 with fuel level fl6 to fl5, plane1 zooms from city3 to city0 with fuel level fl1 to fl6, plane1 zooms from city1 to city3 with fuel level fl0 to fl6, plane1 zooms from city0 to city1 with fuel level fl3 to fl5, plane1 zooms from city1 to city0 with fuel level fl1 to fl6, plane1 zooms from city0 to city1 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl2 to fl1, plane1 zooms from city3 to city1 with fuel level fl1 to fl6, plane1 zooms from city3 to city1 with fuel level fl5 to fl4, plane1 flies from city1 to city2 with fuel level fl2 to fl0, plane1 zooms from city0 to city3 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl1 to fl3, plane1 flies from city1 to city0 with fuel level fl5 to fl0, plane1 flies from city2 to city0 with fuel level fl5 to fl0, plane1 zooms from city1 to city3 with fuel level fl3 to fl4, plane1 zooms from city1 to city2 with fuel level fl6 to fl0, plane1 flies from city3 to city0 with fuel level fl4 to fl2, plane1 zooms from city1 to city3 with fuel level fl6 to fl5, plane1 zooms from city3 to city0 with fuel level fl2 to fl0, plane1 zooms from city2 to city0 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl3 to fl5, plane1 flies from city3 to city0 with fuel level fl2 to fl6, plane1 zooms from city2 to city3 with fuel level fl5 to fl1, plane1 zooms from city2 to city0 with fuel level fl3 to fl1, plane1 zooms from city0 to city1 with fuel level fl0 to fl6, plane1 zooms from city1 to city3 with fuel level fl3 to fl1, plane1 zooms from city1 to city0 with fuel level fl0 to fl3, plane1 zooms from city3 to city2 with fuel level fl0 to fl1, plane1 zooms from city2 to city1 with fuel level fl4 to fl6, plane1 zooms from city0 to city3 with fuel level fl5 to fl2, plane1 zooms from city1 to city0 with fuel level fl0 to fl1, plane1 flies from city1 to city3 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl5 to fl4, plane1 zooms from city1 to city3 with fuel level fl4 to fl5, plane1 flies from city0 to city2 with fuel level fl6 to fl0, plane1 flies from city1 to city3 with fuel level fl0 to fl6, plane1 flies from city1 to city0 with fuel level fl1 to fl2, plane1 zooms from city0 to city1 with fuel level fl3 to fl2, plane1 zooms from city1 to city0 with fuel level fl6 to fl4, plane1 zooms from city1 to city0 with fuel level fl4 to fl1, plane1 zooms from city1 to city2 with fuel level fl4 to fl5, plane1 flies from city0 to city1 with fuel level fl4 to fl0, plane1 zooms from city0 to city3 with fuel level fl4 to fl0, plane1 zooms from city1 to city0 with fuel level fl6 to fl1, plane1 gets refueled at city3 with fuel level fl6 to fl4, plane1 flies from city1 to city2 with fuel level fl4 to fl6, plane1 zooms from city0 to city3 with fuel level fl2 to fl5, plane1 zooms from city2 to city0 with fuel level fl0 to fl6, plane1 zooms from city0 to city3 with fuel level fl4 to fl1, plane1 zooms from city1 to city0 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl4 to fl1, plane1 zooms from city0 to city3 with fuel level fl6 to fl3, plane1 zooms from city1 to city2 with fuel level fl4 to fl0, plane1 zooms from city0 to city1 with fuel level fl2 to fl3, plane1 zooms from city2 to city1 with fuel level fl2 to fl0, plane1 flies from city3 to city0 with fuel level fl6 to fl1, plane1 zooms from city1 to city0 with fuel level fl4 to fl3, plane1 zooms from city3 to city1 with fuel level fl3 to fl5, plane1 zooms from city3 to city2 with fuel level fl1 to fl6, plane1 zooms from city0 to city1 with fuel level fl2 to fl3, plane1 zooms from city1 to city2 with fuel level fl3 to fl5, plane1 zooms from city3 to city0 with fuel level fl1 to fl6, plane1 zooms from city1 to city2 with fuel level fl5 to fl4, plane1 flies from city0 to city3 with fuel level fl3 to fl4, plane1 flies from city0 to city1 with fuel level fl6 to fl3, plane1 zooms from city1 to city2 with fuel level fl2 to fl0, plane1 zooms from city0 to city1 with fuel level fl3 to fl4, plane1 zooms from city1 to city0 with fuel level fl1 to fl0, person5 boards plane1 at city2, plane1 zooms from city0 to city2 with fuel level fl3 to fl0, plane1 zooms from city2 to city3 with fuel level fl0 to fl4, plane1 zooms from city1 to city0 with fuel level fl6 to fl2, plane1 zooms from city0 to city3 with fuel level fl4 to fl5, plane1 zooms from city0 to city3 with fuel level fl0 to fl4, plane1 zooms from city1 to city3 with fuel level fl3 to fl2, plane1 zooms from city2 to city0 with fuel level fl6 to fl2, plane1 flies from city0 to city2 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl6 to fl3, plane1 zooms from city0 to city1 with fuel level fl4 to fl5, plane1 zooms from city2 to city0 with fuel level fl5 to fl4, plane1 flies from city1 to city2 with fuel level fl3 to fl2, plane1 zooms from city0 to city3 with fuel level fl4 to fl0, plane1 zooms from city3 to city2 with fuel level fl4 to fl3, plane1 zooms from city1 to city0 with fuel level fl2 to fl5, plane1 zooms from city2 to city3 with fuel level fl4 to fl3, plane1 zooms from city0 to city2 with fuel level fl2 to fl1, plane1 zooms from city2 to city0 with fuel level fl5 to fl2, plane1 zooms from city2 to city3 with fuel level fl1 to fl2, plane1 gets refueled at city2 with fuel level fl0 to fl2, plane1 zooms from city1 to city0 with fuel level fl4 to fl0, plane1 flies from city1 to city0 with fuel level fl1 to fl5, plane1 zooms from city3 to city0 with fuel level fl4 to fl5, plane1 zooms from city2 to city0 with fuel level fl3 to fl2, plane1 flies from city0 to city1 with fuel level fl1 to fl4, plane1 zooms from city0 to city3 with fuel level fl4 to fl6, plane1 zooms from city0 to city3 with fuel level fl1 to fl4, plane1 zooms from city1 to city0 with fuel level fl2 to fl4, plane1 zooms from city2 to city1 with fuel level fl2 to fl0, plane1 zooms from city1 to city0 with fuel level fl5 to fl1, plane1 zooms from city1 to city0 with fuel level fl5 to fl2, plane1 zooms from city2 to city3 with fuel level fl6 to fl0, plane1 flies from city1 to city3 with fuel level fl6 to fl0, plane1 zooms from city3 to city1 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl6 to fl5, plane1 gets refueled at city0 with fuel level fl4 to fl6, plane1 gets refueled at city1 with fuel level fl5 to fl4, person5 departs plane1 at city2, plane1 zooms from city2 to city0 with fuel level fl2 to fl4, plane1 zooms from city2 to city3 with fuel level fl3 to fl4, plane1 zooms from city0 to city1 with fuel level fl4 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl0, plane1 zooms from city3 to city2 with fuel level fl2 to fl0, plane1 zooms from city1 to city0 with fuel level fl6 to fl5, plane1 zooms from city3 to city1 with fuel level fl4 to fl3, plane1 zooms from city3 to city0 with fuel level fl3 to fl6, plane1 zooms from city0 to city3 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl3 to fl5, plane1 gets refueled at city3 with fuel level fl4 to fl3, plane1 zooms from city1 to city0 with fuel level fl6 to fl4, plane1 zooms from city2 to city3 with fuel level fl2 to fl3, person2 boards plane1 at city0, plane1 zooms from city1 to city2 with fuel level fl6 to fl4, plane1 gets refueled at city0 with fuel level fl5 to fl1, plane1 gets refueled at city2 with fuel level fl3 to fl0, plane1 zooms from city0 to city2 with fuel level fl0 to fl6, plane1 zooms from city2 to city1 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl4 to fl1, plane1 zooms from city0 to city3 with fuel level fl1 to fl0, plane1 zooms from city1 to city2 with fuel level fl1 to fl2, plane1 zooms from city2 to city1 with fuel level fl1 to fl6, plane1 gets refueled at city1 with fuel level fl6 to fl4, plane1 flies from city2 to city1 with fuel level fl1 to fl6, plane1 zooms from city0 to city3 with fuel level fl3 to fl0, plane1 zooms from city0 to city1 with fuel level fl0 to fl5, plane1 zooms from city1 to city0 with fuel level fl4 to fl0, plane1 zooms from city2 to city1 with fuel level fl1 to fl3, plane1 zooms from city3 to city2 with fuel level fl3 to fl0, plane1 zooms from city1 to city2 with fuel level fl2 to fl4, plane1 zooms from city0 to city3 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl0 to fl5, plane1 zooms from city2 to city1 with fuel level fl5 to fl3, plane1 zooms from city0 to city2 with fuel level fl0 to fl2, plane1 zooms from city2 to city0 with fuel level fl1 to fl6, plane1 zooms from city1 to city0 with fuel level fl3 to fl0, plane1 zooms from city3 to city2 with fuel level fl0 to fl2, plane1 zooms from city1 to city2 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl6 to fl5, plane1 zooms from city3 to city2 with fuel level fl3 to fl2, plane1 zooms from city0 to city1 with fuel level fl3 to fl0, plane1 zooms from city1 to city0 with fuel level fl1 to fl3, plane1 zooms from city0 to city2 with fuel level fl4 to fl6, plane1 zooms from city3 to city0 with fuel level fl0 to fl4, plane1 zooms from city3 to city0 with fuel level fl1 to fl6, plane1 zooms from city3 to city1 with fuel level fl5 to fl6, plane1 zooms from city1 to city3 with fuel level fl1 to fl3, plane1 flies from city1 to city2 with fuel level fl4 to fl1, plane1 zooms from city3 to city2 with fuel level fl1 to fl5, plane1 zooms from city2 to city1 with fuel level fl4 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl1, plane1 zooms from city0 to city3 with fuel level fl0 to fl2, plane1 flies from city3 to city1 with fuel level fl3 to fl6, plane1 zooms from city0 to city3 with fuel level fl3 to fl1, plane1 zooms from city3 to city1 with fuel level fl3 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl3, plane1 flies from city2 to city1 with fuel level fl4 to fl5, plane1 zooms from city3 to city0 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city2 with fuel level fl3 to fl5, plane1 zooms from city2 to city1 with fuel level fl0 to fl5, plane1 zooms from city0 to city1 with fuel level fl0 to fl6, plane1 zooms from city1 to city3 with fuel level fl2 to fl0, plane1 zooms from city2 to city1 with fuel level fl0 to fl6, plane1 flies from city0 to city2 with fuel level fl4 to fl5, plane1 zooms from city1 to city0 with fuel level fl4 to fl1, plane1 gets refueled at city1 with fuel level fl6 to fl2, plane1 gets refueled at city3 with fuel level fl2 to fl3, plane1 zooms from city0 to city2 with fuel level fl0 to fl5, plane1 gets refueled at city2 with fuel level fl1 to fl0, plane1 zooms from city0 to city1 with fuel level fl6 to fl5, plane1 zooms from city2 to city1 with fuel level fl2 to fl3, plane1 flies from city2 to city3 with fuel level fl0 to fl4, plane1 zooms from city2 to city3 with fuel level fl0 to fl5, person4 boards plane1 at city3, plane1 zooms from city2 to city0 with fuel level fl4 to fl6, plane1 zooms from city2 to city0 with fuel level fl3 to fl5, plane1 gets refueled at city2 with fuel level fl5 to fl3, plane1 zooms from city0 to city1 with fuel level fl2 to fl6, plane1 gets refueled at city0 with fuel level fl1 to fl4, plane1 zooms from city0 to city1 with fuel level fl5 to fl6, plane1 zooms from city3 to city2 with fuel level fl0 to fl4, plane1 flies from city0 to city1 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl4 to fl3, plane1 zooms from city1 to city2 with fuel level fl0 to fl4, plane1 flies from city2 to city0 with fuel level fl2 to fl0, plane1 zooms from city3 to city1 with fuel level fl0 to fl5, plane1 zooms from city2 to city3 with fuel level fl2 to fl6, plane1 zooms from city1 to city2 with fuel level fl1 to fl5, plane1 gets refueled at city1 with fuel level fl0 to fl3, plane1 zooms from city1 to city3 with fuel level fl4 to fl0, plane1 zooms from city3 to city0 with fuel level fl1 to fl6, plane1 zooms from city3 to city0 with fuel level fl3 to fl5, plane1 zooms from city1 to city3 with fuel level fl4 to fl2, plane1 flies from city3 to city2 with fuel level fl6 to fl1, plane1 zooms from city2 to city1 with fuel level fl2 to fl6, plane1 zooms from city0 to city1 with fuel level fl3 to fl4, plane1 flies from city0 to city3 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl5 to fl1, plane1 zooms from city0 to city2 with fuel level fl1 to fl2, plane1 zooms from city0 to city1 with fuel level fl1 to fl3, plane1 flies from city2 to city3 with fuel level fl2 to fl5, plane1 zooms from city1 to city3 with fuel level fl5 to fl2, plane1 gets refueled at city0 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl6 to fl2, plane1 zooms from city0 to city3 with fuel level fl2 to fl3, plane1 zooms from city0 to city2 with fuel level fl5 to fl3, plane1 zooms from city3 to city1 with fuel level fl4 to fl0, plane1 zooms from city1 to city0 with fuel level fl4 to fl6, plane1 flies from city3 to city1 with fuel level fl1 to fl4, plane1 zooms from city1 to city3 with fuel level fl0 to fl6, plane1 zooms from city1 to city0 with fuel level fl6 to fl1, plane1 zooms from city2 to city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl5 to fl0, plane1 flies from city3 to city2 with fuel level fl4 to fl5, plane1 zooms from city3 to city0 with fuel level fl4 to fl2, plane1 zooms from city1 to city0 with fuel level fl0 to fl1, plane1 flies from city2 to city0 with fuel level fl6 to fl3, plane1 zooms from city2 to city1 with fuel level fl2 to fl3, plane1 zooms from city3 to city0 with fuel level fl6 to fl1, plane1 zooms from city1 to city3 with fuel level fl0 to fl3, plane1 zooms from city3 to city1 with fuel level fl0 to fl3, plane1 flies from city2 to city0 with fuel level fl1 to fl6, plane1 zooms from city1 to city2 with fuel level fl5 to fl0, plane1 gets refueled at city3 with fuel level fl5 to fl2, plane1 flies from city2 to city3 with fuel level fl3 to fl0, plane1 flies from city3 to city1 with fuel level fl2 to fl3, plane1 zooms from city3 to city2 with fuel level fl5 to fl3, plane1 flies from city0 to city3 with fuel level fl1 to fl3, plane1 zooms from city1 to city0 with fuel level fl4 to fl5, person2 departs plane1 at city0, plane1 zooms from city0 to city1 with fuel level fl2 to fl0, plane1 gets refueled at city0 with fuel level fl3 to fl0, plane1 flies from city0 to city3 with fuel level fl0 to fl5, plane1 flies from city1 to city2 with fuel level fl6 to fl2, plane1 zooms from city1 to city2 with fuel level fl5 to fl3, plane1 zooms from city2 to city0 with fuel level fl6 to fl5, plane1 flies from city1 to city2 with fuel level fl6 to fl0, plane1 zooms from city1 to city3 with fuel level fl1 to fl0, plane1 flies from city0 to city2 with fuel level fl3 to fl5, plane1 zooms from city0 to city3 with fuel level fl6 to fl2, plane1 zooms from city0 to city3 with fuel level fl3 to fl1, plane1 zooms from city3 to city1 with fuel level fl3 to fl4, plane1 zooms from city0 to city3 with fuel level fl5 to fl2, plane1 zooms from city3 to city1 with fuel level fl6 to fl0, plane1 zooms from city0 to city1 with fuel level fl2 to fl0, plane1 gets refueled at city3 with fuel level fl6 to fl2, plane1 zooms from city3 to city2 with fuel level fl2 to fl5, plane1 flies from city3 to city2 with fuel level fl0 to fl3, plane1 flies from city3 to city0 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl0 to fl6, plane1 zooms from city3 to city2 with fuel level fl1 to fl3, plane1 zooms from city0 to city1 with fuel level fl3 to fl0, plane1 zooms from city3 to city2 with fuel level fl0 to fl5, person5 boards plane1 at city0, plane1 gets refueled at city1 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl1 to fl3, plane1 zooms from city2 to city0 with fuel level fl2 to fl0, plane1 zooms from city2 to city1 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl6 to fl2, plane1 zooms from city1 to city0 with fuel level fl6 to fl5, plane1 zooms from city0 to city1 with fuel level fl4 to fl0, plane1 zooms from city1 to city0 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl5 to fl6, plane1 flies from city2 to city1 with fuel level fl0 to fl2, plane1 zooms from city2 to city1 with fuel level fl6 to fl2, plane1 zooms from city1 to city3 with fuel level fl1 to fl0, plane1 zooms from city0 to city2 with fuel level fl2 to fl5, plane1 zooms from city3 to city1 with fuel level fl2 to fl5, plane1 zooms from city1 to city0 with fuel level fl4 to fl2, plane1 zooms from city1 to city0 with fuel level fl1 to fl2, plane1 flies from city3 to city1 with fuel level fl1 to fl6, plane1 zooms from city2 to city3 with fuel level fl5 to fl0, plane1 zooms from city2 to city0 with fuel level fl3 to fl4, plane1 zooms from city2 to city1 with fuel level fl3 to fl1, plane1 zooms from city2 to city0 with fuel level fl4 to fl2, plane1 zooms from city0 to city2 with fuel level fl5 to fl2, plane1 zooms from city2 to city0 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl2 to fl3, plane1 flies from city1 to city0 with fuel level fl3 to fl1, plane1 zooms from city0 to city3 with fuel level fl5 to fl3, plane1 zooms from city1 to city3 with fuel level fl2 to fl3, plane1 gets refueled at city2 with fuel level fl0 to fl4, plane1 flies from city1 to city2 with fuel level fl6 to fl3, plane1 zooms from city0 to city2 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl6 to fl5, plane1 zooms from city2 to city0 with fuel level fl0 to fl1, person5 boards plane1 at city3, plane1 zooms from city3 to city2 with fuel level fl2 to fl0, plane1 zooms from city1 to city3 with fuel level fl6 to fl4, plane1 gets refueled at city0 with fuel level fl4 to fl5, plane1 flies from city2 to city3 with fuel level fl6 to fl5, plane1 zooms from city0 to city2 with fuel level fl3 to fl6, plane1 zooms from city0 to city2 with fuel level fl4 to fl1, plane1 zooms from city3 to city0 with fuel level fl6 to fl5, plane1 zooms from city0 to city3 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl3 to fl4, plane1 zooms from city3 to city1 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl4 to fl0, plane1 flies from city0 to city3 with fuel level fl1 to fl4, plane1 zooms from city2 to city3 with fuel level fl6 to fl4, plane1 zooms from city3 to city0 with fuel level fl2 to fl0, plane1 zooms from city0 to city1 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl3 to fl2, plane1 zooms from city0 to city3 with fuel level fl2 to fl4, plane1 flies from city1 to city3 with fuel level fl6 to fl1, plane1 zooms from city1 to city0 with fuel level fl0 to fl3, plane1 flies from city0 to city2 with fuel level fl1 to fl6, plane1 zooms from city1 to city0 with fuel level fl2 to fl1, plane1 flies from city2 to city1 with fuel level fl3 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl2, plane1 zooms from city3 to city0 with fuel level fl5 to fl6, plane1 zooms from city3 to city2 with fuel level fl3 to fl6, plane1 zooms from city3 to city1 with fuel level fl0 to fl5, plane1 flies from city3 to city1 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl6 to fl5, plane1 zooms from city3 to city1 with fuel level fl4 to fl3, plane1 zooms from city2 to city0 with fuel level fl2 to fl0, plane1 zooms from city0 to city3 with fuel level fl0 to fl1, plane1 zooms from city2 to city1 with fuel level fl6 to fl3, plane1 zooms from city2 to city0 with fuel level fl1 to fl0, plane1 zooms from city0 to city3 with fuel level fl1 to fl6, plane1 zooms from city0 to city1 with fuel level fl6 to fl2, plane1 zooms from city2 to city0 with fuel level fl3 to fl6, plane1 zooms from city0 to city1 with fuel level fl2 to fl4, plane1 gets refueled at city2 with fuel level fl2 to fl0, plane1 zooms from city0 to city1 with fuel level fl3 to fl1, plane1 flies from city3 to city0 with fuel level fl3 to fl0, plane1 zooms from city3 to city1 with fuel level fl1 to fl5, plane1 flies from city2 to city1 with fuel level fl3 to fl6, plane1 zooms from city1 to city0 with fuel level fl1 to fl6, plane1 zooms from city3 to city1 with fuel level fl5 to fl2, plane1 zooms from city2 to city0 with fuel level fl0 to fl4, plane1 gets refueled at city2 with fuel level fl4 to fl2, plane1 zooms from city1 to city0 with fuel level fl3 to fl0, plane1 zooms from city0 to city2 with fuel level fl1 to fl3, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 zooms from city3 to city0 with fuel level fl1 to fl5, plane1 zooms from city3 to city1 with fuel level fl6 to fl5, plane1 zooms from city0 to city1 with fuel level fl2 to fl5, plane1 flies from city2 to city0 with fuel level fl0 to fl3, plane1 zooms from city0 to city2 with fuel level fl2 to fl3, plane1 zooms from city0 to city2 with fuel level fl6 to fl4, plane1 zooms from city1 to city2 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl4 to fl3, plane1 zooms from city3 to city2 with fuel level fl2 to fl6, plane1 zooms from city3 to city1 with fuel level fl3 to fl1, plane1 gets refueled at city3 with fuel level fl6 to fl1, plane1 zooms from city0 to city3 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl5 to fl6, plane1 zooms from city0 to city3 with fuel level fl0 to fl3, plane1 flies from city1 to city0 with fuel level fl6 to fl4, plane1 zooms from city2 to city3 with fuel level fl0 to fl4, plane1 zooms from city0 to city1 with fuel level fl5 to fl0, plane1 zooms from city3 to city0 with fuel level fl4 to fl6, plane1 zooms from city3 to city1 with fuel level fl1 to fl2, plane1 zooms from city2 to city0 with fuel level fl2 to fl1, plane1 flies from city3 to city1 with fuel level fl4 to fl1, plane1 zooms from city0 to city3 with fuel level fl0 to fl1, plane1 zooms from city0 to city1 with fuel level fl0 to fl4, plane1 zooms from city0 to city2 with fuel level fl3 to fl1, plane1 zooms from city0 to city1 with fuel level fl3 to fl6, plane1 zooms from city3 to city2 with fuel level fl0 to fl3, plane1 zooms from city3 to city0 with fuel level fl1 to fl4, plane1 zooms from city2 to city3 with fuel level fl2 to fl1, plane1 flies from city0 to city1 with fuel level fl3 to fl5, plane1 zooms from city1 to city2 with fuel level fl1 to fl5, plane1 flies from city1 to city3 with fuel level fl0 to fl1, plane1 zooms from city2 to city0 with fuel level fl3 to fl1, plane1 zooms from city0 to city1 with fuel level fl5 to fl1, plane1 zooms from city1 to city0 with fuel level fl6 to fl1, plane1 zooms from city1 to city2 with fuel level fl0 to fl4, plane1 zooms from city0 to city1 with fuel level fl4 to fl5, plane1 zooms from city1 to city3 with fuel level fl1 to fl5, plane1 zooms from city1 to city0 with fuel level fl3 to fl2, plane1 zooms from city2 to city3 with fuel level fl6 to fl3, plane1 gets refueled at city1 with fuel level fl5 to fl3, plane1 zooms from city3 to city0 with fuel level fl6 to fl4, plane1 zooms from city3 to city2 with fuel level fl2 to fl5, plane1 zooms from city2 to city1 with fuel level fl1 to fl5, plane1 flies from city1 to city3 with fuel level fl6 to fl5, plane1 zooms from city1 to city0 with fuel level fl5 to fl1, plane1 gets refueled at city2 with fuel level fl4 to fl0, plane1 zooms from city3 to city2 with fuel level fl5 to fl4, plane1 flies from city0 to city1 with fuel level fl5 to fl3, plane1 zooms from city2 to city0 with fuel level fl1 to fl2, plane1 flies from city0 to city3 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl5 to fl6, plane1 zooms from city1 to city2 with fuel level fl3 to fl1, plane1 zooms from city1 to city2 with fuel level fl4 to fl0, plane1 zooms from city2 to city3 with fuel level fl5 to fl4, plane1 zooms from city0 to city3 with fuel level fl0 to fl3, plane1 zooms from city2 to city1 with fuel level fl4 to fl0, plane1 zooms from city0 to city2 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl2 to fl0, plane1 flies from city3 to city1 with fuel level fl3 to fl5, plane1 zooms from city0 to city2 with fuel level fl5 to fl1, plane1 zooms from city3 to city1 with fuel level fl5 to fl6, plane1 zooms from city1 to city2 with fuel level fl4 to fl2, plane1 zooms from city0 to city2 with fuel level fl1 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl4, plane1 flies from city2 to city1 with fuel level fl5 to fl4, plane1 zooms from city3 to city0 with fuel level fl2 to fl4, plane1 zooms from city0 to city2 with fuel level fl0 to fl2, plane1 zooms from city2 to city1 with fuel level fl2 to fl6, plane1 zooms from city1 to city0 with fuel level fl3 to fl1, plane1 zooms from city0 to city3 with fuel level fl4 to fl5, plane1 zooms from city1 to city0 with fuel level fl1 to fl3, plane1 zooms from city1 to city0 with fuel level fl2 to fl0, plane1 flies from city2 to city0 with fuel level fl3 to fl5, plane1 zooms from city2 to city1 with fuel level fl3 to fl4, plane1 zooms from city3 to city2 with fuel level fl1 to fl5, plane1 zooms from city1 to city0 with fuel level fl4 to fl2, plane1 zooms from city1 to city3 with fuel level fl4 to fl0, plane1 zooms from city0 to city1 with fuel level fl4 to fl1, plane1 zooms from city2 to city3 with fuel level fl5 to fl0, plane1 flies from city2 to city3 with fuel level fl2 to fl0, plane1 zooms from city2 to city1 with fuel level fl5 to fl2, plane1 zooms from city2 to city1 with fuel level fl0 to fl3, plane1 zooms from city2 to city1 with fuel level fl2 to fl6, plane1 zooms from city0 to city1 with fuel level fl5 to fl3, plane1 zooms from city3 to city0 with fuel level fl0 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl2, plane1 gets refueled at city3 with fuel level fl3 to fl4, plane1 zooms from city0 to city2 with fuel level fl2 to fl0, plane1 flies from city0 to city3 with fuel level fl2 to fl4, plane1 zooms from city2 to city1 with fuel level fl3 to fl0, plane1 zooms from city1 to city3 with fuel level fl0 to fl4, plane1 gets refueled at city1 with fuel level fl6 to fl3, plane1 zooms from city1 to city2 with fuel level fl6 to fl5, plane1 zooms from city1 to city3 with fuel level fl4 to fl5, plane1 gets refueled at city3 with fuel level fl4 to fl6, plane1 zooms from city2 to city0 with fuel level fl6 to fl2, plane1 zooms from city3 to city0 with fuel level fl0 to fl2, plane1 zooms from city0 to city1 with fuel level fl6 to fl2, plane1 flies from city1 to city3 with fuel level fl1 to fl2, plane1 zooms from city3 to city2 with fuel level fl0 to fl1, plane1 zooms from city1 to city0 with fuel level fl3 to fl5, plane1 zooms from city2 to city1 with fuel level fl3 to fl5, plane1 zooms from city0 to city3 with fuel level fl3 to fl4, plane1 zooms from city1 to city0 with fuel level fl6 to fl3, plane1 zooms from city3 to city0 with fuel level fl2 to fl4, plane1 flies from city3 to city2 with fuel level fl4 to fl0, plane1 zooms from city1 to city2 with fuel level fl4 to fl1, plane1 zooms from city2 to city0 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl0 to fl6, plane1 zooms from city0 to city1 with fuel level fl0 to fl1, plane1 zooms from city3 to city2 with fuel level fl4 to fl5, plane1 zooms from city1 to city3 with fuel level fl5 to fl2, plane1 zooms from city3 to city1 with fuel level fl3 to fl2, plane1 zooms from city2 to city1 with fuel level fl5 to fl1, plane1 zooms from city2 to city3 with fuel level fl1 to fl0, plane1 flies from city1 to city3 with fuel level fl4 to fl5, plane1 zooms from city0 to city1 with fuel level fl3 to fl6, plane1 zooms from city0 to city3 with fuel level fl4 to fl6, plane1 flies from city0 to city1 with fuel level fl5 to fl6, plane1 zooms from city0 to city3 with fuel level fl0 to fl1, plane1 zooms from city3 to city0 with fuel level fl6 to fl3, plane1 zooms from city0 to city3 with fuel level fl0 to fl1, plane1 zooms from city2 to city0 with fuel level fl0 to fl1, plane1 zooms from city2 to city1 with fuel level fl0 to fl3, plane1 zooms from city3 to city2 with fuel level fl1 to fl6, plane1 zooms from city3 to city0 with fuel level fl6 to fl4, plane1 zooms from city1 to city2 with fuel level fl0 to fl6, plane1 flies from city3 to city2 with fuel level fl2 to fl4, plane1 zooms from city0 to city3 with fuel level fl6 to fl2, plane1 flies from city1 to city3 with fuel level fl5 to fl2, plane1 gets refueled at city2 with fuel level fl6 to fl1, plane1 flies from city2 to city0 with fuel level fl5 to fl1, plane1 zooms from city3 to city0 with fuel level fl2 to fl4, plane1 zooms from city2 to city3 with fuel level fl4 to fl2, plane1 zooms from city1 to city3 with fuel level fl2 to fl5, plane1 zooms from city3 to city1 with fuel level fl1 to fl4, plane1 zooms from city0 to city1 with fuel level fl4 to fl3, plane1 zooms from city0 to city3 with fuel level fl4 to fl1, plane1 zooms from city0 to city2 with fuel level fl6 to fl5, plane1 zooms from city1 to city2 with fuel level fl3 to fl4, plane1 zooms from city3 to city1 with fuel level fl4 to fl2, plane1 zooms from city1 to city3 with fuel level fl6 to fl1, plane1 zooms from city3 to city0 with fuel level fl4 to fl6, plane1 zooms from city3 to city1 with fuel level fl6 to fl5, plane1 zooms from city0 to city3 with fuel level fl5 to fl3, plane1 zooms from city0 to city1 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl1 to fl4, plane1 flies from city2 to city1 with fuel level fl6 to fl0, plane1 gets refueled at city2 with fuel level fl5 to fl1, plane1 zooms from city0 to city1 with fuel level fl2 to fl5, plane1 flies from city1 to city3 with fuel level fl1 to fl4, plane1 zooms from city2 to city0 with fuel level fl6 to fl4, plane1 zooms from city3 to city1 with fuel level fl6 to fl2, plane1 zooms from city0 to city1 with fuel level fl4 to fl1, plane1 zooms from city2 to city0 with fuel level fl2 to fl3, plane1 flies from city1 to city3 with fuel level fl2 to fl5, plane1 zooms from city2 to city0 with fuel level fl5 to fl1, plane1 gets refueled at city2 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl4 to fl6, plane1 gets refueled at city2 with fuel level fl1 to fl2, plane1 flies from city0 to city2 with fuel level fl3 to fl2, plane1 zooms from city3 to city0 with fuel level fl3 to fl4, plane1 zooms from city3 to city1 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl1 to fl3, plane1 zooms from city0 to city2 with fuel level fl4 to fl5, plane1 flies from city3 to city2 with fuel level fl6 to fl0, plane1 zooms from city3 to city1 with fuel level fl3 to fl2, plane1 flies from city3 to city2 with fuel level fl5 to fl0, plane1 zooms from city1 to city0 with fuel level fl1 to fl6, plane1 zooms from city3 to city1 with fuel level fl4 to fl6, plane1 zooms from city2 to city1 with fuel level fl4 to fl1, plane1 zooms from city0 to city1 with fuel level fl0 to fl2, plane1 zooms from city3 to city0 with fuel level fl5 to fl6, person4 departs plane1 at city0, plane1 zooms from city0 to city3 with fuel level fl4 to fl0, plane1 zooms from city3 to city0 with fuel level fl5 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl3, plane1 zooms from city0 to city2 with fuel level fl3 to fl1, plane1 flies from city2 to city1 with fuel level fl6 to fl1, plane1 zooms from city2 to city1 with fuel level fl5 to fl0, plane1 zooms from city2 to city3 with fuel level fl2 to fl3, plane1 zooms from city3 to city1 with fuel level fl2 to fl0, plane1 zooms from city3 to city1 with fuel level fl3 to fl6, plane1 zooms from city3 to city2 with fuel level fl4 to fl0, person6 departs plane1 at city2, plane1 zooms from city2 to city1 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl0 to fl4, plane1 zooms from city2 to city0 with fuel level fl4 to fl0, plane1 zooms from city3 to city0 with fuel level fl5 to fl6, plane1 zooms from city2 to city0 with fuel level fl3 to fl4, plane1 zooms from city3 to city2 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl2 to fl4, plane1 flies from city1 to city2 with fuel level fl2 to fl1, plane1 zooms from city1 to city2 with fuel level fl6 to fl1, plane1 zooms from city3 to city1 with fuel level fl2 to fl1, plane1 zooms from city0 to city2 with fuel level fl4 to fl0, plane1 zooms from city3 to city2 with fuel level fl1 to fl6, plane1 flies from city2 to city3 with fuel level fl1 to fl5, plane1 zooms from city3 to city2 with fuel level fl0 to fl6, plane1 zooms from city0 to city2 with fuel level fl0 to fl5, person3 departs plane1 at city0, plane1 zooms from city2 to city3 with fuel level fl3 to fl4, plane1 flies from city2 to city0 with fuel level fl1 to fl2, plane1 zooms from city1 to city3 with fuel level fl3 to fl6, plane1 zooms from city1 to city0 with fuel level fl2 to fl4, plane1 flies from city0 to city1 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl3 to fl4, plane1 zooms from city2 to city3 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl0 to fl2, plane1 zooms from city2 to city3 with fuel level fl3 to fl4, plane1 zooms from city3 to city2 with fuel level fl2 to fl1, plane1 zooms from city0 to city3 with fuel level fl5 to fl4, plane1 zooms from city0 to city1 with fuel level fl5 to fl0, plane1 zooms from city3 to city1 with fuel level fl3 to fl5, plane1 gets refueled at city3 with fuel level fl1 to fl2, plane1 zooms from city3 to city2 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl4 to fl5, plane1 zooms from city2 to city1 with fuel level fl1 to fl2, plane1 zooms from city1 to city3 with fuel level fl2 to fl4, plane1 zooms from city3 to city0 with fuel level fl0 to fl2, plane1 zooms from city3 to city2 with fuel level fl1 to fl2, plane1 zooms from city2 to city1 with fuel level fl4 to fl3, plane1 zooms from city0 to city3 with fuel level fl6 to fl1, plane1 zooms from city3 to city2 with fuel level fl1 to fl4, plane1 zooms from city0 to city1 with fuel level fl2 to fl0, person7 departs plane1 at city1, plane1 zooms from city1 to city0 with fuel level fl0 to fl2, plane1 flies from city0 to city2 with fuel level fl6 to fl4, plane1 gets refueled at city0 with fuel level fl5 to fl4, plane1 flies from city1 to city0 with fuel level fl1 to fl4, plane1 gets refueled at city1 with fuel level fl4 to fl0, plane1 zooms from city3 to city1 with fuel level fl2 to fl5, plane1 flies from city2 to city0 with fuel level fl5 to fl4, plane1 zooms from city2 to city0 with fuel level fl5 to fl4, plane1 zooms from city3 to city1 with fuel level fl6 to fl3, plane1 zooms from city3 to city1 with fuel level fl5 to fl1, plane1 zooms from city2 to city3 with fuel level fl3 to fl6, plane1 zooms from city3 to city2 with fuel level fl0 to fl5, plane1 zooms from city0 to city1 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl1 to fl4, plane1 zooms from city2 to city1 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl4 to fl6, plane1 zooms from city3 to city0 with fuel level fl1 to fl3, plane1 zooms from city2 to city0 with fuel level fl2 to fl5, plane1 zooms from city1 to city0 with fuel level fl1 to fl3, plane1 zooms from city1 to city3 with fuel level fl0 to fl3, person4 departs plane1 at city2, plane1 zooms from city3 to city0 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl2 to fl4, plane1 zooms from city1 to city3 with fuel level fl6 to fl0, plane1 zooms from city3 to city1 with fuel level fl0 to fl3, plane1 zooms from city1 to city2 with fuel level fl5 to fl3, plane1 flies from city0 to city3 with fuel level fl5 to fl6, plane1 gets refueled at city3 with fuel level fl3 to fl5, plane1 zooms from city0 to city3 with fuel level fl6 to fl5, plane1 gets refueled at city0 with fuel level fl5 to fl3, plane1 zooms from city2 to city1 with fuel level fl5 to fl4, plane1 zooms from city2 to city3 with fuel level fl3 to fl6, plane1 zooms from city3 to city1 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl5 to fl4, plane1 zooms from city2 to city3 with fuel level fl1 to fl3, plane1 zooms from city1 to city2 with fuel level fl3 to fl6, plane1 zooms from city1 to city0 with fuel level fl3 to fl2, plane1 zooms from city1 to city2 with fuel level fl2 to fl0, plane1 zooms from city3 to city0 with fuel level fl5 to fl0, plane1 zooms from city3 to city1 with fuel level fl0 to fl6, plane1 zooms from city3 to city2 with fuel level fl6 to fl0, plane1 gets refueled at city1 with fuel level fl3 to fl6, plane1 zooms from city2 to city1 with fuel level fl3 to fl0, plane1 zooms from city3 to city1 with fuel level fl3 to fl2, plane1 flies from city2 to city0 with fuel level fl0 to fl5, plane1 zooms from city0 to city2 with fuel level fl0 to fl5, person4 departs plane1 at city3, plane1 zooms from city3 to city2 with fuel level fl4 to fl3, plane1 zooms from city3 to city0 with fuel level fl5 to fl6, plane1 zooms from city2 to city1 with fuel level fl3 to fl1, plane1 zooms from city1 to city3 with fuel level fl4 to fl0, plane1 gets refueled at city3 with fuel level fl0 to fl3, plane1 flies from city1 to city3 with fuel level fl5 to fl4, plane1 zooms from city3 to city0 with fuel level fl5 to fl3, plane1 gets refueled at city3 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl6 to fl4, plane1 zooms from city1 to city3 with fuel level fl4 to fl1, plane1 zooms from city3 to city2 with fuel level fl3 to fl6, plane1 zooms from city3 to city2 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl1 to fl0, plane1 zooms from city3 to city0 with fuel level fl4 to fl2, plane1 zooms from city1 to city0 with fuel level fl0 to fl6, plane1 zooms from city0 to city3 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl0 to fl4, plane1 zooms from city0 to city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl4 to fl1, plane1 zooms from city2 to city3 with fuel level fl3 to fl5, plane1 gets refueled at city1 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl6 to fl4, plane1 zooms from city3 to city1 with fuel level fl2 to fl4, plane1 zooms from city3 to city0 with fuel level fl4 to fl1, plane1 zooms from city1 to city2 with fuel level fl3 to fl0, plane1 zooms from city0 to city1 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl0 to fl3, plane1 flies from city0 to city3 with fuel level fl6 to fl2, plane1 flies from city2 to city0 with fuel level fl1 to fl0, plane1 zooms from city3 to city1 with fuel level fl6 to fl3, plane1 zooms from city0 to city3 with fuel level fl2 to fl1, plane1 zooms from city1 to city0 with fuel level fl6 to fl2, plane1 zooms from city1 to city0 with fuel level fl3 to fl2, plane1 zooms from city1 to city0 with fuel level fl4 to fl3, plane1 zooms from city3 to city1 with fuel level fl1 to fl0, plane1 zooms from city3 to city1 with fuel level fl0 to fl4, plane1 zooms from city2 to city3 with fuel level fl6 to fl2, plane1 zooms from city0 to city2 with fuel level fl4 to fl6, plane1 zooms from city3 to city1 with fuel level fl1 to fl6, plane1 zooms from city3 to city2 with fuel level fl2 to fl3, plane1 zooms from city1 to city3 with fuel level fl0 to fl3, plane1 zooms from city2 to city0 with fuel level fl1 to fl4, plane1 zooms from city1 to city3 with fuel level fl3 to fl1, plane1 flies from city2 to city3 with fuel level fl0 to fl5, plane1 gets refueled at city2 with fuel level fl4 to fl1, plane1 zooms from city3 to city1 with fuel level fl0 to fl1, plane1 zooms from city3 to city0 with fuel level fl2 to fl6, plane1 flies from city0 to city2 with fuel level fl4 to fl0, plane1 zooms from city3 to city0 with fuel level fl6 to fl3, plane1 zooms from city0 to city2 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl6 to fl2, person5 departs plane1 at city3, plane1 zooms from city1 to city3 with fuel level fl4 to fl6, plane1 gets refueled at city3 with fuel level fl0 to fl6, plane1 zooms from city0 to city3 with fuel level fl4 to fl1, plane1 flies from city0 to city1 with fuel level fl0 to fl2, plane1 zooms from city3 to city0 with fuel level fl2 to fl3, plane1 flies from city0 to city2 with fuel level fl0 to fl5, plane1 flies from city2 to city3 with fuel level fl3 to fl2, plane1 flies from city1 to city2 with fuel level fl5 to fl3, plane1 zooms from city3 to city2 with fuel level fl5 to fl6, plane1 zooms from city3 to city2 with fuel level fl6 to fl4, plane1 zooms from city2 to city1 with fuel level fl5 to fl4, plane1 zooms from city3 to city1 with fuel level fl5 to fl3, plane1 zooms from city0 to city2 with fuel level fl4 to fl0, plane1 zooms from city0 to city2 with fuel level fl3 to fl6, plane1 zooms from city0 to city2 with fuel level fl6 to fl5, plane1 zooms from city3 to city1 with fuel level fl1 to fl2, plane1 flies from city0 to city3 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl3 to fl0, plane1 zooms from city3 to city2 with fuel level fl4 to fl2, plane1 zooms from city2 to city1 with fuel level fl1 to fl5, plane1 flies from city0 to city3 with fuel level fl4 to fl2, plane1 zooms from city2 to city1 with fuel level fl4 to fl3, plane1 zooms from city0 to city1 with fuel level fl0 to fl6, plane1 zooms from city0 to city1 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl5 to fl4, plane1 zooms from city1 to city2 with fuel level fl4 to fl5, plane1 flies from city3 to city0 with fuel level fl1 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl4, plane1 flies from city0 to city3 with fuel level fl6 to fl3, plane1 flies from city3 to city2 with fuel level fl4 to fl1, plane1 zooms from city1 to city2 with fuel level fl6 to fl3, plane1 zooms from city2 to city3 with fuel level fl5 to fl0, plane1 gets refueled at city1 with fuel level fl1 to fl4, plane1 zooms from city1 to city3 with fuel level fl3 to fl4, plane1 zooms from city1 to city0 with fuel level fl3 to fl0, plane1 zooms from city1 to city2 with fuel level fl0 to fl4, plane1 zooms from city2 to city3 with fuel level fl5 to fl2, plane1 zooms from city3 to city0 with fuel level fl0 to fl6, plane1 flies from city0 to city3 with fuel level fl6 to fl1, person3 departs plane1 at city2, plane1 zooms from city1 to city3 with fuel level fl6 to fl5, plane1 flies from city1 to city0 with fuel level fl6 to fl1, plane1 zooms from city0 to city3 with fuel level fl3 to fl5, plane1 zooms from city0 to city3 with fuel level fl6 to fl5, plane1 zooms from city1 to city0 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl6 to fl0, plane1 zooms from city3 to city2 with fuel level fl6 to fl2, plane1 zooms from city2 to city1 with fuel level fl1 to fl0, plane1 zooms from city0 to city2 with fuel level fl5 to fl6, plane1 gets refueled at city2 with fuel level fl6 to fl3, plane1 zooms from city2 to city0 with fuel level fl1 to fl5, plane1 zooms from city0 to city2 with fuel level fl0 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl5, plane1 zooms from city2 to city3 with fuel level fl5 to fl3, plane1 flies from city3 to city0 with fuel level fl2 to fl0, plane1 zooms from city3 to city2 with fuel level fl0 to fl5, plane1 zooms from city1 to city2 with fuel level fl4 to fl3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, plane1 zooms from city2 to city0 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl1 to fl0, plane1 gets refueled at city2 with fuel level fl0 to fl1, plane1 zooms from city3 to city0 with fuel level fl1 to fl2, plane1 zooms from city0 to city1 with fuel level fl6 to fl0, plane1 zooms from city2 to city0 with fuel level fl0 to fl3, plane1 zooms from city0 to city2 with fuel level fl2 to fl6, plane1 zooms from city3 to city1 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl0 to fl3, plane1 zooms from city0 to city1 with fuel level fl3 to fl5, plane1 zooms from city3 to city1 with fuel level fl5 to fl6, plane1 zooms from city0 to city3 with fuel level fl1 to fl6, plane1 zooms from city1 to city2 with fuel level fl2 to fl5, plane1 gets refueled at city1 with fuel level fl5 to fl6, plane1 zooms from city0 to city3 with fuel level fl5 to fl3, plane1 zooms from city0 to city1 with fuel level fl6 to fl4, plane1 zooms from city0 to city1 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl6 to fl4, plane1 flies from city2 to city3 with fuel level fl4 to fl1, plane1 zooms from city0 to city2 with fuel level fl2 to fl4, plane1 zooms from city2 to city3 with fuel level fl0 to fl1, person3 departs plane1 at city1, plane1 zooms from city0 to city3 with fuel level fl2 to fl5, plane1 zooms from city0 to city1 with fuel level fl4 to fl2, plane1 zooms from city3 to city1 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl5 to fl6, plane1 zooms from city1 to city0 with fuel level fl5 to fl6, plane1 zooms from city0 to city3 with fuel level fl5 to fl3, plane1 zooms from city0 to city3 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city3 with fuel level fl5 to fl3, plane1 zooms from city3 to city2 with fuel level fl5 to fl1, plane1 gets refueled at city1 with fuel level fl2 to fl1, plane1 zooms from city1 to city3 with fuel level fl6 to fl4, plane1 zooms from city1 to city0 with fuel level fl1 to fl4, plane1 zooms from city0 to city3 with fuel level fl2 to fl3, plane1 zooms from city1 to city0 with fuel level fl6 to fl2, plane1 zooms from city3 to city0 with fuel level fl5 to fl2, plane1 flies from city2 to city0 with fuel level fl5 to fl6, plane1 zooms from city1 to city3 with fuel level fl2 to fl0, plane1 zooms from city1 to city2 with fuel level fl2 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl2, plane1 zooms from city2 to city1 with fuel level fl0 to fl2, plane1 zooms from city3 to city2 with fuel level fl1 to fl5, plane1 zooms from city1 to city0 with fuel level fl6 to fl4, plane1 zooms from city0 to city3 with fuel level fl4 to fl1, plane1 flies from city2 to city3 with fuel level fl2 to fl4, plane1 gets refueled at city2 with fuel level fl5 to fl4, person2 departs plane1 at city1, plane1 zooms from city2 to city1 with fuel level fl2 to fl3, plane1 zooms from city1 to city2 with fuel level fl3 to fl6, plane1 zooms from city3 to city1 with fuel level fl6 to fl4, plane1 flies from city0 to city1 with fuel level fl4 to fl3, plane1 zooms from city3 to city0 with fuel level fl6 to fl2, plane1 flies from city2 to city3 with fuel level fl3 to fl4, plane1 zooms from city0 to city1 with fuel level fl6 to fl0, plane1 zooms from city0 to city3 with fuel level fl4 to fl2, plane1 zooms from city2 to city0 with fuel level fl1 to fl6, plane1 zooms from city0 to city3 with fuel level fl3 to fl0, plane1 zooms from city0 to city2 with fuel level fl0 to fl2, person3 boards plane1 at city2, plane1 zooms from city3 to city2 with fuel level fl4 to fl1, plane1 zooms from city2 to city3 with fuel level fl0 to fl4, plane1 zooms from city0 to city2 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl5 to fl1, plane1 zooms from city3 to city2 with fuel level fl0 to fl4, plane1 zooms from city3 to city0 with fuel level fl0 to fl3, plane1 zooms from city1 to city0 with fuel level fl2 to fl6, plane1 zooms from city1 to city0 with fuel level fl1 to fl6, plane1 zooms from city2 to city3 with fuel level fl4 to fl0, plane1 zooms from city3 to city2 with fuel level fl6 to fl1, plane1 zooms from city3 to city1 with fuel level fl6 to fl2, plane1 zooms from city0 to city3 with fuel level fl2 to fl1, plane1 flies from city0 to city1 with fuel level fl5 to fl1, plane1 gets refueled at city0 with fuel level fl2 to fl3, plane1 zooms from city1 to city3 with fuel level fl6 to fl4, plane1 zooms from city1 to city3 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl4 to fl0, plane1 zooms from city1 to city2 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl0 to fl6, plane1 flies from city3 to city2 with fuel level fl1 to fl3, person6 boards plane1 at city2, plane1 zooms from city1 to city0 with fuel level fl2 to fl6, plane1 flies from city0 to city1 with fuel level fl5 to fl4, plane1 zooms from city2 to city1 with fuel level fl0 to fl4, plane1 zooms from city3 to city1 with fuel level fl4 to fl0, plane1 zooms from city3 to city1 with fuel level fl5 to fl4, plane1 zooms from city1 to city2 with fuel level fl1 to fl0, plane1 flies from city3 to city2 with fuel level fl4 to fl6, plane1 zooms from city3 to city2 with fuel level fl2 to fl1, plane1 zooms from city2 to city0 with fuel level fl0 to fl5, plane1 flies from city2 to city1 with fuel level fl0 to fl3, plane1 zooms from city0 to city3 with fuel level fl6 to fl2, plane1 zooms from city2 to city1 with fuel level fl3 to fl0, plane1 zooms from city1 to city0 with fuel level fl4 to fl2, plane1 flies from city3 to city0 with fuel level fl4 to fl3, plane1 zooms from city0 to city1 with fuel level fl1 to fl0, plane1 zooms from city1 to city2 with fuel level fl3 to fl0, plane1 zooms from city2 to city3 with fuel level fl4 to fl0, plane1 zooms from city3 to city2 with fuel level fl6 to fl2, plane1 zooms from city3 to city2 with fuel level fl1 to fl3, plane1 zooms from city3 to city0 with fuel level fl1 to fl3, plane1 zooms from city2 to city1 with fuel level fl6 to fl1, plane1 zooms from city1 to city2 with fuel level fl5 to fl4, plane1 zooms from city0 to city3 with fuel level fl5 to fl0, plane1 zooms from city3 to city0 with fuel level fl4 to fl2, plane1 zooms from city0 to city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl1 to fl5, plane1 zooms from city3 to city2 with fuel level fl4 to fl1, plane1 flies from city1 to city0 with fuel level fl0 to fl6, plane1 zooms from city0 to city3 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl4 to fl6, plane1 zooms from city2 to city1 with fuel level fl1 to fl3, plane1 flies from city2 to city3 with fuel level fl1 to fl6, plane1 zooms from city2 to city0 with fuel level fl5 to fl1, plane1 zooms from city3 to city1 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl6 to fl3, plane1 flies from city1 to city0 with fuel level fl3 to fl4, plane1 flies from city0 to city1 with fuel level fl3 to fl6, plane1 zooms from city2 to city1 with fuel level fl3 to fl5, plane1 zooms from city3 to city2 with fuel level fl3 to fl6, plane1 zooms from city1 to city0 with fuel level fl0 to fl4, plane1 zooms from city0 to city3 with fuel level fl3 to fl0, plane1 zooms from city0 to city1 with fuel level fl1 to fl5, plane1 gets refueled at city1 with fuel level fl2 to fl5, plane1 flies from city3 to city1 with fuel level fl4 to fl5, plane1 zooms from city1 to city3 with fuel level fl1 to fl0, plane1 zooms from city1 to city0 with fuel level fl3 to fl6, plane1 zooms from city2 to city1 with fuel level fl6 to fl4, plane1 zooms from city2 to city3 with fuel level fl2 to fl4, plane1 flies from city2 to city0 with fuel level fl5 to fl3, plane1 zooms from city1 to city3 with fuel level fl2 to fl0, plane1 zooms from city3 to city0 with fuel level fl5 to fl3, plane1 zooms from city3 to city2 with fuel level fl3 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl5, plane1 zooms from city1 to city2 with fuel level fl4 to fl1, plane1 flies from city1 to city3 with fuel level fl6 to fl2, plane1 zooms from city2 to city3 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl0 to fl1, plane1 gets refueled at city0 with fuel level fl0 to fl2, plane1 gets refueled at city0 with fuel level fl5 to fl0, plane1 zooms from city0 to city3 with fuel level fl5 to fl4, plane1 zooms from city1 to city0 with fuel level fl5 to fl6, plane1 zooms from city1 to city0 with fuel level fl5 to fl3, person3 departs plane1 at city3, plane1 zooms from city3 to city2 with fuel level fl2 to fl4, plane1 zooms from city1 to city3 with fuel level fl4 to fl1, plane1 zooms from city1 to city0 with fuel level fl3 to fl6, person1 departs plane1 at city1, plane1 zooms from city0 to city3 with fuel level fl1 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl3, plane1 zooms from city2 to city0 with fuel level fl2 to fl4, plane1 zooms from city3 to city0 with fuel level fl5 to fl1, plane1 zooms from city1 to city2 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl5 to fl6, person5 departs plane1 at city1, plane1 zooms from city0 to city3 with fuel level fl1 to fl3, plane1 zooms from city0 to city1 with fuel level fl4 to fl3, plane1 flies from city2 to city3 with fuel level fl6 to fl4, plane1 zooms from city3 to city1 with fuel level fl2 to fl3, plane1 zooms from city2 to city0 with fuel level fl5 to fl6, plane1 flies from city3 to city2 with fuel level fl1 to fl0, plane1 zooms from city1 to city0 with fuel level fl0 to fl2, plane1 zooms from city3 to city2 with fuel level fl1 to fl3, plane1 zooms from city1 to city0 with fuel level fl5 to fl1, plane1 zooms from city1 to city2 with fuel level fl0 to fl5, plane1 zooms from city0 to city1 with fuel level fl0 to fl3, plane1 gets refueled at city1 with fuel level fl0 to fl5, plane1 zooms from city3 to city1 with fuel level fl6 to fl4, plane1 zooms from city1 to city0 with fuel level fl5 to fl2, plane1 zooms from city0 to city2 with fuel level fl6 to fl5, plane1 zooms from city0 to city2 with fuel level fl3 to fl2, plane1 gets refueled at city1 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl1 to fl4, plane1 flies from city1 to city0 with fuel level fl5 to fl4, plane1 zooms from city0 to city1 with fuel level fl0 to fl6, plane1 zooms from city0 to city3 with fuel level fl2 to fl4, plane1 zooms from city2 to city1 with fuel level fl3 to fl0, plane1 zooms from city1 to city2 with fuel level fl4 to fl0, plane1 zooms from city3 to city1 with fuel level fl5 to fl6, plane1 zooms from city1 to city0 with fuel level fl2 to fl5, plane1 zooms from city2 to city0 with fuel level fl5 to fl4, plane1 zooms from city2 to city1 with fuel level fl0 to fl4, plane1 zooms from city2 to city3 with fuel level fl0 to fl6, plane1 zooms from city2 to city1 with fuel level fl1 to fl6, plane1 zooms from city1 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city0 with fuel level fl2 to fl5, plane1 zooms from city3 to city1 with fuel level fl4 to fl5 and plane1 zooms from city2 to city1 with fuel level fl2 to fl0", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "9caa013e-54a6-40fc-8332-ba1b775239ff", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "a9caec4c-d4c9-482a-b05a-2ba983e9a70c", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: person5 boards plane1 at city2 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "person5 boards plane1 at city2", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "ab38cb8d-ef6c-4a17-a5d3-d7231c489131", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 zooms from city2 to city1 with fuel level fl3 to fl1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "plane1 zooms from city2 to city1 with fuel level fl3 to fl1", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "6a229f85-d880-4c54-90c8-1e0133b736dd", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 gets refueled at city1 with fuel level fl2 to fl5 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "plane1 gets refueled at city1 with fuel level fl2 to fl5", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "10f71fa0-ef5b-4ae2-ba74-dbcf0f7368f5", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city2 with fuel level fl5 to fl0, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "0a5cbeef-f5e1-4bfa-ab00-eada5c96b584", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 zooms from city0 to city1 with fuel level fl6 to fl1, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "5d19ecb1-3b9a-4562-bb75-a903f5ed45f5", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 flies from city1 to city0 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "54349db6-62db-4068-a0bc-bb5829e86c0b", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "e13a423f-8c62-4fb9-a280-259eddca7ff6", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 5 the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4. Is the action: plane1 gets refueled at city1 with fuel level fl2 to fl3 executable at step 4, True or False?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "eafdd468-cffd-43e9-a273-958449e8334d", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 5 the following actions are planned to be performed: plane1 zooms from city3 to city1 with fuel level fl3 to fl6, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4. Is the action: plane1 zooms from city3 to city1 with fuel level fl3 to fl6 executable at step 1, True or False?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "4b6a7d94-8a5b-4b79-b55e-ba7e620ac979", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 5 the following actions are planned to be performed: plane1 zooms from city1 to city3 with fuel level fl3 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4. Is the action: plane1 zooms from city1 to city3 with fuel level fl3 to fl0 executable at step 1, True or False?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "6a16e2bc-35d2-43f1-9687-fe8af6924108", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 5 the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 zooms from city2 to city3 with fuel level fl3 to fl4, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4. Is the action: plane1 zooms from city2 to city3 with fuel level fl3 to fl4 executable at step 3, True or False?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "55370939-0f04-4a6e-8dd7-71313accc93a", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "plane1 zooms from city1 to city2 with fuel level fl4 to fl2, plane1 zooms from city1 to city0 with fuel level fl4 to fl2, person2 boards plane1 at city1, plane1 zooms from city1 to city3 with fuel level fl4 to fl2, plane1 flies from city1 to city0 with fuel level fl4 to fl3, plane1 flies from city1 to city3 with fuel level fl4 to fl3, plane1 gets refueled at city1 with fuel level fl4 to fl5, plane1 flies from city1 to city2 with fuel level fl4 to fl3, person8 boards plane1 at city1 and person1 boards plane1 at city1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "91fed0d1-f87d-4c9c-ac28-7d07463780dd", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "plane1 zooms from city2 to city1 with fuel level fl2 to fl4, plane1 zooms from city2 to city0 with fuel level fl1 to fl3, plane1 zooms from city3 to city0 with fuel level fl0 to fl3, plane1 zooms from city1 to city3 with fuel level fl6 to fl0, plane1 zooms from city2 to city3 with fuel level fl1 to fl3, plane1 zooms from city1 to city2 with fuel level fl1 to fl5, plane1 zooms from city1 to city0 with fuel level fl4 to fl1, plane1 zooms from city3 to city0 with fuel level fl2 to fl4, plane1 flies from city0 to city2 with fuel level fl3 to fl6, plane1 flies from city0 to city1 with fuel level fl0 to fl3, plane1 zooms from city1 to city0 with fuel level fl6 to fl5, plane1 flies from city2 to city0 with fuel level fl1 to fl4, plane1 flies from city0 to city2 with fuel level fl0 to fl1, plane1 zooms from city2 to city3 with fuel level fl1 to fl5, plane1 zooms from city1 to city3 with fuel level fl2 to fl6, plane1 zooms from city3 to city0 with fuel level fl3 to fl1, plane1 zooms from city0 to city3 with fuel level fl2 to fl6, plane1 zooms from city3 to city1 with fuel level fl4 to fl5, plane1 zooms from city2 to city0 with fuel level fl5 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl0, plane1 zooms from city0 to city1 with fuel level fl0 to fl5, plane1 flies from city0 to city2 with fuel level fl1 to fl4, plane1 flies from city3 to city1 with fuel level fl6 to fl2, plane1 zooms from city3 to city1 with fuel level fl6 to fl4, plane1 zooms from city1 to city3 with fuel level fl6 to fl2, plane1 zooms from city0 to city1 with fuel level fl5 to fl4, plane1 zooms from city0 to city2 with fuel level fl1 to fl4, plane1 zooms from city0 to city1 with fuel level fl6 to fl4, plane1 zooms from city3 to city0 with fuel level fl5 to fl3, plane1 zooms from city2 to city1 with fuel level fl6 to fl3, plane1 zooms from city1 to city2 with fuel level fl3 to fl2, plane1 zooms from city1 to city3 with fuel level fl2 to fl5, plane1 zooms from city0 to city3 with fuel level fl2 to fl0, plane1 zooms from city1 to city3 with fuel level fl0 to fl5, plane1 flies from city0 to city3 with fuel level fl2 to fl3, plane1 zooms from city1 to city0 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl2 to fl0, plane1 zooms from city1 to city0 with fuel level fl0 to fl2, plane1 flies from city0 to city3 with fuel level fl1 to fl6, plane1 zooms from city1 to city2 with fuel level fl0 to fl5, plane1 flies from city1 to city0 with fuel level fl1 to fl3, plane1 zooms from city2 to city1 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl4 to fl2, plane1 zooms from city1 to city2 with fuel level fl1 to fl4, person3 boards plane1 at city1, plane1 zooms from city0 to city2 with fuel level fl6 to fl1, plane1 zooms from city0 to city1 with fuel level fl0 to fl1, plane1 zooms from city3 to city1 with fuel level fl4 to fl2, plane1 zooms from city0 to city3 with fuel level fl4 to fl1, plane1 zooms from city3 to city1 with fuel level fl1 to fl6, plane1 flies from city0 to city3 with fuel level fl1 to fl0, plane1 zooms from city2 to city1 with fuel level fl2 to fl4, plane1 zooms from city3 to city0 with fuel level fl4 to fl1, plane1 zooms from city0 to city2 with fuel level fl6 to fl2, plane1 zooms from city3 to city1 with fuel level fl4 to fl1, plane1 zooms from city2 to city0 with fuel level fl3 to fl5, plane1 zooms from city0 to city2 with fuel level fl4 to fl1, plane1 gets refueled at city1 with fuel level fl3 to fl0, plane1 zooms from city0 to city2 with fuel level fl0 to fl2, plane1 flies from city3 to city2 with fuel level fl1 to fl5, plane1 zooms from city2 to city3 with fuel level fl6 to fl4, plane1 zooms from city3 to city2 with fuel level fl0 to fl1, plane1 zooms from city2 to city3 with fuel level fl1 to fl4, plane1 zooms from city2 to city0 with fuel level fl4 to fl5, plane1 zooms from city2 to city1 with fuel level fl1 to fl2, plane1 zooms from city0 to city3 with fuel level fl3 to fl4, plane1 flies from city3 to city1 with fuel level fl0 to fl4, plane1 zooms from city2 to city1 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl5 to fl4, plane1 zooms from city1 to city3 with fuel level fl2 to fl5, plane1 flies from city0 to city2 with fuel level fl5 to fl1, plane1 zooms from city1 to city2 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl5 to fl2, plane1 zooms from city1 to city2 with fuel level fl1 to fl6, plane1 zooms from city2 to city1 with fuel level fl1 to fl5, plane1 gets refueled at city3 with fuel level fl0 to fl4, plane1 zooms from city0 to city1 with fuel level fl5 to fl1, plane1 flies from city0 to city2 with fuel level fl4 to fl1, plane1 flies from city2 to city3 with fuel level fl1 to fl0, plane1 flies from city0 to city1 with fuel level fl1 to fl0, plane1 flies from city2 to city1 with fuel level fl3 to fl1, plane1 zooms from city1 to city0 with fuel level fl3 to fl1, plane1 zooms from city2 to city1 with fuel level fl6 to fl2, plane1 zooms from city3 to city1 with fuel level fl3 to fl2, plane1 zooms from city0 to city1 with fuel level fl5 to fl4, plane1 flies from city2 to city0 with fuel level fl6 to fl5, plane1 zooms from city2 to city0 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl3 to fl1, plane1 zooms from city3 to city1 with fuel level fl2 to fl0, plane1 zooms from city0 to city1 with fuel level fl4 to fl0, plane1 zooms from city1 to city3 with fuel level fl2 to fl4, plane1 zooms from city2 to city3 with fuel level fl3 to fl0, plane1 zooms from city1 to city2 with fuel level fl2 to fl6, plane1 flies from city3 to city2 with fuel level fl0 to fl5, plane1 zooms from city0 to city3 with fuel level fl0 to fl2, plane1 zooms from city0 to city3 with fuel level fl2 to fl1, plane1 zooms from city1 to city2 with fuel level fl3 to fl2, plane1 zooms from city2 to city3 with fuel level fl0 to fl1, plane1 zooms from city2 to city0 with fuel level fl3 to fl0, plane1 zooms from city1 to city0 with fuel level fl2 to fl0, plane1 zooms from city1 to city3 with fuel level fl5 to fl0, plane1 zooms from city0 to city2 with fuel level fl6 to fl1, plane1 zooms from city2 to city3 with fuel level fl1 to fl0, plane1 zooms from city1 to city0 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl5 to fl0, plane1 zooms from city3 to city0 with fuel level fl5 to fl0, plane1 flies from city1 to city2 with fuel level fl0 to fl4, plane1 zooms from city0 to city2 with fuel level fl6 to fl3, plane1 zooms from city3 to city0 with fuel level fl4 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl2, plane1 zooms from city3 to city0 with fuel level fl4 to fl3, plane1 gets refueled at city2 with fuel level fl6 to fl2, plane1 zooms from city2 to city3 with fuel level fl2 to fl0, plane1 zooms from city1 to city2 with fuel level fl2 to fl5, plane1 zooms from city1 to city2 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl5 to fl4, plane1 flies from city0 to city1 with fuel level fl1 to fl2, plane1 flies from city3 to city2 with fuel level fl2 to fl0, plane1 zooms from city2 to city1 with fuel level fl3 to fl1, plane1 zooms from city0 to city1 with fuel level fl1 to fl5, plane1 zooms from city3 to city2 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl2 to fl3, plane1 zooms from city2 to city1 with fuel level fl1 to fl4, plane1 flies from city0 to city3 with fuel level fl5 to fl2, plane1 flies from city2 to city3 with fuel level fl0 to fl1, plane1 gets refueled at city2 with fuel level fl5 to fl0, plane1 zooms from city3 to city1 with fuel level fl3 to fl4, plane1 zooms from city3 to city2 with fuel level fl5 to fl0, plane1 zooms from city0 to city1 with fuel level fl2 to fl1, plane1 flies from city1 to city2 with fuel level fl0 to fl6, plane1 zooms from city0 to city1 with fuel level fl0 to fl2, plane1 flies from city3 to city2 with fuel level fl3 to fl0, plane1 gets refueled at city2 with fuel level fl2 to fl3, plane1 zooms from city2 to city0 with fuel level fl6 to fl4, plane1 zooms from city0 to city2 with fuel level fl2 to fl4, plane1 zooms from city3 to city0 with fuel level fl0 to fl5, plane1 zooms from city3 to city1 with fuel level fl1 to fl2, plane1 zooms from city3 to city2 with fuel level fl2 to fl5, plane1 zooms from city1 to city2 with fuel level fl6 to fl4, plane1 zooms from city0 to city1 with fuel level fl3 to fl6, plane1 zooms from city0 to city2 with fuel level fl2 to fl3, plane1 zooms from city3 to city1 with fuel level fl0 to fl4, plane1 zooms from city3 to city0 with fuel level fl1 to fl3, plane1 zooms from city1 to city3 with fuel level fl3 to fl2, plane1 flies from city1 to city3 with fuel level fl3 to fl6, plane1 zooms from city1 to city3 with fuel level fl6 to fl2, plane1 zooms from city0 to city2 with fuel level fl4 to fl3, plane1 zooms from city1 to city3 with fuel level fl1 to fl6, plane1 zooms from city1 to city2 with fuel level fl5 to fl1, plane1 zooms from city0 to city2 with fuel level fl5 to fl0, plane1 gets refueled at city3 with fuel level fl6 to fl3, plane1 zooms from city2 to city3 with fuel level fl4 to fl3, plane1 zooms from city2 to city1 with fuel level fl3 to fl6, plane1 zooms from city3 to city2 with fuel level fl5 to fl3, plane1 zooms from city2 to city1 with fuel level fl0 to fl4, plane1 flies from city1 to city2 with fuel level fl6 to fl1, plane1 flies from city0 to city2 with fuel level fl4 to fl2, plane1 zooms from city1 to city3 with fuel level fl0 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl0, plane1 zooms from city2 to city0 with fuel level fl3 to fl0, plane1 zooms from city3 to city1 with fuel level fl6 to fl1, plane1 zooms from city2 to city0 with fuel level fl4 to fl3, plane1 flies from city0 to city1 with fuel level fl0 to fl4, plane1 flies from city0 to city2 with fuel level fl5 to fl3, plane1 zooms from city3 to city2 with fuel level fl1 to fl0, plane1 zooms from city2 to city1 with fuel level fl2 to fl1, plane1 gets refueled at city0 with fuel level fl4 to fl2, plane1 zooms from city1 to city3 with fuel level fl6 to fl3, plane1 zooms from city0 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city3 with fuel level fl6 to fl3, plane1 flies from city1 to city3 with fuel level fl0 to fl4, plane1 zooms from city1 to city3 with fuel level fl1 to fl2, plane1 zooms from city0 to city1 with fuel level fl6 to fl3, plane1 zooms from city0 to city2 with fuel level fl5 to fl4, plane1 zooms from city3 to city1 with fuel level fl2 to fl5, plane1 zooms from city0 to city2 with fuel level fl5 to fl3, plane1 zooms from city1 to city3 with fuel level fl6 to fl2, plane1 flies from city1 to city0 with fuel level fl4 to fl2, plane1 zooms from city0 to city2 with fuel level fl0 to fl4, plane1 zooms from city3 to city2 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl4 to fl2, plane1 zooms from city3 to city0 with fuel level fl4 to fl6, plane1 flies from city1 to city2 with fuel level fl6 to fl5, plane1 zooms from city3 to city0 with fuel level fl0 to fl6, plane1 flies from city2 to city0 with fuel level fl0 to fl2, plane1 flies from city1 to city0 with fuel level fl4 to fl5, plane1 zooms from city3 to city0 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl6 to fl4, plane1 zooms from city2 to city3 with fuel level fl4 to fl0, plane1 zooms from city2 to city0 with fuel level fl2 to fl0, plane1 zooms from city3 to city0 with fuel level fl4 to fl3, plane1 zooms from city1 to city0 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl5 to fl1, plane1 zooms from city2 to city1 with fuel level fl3 to fl5, plane1 zooms from city2 to city0 with fuel level fl5 to fl2, plane1 zooms from city2 to city1 with fuel level fl5 to fl4, plane1 zooms from city0 to city1 with fuel level fl6 to fl5, plane1 zooms from city3 to city2 with fuel level fl4 to fl3, plane1 zooms from city3 to city0 with fuel level fl0 to fl5, plane1 zooms from city3 to city2 with fuel level fl5 to fl2, plane1 zooms from city2 to city3 with fuel level fl3 to fl0, plane1 zooms from city0 to city1 with fuel level fl4 to fl5, plane1 zooms from city2 to city1 with fuel level fl0 to fl5, plane1 zooms from city3 to city1 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl1 to fl0, plane1 zooms from city0 to city2 with fuel level fl4 to fl3, plane1 zooms from city1 to city3 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl1 to fl3, plane1 zooms from city1 to city2 with fuel level fl3 to fl1, person1 boards plane1 at city0, plane1 zooms from city0 to city3 with fuel level fl4 to fl2, plane1 flies from city3 to city0 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl1 to fl6, plane1 flies from city1 to city2 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl4 to fl1, plane1 zooms from city1 to city0 with fuel level fl6 to fl0, plane1 zooms from city0 to city2 with fuel level fl5 to fl2, plane1 flies from city0 to city2 with fuel level fl5 to fl4, plane1 flies from city2 to city0 with fuel level fl4 to fl3, plane1 zooms from city1 to city3 with fuel level fl2 to fl4, plane1 gets refueled at city0 with fuel level fl2 to fl1, plane1 flies from city2 to city3 with fuel level fl5 to fl4, plane1 zooms from city0 to city2 with fuel level fl6 to fl2, plane1 zooms from city0 to city1 with fuel level fl4 to fl5, plane1 zooms from city0 to city3 with fuel level fl1 to fl2, plane1 zooms from city0 to city1 with fuel level fl4 to fl3, plane1 zooms from city3 to city2 with fuel level fl4 to fl3, plane1 zooms from city0 to city3 with fuel level fl6 to fl2, plane1 zooms from city1 to city0 with fuel level fl6 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl3, plane1 zooms from city2 to city0 with fuel level fl2 to fl5, plane1 zooms from city2 to city3 with fuel level fl4 to fl0, plane1 zooms from city0 to city3 with fuel level fl5 to fl1, plane1 flies from city2 to city1 with fuel level fl6 to fl4, plane1 zooms from city2 to city3 with fuel level fl5 to fl4, plane1 zooms from city1 to city0 with fuel level fl6 to fl3, plane1 flies from city1 to city0 with fuel level fl4 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl0, plane1 zooms from city0 to city1 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl0 to fl4, plane1 zooms from city0 to city2 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl0 to fl3, plane1 flies from city3 to city0 with fuel level fl2 to fl3, plane1 flies from city3 to city0 with fuel level fl6 to fl3, plane1 zooms from city3 to city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl6 to fl0, plane1 flies from city0 to city1 with fuel level fl3 to fl1, plane1 zooms from city0 to city1 with fuel level fl3 to fl1, plane1 zooms from city2 to city1 with fuel level fl0 to fl4, plane1 flies from city1 to city3 with fuel level fl3 to fl1, plane1 zooms from city2 to city0 with fuel level fl5 to fl0, plane1 zooms from city2 to city3 with fuel level fl6 to fl3, plane1 zooms from city2 to city1 with fuel level fl4 to fl0, plane1 gets refueled at city2 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl2 to fl6, plane1 zooms from city3 to city2 with fuel level fl5 to fl6, plane1 zooms from city1 to city0 with fuel level fl2 to fl3, plane1 zooms from city0 to city3 with fuel level fl5 to fl0, plane1 zooms from city2 to city3 with fuel level fl2 to fl5, plane1 zooms from city0 to city3 with fuel level fl6 to fl1, plane1 zooms from city1 to city2 with fuel level fl2 to fl3, plane1 zooms from city0 to city1 with fuel level fl5 to fl4, plane1 flies from city2 to city0 with fuel level fl1 to fl5, plane1 flies from city0 to city1 with fuel level fl2 to fl6, plane1 zooms from city2 to city1 with fuel level fl1 to fl5, plane1 flies from city0 to city1 with fuel level fl6 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl0, plane1 flies from city1 to city3 with fuel level fl4 to fl1, plane1 zooms from city1 to city0 with fuel level fl2 to fl6, plane1 zooms from city2 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city0 with fuel level fl1 to fl5, plane1 zooms from city3 to city2 with fuel level fl1 to fl3, plane1 zooms from city2 to city0 with fuel level fl0 to fl5, plane1 zooms from city1 to city0 with fuel level fl1 to fl4, plane1 zooms from city1 to city2 with fuel level fl5 to fl2, person8 departs plane1 at city3, plane1 flies from city3 to city0 with fuel level fl2 to fl5, plane1 zooms from city2 to city1 with fuel level fl2 to fl0, plane1 zooms from city1 to city2 with fuel level fl0 to fl3, plane1 zooms from city2 to city0 with fuel level fl2 to fl6, plane1 zooms from city2 to city1 with fuel level fl2 to fl6, plane1 zooms from city3 to city1 with fuel level fl5 to fl3, plane1 flies from city1 to city3 with fuel level fl1 to fl5, plane1 zooms from city0 to city1 with fuel level fl1 to fl4, plane1 zooms from city2 to city3 with fuel level fl2 to fl4, plane1 zooms from city1 to city3 with fuel level fl0 to fl6, plane1 zooms from city0 to city3 with fuel level fl2 to fl3, plane1 zooms from city0 to city2 with fuel level fl2 to fl1, plane1 zooms from city0 to city3 with fuel level fl5 to fl6, plane1 zooms from city0 to city3 with fuel level fl6 to fl3, plane1 zooms from city2 to city3 with fuel level fl2 to fl1, plane1 zooms from city2 to city0 with fuel level fl1 to fl2, plane1 zooms from city1 to city3 with fuel level fl4 to fl3, plane1 zooms from city2 to city1 with fuel level fl1 to fl2, plane1 flies from city3 to city2 with fuel level fl0 to fl1, plane1 zooms from city3 to city0 with fuel level fl6 to fl1, plane1 flies from city3 to city1 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl0 to fl3, plane1 flies from city1 to city0 with fuel level fl2 to fl4, plane1 zooms from city3 to city1 with fuel level fl4 to fl1, plane1 zooms from city1 to city0 with fuel level fl6 to fl4, plane1 zooms from city0 to city3 with fuel level fl2 to fl5, plane1 zooms from city1 to city2 with fuel level fl1 to fl3, plane1 zooms from city0 to city2 with fuel level fl1 to fl0, plane1 flies from city3 to city2 with fuel level fl6 to fl5, plane1 flies from city2 to city0 with fuel level fl6 to fl4, plane1 zooms from city2 to city1 with fuel level fl1 to fl3, plane1 zooms from city0 to city1 with fuel level fl0 to fl4, plane1 zooms from city3 to city2 with fuel level fl4 to fl5, person7 boards plane1 at city2, plane1 zooms from city1 to city2 with fuel level fl1 to fl2, plane1 zooms from city0 to city2 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl0 to fl6, plane1 zooms from city1 to city0 with fuel level fl5 to fl3, plane1 zooms from city3 to city2 with fuel level fl6 to fl2, plane1 flies from city3 to city1 with fuel level fl0 to fl6, plane1 flies from city2 to city1 with fuel level fl4 to fl2, plane1 gets refueled at city3 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl1 to fl2, plane1 zooms from city3 to city2 with fuel level fl6 to fl1, plane1 zooms from city1 to city2 with fuel level fl4 to fl3, plane1 zooms from city0 to city1 with fuel level fl5 to fl3, plane1 zooms from city0 to city3 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl6 to fl3, plane1 zooms from city2 to city0 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl2 to fl5, plane1 gets refueled at city3 with fuel level fl4 to fl1, plane1 flies from city3 to city2 with fuel level fl3 to fl5, plane1 zooms from city0 to city1 with fuel level fl4 to fl0, plane1 flies from city0 to city1 with fuel level fl5 to fl2, plane1 gets refueled at city0 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl6 to fl0, plane1 zooms from city2 to city0 with fuel level fl2 to fl3, plane1 zooms from city1 to city0 with fuel level fl3 to fl4, plane1 zooms from city2 to city3 with fuel level fl1 to fl0, plane1 zooms from city3 to city0 with fuel level fl3 to fl0, plane1 zooms from city2 to city3 with fuel level fl2 to fl5, plane1 zooms from city1 to city2 with fuel level fl4 to fl6, plane1 zooms from city2 to city0 with fuel level fl3 to fl1, plane1 zooms from city3 to city0 with fuel level fl5 to fl4, plane1 zooms from city2 to city1 with fuel level fl5 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl4, plane1 zooms from city0 to city1 with fuel level fl0 to fl4, plane1 gets refueled at city0 with fuel level fl3 to fl1, plane1 zooms from city3 to city1 with fuel level fl0 to fl6, plane1 zooms from city1 to city0 with fuel level fl2 to fl4, plane1 zooms from city1 to city0 with fuel level fl6 to fl3, plane1 zooms from city2 to city0 with fuel level fl0 to fl1, plane1 flies from city1 to city0 with fuel level fl4 to fl1, plane1 flies from city0 to city1 with fuel level fl2 to fl0, plane1 zooms from city0 to city3 with fuel level fl6 to fl4, plane1 zooms from city3 to city2 with fuel level fl6 to fl0, plane1 zooms from city2 to city3 with fuel level fl6 to fl5, plane1 zooms from city1 to city0 with fuel level fl5 to fl4, plane1 zooms from city2 to city0 with fuel level fl5 to fl6, plane1 flies from city3 to city0 with fuel level fl5 to fl0, plane1 zooms from city0 to city3 with fuel level fl6 to fl0, plane1 zooms from city2 to city0 with fuel level fl6 to fl0, person2 boards plane1 at city2, plane1 zooms from city1 to city2 with fuel level fl1 to fl3, plane1 zooms from city0 to city2 with fuel level fl3 to fl2, plane1 zooms from city1 to city2 with fuel level fl0 to fl6, plane1 zooms from city2 to city0 with fuel level fl0 to fl2, plane1 flies from city0 to city1 with fuel level fl3 to fl0, plane1 flies from city2 to city1 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl5 to fl3, plane1 zooms from city2 to city0 with fuel level fl2 to fl6, plane1 zooms from city1 to city2 with fuel level fl5 to fl0, plane1 zooms from city0 to city2 with fuel level fl0 to fl1, plane1 flies from city0 to city3 with fuel level fl0 to fl2, plane1 gets refueled at city1 with fuel level fl0 to fl4, plane1 zooms from city1 to city0 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl0 to fl4, plane1 zooms from city1 to city3 with fuel level fl5 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl5, plane1 gets refueled at city1 with fuel level fl5 to fl1, plane1 zooms from city0 to city2 with fuel level fl4 to fl2, plane1 zooms from city0 to city2 with fuel level fl4 to fl1, plane1 zooms from city0 to city1 with fuel level fl4 to fl5, plane1 zooms from city2 to city1 with fuel level fl3 to fl2, plane1 flies from city3 to city0 with fuel level fl6 to fl2, plane1 zooms from city3 to city1 with fuel level fl3 to fl1, plane1 zooms from city2 to city3 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl2 to fl3, plane1 zooms from city1 to city0 with fuel level fl3 to fl5, plane1 zooms from city1 to city0 with fuel level fl2 to fl3, plane1 zooms from city2 to city3 with fuel level fl3 to fl5, plane1 flies from city0 to city2 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl0 to fl5, plane1 gets refueled at city3 with fuel level fl2 to fl1, plane1 zooms from city3 to city1 with fuel level fl2 to fl4, plane1 zooms from city0 to city3 with fuel level fl6 to fl5, plane1 flies from city2 to city1 with fuel level fl1 to fl2, plane1 zooms from city1 to city3 with fuel level fl0 to fl2, plane1 zooms from city2 to city1 with fuel level fl6 to fl0, plane1 zooms from city2 to city0 with fuel level fl3 to fl5, plane1 zooms from city2 to city1 with fuel level fl6 to fl1, plane1 zooms from city3 to city2 with fuel level fl3 to fl5, plane1 zooms from city1 to city2 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl0, plane1 zooms from city3 to city1 with fuel level fl5 to fl2, plane1 flies from city3 to city2 with fuel level fl2 to fl1, plane1 zooms from city0 to city2 with fuel level fl1 to fl0, plane1 zooms from city1 to city3 with fuel level fl5 to fl1, plane1 zooms from city0 to city1 with fuel level fl5 to fl1, plane1 zooms from city3 to city1 with fuel level fl0 to fl6, plane1 zooms from city1 to city2 with fuel level fl1 to fl2, plane1 zooms from city3 to city1 with fuel level fl1 to fl5, plane1 flies from city3 to city2 with fuel level fl5 to fl4, plane1 zooms from city3 to city1 with fuel level fl6 to fl0, plane1 zooms from city0 to city1 with fuel level fl1 to fl2, plane1 flies from city2 to city0 with fuel level fl6 to fl0, plane1 zooms from city1 to city2 with fuel level fl6 to fl4, plane1 flies from city2 to city3 with fuel level fl1 to fl3, plane1 flies from city0 to city3 with fuel level fl3 to fl1, plane1 zooms from city1 to city0 with fuel level fl3 to fl1, plane1 zooms from city3 to city1 with fuel level fl2 to fl6, plane1 zooms from city0 to city1 with fuel level fl4 to fl6, plane1 zooms from city3 to city2 with fuel level fl4 to fl2, plane1 flies from city0 to city3 with fuel level fl5 to fl4, plane1 zooms from city2 to city0 with fuel level fl4 to fl2, plane1 flies from city0 to city3 with fuel level fl1 to fl5, plane1 zooms from city0 to city2 with fuel level fl4 to fl6, plane1 zooms from city3 to city1 with fuel level fl3 to fl4, plane1 zooms from city2 to city1 with fuel level fl4 to fl5, plane1 zooms from city3 to city2 with fuel level fl0 to fl1, plane1 zooms from city2 to city0 with fuel level fl4 to fl1, plane1 gets refueled at city1 with fuel level fl2 to fl4, plane1 zooms from city3 to city1 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl1 to fl4, plane1 zooms from city3 to city0 with fuel level fl4 to fl1, plane1 zooms from city1 to city2 with fuel level fl2 to fl6, plane1 flies from city2 to city1 with fuel level fl4 to fl0, plane1 zooms from city1 to city2 with fuel level fl2 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl5, person8 departs plane1 at city1, plane1 flies from city3 to city1 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl2 to fl3, plane1 zooms from city3 to city2 with fuel level fl6 to fl5, plane1 zooms from city1 to city0 with fuel level fl1 to fl4, plane1 zooms from city2 to city1 with fuel level fl1 to fl6, plane1 zooms from city0 to city1 with fuel level fl2 to fl5, plane1 zooms from city3 to city1 with fuel level fl0 to fl2, plane1 zooms from city3 to city1 with fuel level fl2 to fl3, plane1 zooms from city2 to city3 with fuel level fl2 to fl6, plane1 zooms from city0 to city3 with fuel level fl6 to fl0, plane1 zooms from city0 to city1 with fuel level fl4 to fl1, plane1 zooms from city2 to city1 with fuel level fl5 to fl1, plane1 zooms from city0 to city3 with fuel level fl6 to fl0, plane1 flies from city3 to city2 with fuel level fl4 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl5, plane1 zooms from city3 to city1 with fuel level fl3 to fl5, plane1 zooms from city2 to city1 with fuel level fl4 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl3, plane1 zooms from city2 to city1 with fuel level fl2 to fl1, plane1 zooms from city1 to city0 with fuel level fl2 to fl3, plane1 flies from city2 to city1 with fuel level fl3 to fl0, plane1 zooms from city0 to city2 with fuel level fl1 to fl6, plane1 zooms from city0 to city2 with fuel level fl1 to fl0, plane1 gets refueled at city2 with fuel level fl0 to fl5, plane1 zooms from city2 to city0 with fuel level fl3 to fl4, plane1 zooms from city2 to city0 with fuel level fl3 to fl0, plane1 zooms from city0 to city1 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl5 to fl3, plane1 zooms from city3 to city2 with fuel level fl1 to fl2, plane1 zooms from city1 to city3 with fuel level fl1 to fl6, plane1 zooms from city2 to city3 with fuel level fl5 to fl6, plane1 zooms from city0 to city2 with fuel level fl4 to fl5, plane1 flies from city0 to city1 with fuel level fl2 to fl4, plane1 zooms from city1 to city3 with fuel level fl4 to fl1, plane1 zooms from city0 to city2 with fuel level fl3 to fl2, plane1 zooms from city1 to city3 with fuel level fl0 to fl4, plane1 zooms from city1 to city0 with fuel level fl6 to fl1, plane1 zooms from city3 to city0 with fuel level fl3 to fl0, plane1 zooms from city3 to city2 with fuel level fl6 to fl2, plane1 zooms from city2 to city3 with fuel level fl0 to fl3, plane1 flies from city2 to city3 with fuel level fl4 to fl3, plane1 gets refueled at city0 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl2 to fl4, plane1 zooms from city2 to city0 with fuel level fl6 to fl3, plane1 zooms from city0 to city1 with fuel level fl3 to fl2, plane1 zooms from city2 to city3 with fuel level fl2 to fl5, plane1 zooms from city1 to city2 with fuel level fl5 to fl3, plane1 zooms from city2 to city3 with fuel level fl0 to fl1, plane1 zooms from city3 to city2 with fuel level fl1 to fl6, plane1 zooms from city1 to city2 with fuel level fl1 to fl3, plane1 flies from city3 to city0 with fuel level fl0 to fl6, plane1 gets refueled at city2 with fuel level fl6 to fl4, plane1 zooms from city0 to city1 with fuel level fl2 to fl5, plane1 flies from city1 to city2 with fuel level fl3 to fl5, plane1 zooms from city2 to city1 with fuel level fl1 to fl2, person2 boards plane1 at city3, plane1 zooms from city2 to city0 with fuel level fl5 to fl0, plane1 zooms from city3 to city2 with fuel level fl3 to fl2, plane1 zooms from city2 to city0 with fuel level fl1 to fl0, plane1 zooms from city2 to city0 with fuel level fl3 to fl0, plane1 zooms from city2 to city0 with fuel level fl6 to fl2, plane1 zooms from city0 to city3 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl2 to fl3, plane1 zooms from city2 to city0 with fuel level fl6 to fl0, plane1 zooms from city3 to city2 with fuel level fl3 to fl0, plane1 zooms from city3 to city0 with fuel level fl3 to fl2, plane1 flies from city3 to city0 with fuel level fl0 to fl2, plane1 zooms from city2 to city1 with fuel level fl1 to fl0, plane1 flies from city3 to city0 with fuel level fl4 to fl0, plane1 zooms from city2 to city1 with fuel level fl0 to fl4, plane1 zooms from city3 to city1 with fuel level fl6 to fl5, plane1 flies from city1 to city0 with fuel level fl2 to fl6, plane1 zooms from city1 to city2 with fuel level fl5 to fl6, plane1 flies from city1 to city0 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl6 to fl2, plane1 zooms from city2 to city1 with fuel level fl2 to fl5, plane1 flies from city2 to city0 with fuel level fl6 to fl2, person7 boards plane1 at city1, plane1 zooms from city3 to city1 with fuel level fl3 to fl1, plane1 gets refueled at city2 with fuel level fl6 to fl5, plane1 zooms from city1 to city2 with fuel level fl0 to fl1, plane1 zooms from city0 to city2 with fuel level fl3 to fl0, plane1 zooms from city0 to city3 with fuel level fl5 to fl1, plane1 zooms from city2 to city3 with fuel level fl2 to fl5, plane1 zooms from city0 to city2 with fuel level fl2 to fl5, plane1 zooms from city0 to city1 with fuel level fl6 to fl3, plane1 zooms from city0 to city2 with fuel level fl4 to fl3, plane1 flies from city2 to city1 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl4 to fl6, plane1 flies from city2 to city1 with fuel level fl0 to fl6, plane1 zooms from city3 to city2 with fuel level fl0 to fl2, plane1 zooms from city2 to city3 with fuel level fl0 to fl2, plane1 zooms from city2 to city0 with fuel level fl2 to fl5, plane1 zooms from city1 to city0 with fuel level fl6 to fl4, plane1 zooms from city3 to city2 with fuel level fl1 to fl3, plane1 zooms from city3 to city1 with fuel level fl0 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl5, plane1 zooms from city2 to city1 with fuel level fl0 to fl5, plane1 zooms from city2 to city3 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl1 to fl6, plane1 zooms from city3 to city0 with fuel level fl3 to fl1, plane1 zooms from city3 to city0 with fuel level fl1 to fl3, plane1 flies from city2 to city0 with fuel level fl4 to fl6, plane1 gets refueled at city3 with fuel level fl0 to fl2, plane1 zooms from city0 to city1 with fuel level fl5 to fl1, plane1 zooms from city3 to city0 with fuel level fl2 to fl6, plane1 zooms from city3 to city2 with fuel level fl6 to fl4, plane1 zooms from city1 to city2 with fuel level fl6 to fl3, plane1 flies from city2 to city0 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl6 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl3, plane1 zooms from city2 to city1 with fuel level fl4 to fl1, plane1 zooms from city0 to city3 with fuel level fl1 to fl6, plane1 zooms from city2 to city3 with fuel level fl1 to fl5, plane1 zooms from city0 to city3 with fuel level fl6 to fl0, plane1 flies from city3 to city1 with fuel level fl2 to fl5, plane1 flies from city1 to city3 with fuel level fl5 to fl6, plane1 flies from city2 to city1 with fuel level fl0 to fl4, plane1 zooms from city2 to city1 with fuel level fl1 to fl5, plane1 zooms from city3 to city2 with fuel level fl5 to fl2, plane1 zooms from city0 to city3 with fuel level fl0 to fl6, plane1 zooms from city0 to city3 with fuel level fl6 to fl1, plane1 flies from city3 to city1 with fuel level fl2 to fl4, plane1 zooms from city3 to city1 with fuel level fl5 to fl2, plane1 flies from city0 to city2 with fuel level fl3 to fl1, plane1 zooms from city0 to city1 with fuel level fl6 to fl2, plane1 zooms from city3 to city1 with fuel level fl4 to fl2, plane1 zooms from city2 to city0 with fuel level fl2 to fl0, plane1 zooms from city2 to city0 with fuel level fl2 to fl6, plane1 zooms from city0 to city3 with fuel level fl1 to fl0, plane1 zooms from city3 to city2 with fuel level fl3 to fl4, plane1 zooms from city0 to city1 with fuel level fl6 to fl1, plane1 zooms from city2 to city0 with fuel level fl1 to fl3, plane1 flies from city0 to city1 with fuel level fl0 to fl1, plane1 zooms from city0 to city1 with fuel level fl1 to fl3, plane1 flies from city1 to city2 with fuel level fl0 to fl3, plane1 zooms from city3 to city0 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl5 to fl6, plane1 zooms from city1 to city2 with fuel level fl0 to fl5, plane1 zooms from city1 to city3 with fuel level fl1 to fl4, plane1 zooms from city1 to city3 with fuel level fl0 to fl4, plane1 gets refueled at city1 with fuel level fl2 to fl6, plane1 zooms from city0 to city2 with fuel level fl3 to fl5, plane1 zooms from city3 to city0 with fuel level fl4 to fl0, plane1 flies from city1 to city0 with fuel level fl6 to fl5, plane1 zooms from city1 to city2 with fuel level fl5 to fl2, plane1 zooms from city1 to city0 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl2 to fl4, plane1 zooms from city2 to city3 with fuel level fl0 to fl6, plane1 zooms from city1 to city0 with fuel level fl4 to fl6, plane1 gets refueled at city1 with fuel level fl5 to fl0, plane1 zooms from city2 to city3 with fuel level fl6 to fl4, plane1 zooms from city2 to city0 with fuel level fl3 to fl0, plane1 zooms from city2 to city3 with fuel level fl0 to fl4, plane1 zooms from city1 to city3 with fuel level fl0 to fl2, plane1 zooms from city1 to city0 with fuel level fl2 to fl5, plane1 zooms from city1 to city3 with fuel level fl5 to fl4, plane1 zooms from city3 to city2 with fuel level fl3 to fl1, plane1 flies from city0 to city1 with fuel level fl0 to fl5, plane1 zooms from city1 to city2 with fuel level fl0 to fl2, plane1 zooms from city1 to city3 with fuel level fl6 to fl1, plane1 flies from city2 to city0 with fuel level fl1 to fl3, plane1 flies from city1 to city2 with fuel level fl1 to fl5, plane1 zooms from city3 to city2 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl2 to fl5, plane1 flies from city1 to city2 with fuel level fl6 to fl4, plane1 flies from city0 to city3 with fuel level fl2 to fl5, plane1 flies from city0 to city1 with fuel level fl6 to fl0, plane1 zooms from city3 to city2 with fuel level fl3 to fl0, plane1 zooms from city2 to city3 with fuel level fl3 to fl5, plane1 zooms from city3 to city0 with fuel level fl0 to fl2, plane1 zooms from city0 to city1 with fuel level fl5 to fl3, plane1 zooms from city1 to city0 with fuel level fl5 to fl0, plane1 zooms from city1 to city3 with fuel level fl6 to fl5, plane1 zooms from city1 to city2 with fuel level fl1 to fl0, plane1 zooms from city1 to city3 with fuel level fl1 to fl5, plane1 zooms from city3 to city0 with fuel level fl2 to fl5, plane1 gets refueled at city2 with fuel level fl4 to fl3, plane1 zooms from city3 to city2 with fuel level fl0 to fl3, plane1 zooms from city0 to city3 with fuel level fl4 to fl3, plane1 zooms from city2 to city3 with fuel level fl0 to fl2, plane1 zooms from city3 to city0 with fuel level fl2 to fl6, plane1 zooms from city1 to city0 with fuel level fl5 to fl6, plane1 zooms from city0 to city1 with fuel level fl1 to fl6, plane1 zooms from city0 to city3 with fuel level fl6 to fl1, plane1 flies from city2 to city0 with fuel level fl2 to fl6, plane1 zooms from city2 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city0 with fuel level fl4 to fl5, plane1 zooms from city1 to city3 with fuel level fl5 to fl0, person1 boards plane1 at city3, plane1 flies from city0 to city2 with fuel level fl0 to fl6, plane1 flies from city2 to city1 with fuel level fl1 to fl0, plane1 flies from city0 to city3 with fuel level fl6 to fl4, plane1 zooms from city2 to city3 with fuel level fl1 to fl6, person6 boards plane1 at city3, plane1 zooms from city1 to city0 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl1, plane1 zooms from city2 to city3 with fuel level fl4 to fl1, plane1 zooms from city1 to city2 with fuel level fl6 to fl3, plane1 zooms from city1 to city3 with fuel level fl0 to fl2, plane1 zooms from city0 to city1 with fuel level fl0 to fl5, plane1 gets refueled at city0 with fuel level fl1 to fl6, plane1 flies from city1 to city2 with fuel level fl1 to fl3, plane1 zooms from city1 to city2 with fuel level fl1 to fl6, plane1 zooms from city3 to city1 with fuel level fl3 to fl0, plane1 zooms from city3 to city1 with fuel level fl0 to fl2, plane1 zooms from city2 to city3 with fuel level fl1 to fl5, plane1 zooms from city2 to city1 with fuel level fl2 to fl5, plane1 zooms from city3 to city0 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl2 to fl1, plane1 flies from city3 to city0 with fuel level fl2 to fl4, plane1 zooms from city3 to city2 with fuel level fl1 to fl2, person5 departs plane1 at city0, plane1 flies from city1 to city2 with fuel level fl4 to fl5, plane1 zooms from city0 to city3 with fuel level fl5 to fl1, plane1 zooms from city3 to city0 with fuel level fl0 to fl2, plane1 zooms from city1 to city2 with fuel level fl0 to fl2, plane1 zooms from city1 to city0 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl6 to fl2, plane1 zooms from city3 to city1 with fuel level fl5 to fl3, plane1 zooms from city1 to city2 with fuel level fl2 to fl0, plane1 zooms from city1 to city2 with fuel level fl3 to fl0, plane1 zooms from city3 to city0 with fuel level fl6 to fl2, plane1 flies from city0 to city2 with fuel level fl2 to fl5, plane1 zooms from city2 to city0 with fuel level fl2 to fl3, plane1 zooms from city1 to city2 with fuel level fl5 to fl6, plane1 flies from city0 to city1 with fuel level fl4 to fl5, plane1 zooms from city1 to city2 with fuel level fl2 to fl6, plane1 zooms from city2 to city1 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl3 to fl4, plane1 zooms from city2 to city1 with fuel level fl0 to fl1, plane1 zooms from city0 to city1 with fuel level fl3 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl3, plane1 zooms from city3 to city1 with fuel level fl3 to fl4, plane1 zooms from city1 to city0 with fuel level fl3 to fl4, plane1 zooms from city0 to city2 with fuel level fl2 to fl5, plane1 zooms from city0 to city1 with fuel level fl4 to fl0, plane1 zooms from city3 to city0 with fuel level fl1 to fl2, plane1 zooms from city3 to city0 with fuel level fl6 to fl1, plane1 flies from city1 to city3 with fuel level fl3 to fl0, plane1 zooms from city2 to city1 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl4 to fl5, plane1 zooms from city2 to city1 with fuel level fl3 to fl2, plane1 zooms from city0 to city2 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl5 to fl2, plane1 flies from city1 to city3 with fuel level fl6 to fl3, plane1 zooms from city3 to city0 with fuel level fl4 to fl1, plane1 zooms from city3 to city2 with fuel level fl6 to fl5, plane1 zooms from city3 to city0 with fuel level fl3 to fl6, plane1 zooms from city3 to city1 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl3 to fl4, plane1 zooms from city0 to city3 with fuel level fl5 to fl6, plane1 flies from city0 to city2 with fuel level fl4 to fl3, plane1 zooms from city2 to city3 with fuel level fl0 to fl6, plane1 zooms from city0 to city2 with fuel level fl0 to fl4, plane1 zooms from city0 to city2 with fuel level fl0 to fl6, plane1 zooms from city0 to city2 with fuel level fl2 to fl6, plane1 zooms from city0 to city1 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl1 to fl0, plane1 flies from city2 to city0 with fuel level fl2 to fl1, plane1 flies from city2 to city3 with fuel level fl4 to fl2, plane1 zooms from city2 to city1 with fuel level fl4 to fl2, plane1 zooms from city1 to city2 with fuel level fl0 to fl2, plane1 zooms from city0 to city1 with fuel level fl4 to fl2, plane1 zooms from city3 to city0 with fuel level fl3 to fl1, plane1 zooms from city1 to city0 with fuel level fl3 to fl1, plane1 zooms from city1 to city3 with fuel level fl1 to fl2, plane1 gets refueled at city3 with fuel level fl0 to fl5, plane1 zooms from city0 to city2 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl6 to fl0, plane1 zooms from city3 to city2 with fuel level fl2 to fl6, plane1 zooms from city0 to city2 with fuel level fl2 to fl5, person7 boards plane1 at city0, plane1 zooms from city0 to city2 with fuel level fl6 to fl5, plane1 zooms from city3 to city2 with fuel level fl5 to fl4, plane1 zooms from city3 to city0 with fuel level fl3 to fl5, plane1 zooms from city3 to city2 with fuel level fl5 to fl3, plane1 zooms from city3 to city0 with fuel level fl0 to fl3, plane1 zooms from city0 to city2 with fuel level fl2 to fl0, plane1 zooms from city2 to city1 with fuel level fl5 to fl2, plane1 gets refueled at city0 with fuel level fl6 to fl4, plane1 flies from city0 to city3 with fuel level fl4 to fl3, plane1 zooms from city3 to city0 with fuel level fl4 to fl2, plane1 flies from city3 to city1 with fuel level fl0 to fl5, plane1 gets refueled at city2 with fuel level fl2 to fl6, plane1 flies from city3 to city2 with fuel level fl3 to fl6, plane1 zooms from city0 to city2 with fuel level fl3 to fl4, plane1 zooms from city2 to city0 with fuel level fl2 to fl4, plane1 flies from city2 to city1 with fuel level fl5 to fl1, plane1 zooms from city1 to city0 with fuel level fl4 to fl0, plane1 zooms from city3 to city1 with fuel level fl5 to fl3, plane1 zooms from city3 to city2 with fuel level fl6 to fl5, plane1 zooms from city3 to city0 with fuel level fl3 to fl4, plane1 zooms from city0 to city2 with fuel level fl5 to fl4, plane1 gets refueled at city1 with fuel level fl1 to fl6, plane1 zooms from city2 to city0 with fuel level fl3 to fl6, plane1 zooms from city0 to city1 with fuel level fl1 to fl6, plane1 zooms from city2 to city1 with fuel level fl4 to fl2, plane1 zooms from city3 to city1 with fuel level fl6 to fl1, plane1 zooms from city2 to city0 with fuel level fl6 to fl3, plane1 zooms from city3 to city1 with fuel level fl0 to fl4, plane1 zooms from city1 to city2 with fuel level fl1 to fl0, plane1 zooms from city0 to city2 with fuel level fl2 to fl0, plane1 flies from city3 to city0 with fuel level fl0 to fl5, plane1 gets refueled at city3 with fuel level fl3 to fl1, plane1 zooms from city1 to city3 with fuel level fl2 to fl1, plane1 flies from city3 to city0 with fuel level fl6 to fl4, plane1 zooms from city3 to city0 with fuel level fl6 to fl3, plane1 zooms from city3 to city1 with fuel level fl4 to fl5, plane1 zooms from city3 to city0 with fuel level fl0 to fl5, plane1 zooms from city1 to city2 with fuel level fl1 to fl2, plane1 zooms from city2 to city0 with fuel level fl3 to fl5, plane1 zooms from city2 to city0 with fuel level fl4 to fl6, person6 departs plane1 at city1, plane1 zooms from city3 to city0 with fuel level fl3 to fl1, plane1 flies from city1 to city0 with fuel level fl0 to fl3, plane1 flies from city3 to city2 with fuel level fl2 to fl3, plane1 zooms from city1 to city3 with fuel level fl3 to fl2, plane1 gets refueled at city1 with fuel level fl0 to fl6, plane1 zooms from city3 to city0 with fuel level fl5 to fl6, plane1 zooms from city3 to city2 with fuel level fl6 to fl4, plane1 gets refueled at city3 with fuel level fl4 to fl2, plane1 zooms from city3 to city0 with fuel level fl4 to fl0, plane1 zooms from city1 to city2 with fuel level fl6 to fl1, plane1 zooms from city3 to city2 with fuel level fl1 to fl0, plane1 flies from city2 to city1 with fuel level fl5 to fl2, plane1 zooms from city3 to city2 with fuel level fl2 to fl3, plane1 zooms from city0 to city1 with fuel level fl5 to fl0, plane1 zooms from city1 to city3 with fuel level fl1 to fl3, plane1 zooms from city1 to city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl5 to fl0, plane1 zooms from city3 to city2 with fuel level fl2 to fl5, plane1 gets refueled at city0 with fuel level fl0 to fl3, plane1 zooms from city2 to city1 with fuel level fl5 to fl1, plane1 zooms from city1 to city0 with fuel level fl0 to fl4, plane1 zooms from city3 to city1 with fuel level fl0 to fl5, plane1 flies from city0 to city3 with fuel level fl4 to fl5, plane1 zooms from city1 to city2 with fuel level fl1 to fl3, plane1 zooms from city1 to city0 with fuel level fl6 to fl2, plane1 gets refueled at city0 with fuel level fl1 to fl5, plane1 zooms from city3 to city1 with fuel level fl1 to fl4, plane1 flies from city3 to city0 with fuel level fl2 to fl1, plane1 zooms from city1 to city3 with fuel level fl3 to fl0, plane1 zooms from city0 to city3 with fuel level fl3 to fl5, plane1 zooms from city3 to city1 with fuel level fl0 to fl5, plane1 zooms from city0 to city2 with fuel level fl4 to fl5, plane1 zooms from city3 to city1 with fuel level fl0 to fl4, plane1 zooms from city3 to city1 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl0 to fl3, plane1 zooms from city2 to city0 with fuel level fl5 to fl1, plane1 flies from city1 to city2 with fuel level fl3 to fl4, plane1 zooms from city2 to city3 with fuel level fl1 to fl6, plane1 zooms from city0 to city1 with fuel level fl3 to fl1, plane1 flies from city1 to city0 with fuel level fl1 to fl6, plane1 zooms from city0 to city3 with fuel level fl1 to fl0, plane1 flies from city1 to city0 with fuel level fl4 to fl6, plane1 zooms from city2 to city0 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl2 to fl4, plane1 zooms from city2 to city1 with fuel level fl0 to fl2, plane1 flies from city0 to city1 with fuel level fl6 to fl4, plane1 zooms from city0 to city2 with fuel level fl4 to fl3, plane1 zooms from city3 to city2 with fuel level fl4 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl1, plane1 zooms from city3 to city2 with fuel level fl6 to fl3, plane1 zooms from city1 to city0 with fuel level fl0 to fl1, plane1 flies from city1 to city0 with fuel level fl0 to fl4, plane1 zooms from city2 to city0 with fuel level fl5 to fl0, plane1 zooms from city2 to city1 with fuel level fl2 to fl1, plane1 flies from city2 to city3 with fuel level fl0 to fl2, plane1 zooms from city2 to city0 with fuel level fl2 to fl1, plane1 zooms from city0 to city2 with fuel level fl1 to fl0, plane1 zooms from city1 to city2 with fuel level fl4 to fl3, plane1 zooms from city0 to city1 with fuel level fl4 to fl3, plane1 flies from city3 to city2 with fuel level fl6 to fl3, plane1 zooms from city1 to city2 with fuel level fl4 to fl2, plane1 zooms from city0 to city3 with fuel level fl1 to fl0, plane1 gets refueled at city2 with fuel level fl5 to fl6, plane1 zooms from city1 to city0 with fuel level fl0 to fl4, plane1 zooms from city0 to city3 with fuel level fl0 to fl3, plane1 zooms from city0 to city1 with fuel level fl3 to fl4, plane1 zooms from city1 to city0 with fuel level fl5 to fl6, plane1 zooms from city0 to city3 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl2 to fl0, plane1 gets refueled at city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl6 to fl1, plane1 zooms from city1 to city3 with fuel level fl4 to fl1, plane1 zooms from city2 to city3 with fuel level fl6 to fl5, plane1 zooms from city1 to city3 with fuel level fl2 to fl4, plane1 zooms from city2 to city1 with fuel level fl1 to fl4, plane1 zooms from city2 to city1 with fuel level fl4 to fl0, plane1 gets refueled at city2 with fuel level fl1 to fl5, plane1 zooms from city3 to city2 with fuel level fl0 to fl2, plane1 flies from city3 to city0 with fuel level fl1 to fl6, plane1 zooms from city2 to city0 with fuel level fl5 to fl6, plane1 zooms from city2 to city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl0 to fl5, plane1 zooms from city3 to city2 with fuel level fl2 to fl3, plane1 zooms from city1 to city0 with fuel level fl6 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl4, plane1 zooms from city2 to city1 with fuel level fl3 to fl4, plane1 flies from city2 to city1 with fuel level fl5 to fl6, person8 boards plane1 at city3, plane1 flies from city1 to city0 with fuel level fl5 to fl3, person3 boards plane1 at city0, plane1 zooms from city1 to city3 with fuel level fl3 to fl1, plane1 zooms from city1 to city0 with fuel level fl1 to fl0, plane1 zooms from city1 to city2 with fuel level fl3 to fl6, plane1 zooms from city1 to city0 with fuel level fl3 to fl4, plane1 flies from city3 to city1 with fuel level fl5 to fl1, plane1 zooms from city0 to city1 with fuel level fl6 to fl3, plane1 flies from city3 to city1 with fuel level fl5 to fl3, plane1 zooms from city0 to city2 with fuel level fl1 to fl4, plane1 zooms from city2 to city3 with fuel level fl5 to fl3, plane1 zooms from city0 to city2 with fuel level fl0 to fl4, plane1 flies from city2 to city0 with fuel level fl4 to fl5, plane1 zooms from city1 to city0 with fuel level fl1 to fl5, plane1 zooms from city2 to city3 with fuel level fl0 to fl2, person6 boards plane1 at city0, plane1 zooms from city2 to city0 with fuel level fl6 to fl4, plane1 zooms from city1 to city3 with fuel level fl2 to fl3, plane1 zooms from city0 to city2 with fuel level fl5 to fl2, plane1 zooms from city3 to city1 with fuel level fl4 to fl5, plane1 zooms from city2 to city0 with fuel level fl5 to fl3, plane1 zooms from city2 to city3 with fuel level fl4 to fl3, plane1 zooms from city0 to city2 with fuel level fl2 to fl3, plane1 flies from city2 to city1 with fuel level fl6 to fl2, plane1 flies from city3 to city1 with fuel level fl6 to fl4, plane1 flies from city0 to city1 with fuel level fl6 to fl1, plane1 zooms from city2 to city3 with fuel level fl4 to fl2, plane1 zooms from city0 to city3 with fuel level fl1 to fl6, plane1 zooms from city0 to city1 with fuel level fl5 to fl2, plane1 zooms from city0 to city1 with fuel level fl6 to fl1, plane1 zooms from city3 to city1 with fuel level fl3 to fl0, plane1 zooms from city3 to city1 with fuel level fl5 to fl2, plane1 zooms from city2 to city1 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl1 to fl5, plane1 zooms from city2 to city3 with fuel level fl0 to fl2, plane1 zooms from city1 to city3 with fuel level fl1 to fl5, plane1 zooms from city0 to city1 with fuel level fl1 to fl0, plane1 zooms from city0 to city3 with fuel level fl5 to fl4, person8 boards plane1 at city2, plane1 zooms from city0 to city2 with fuel level fl5 to fl0, plane1 zooms from city2 to city1 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl1 to fl4, plane1 zooms from city0 to city3 with fuel level fl4 to fl0, plane1 flies from city0 to city1 with fuel level fl5 to fl0, plane1 zooms from city1 to city2 with fuel level fl3 to fl4, plane1 gets refueled at city0 with fuel level fl1 to fl2, plane1 zooms from city0 to city3 with fuel level fl6 to fl1, plane1 zooms from city1 to city0 with fuel level fl3 to fl4, plane1 zooms from city3 to city2 with fuel level fl3 to fl2, plane1 zooms from city2 to city0 with fuel level fl4 to fl3, plane1 zooms from city3 to city0 with fuel level fl3 to fl2, plane1 zooms from city1 to city2 with fuel level fl0 to fl6, plane1 zooms from city0 to city2 with fuel level fl3 to fl5, plane1 zooms from city3 to city2 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl1 to fl6, plane1 zooms from city0 to city3 with fuel level fl3 to fl6, plane1 zooms from city1 to city0 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl5 to fl2, plane1 zooms from city0 to city3 with fuel level fl5 to fl6, plane1 zooms from city0 to city1 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl0 to fl4, plane1 zooms from city2 to city3 with fuel level fl5 to fl4, plane1 zooms from city2 to city1 with fuel level fl1 to fl4, plane1 flies from city2 to city3 with fuel level fl5 to fl2, plane1 zooms from city0 to city1 with fuel level fl0 to fl5, plane1 zooms from city2 to city3 with fuel level fl6 to fl3, plane1 zooms from city2 to city0 with fuel level fl1 to fl6, plane1 zooms from city0 to city2 with fuel level fl2 to fl6, plane1 flies from city2 to city0 with fuel level fl6 to fl1, plane1 zooms from city3 to city2 with fuel level fl3 to fl1, plane1 zooms from city3 to city2 with fuel level fl4 to fl0, plane1 zooms from city1 to city0 with fuel level fl0 to fl4, plane1 gets refueled at city1 with fuel level fl4 to fl2, plane1 zooms from city2 to city1 with fuel level fl5 to fl6, plane1 flies from city3 to city1 with fuel level fl6 to fl5, plane1 zooms from city0 to city2 with fuel level fl0 to fl1, plane1 zooms from city2 to city3 with fuel level fl6 to fl2, plane1 zooms from city3 to city2 with fuel level fl2 to fl5, plane1 flies from city2 to city0 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl3 to fl1, plane1 zooms from city3 to city2 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl3 to fl1, plane1 zooms from city3 to city2 with fuel level fl4 to fl3, plane1 zooms from city1 to city2 with fuel level fl3 to fl6, plane1 zooms from city0 to city2 with fuel level fl5 to fl4, plane1 flies from city2 to city0 with fuel level fl3 to fl2, plane1 zooms from city1 to city3 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl2 to fl6, plane1 zooms from city2 to city3 with fuel level fl6 to fl3, plane1 zooms from city2 to city0 with fuel level fl3 to fl4, plane1 zooms from city0 to city3 with fuel level fl2 to fl5, plane1 flies from city1 to city3 with fuel level fl0 to fl3, plane1 zooms from city1 to city3 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl1 to fl3, plane1 zooms from city1 to city2 with fuel level fl4 to fl1, plane1 zooms from city2 to city3 with fuel level fl3 to fl5, plane1 flies from city3 to city2 with fuel level fl6 to fl2, plane1 zooms from city1 to city3 with fuel level fl1 to fl6, plane1 zooms from city1 to city0 with fuel level fl4 to fl5, plane1 zooms from city0 to city1 with fuel level fl0 to fl1, plane1 zooms from city3 to city1 with fuel level fl6 to fl0, plane1 zooms from city1 to city2 with fuel level fl0 to fl1, plane1 zooms from city0 to city2 with fuel level fl6 to fl4, plane1 flies from city3 to city1 with fuel level fl1 to fl5, plane1 zooms from city0 to city3 with fuel level fl3 to fl1, plane1 zooms from city0 to city3 with fuel level fl2 to fl0, plane1 zooms from city3 to city1 with fuel level fl2 to fl6, plane1 zooms from city2 to city3 with fuel level fl3 to fl1, plane1 zooms from city2 to city3 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl5 to fl4, plane1 zooms from city0 to city2 with fuel level fl1 to fl2, plane1 zooms from city3 to city0 with fuel level fl3 to fl1, plane1 flies from city1 to city0 with fuel level fl2 to fl3, plane1 zooms from city0 to city3 with fuel level fl6 to fl5, plane1 gets refueled at city1 with fuel level fl6 to fl5, plane1 zooms from city2 to city1 with fuel level fl4 to fl1, plane1 flies from city1 to city0 with fuel level fl5 to fl6, plane1 zooms from city3 to city1 with fuel level fl3 to fl0, plane1 zooms from city2 to city0 with fuel level fl4 to fl3, plane1 flies from city2 to city0 with fuel level fl0 to fl4, plane1 zooms from city3 to city0 with fuel level fl3 to fl5, plane1 zooms from city0 to city3 with fuel level fl2 to fl4, plane1 zooms from city3 to city2 with fuel level fl1 to fl4, plane1 zooms from city3 to city2 with fuel level fl3 to fl4, plane1 zooms from city2 to city1 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl1 to fl6, person3 boards plane1 at city3, plane1 zooms from city1 to city2 with fuel level fl3 to fl1, plane1 zooms from city3 to city2 with fuel level fl6 to fl1, plane1 zooms from city3 to city0 with fuel level fl0 to fl4, plane1 zooms from city0 to city3 with fuel level fl3 to fl5, plane1 flies from city1 to city0 with fuel level fl3 to fl5, plane1 zooms from city2 to city1 with fuel level fl5 to fl3, plane1 zooms from city0 to city3 with fuel level fl2 to fl6, plane1 zooms from city3 to city2 with fuel level fl3 to fl2, plane1 zooms from city2 to city3 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl6 to fl2, plane1 zooms from city0 to city1 with fuel level fl1 to fl2, plane1 flies from city0 to city3 with fuel level fl4 to fl0, plane1 zooms from city3 to city2 with fuel level fl5 to fl1, plane1 zooms from city0 to city3 with fuel level fl5 to fl0, plane1 zooms from city2 to city3 with fuel level fl6 to fl1, plane1 flies from city1 to city2 with fuel level fl2 to fl6, plane1 zooms from city0 to city3 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl0 to fl1, plane1 flies from city0 to city3 with fuel level fl3 to fl2, plane1 zooms from city2 to city1 with fuel level fl6 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl4 to fl5, plane1 zooms from city0 to city2 with fuel level fl1 to fl4, plane1 zooms from city1 to city0 with fuel level fl1 to fl5, plane1 zooms from city0 to city2 with fuel level fl4 to fl0, plane1 zooms from city2 to city1 with fuel level fl5 to fl3, plane1 zooms from city2 to city0 with fuel level fl6 to fl3, plane1 flies from city2 to city0 with fuel level fl3 to fl0, plane1 zooms from city2 to city3 with fuel level fl5 to fl0, plane1 zooms from city3 to city0 with fuel level fl6 to fl2, plane1 zooms from city1 to city0 with fuel level fl6 to fl5, plane1 flies from city1 to city3 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl2 to fl4, plane1 zooms from city0 to city1 with fuel level fl5 to fl0, plane1 zooms from city2 to city0 with fuel level fl3 to fl1, plane1 flies from city2 to city3 with fuel level fl2 to fl1, person8 departs plane1 at city0, plane1 zooms from city0 to city1 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl1 to fl2, plane1 zooms from city0 to city1 with fuel level fl4 to fl2, plane1 zooms from city2 to city3 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl0 to fl3, plane1 flies from city1 to city2 with fuel level fl4 to fl2, plane1 zooms from city3 to city1 with fuel level fl0 to fl1, plane1 zooms from city3 to city1 with fuel level fl4 to fl2, plane1 flies from city0 to city3 with fuel level fl6 to fl5, plane1 zooms from city2 to city0 with fuel level fl6 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl0, plane1 zooms from city0 to city3 with fuel level fl6 to fl4, plane1 zooms from city3 to city1 with fuel level fl3 to fl6, plane1 zooms from city1 to city3 with fuel level fl6 to fl3, plane1 zooms from city3 to city2 with fuel level fl2 to fl1, plane1 zooms from city3 to city1 with fuel level fl5 to fl0, plane1 zooms from city1 to city0 with fuel level fl4 to fl0, plane1 zooms from city3 to city0 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl3 to fl0, plane1 zooms from city1 to city3 with fuel level fl0 to fl6, plane1 zooms from city3 to city0 with fuel level fl3 to fl4, plane1 zooms from city2 to city1 with fuel level fl0 to fl1, plane1 zooms from city2 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city2 with fuel level fl4 to fl3, plane1 zooms from city3 to city1 with fuel level fl2 to fl3, plane1 zooms from city2 to city3 with fuel level fl0 to fl4, plane1 flies from city2 to city3 with fuel level fl4 to fl5, plane1 zooms from city0 to city3 with fuel level fl6 to fl4, plane1 zooms from city1 to city0 with fuel level fl0 to fl6, plane1 zooms from city1 to city0 with fuel level fl3 to fl1, plane1 zooms from city2 to city0 with fuel level fl2 to fl4, plane1 zooms from city0 to city2 with fuel level fl4 to fl6, plane1 zooms from city0 to city2 with fuel level fl0 to fl1, plane1 flies from city2 to city0 with fuel level fl5 to fl2, plane1 zooms from city0 to city2 with fuel level fl2 to fl0, plane1 zooms from city3 to city0 with fuel level fl1 to fl4, plane1 zooms from city2 to city0 with fuel level fl5 to fl3, plane1 zooms from city0 to city2 with fuel level fl5 to fl1, plane1 gets refueled at city3 with fuel level fl3 to fl0, plane1 zooms from city3 to city1 with fuel level fl0 to fl1, plane1 zooms from city3 to city0 with fuel level fl4 to fl5, plane1 zooms from city1 to city3 with fuel level fl5 to fl3, plane1 zooms from city3 to city0 with fuel level fl0 to fl3, plane1 zooms from city3 to city1 with fuel level fl4 to fl1, plane1 zooms from city0 to city2 with fuel level fl5 to fl4, plane1 zooms from city1 to city3 with fuel level fl3 to fl6, plane1 zooms from city1 to city2 with fuel level fl3 to fl2, plane1 zooms from city1 to city3 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city3 with fuel level fl0 to fl4, plane1 zooms from city0 to city1 with fuel level fl2 to fl6, plane1 zooms from city3 to city1 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl5 to fl1, plane1 gets refueled at city1 with fuel level fl3 to fl4, plane1 flies from city1 to city0 with fuel level fl0 to fl2, plane1 flies from city0 to city3 with fuel level fl3 to fl6, plane1 flies from city0 to city3 with fuel level fl6 to fl0, person1 departs plane1 at city2, plane1 zooms from city2 to city3 with fuel level fl1 to fl2, plane1 zooms from city3 to city0 with fuel level fl6 to fl4, plane1 zooms from city1 to city3 with fuel level fl5 to fl1, plane1 zooms from city3 to city2 with fuel level fl0 to fl4, plane1 zooms from city3 to city2 with fuel level fl6 to fl3, plane1 zooms from city3 to city1 with fuel level fl6 to fl4, plane1 zooms from city3 to city1 with fuel level fl3 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl6, plane1 zooms from city1 to city0 with fuel level fl0 to fl3, plane1 zooms from city1 to city3 with fuel level fl3 to fl5, plane1 zooms from city3 to city2 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl6 to fl1, plane1 zooms from city1 to city3 with fuel level fl3 to fl5, plane1 zooms from city3 to city0 with fuel level fl0 to fl6, plane1 zooms from city3 to city1 with fuel level fl4 to fl6, plane1 zooms from city3 to city0 with fuel level fl2 to fl1, plane1 zooms from city1 to city0 with fuel level fl2 to fl3, plane1 zooms from city0 to city1 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl1 to fl5, plane1 zooms from city3 to city0 with fuel level fl4 to fl5, plane1 zooms from city2 to city3 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl2 to fl3, plane1 zooms from city3 to city1 with fuel level fl3 to fl5, plane1 zooms from city2 to city0 with fuel level fl6 to fl1, plane1 zooms from city1 to city2 with fuel level fl0 to fl3, plane1 flies from city1 to city2 with fuel level fl5 to fl1, plane1 zooms from city0 to city2 with fuel level fl5 to fl6, plane1 zooms from city0 to city1 with fuel level fl5 to fl6, plane1 zooms from city0 to city1 with fuel level fl5 to fl4, plane1 flies from city0 to city2 with fuel level fl5 to fl6, plane1 zooms from city0 to city1 with fuel level fl0 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl4, plane1 zooms from city0 to city3 with fuel level fl3 to fl4, plane1 zooms from city0 to city1 with fuel level fl0 to fl1, plane1 zooms from city3 to city2 with fuel level fl2 to fl4, plane1 flies from city0 to city3 with fuel level fl4 to fl1, plane1 zooms from city3 to city0 with fuel level fl4 to fl3, plane1 flies from city2 to city1 with fuel level fl2 to fl3, plane1 zooms from city2 to city1 with fuel level fl4 to fl6, plane1 zooms from city3 to city0 with fuel level fl6 to fl2, plane1 zooms from city3 to city0 with fuel level fl1 to fl6, plane1 zooms from city2 to city1 with fuel level fl5 to fl4, plane1 zooms from city0 to city1 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl2 to fl5, plane1 zooms from city1 to city3 with fuel level fl6 to fl2, plane1 zooms from city2 to city0 with fuel level fl6 to fl2, plane1 gets refueled at city1 with fuel level fl3 to fl1, plane1 zooms from city1 to city0 with fuel level fl5 to fl3, plane1 zooms from city1 to city3 with fuel level fl0 to fl1, plane1 zooms from city1 to city0 with fuel level fl4 to fl3, plane1 zooms from city1 to city2 with fuel level fl5 to fl4, plane1 zooms from city0 to city2 with fuel level fl6 to fl0, plane1 flies from city3 to city1 with fuel level fl0 to fl1, plane1 gets refueled at city3 with fuel level fl0 to fl1, plane1 zooms from city1 to city3 with fuel level fl5 to fl3, plane1 zooms from city0 to city3 with fuel level fl4 to fl0, plane1 flies from city0 to city3 with fuel level fl2 to fl0, plane1 zooms from city1 to city2 with fuel level fl2 to fl3, plane1 zooms from city0 to city2 with fuel level fl3 to fl1, plane1 zooms from city0 to city1 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl1 to fl6, plane1 zooms from city3 to city1 with fuel level fl1 to fl0, plane1 zooms from city1 to city3 with fuel level fl3 to fl0, plane1 zooms from city0 to city2 with fuel level fl4 to fl1, plane1 gets refueled at city3 with fuel level fl1 to fl6, plane1 zooms from city2 to city0 with fuel level fl6 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl3, plane1 zooms from city1 to city2 with fuel level fl3 to fl2, plane1 zooms from city2 to city0 with fuel level fl2 to fl5, plane1 gets refueled at city0 with fuel level fl3 to fl4, plane1 zooms from city2 to city3 with fuel level fl3 to fl2, plane1 zooms from city2 to city0 with fuel level fl6 to fl5, plane1 zooms from city0 to city1 with fuel level fl3 to fl6, plane1 zooms from city0 to city2 with fuel level fl6 to fl1, plane1 zooms from city2 to city0 with fuel level fl0 to fl4, plane1 zooms from city2 to city1 with fuel level fl6 to fl2, plane1 zooms from city3 to city2 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl2 to fl0, plane1 zooms from city1 to city2 with fuel level fl0 to fl4, plane1 zooms from city2 to city3 with fuel level fl4 to fl5, plane1 zooms from city0 to city2 with fuel level fl2 to fl0, plane1 zooms from city3 to city1 with fuel level fl2 to fl6, plane1 zooms from city0 to city2 with fuel level fl0 to fl3, plane1 zooms from city0 to city1 with fuel level fl6 to fl4, plane1 zooms from city2 to city3 with fuel level fl5 to fl6, plane1 zooms from city2 to city1 with fuel level fl5 to fl4, plane1 zooms from city1 to city0 with fuel level fl2 to fl1, plane1 zooms from city1 to city2 with fuel level fl2 to fl1, plane1 zooms from city1 to city0 with fuel level fl5 to fl2, plane1 zooms from city0 to city2 with fuel level fl2 to fl3, plane1 zooms from city3 to city0 with fuel level fl3 to fl6, plane1 zooms from city3 to city2 with fuel level fl6 to fl3, plane1 zooms from city2 to city1 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl5, plane1 flies from city0 to city2 with fuel level fl2 to fl0, plane1 zooms from city0 to city2 with fuel level fl5 to fl0, plane1 zooms from city3 to city2 with fuel level fl0 to fl4, plane1 zooms from city1 to city3 with fuel level fl4 to fl2, plane1 zooms from city2 to city1 with fuel level fl4 to fl5, plane1 zooms from city0 to city2 with fuel level fl0 to fl6, plane1 zooms from city1 to city3 with fuel level fl5 to fl3, plane1 gets refueled at city0 with fuel level fl0 to fl6, plane1 zooms from city3 to city0 with fuel level fl1 to fl2, plane1 gets refueled at city2 with fuel level fl2 to fl1, plane1 zooms from city1 to city0 with fuel level fl1 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl4, plane1 flies from city1 to city0 with fuel level fl2 to fl5, plane1 zooms from city1 to city0 with fuel level fl2 to fl0, plane1 zooms from city1 to city0 with fuel level fl0 to fl1, plane1 flies from city2 to city1 with fuel level fl2 to fl0, plane1 zooms from city2 to city3 with fuel level fl4 to fl1, plane1 zooms from city0 to city1 with fuel level fl0 to fl6, plane1 zooms from city2 to city1 with fuel level fl1 to fl2, plane1 zooms from city0 to city1 with fuel level fl6 to fl1, plane1 zooms from city0 to city3 with fuel level fl5 to fl3, plane1 flies from city2 to city3 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl2 to fl0, plane1 zooms from city0 to city2 with fuel level fl0 to fl5, plane1 zooms from city3 to city0 with fuel level fl3 to fl6, plane1 flies from city1 to city3 with fuel level fl1 to fl6, plane1 zooms from city2 to city1 with fuel level fl3 to fl6, plane1 zooms from city3 to city1 with fuel level fl2 to fl0, plane1 zooms from city3 to city2 with fuel level fl5 to fl1, plane1 zooms from city2 to city0 with fuel level fl4 to fl1, plane1 zooms from city1 to city3 with fuel level fl2 to fl6, plane1 flies from city0 to city3 with fuel level fl0 to fl4, plane1 zooms from city1 to city2 with fuel level fl1 to fl4, plane1 zooms from city0 to city3 with fuel level fl5 to fl1, plane1 gets refueled at city3 with fuel level fl5 to fl6, person8 boards plane1 at city0, plane1 flies from city3 to city1 with fuel level fl6 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl4, plane1 zooms from city3 to city0 with fuel level fl4 to fl3, plane1 zooms from city2 to city1 with fuel level fl5 to fl0, plane1 zooms from city0 to city2 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl3 to fl6, plane1 flies from city3 to city1 with fuel level fl5 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl6, plane1 zooms from city0 to city2 with fuel level fl2 to fl1, plane1 flies from city1 to city3 with fuel level fl0 to fl5, plane1 flies from city3 to city1 with fuel level fl5 to fl4, plane1 zooms from city1 to city0 with fuel level fl5 to fl0, plane1 zooms from city3 to city0 with fuel level fl2 to fl5, plane1 zooms from city1 to city0 with fuel level fl5 to fl3, person4 boards plane1 at city1, plane1 zooms from city2 to city1 with fuel level fl2 to fl4, plane1 zooms from city3 to city0 with fuel level fl3 to fl0, plane1 zooms from city2 to city0 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl1 to fl4, plane1 zooms from city3 to city0 with fuel level fl6 to fl3, plane1 zooms from city2 to city3 with fuel level fl0 to fl1, plane1 zooms from city2 to city1 with fuel level fl6 to fl3, plane1 zooms from city1 to city0 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl5 to fl2, plane1 flies from city1 to city3 with fuel level fl2 to fl4, plane1 zooms from city1 to city3 with fuel level fl1 to fl6, plane1 zooms from city3 to city2 with fuel level fl4 to fl0, plane1 zooms from city2 to city0 with fuel level fl5 to fl1, plane1 zooms from city0 to city3 with fuel level fl4 to fl3, plane1 zooms from city1 to city2 with fuel level fl6 to fl5, plane1 zooms from city1 to city3 with fuel level fl3 to fl5, plane1 zooms from city2 to city0 with fuel level fl6 to fl1, plane1 zooms from city0 to city2 with fuel level fl2 to fl1, plane1 zooms from city3 to city0 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl6 to fl0, plane1 zooms from city1 to city3 with fuel level fl6 to fl5, plane1 zooms from city2 to city1 with fuel level fl0 to fl6, plane1 zooms from city0 to city2 with fuel level fl2 to fl4, plane1 zooms from city2 to city1 with fuel level fl1 to fl4, plane1 zooms from city2 to city1 with fuel level fl2 to fl4, plane1 zooms from city3 to city1 with fuel level fl6 to fl5, plane1 zooms from city1 to city2 with fuel level fl4 to fl5, plane1 zooms from city2 to city0 with fuel level fl0 to fl6, plane1 zooms from city2 to city0 with fuel level fl1 to fl0, plane1 flies from city3 to city0 with fuel level fl3 to fl4, plane1 zooms from city3 to city0 with fuel level fl6 to fl5, plane1 zooms from city3 to city0 with fuel level fl4 to fl5, plane1 zooms from city3 to city2 with fuel level fl5 to fl6, plane1 zooms from city3 to city2 with fuel level fl3 to fl6, plane1 zooms from city0 to city1 with fuel level fl0 to fl2, plane1 zooms from city2 to city3 with fuel level fl0 to fl3, plane1 zooms from city2 to city1 with fuel level fl3 to fl5, plane1 zooms from city0 to city3 with fuel level fl4 to fl5, plane1 flies from city1 to city0 with fuel level fl2 to fl0, plane1 zooms from city1 to city0 with fuel level fl4 to fl6, plane1 gets refueled at city2 with fuel level fl3 to fl2, plane1 zooms from city2 to city0 with fuel level fl5 to fl0, plane1 zooms from city3 to city2 with fuel level fl0 to fl1, plane1 flies from city0 to city2 with fuel level fl6 to fl2, plane1 flies from city3 to city0 with fuel level fl5 to fl3, plane1 zooms from city0 to city2 with fuel level fl4 to fl1, plane1 flies from city1 to city0 with fuel level fl0 to fl5, plane1 zooms from city0 to city3 with fuel level fl6 to fl4, plane1 zooms from city1 to city3 with fuel level fl1 to fl2, plane1 zooms from city1 to city0 with fuel level fl2 to fl1, plane1 zooms from city0 to city3 with fuel level fl3 to fl0, plane1 zooms from city3 to city2 with fuel level fl3 to fl2, plane1 zooms from city0 to city1 with fuel level fl1 to fl2, plane1 flies from city2 to city0 with fuel level fl3 to fl1, plane1 flies from city1 to city3 with fuel level fl1 to fl3, plane1 zooms from city1 to city3 with fuel level fl1 to fl4, plane1 zooms from city0 to city1 with fuel level fl1 to fl4, plane1 zooms from city0 to city3 with fuel level fl1 to fl2, plane1 zooms from city1 to city2 with fuel level fl5 to fl1, plane1 zooms from city1 to city0 with fuel level fl0 to fl5, plane1 zooms from city2 to city0 with fuel level fl2 to fl1, person7 departs plane1 at city2, plane1 gets refueled at city0 with fuel level fl2 to fl6, plane1 zooms from city3 to city0 with fuel level fl5 to fl2, plane1 zooms from city0 to city2 with fuel level fl4 to fl0, plane1 zooms from city2 to city0 with fuel level fl1 to fl4, plane1 zooms from city2 to city1 with fuel level fl6 to fl4, plane1 zooms from city2 to city1 with fuel level fl0 to fl2, plane1 zooms from city2 to city0 with fuel level fl2 to fl3, plane1 flies from city3 to city2 with fuel level fl6 to fl4, plane1 zooms from city3 to city2 with fuel level fl5 to fl0, plane1 zooms from city2 to city1 with fuel level fl4 to fl3, person2 departs plane1 at city3, plane1 zooms from city3 to city0 with fuel level fl3 to fl6, plane1 flies from city0 to city2 with fuel level fl2 to fl6, plane1 flies from city2 to city3 with fuel level fl2 to fl6, person7 departs plane1 at city3, plane1 zooms from city0 to city1 with fuel level fl2 to fl6, plane1 zooms from city1 to city3 with fuel level fl6 to fl4, plane1 zooms from city3 to city1 with fuel level fl1 to fl3, plane1 zooms from city2 to city1 with fuel level fl3 to fl0, plane1 gets refueled at city2 with fuel level fl6 to fl0, plane1 gets refueled at city3 with fuel level fl2 to fl4, plane1 zooms from city0 to city1 with fuel level fl6 to fl1, plane1 zooms from city0 to city2 with fuel level fl1 to fl0, plane1 zooms from city1 to city3 with fuel level fl1 to fl2, plane1 zooms from city2 to city0 with fuel level fl2 to fl6, plane1 zooms from city3 to city2 with fuel level fl6 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl2, plane1 zooms from city1 to city0 with fuel level fl5 to fl3, plane1 zooms from city3 to city1 with fuel level fl5 to fl1, plane1 flies from city1 to city3 with fuel level fl3 to fl5, plane1 flies from city1 to city2 with fuel level fl2 to fl5, plane1 zooms from city0 to city1 with fuel level fl0 to fl5, plane1 zooms from city1 to city0 with fuel level fl6 to fl1, plane1 zooms from city2 to city3 with fuel level fl5 to fl3, plane1 gets refueled at city1 with fuel level fl5 to fl2, plane1 zooms from city1 to city2 with fuel level fl5 to fl4, plane1 zooms from city2 to city3 with fuel level fl0 to fl3, person7 boards plane1 at city3, plane1 zooms from city3 to city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city0 with fuel level fl6 to fl0, plane1 zooms from city2 to city0 with fuel level fl6 to fl5, person1 boards plane1 at city2, plane1 flies from city3 to city1 with fuel level fl4 to fl0, plane1 zooms from city0 to city1 with fuel level fl1 to fl5, plane1 zooms from city2 to city0 with fuel level fl1 to fl2, plane1 flies from city3 to city2 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl3 to fl4, plane1 zooms from city3 to city0 with fuel level fl5 to fl3, plane1 zooms from city2 to city0 with fuel level fl4 to fl5, plane1 zooms from city3 to city0 with fuel level fl0 to fl6, plane1 flies from city2 to city0 with fuel level fl4 to fl1, plane1 zooms from city2 to city0 with fuel level fl2 to fl6, plane1 zooms from city3 to city0 with fuel level fl3 to fl0, plane1 zooms from city3 to city0 with fuel level fl3 to fl0, plane1 flies from city1 to city2 with fuel level fl5 to fl4, plane1 flies from city2 to city0 with fuel level fl4 to fl0, plane1 zooms from city2 to city1 with fuel level fl3 to fl1, plane1 zooms from city1 to city3 with fuel level fl5 to fl1, plane1 gets refueled at city0 with fuel level fl2 to fl4, plane1 flies from city0 to city2 with fuel level fl2 to fl3, plane1 zooms from city3 to city2 with fuel level fl0 to fl4, plane1 zooms from city0 to city1 with fuel level fl5 to fl2, plane1 zooms from city2 to city3 with fuel level fl4 to fl5, plane1 zooms from city3 to city1 with fuel level fl1 to fl3, plane1 zooms from city2 to city0 with fuel level fl4 to fl6, plane1 zooms from city3 to city2 with fuel level fl6 to fl0, plane1 zooms from city0 to city1 with fuel level fl1 to fl3, plane1 zooms from city1 to city3 with fuel level fl6 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl2 to fl0, plane1 zooms from city1 to city0 with fuel level fl3 to fl6, plane1 zooms from city0 to city1 with fuel level fl2 to fl3, plane1 flies from city3 to city1 with fuel level fl5 to fl2, plane1 zooms from city3 to city2 with fuel level fl0 to fl5, plane1 zooms from city3 to city0 with fuel level fl1 to fl2, plane1 flies from city2 to city1 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl3 to fl1, plane1 zooms from city2 to city0 with fuel level fl6 to fl1, plane1 zooms from city2 to city3 with fuel level fl2 to fl4, plane1 zooms from city0 to city3 with fuel level fl1 to fl2, plane1 zooms from city3 to city2 with fuel level fl6 to fl0, plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 zooms from city0 to city1 with fuel level fl6 to fl3, plane1 flies from city3 to city2 with fuel level fl0 to fl2, plane1 flies from city0 to city3 with fuel level fl5 to fl0, plane1 flies from city2 to city1 with fuel level fl6 to fl3, plane1 zooms from city0 to city1 with fuel level fl1 to fl0, plane1 zooms from city0 to city3 with fuel level fl0 to fl1, plane1 zooms from city3 to city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city3 with fuel level fl3 to fl1, plane1 zooms from city2 to city3 with fuel level fl3 to fl4, plane1 zooms from city3 to city2 with fuel level fl5 to fl3, plane1 zooms from city0 to city1 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl1 to fl4, plane1 zooms from city2 to city0 with fuel level fl2 to fl4, plane1 gets refueled at city2 with fuel level fl5 to fl2, plane1 flies from city2 to city0 with fuel level fl3 to fl4, plane1 zooms from city3 to city1 with fuel level fl6 to fl3, plane1 flies from city0 to city1 with fuel level fl1 to fl6, plane1 zooms from city3 to city0 with fuel level fl0 to fl2, plane1 zooms from city3 to city1 with fuel level fl1 to fl0, plane1 flies from city3 to city2 with fuel level fl2 to fl5, plane1 zooms from city1 to city0 with fuel level fl0 to fl2, plane1 zooms from city1 to city2 with fuel level fl2 to fl3, plane1 flies from city2 to city3 with fuel level fl4 to fl0, plane1 flies from city3 to city2 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl1 to fl4, plane1 zooms from city2 to city0 with fuel level fl6 to fl1, plane1 zooms from city2 to city1 with fuel level fl6 to fl1, plane1 zooms from city1 to city0 with fuel level fl5 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl2, plane1 zooms from city0 to city3 with fuel level fl0 to fl4, plane1 zooms from city1 to city2 with fuel level fl1 to fl4, plane1 zooms from city1 to city0 with fuel level fl3 to fl0, plane1 zooms from city0 to city2 with fuel level fl2 to fl5, plane1 zooms from city2 to city0 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl3 to fl4, plane1 zooms from city2 to city1 with fuel level fl6 to fl5, plane1 zooms from city1 to city2 with fuel level fl3 to fl1, plane1 flies from city1 to city3 with fuel level fl6 to fl4, plane1 gets refueled at city0 with fuel level fl4 to fl1, plane1 gets refueled at city0 with fuel level fl6 to fl0, plane1 zooms from city0 to city3 with fuel level fl0 to fl3, plane1 zooms from city1 to city2 with fuel level fl0 to fl6, plane1 zooms from city2 to city0 with fuel level fl1 to fl5, plane1 zooms from city3 to city0 with fuel level fl1 to fl2, plane1 flies from city3 to city1 with fuel level fl2 to fl6, plane1 zooms from city2 to city1 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl0 to fl2, plane1 zooms from city1 to city2 with fuel level fl2 to fl5, plane1 zooms from city3 to city0 with fuel level fl1 to fl0, plane1 zooms from city0 to city2 with fuel level fl3 to fl4, plane1 zooms from city2 to city3 with fuel level fl3 to fl0, plane1 zooms from city3 to city1 with fuel level fl2 to fl3, plane1 zooms from city2 to city0 with fuel level fl0 to fl5, plane1 zooms from city3 to city1 with fuel level fl4 to fl1, plane1 gets refueled at city2 with fuel level fl1 to fl4, plane1 zooms from city2 to city3 with fuel level fl6 to fl1, plane1 zooms from city2 to city0 with fuel level fl6 to fl3, plane1 zooms from city3 to city2 with fuel level fl6 to fl5, plane1 flies from city3 to city1 with fuel level fl3 to fl2, plane1 zooms from city2 to city1 with fuel level fl2 to fl5, plane1 flies from city1 to city3 with fuel level fl5 to fl3, plane1 zooms from city0 to city1 with fuel level fl2 to fl3, plane1 zooms from city3 to city2 with fuel level fl2 to fl0, plane1 flies from city2 to city3 with fuel level fl2 to fl3, person6 departs plane1 at city0, plane1 zooms from city3 to city2 with fuel level fl5 to fl3, plane1 zooms from city0 to city1 with fuel level fl1 to fl4, plane1 flies from city3 to city2 with fuel level fl3 to fl4, plane1 zooms from city3 to city1 with fuel level fl0 to fl1, plane1 gets refueled at city0 with fuel level fl6 to fl3, plane1 zooms from city2 to city1 with fuel level fl5 to fl1, plane1 zooms from city3 to city1 with fuel level fl6 to fl2, plane1 zooms from city3 to city0 with fuel level fl5 to fl3, plane1 zooms from city0 to city2 with fuel level fl5 to fl0, plane1 zooms from city2 to city1 with fuel level fl0 to fl1, plane1 zooms from city3 to city0 with fuel level fl2 to fl6, plane1 zooms from city1 to city3 with fuel level fl5 to fl6, plane1 gets refueled at city2 with fuel level fl4 to fl5, plane1 zooms from city2 to city0 with fuel level fl2 to fl3, plane1 zooms from city2 to city0 with fuel level fl4 to fl6, plane1 zooms from city0 to city3 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl4 to fl0, plane1 zooms from city2 to city1 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl4 to fl2, plane1 zooms from city3 to city0 with fuel level fl1 to fl5, plane1 flies from city2 to city1 with fuel level fl1 to fl3, plane1 zooms from city2 to city1 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl5 to fl2, plane1 zooms from city2 to city0 with fuel level fl4 to fl0, plane1 flies from city2 to city0 with fuel level fl0 to fl6, plane1 zooms from city0 to city3 with fuel level fl1 to fl3, plane1 zooms from city2 to city0 with fuel level fl0 to fl4, plane1 zooms from city2 to city3 with fuel level fl2 to fl0, plane1 gets refueled at city3 with fuel level fl4 to fl0, plane1 zooms from city1 to city0 with fuel level fl6 to fl2, plane1 zooms from city2 to city1 with fuel level fl3 to fl6, plane1 zooms from city1 to city0 with fuel level fl5 to fl0, plane1 zooms from city3 to city1 with fuel level fl1 to fl6, plane1 zooms from city0 to city2 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl1 to fl3, plane1 gets refueled at city0 with fuel level fl6 to fl5, plane1 zooms from city2 to city1 with fuel level fl5 to fl2, plane1 zooms from city3 to city2 with fuel level fl6 to fl1, plane1 zooms from city1 to city3 with fuel level fl6 to fl1, plane1 flies from city2 to city1 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl2 to fl0, plane1 zooms from city2 to city1 with fuel level fl4 to fl6, plane1 zooms from city2 to city0 with fuel level fl6 to fl3, plane1 zooms from city3 to city2 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl1 to fl4, plane1 zooms from city0 to city3 with fuel level fl0 to fl3, plane1 zooms from city0 to city1 with fuel level fl3 to fl0, plane1 zooms from city0 to city1 with fuel level fl3 to fl1, plane1 zooms from city1 to city0 with fuel level fl0 to fl5, plane1 zooms from city0 to city2 with fuel level fl3 to fl2, plane1 flies from city0 to city3 with fuel level fl1 to fl2, plane1 zooms from city2 to city1 with fuel level fl6 to fl2, plane1 flies from city3 to city0 with fuel level fl1 to fl0, plane1 zooms from city3 to city0 with fuel level fl1 to fl3, plane1 zooms from city3 to city0 with fuel level fl6 to fl0, plane1 zooms from city0 to city1 with fuel level fl5 to fl3, plane1 zooms from city2 to city3 with fuel level fl6 to fl4, plane1 flies from city2 to city3 with fuel level fl5 to fl0, plane1 zooms from city3 to city0 with fuel level fl2 to fl5, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 zooms from city0 to city3 with fuel level fl2 to fl5, plane1 zooms from city3 to city2 with fuel level fl5 to fl4, plane1 zooms from city0 to city3 with fuel level fl4 to fl2, plane1 zooms from city1 to city0 with fuel level fl2 to fl4, plane1 zooms from city3 to city1 with fuel level fl2 to fl1, plane1 zooms from city1 to city3 with fuel level fl3 to fl5, plane1 zooms from city1 to city2 with fuel level fl3 to fl5, plane1 zooms from city0 to city1 with fuel level fl6 to fl2, plane1 zooms from city0 to city2 with fuel level fl5 to fl4, plane1 zooms from city1 to city0 with fuel level fl1 to fl2, plane1 zooms from city2 to city0 with fuel level fl4 to fl3, plane1 zooms from city2 to city0 with fuel level fl0 to fl6, plane1 zooms from city3 to city0 with fuel level fl6 to fl1, plane1 flies from city1 to city0 with fuel level fl5 to fl2, plane1 zooms from city3 to city2 with fuel level fl5 to fl0, plane1 zooms from city0 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city3 with fuel level fl0 to fl4, plane1 zooms from city3 to city2 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl0 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl2, plane1 zooms from city2 to city1 with fuel level fl0 to fl6, plane1 zooms from city3 to city0 with fuel level fl2 to fl0, plane1 zooms from city0 to city2 with fuel level fl1 to fl3, plane1 zooms from city3 to city0 with fuel level fl5 to fl4, plane1 zooms from city1 to city0 with fuel level fl0 to fl5, plane1 zooms from city1 to city3 with fuel level fl3 to fl1, plane1 zooms from city1 to city2 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl6 to fl4, plane1 zooms from city1 to city2 with fuel level fl2 to fl0, plane1 gets refueled at city0 with fuel level fl5 to fl2, plane1 zooms from city2 to city3 with fuel level fl1 to fl2, plane1 zooms from city0 to city2 with fuel level fl1 to fl4, plane1 zooms from city0 to city1 with fuel level fl2 to fl4, plane1 zooms from city1 to city3 with fuel level fl2 to fl1, plane1 zooms from city0 to city2 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl5 to fl2, plane1 zooms from city2 to city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city0 with fuel level fl2 to fl1, plane1 gets refueled at city0 with fuel level fl6 to fl1, plane1 zooms from city0 to city3 with fuel level fl4 to fl3, plane1 flies from city0 to city1 with fuel level fl2 to fl1, plane1 zooms from city1 to city2 with fuel level fl0 to fl1, plane1 zooms from city1 to city0 with fuel level fl0 to fl3, plane1 zooms from city1 to city0 with fuel level fl1 to fl5, plane1 zooms from city2 to city1 with fuel level fl5 to fl6, plane1 zooms from city2 to city0 with fuel level fl5 to fl0, plane1 zooms from city3 to city1 with fuel level fl5 to fl0, plane1 zooms from city2 to city3 with fuel level fl1 to fl6, plane1 zooms from city1 to city2 with fuel level fl4 to fl1, plane1 zooms from city1 to city3 with fuel level fl6 to fl0, plane1 zooms from city2 to city1 with fuel level fl5 to fl3, plane1 zooms from city2 to city0 with fuel level fl1 to fl6, plane1 zooms from city0 to city1 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl5 to fl0, plane1 zooms from city3 to city0 with fuel level fl4 to fl0, plane1 flies from city2 to city3 with fuel level fl5 to fl6, plane1 zooms from city2 to city0 with fuel level fl3 to fl5, plane1 zooms from city3 to city1 with fuel level fl1 to fl0, plane1 zooms from city3 to city1 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl4 to fl1, plane1 zooms from city2 to city3 with fuel level fl5 to fl3, plane1 flies from city2 to city3 with fuel level fl0 to fl3, plane1 zooms from city0 to city2 with fuel level fl3 to fl1, plane1 zooms from city0 to city3 with fuel level fl4 to fl5, plane1 zooms from city1 to city3 with fuel level fl5 to fl4, plane1 zooms from city3 to city2 with fuel level fl5 to fl0, plane1 zooms from city3 to city1 with fuel level fl2 to fl0, plane1 flies from city3 to city1 with fuel level fl1 to fl2, plane1 zooms from city1 to city3 with fuel level fl3 to fl4, plane1 flies from city2 to city0 with fuel level fl2 to fl5, plane1 flies from city2 to city0 with fuel level fl0 to fl1, plane1 zooms from city3 to city1 with fuel level fl6 to fl2, plane1 zooms from city0 to city1 with fuel level fl1 to fl2, plane1 zooms from city3 to city2 with fuel level fl6 to fl3, plane1 zooms from city1 to city0 with fuel level fl6 to fl3, plane1 zooms from city1 to city0 with fuel level fl4 to fl3, plane1 zooms from city0 to city1 with fuel level fl5 to fl0, plane1 zooms from city1 to city0 with fuel level fl4 to fl6, plane1 flies from city2 to city0 with fuel level fl2 to fl3, plane1 zooms from city3 to city0 with fuel level fl3 to fl5, plane1 zooms from city3 to city1 with fuel level fl1 to fl6, plane1 zooms from city1 to city2 with fuel level fl3 to fl0, plane1 zooms from city2 to city0 with fuel level fl1 to fl3, plane1 zooms from city3 to city0 with fuel level fl1 to fl4, plane1 zooms from city3 to city2 with fuel level fl4 to fl1, plane1 zooms from city1 to city0 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl3 to fl4, plane1 zooms from city3 to city1 with fuel level fl1 to fl4, plane1 zooms from city1 to city3 with fuel level fl2 to fl5, plane1 zooms from city2 to city0 with fuel level fl1 to fl4, plane1 flies from city0 to city2 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl1 to fl5, plane1 zooms from city0 to city1 with fuel level fl5 to fl3, plane1 zooms from city2 to city3 with fuel level fl2 to fl6, plane1 flies from city3 to city0 with fuel level fl4 to fl1, plane1 flies from city2 to city3 with fuel level fl5 to fl1, plane1 zooms from city2 to city1 with fuel level fl2 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl2, plane1 zooms from city0 to city1 with fuel level fl4 to fl2, plane1 gets refueled at city2 with fuel level fl3 to fl1, plane1 zooms from city2 to city0 with fuel level fl1 to fl0, plane1 zooms from city2 to city1 with fuel level fl3 to fl1, plane1 zooms from city1 to city2 with fuel level fl5 to fl1, plane1 flies from city1 to city3 with fuel level fl5 to fl0, plane1 flies from city1 to city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl4 to fl6, plane1 zooms from city3 to city1 with fuel level fl4 to fl5, plane1 zooms from city2 to city1 with fuel level fl1 to fl6, plane1 flies from city3 to city0 with fuel level fl0 to fl3, plane1 zooms from city0 to city3 with fuel level fl4 to fl5, plane1 zooms from city0 to city2 with fuel level fl3 to fl6, plane1 zooms from city3 to city1 with fuel level fl5 to fl4, plane1 zooms from city1 to city2 with fuel level fl0 to fl2, plane1 zooms from city1 to city2 with fuel level fl0 to fl1, plane1 zooms from city0 to city2 with fuel level fl0 to fl4, plane1 zooms from city3 to city1 with fuel level fl4 to fl3, plane1 zooms from city0 to city1 with fuel level fl3 to fl2, plane1 zooms from city1 to city2 with fuel level fl6 to fl5, plane1 zooms from city1 to city3 with fuel level fl6 to fl5, plane1 gets refueled at city1 with fuel level fl4 to fl3, plane1 zooms from city0 to city1 with fuel level fl0 to fl3, plane1 zooms from city1 to city0 with fuel level fl5 to fl4, plane1 zooms from city0 to city3 with fuel level fl6 to fl3, plane1 zooms from city1 to city3 with fuel level fl3 to fl0, plane1 zooms from city0 to city2 with fuel level fl0 to fl6, plane1 zooms from city3 to city0 with fuel level fl5 to fl0, plane1 zooms from city0 to city1 with fuel level fl1 to fl5, plane1 zooms from city1 to city3 with fuel level fl1 to fl5, plane1 gets refueled at city0 with fuel level fl3 to fl6, plane1 zooms from city0 to city3 with fuel level fl1 to fl4, plane1 zooms from city3 to city2 with fuel level fl5 to fl6, plane1 gets refueled at city0 with fuel level fl0 to fl4, plane1 flies from city1 to city2 with fuel level fl3 to fl0, plane1 zooms from city1 to city2 with fuel level fl6 to fl2, plane1 zooms from city2 to city1 with fuel level fl2 to fl0, plane1 zooms from city0 to city2 with fuel level fl3 to fl0, plane1 zooms from city1 to city3 with fuel level fl5 to fl4, plane1 flies from city0 to city2 with fuel level fl6 to fl3, plane1 zooms from city3 to city2 with fuel level fl1 to fl0, plane1 flies from city0 to city2 with fuel level fl3 to fl0, plane1 flies from city1 to city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl2 to fl6, plane1 zooms from city2 to city3 with fuel level fl4 to fl5, plane1 zooms from city2 to city3 with fuel level fl5 to fl4, plane1 zooms from city0 to city3 with fuel level fl3 to fl0, plane1 gets refueled at city1 with fuel level fl4 to fl6, plane1 flies from city3 to city1 with fuel level fl2 to fl1, plane1 zooms from city1 to city2 with fuel level fl4 to fl6, plane1 flies from city0 to city2 with fuel level fl1 to fl2, plane1 zooms from city2 to city1 with fuel level fl3 to fl6, plane1 zooms from city0 to city1 with fuel level fl0 to fl3, plane1 zooms from city2 to city0 with fuel level fl6 to fl5, plane1 flies from city2 to city3 with fuel level fl4 to fl6, plane1 gets refueled at city0 with fuel level fl4 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl5, plane1 zooms from city1 to city3 with fuel level fl5 to fl2, plane1 zooms from city0 to city2 with fuel level fl5 to fl6, plane1 zooms from city3 to city2 with fuel level fl5 to fl2, plane1 gets refueled at city3 with fuel level fl5 to fl0, plane1 flies from city0 to city2 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl0 to fl2, plane1 zooms from city2 to city0 with fuel level fl0 to fl4, plane1 zooms from city3 to city1 with fuel level fl1 to fl0, plane1 zooms from city2 to city3 with fuel level fl5 to fl6, plane1 gets refueled at city0 with fuel level fl1 to fl0, plane1 zooms from city1 to city2 with fuel level fl2 to fl1, plane1 flies from city1 to city2 with fuel level fl1 to fl4, plane1 flies from city3 to city1 with fuel level fl4 to fl6, plane1 zooms from city3 to city1 with fuel level fl3 to fl6, plane1 zooms from city2 to city3 with fuel level fl4 to fl6, plane1 zooms from city0 to city2 with fuel level fl5 to fl3, plane1 flies from city1 to city3 with fuel level fl4 to fl6, plane1 zooms from city3 to city1 with fuel level fl2 to fl6, plane1 zooms from city2 to city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl0 to fl2, plane1 zooms from city2 to city3 with fuel level fl0 to fl3, plane1 zooms from city3 to city2 with fuel level fl3 to fl4, person8 departs plane1 at city2, plane1 flies from city1 to city2 with fuel level fl1 to fl0, plane1 zooms from city1 to city3 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl5 to fl4, plane1 zooms from city3 to city0 with fuel level fl4 to fl0, plane1 zooms from city0 to city1 with fuel level fl3 to fl5, plane1 zooms from city3 to city1 with fuel level fl5 to fl1, plane1 zooms from city0 to city1 with fuel level fl3 to fl0, plane1 flies from city3 to city1 with fuel level fl0 to fl2, plane1 flies from city1 to city3 with fuel level fl2 to fl1, plane1 zooms from city0 to city2 with fuel level fl5 to fl3, plane1 zooms from city1 to city2 with fuel level fl6 to fl0, plane1 zooms from city2 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city0 with fuel level fl5 to fl2, plane1 zooms from city1 to city2 with fuel level fl5 to fl2, plane1 zooms from city2 to city3 with fuel level fl5 to fl0, plane1 zooms from city2 to city3 with fuel level fl0 to fl1, plane1 zooms from city0 to city2 with fuel level fl3 to fl0, plane1 gets refueled at city0 with fuel level fl2 to fl5, plane1 zooms from city2 to city1 with fuel level fl6 to fl5, plane1 zooms from city3 to city1 with fuel level fl2 to fl5, plane1 zooms from city0 to city2 with fuel level fl1 to fl3, plane1 zooms from city0 to city1 with fuel level fl0 to fl3, plane1 flies from city1 to city3 with fuel level fl3 to fl4, plane1 zooms from city3 to city1 with fuel level fl5 to fl4, plane1 zooms from city0 to city1 with fuel level fl6 to fl2, plane1 zooms from city2 to city0 with fuel level fl4 to fl2, plane1 flies from city0 to city1 with fuel level fl4 to fl6, plane1 zooms from city0 to city2 with fuel level fl2 to fl4, plane1 zooms from city0 to city1 with fuel level fl1 to fl0, plane1 zooms from city3 to city1 with fuel level fl2 to fl4, plane1 flies from city3 to city0 with fuel level fl0 to fl4, plane1 zooms from city0 to city2 with fuel level fl6 to fl1, plane1 zooms from city2 to city1 with fuel level fl4 to fl3, plane1 zooms from city3 to city2 with fuel level fl3 to fl5, plane1 flies from city1 to city2 with fuel level fl0 to fl2, plane1 zooms from city2 to city3 with fuel level fl6 to fl0, plane1 zooms from city3 to city1 with fuel level fl1 to fl3, plane1 gets refueled at city2 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl2 to fl3, plane1 zooms from city1 to city2 with fuel level fl1 to fl6, plane1 gets refueled at city2 with fuel level fl2 to fl5, plane1 flies from city3 to city0 with fuel level fl6 to fl5, plane1 zooms from city3 to city0 with fuel level fl1 to fl0, plane1 flies from city1 to city3 with fuel level fl0 to fl2, plane1 zooms from city2 to city1 with fuel level fl0 to fl5, plane1 zooms from city3 to city1 with fuel level fl5 to fl3, plane1 flies from city0 to city2 with fuel level fl3 to fl4, plane1 zooms from city3 to city2 with fuel level fl6 to fl3, plane1 zooms from city0 to city3 with fuel level fl5 to fl6, plane1 zooms from city1 to city3 with fuel level fl4 to fl0, plane1 zooms from city1 to city2 with fuel level fl2 to fl6, plane1 zooms from city0 to city1 with fuel level fl6 to fl5, plane1 zooms from city0 to city1 with fuel level fl6 to fl5, plane1 zooms from city0 to city1 with fuel level fl4 to fl1, plane1 zooms from city3 to city1 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl2 to fl3, plane1 zooms from city2 to city1 with fuel level fl5 to fl0, plane1 gets refueled at city1 with fuel level fl1 to fl0, plane1 zooms from city0 to city1 with fuel level fl1 to fl6, plane1 flies from city2 to city1 with fuel level fl3 to fl4, plane1 zooms from city2 to city1 with fuel level fl5 to fl0, plane1 zooms from city0 to city3 with fuel level fl0 to fl6, plane1 zooms from city1 to city3 with fuel level fl6 to fl0, plane1 zooms from city1 to city3 with fuel level fl6 to fl4, plane1 zooms from city0 to city2 with fuel level fl1 to fl6, plane1 zooms from city1 to city0 with fuel level fl4 to fl3, plane1 zooms from city2 to city3 with fuel level fl0 to fl6, plane1 flies from city1 to city2 with fuel level fl2 to fl3, plane1 gets refueled at city3 with fuel level fl5 to fl3, plane1 zooms from city3 to city2 with fuel level fl3 to fl1, plane1 zooms from city1 to city0 with fuel level fl5 to fl4, plane1 zooms from city3 to city1 with fuel level fl3 to fl1, plane1 zooms from city3 to city1 with fuel level fl5 to fl6, plane1 zooms from city3 to city1 with fuel level fl1 to fl4, plane1 zooms from city0 to city3 with fuel level fl0 to fl5, plane1 zooms from city3 to city1 with fuel level fl6 to fl3, plane1 zooms from city1 to city0 with fuel level fl5 to fl6, plane1 zooms from city2 to city1 with fuel level fl5 to fl0, plane1 zooms from city0 to city3 with fuel level fl2 to fl1, plane1 zooms from city3 to city0 with fuel level fl6 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl2 to fl4, plane1 zooms from city3 to city2 with fuel level fl0 to fl6, plane1 zooms from city2 to city0 with fuel level fl0 to fl3, plane1 zooms from city1 to city3 with fuel level fl4 to fl3, plane1 zooms from city3 to city0 with fuel level fl0 to fl4, plane1 zooms from city3 to city2 with fuel level fl3 to fl4, plane1 flies from city3 to city0 with fuel level fl1 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl2, plane1 gets refueled at city2 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl3 to fl1, plane1 flies from city2 to city1 with fuel level fl2 to fl5, plane1 zooms from city0 to city1 with fuel level fl2 to fl0, plane1 zooms from city1 to city0 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl1 to fl0, plane1 zooms from city2 to city3 with fuel level fl3 to fl1, plane1 zooms from city2 to city1 with fuel level fl6 to fl0, plane1 zooms from city3 to city2 with fuel level fl5 to fl4, plane1 zooms from city0 to city2 with fuel level fl3 to fl5, plane1 zooms from city1 to city3 with fuel level fl1 to fl2, plane1 zooms from city2 to city1 with fuel level fl4 to fl5, plane1 zooms from city2 to city3 with fuel level fl1 to fl2, plane1 zooms from city2 to city3 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl2 to fl5, plane1 flies from city2 to city1 with fuel level fl1 to fl4, plane1 flies from city3 to city2 with fuel level fl0 to fl4, person4 boards plane1 at city2, plane1 zooms from city3 to city2 with fuel level fl4 to fl6, plane1 zooms from city1 to city3 with fuel level fl3 to fl5, plane1 zooms from city2 to city1 with fuel level fl0 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl4, plane1 zooms from city2 to city0 with fuel level fl1 to fl5, plane1 flies from city3 to city0 with fuel level fl3 to fl1, plane1 zooms from city3 to city0 with fuel level fl0 to fl4, plane1 zooms from city2 to city3 with fuel level fl1 to fl5, plane1 zooms from city0 to city1 with fuel level fl1 to fl4, plane1 zooms from city2 to city1 with fuel level fl1 to fl6, plane1 zooms from city0 to city2 with fuel level fl4 to fl5, plane1 zooms from city3 to city1 with fuel level fl3 to fl2, plane1 zooms from city1 to city2 with fuel level fl0 to fl2, plane1 flies from city2 to city1 with fuel level fl2 to fl6, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 flies from city3 to city0 with fuel level fl4 to fl6, plane1 zooms from city1 to city3 with fuel level fl5 to fl0, plane1 zooms from city1 to city3 with fuel level fl5 to fl6, plane1 zooms from city0 to city1 with fuel level fl6 to fl1, plane1 zooms from city3 to city1 with fuel level fl1 to fl3, plane1 zooms from city3 to city0 with fuel level fl6 to fl0, plane1 zooms from city2 to city0 with fuel level fl5 to fl1, plane1 zooms from city1 to city2 with fuel level fl6 to fl1, plane1 zooms from city0 to city1 with fuel level fl4 to fl2, plane1 zooms from city0 to city3 with fuel level fl3 to fl1, plane1 flies from city3 to city0 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl5 to fl1, plane1 zooms from city2 to city1 with fuel level fl4 to fl0, plane1 zooms from city0 to city1 with fuel level fl6 to fl4, plane1 zooms from city3 to city0 with fuel level fl3 to fl2, plane1 zooms from city0 to city2 with fuel level fl5 to fl1, plane1 flies from city0 to city2 with fuel level fl1 to fl0, plane1 flies from city3 to city2 with fuel level fl0 to fl6, plane1 flies from city3 to city0 with fuel level fl1 to fl2, plane1 zooms from city0 to city2 with fuel level fl4 to fl0, plane1 zooms from city3 to city2 with fuel level fl2 to fl6, plane1 zooms from city1 to city0 with fuel level fl0 to fl5, plane1 flies from city1 to city2 with fuel level fl3 to fl6, plane1 zooms from city0 to city2 with fuel level fl1 to fl5, person6 boards plane1 at city1, plane1 zooms from city2 to city0 with fuel level fl5 to fl4, plane1 zooms from city3 to city0 with fuel level fl6 to fl2, plane1 gets refueled at city0 with fuel level fl6 to fl2, plane1 zooms from city3 to city2 with fuel level fl4 to fl1, plane1 zooms from city1 to city0 with fuel level fl5 to fl1, plane1 zooms from city3 to city2 with fuel level fl1 to fl0, plane1 flies from city1 to city0 with fuel level fl3 to fl0, plane1 zooms from city2 to city3 with fuel level fl6 to fl0, plane1 flies from city0 to city1 with fuel level fl2 to fl5, plane1 zooms from city1 to city2 with fuel level fl3 to fl4, plane1 zooms from city3 to city0 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl6 to fl2, person7 departs plane1 at city0, plane1 flies from city3 to city2 with fuel level fl1 to fl6, plane1 zooms from city0 to city3 with fuel level fl6 to fl2, plane1 flies from city3 to city1 with fuel level fl2 to fl0, plane1 zooms from city1 to city2 with fuel level fl4 to fl6, plane1 zooms from city1 to city3 with fuel level fl3 to fl0, plane1 zooms from city3 to city2 with fuel level fl6 to fl5, plane1 zooms from city1 to city3 with fuel level fl6 to fl3, plane1 zooms from city1 to city0 with fuel level fl1 to fl2, plane1 zooms from city0 to city2 with fuel level fl6 to fl0, plane1 zooms from city2 to city3 with fuel level fl4 to fl1, plane1 gets refueled at city2 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl4 to fl5, plane1 flies from city2 to city3 with fuel level fl0 to fl6, plane1 flies from city0 to city3 with fuel level fl3 to fl0, plane1 zooms from city3 to city1 with fuel level fl4 to fl3, plane1 zooms from city0 to city1 with fuel level fl1 to fl6, plane1 zooms from city3 to city1 with fuel level fl4 to fl3, plane1 zooms from city2 to city1 with fuel level fl3 to fl6, person4 departs plane1 at city1, plane1 zooms from city0 to city1 with fuel level fl1 to fl4, plane1 zooms from city3 to city0 with fuel level fl6 to fl1, plane1 zooms from city0 to city3 with fuel level fl2 to fl0, plane1 zooms from city3 to city1 with fuel level fl2 to fl0, plane1 gets refueled at city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl6 to fl5, plane1 zooms from city3 to city0 with fuel level fl5 to fl1, plane1 zooms from city1 to city0 with fuel level fl4 to fl5, plane1 zooms from city3 to city2 with fuel level fl0 to fl5, plane1 zooms from city1 to city2 with fuel level fl6 to fl2, plane1 zooms from city0 to city1 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl0 to fl6, plane1 zooms from city0 to city2 with fuel level fl3 to fl0, plane1 zooms from city0 to city3 with fuel level fl5 to fl1, plane1 zooms from city2 to city1 with fuel level fl6 to fl1, plane1 zooms from city1 to city0 with fuel level fl6 to fl0, plane1 zooms from city1 to city0 with fuel level fl2 to fl5, plane1 gets refueled at city0 with fuel level fl4 to fl3, plane1 zooms from city0 to city3 with fuel level fl3 to fl2, plane1 zooms from city0 to city1 with fuel level fl2 to fl1, plane1 zooms from city2 to city1 with fuel level fl1 to fl3, plane1 zooms from city3 to city1 with fuel level fl2 to fl6, plane1 zooms from city0 to city3 with fuel level fl0 to fl5, plane1 zooms from city0 to city2 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl2 to fl1, plane1 zooms from city2 to city1 with fuel level fl6 to fl5, plane1 zooms from city0 to city3 with fuel level fl5 to fl0, plane1 zooms from city2 to city1 with fuel level fl5 to fl6, plane1 zooms from city1 to city2 with fuel level fl6 to fl5, plane1 flies from city0 to city3 with fuel level fl5 to fl3, plane1 flies from city1 to city0 with fuel level fl1 to fl0, plane1 zooms from city1 to city3 with fuel level fl3 to fl6, plane1 zooms from city3 to city1 with fuel level fl2 to fl1, plane1 zooms from city3 to city0 with fuel level fl1 to fl4, plane1 zooms from city2 to city1 with fuel level fl2 to fl4, plane1 flies from city0 to city2 with fuel level fl6 to fl1, plane1 zooms from city2 to city3 with fuel level fl4 to fl6, plane1 zooms from city1 to city0 with fuel level fl5 to fl0, plane1 zooms from city0 to city2 with fuel level fl6 to fl0, plane1 zooms from city2 to city1 with fuel level fl0 to fl3, plane1 gets refueled at city2 with fuel level fl2 to fl4, plane1 zooms from city3 to city2 with fuel level fl3 to fl0, plane1 zooms from city3 to city0 with fuel level fl1 to fl5, plane1 zooms from city0 to city3 with fuel level fl3 to fl6, plane1 flies from city2 to city3 with fuel level fl6 to fl1, plane1 zooms from city2 to city3 with fuel level fl6 to fl1, person2 departs plane1 at city2, plane1 zooms from city2 to city3 with fuel level fl6 to fl4, plane1 flies from city2 to city3 with fuel level fl6 to fl0, plane1 zooms from city1 to city3 with fuel level fl2 to fl0, plane1 zooms from city1 to city2 with fuel level fl4 to fl5, plane1 zooms from city3 to city1 with fuel level fl2 to fl5, plane1 flies from city3 to city2 with fuel level fl5 to fl1, plane1 flies from city1 to city3 with fuel level fl2 to fl6, plane1 zooms from city0 to city3 with fuel level fl1 to fl5, plane1 zooms from city2 to city1 with fuel level fl5 to fl1, plane1 zooms from city3 to city0 with fuel level fl2 to fl5, plane1 zooms from city0 to city2 with fuel level fl4 to fl2, plane1 zooms from city1 to city0 with fuel level fl5 to fl2, plane1 zooms from city0 to city3 with fuel level fl3 to fl1, plane1 flies from city1 to city0 with fuel level fl6 to fl3, plane1 zooms from city2 to city3 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl0 to fl4, plane1 zooms from city0 to city3 with fuel level fl2 to fl1, plane1 zooms from city2 to city1 with fuel level fl4 to fl2, plane1 zooms from city1 to city3 with fuel level fl4 to fl5, plane1 zooms from city2 to city0 with fuel level fl6 to fl0, plane1 flies from city1 to city2 with fuel level fl5 to fl0, plane1 zooms from city0 to city3 with fuel level fl5 to fl4, plane1 zooms from city3 to city2 with fuel level fl4 to fl0, plane1 zooms from city1 to city0 with fuel level fl2 to fl6, plane1 flies from city1 to city2 with fuel level fl4 to fl0, plane1 flies from city3 to city1 with fuel level fl6 to fl1, plane1 zooms from city1 to city2 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl1 to fl0, plane1 zooms from city0 to city3 with fuel level fl3 to fl2, plane1 zooms from city1 to city0 with fuel level fl6 to fl0, plane1 zooms from city2 to city1 with fuel level fl0 to fl1, plane1 zooms from city0 to city2 with fuel level fl0 to fl1, plane1 zooms from city3 to city1 with fuel level fl6 to fl5, plane1 zooms from city3 to city1 with fuel level fl1 to fl2, plane1 zooms from city3 to city2 with fuel level fl2 to fl1, plane1 zooms from city2 to city0 with fuel level fl2 to fl1, plane1 zooms from city1 to city0 with fuel level fl0 to fl5, plane1 zooms from city1 to city2 with fuel level fl5 to fl2, plane1 zooms from city3 to city1 with fuel level fl1 to fl5, plane1 zooms from city0 to city3 with fuel level fl2 to fl3, plane1 zooms from city2 to city1 with fuel level fl4 to fl1, plane1 gets refueled at city0 with fuel level fl0 to fl5, plane1 zooms from city0 to city1 with fuel level fl2 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl2, plane1 zooms from city1 to city2 with fuel level fl3 to fl0, plane1 gets refueled at city2 with fuel level fl4 to fl6, plane1 zooms from city2 to city1 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl2 to fl0, plane1 zooms from city1 to city3 with fuel level fl3 to fl0, plane1 flies from city2 to city1 with fuel level fl6 to fl5, plane1 gets refueled at city3 with fuel level fl2 to fl5, plane1 gets refueled at city1 with fuel level fl6 to fl1, plane1 zooms from city3 to city1 with fuel level fl2 to fl4, plane1 flies from city0 to city1 with fuel level fl1 to fl3, person5 boards plane1 at city1, plane1 zooms from city2 to city1 with fuel level fl5 to fl2, plane1 zooms from city0 to city2 with fuel level fl1 to fl6, plane1 zooms from city0 to city3 with fuel level fl6 to fl5, plane1 zooms from city1 to city3 with fuel level fl3 to fl6, plane1 zooms from city0 to city1 with fuel level fl2 to fl3, plane1 zooms from city2 to city0 with fuel level fl1 to fl5, plane1 flies from city2 to city3 with fuel level fl3 to fl5, plane1 zooms from city1 to city0 with fuel level fl4 to fl0, plane1 flies from city2 to city3 with fuel level fl6 to fl3, plane1 gets refueled at city3 with fuel level fl5 to fl4, plane1 zooms from city3 to city1 with fuel level fl6 to fl1, plane1 zooms from city1 to city3 with fuel level fl2 to fl6, plane1 flies from city2 to city3 with fuel level fl5 to fl3, plane1 zooms from city2 to city0 with fuel level fl3 to fl6, plane1 gets refueled at city1 with fuel level fl1 to fl3, plane1 zooms from city1 to city2 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl3 to fl4, plane1 zooms from city2 to city1 with fuel level fl2 to fl5, plane1 zooms from city3 to city0 with fuel level fl2 to fl5, plane1 zooms from city0 to city3 with fuel level fl1 to fl5, plane1 flies from city1 to city2 with fuel level fl0 to fl5, plane1 zooms from city0 to city3 with fuel level fl6 to fl4, plane1 flies from city1 to city2 with fuel level fl5 to fl2, plane1 zooms from city3 to city1 with fuel level fl5 to fl0, plane1 zooms from city3 to city1 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl1 to fl0, plane1 zooms from city3 to city1 with fuel level fl6 to fl1, plane1 zooms from city1 to city3 with fuel level fl0 to fl3, plane1 flies from city3 to city0 with fuel level fl5 to fl2, plane1 zooms from city1 to city0 with fuel level fl2 to fl3, plane1 zooms from city3 to city1 with fuel level fl4 to fl0, plane1 zooms from city0 to city3 with fuel level fl3 to fl5, plane1 zooms from city0 to city3 with fuel level fl1 to fl3, plane1 zooms from city2 to city0 with fuel level fl3 to fl1, plane1 flies from city2 to city1 with fuel level fl4 to fl3, plane1 zooms from city2 to city3 with fuel level fl4 to fl1, plane1 zooms from city1 to city2 with fuel level fl6 to fl2, plane1 zooms from city2 to city3 with fuel level fl4 to fl6, plane1 zooms from city2 to city0 with fuel level fl5 to fl3, plane1 zooms from city0 to city3 with fuel level fl0 to fl5, plane1 flies from city3 to city0 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl5 to fl1, plane1 zooms from city2 to city3 with fuel level fl4 to fl6, plane1 zooms from city3 to city0 with fuel level fl2 to fl4, plane1 zooms from city1 to city0 with fuel level fl3 to fl4, plane1 zooms from city0 to city3 with fuel level fl1 to fl2, plane1 zooms from city3 to city1 with fuel level fl5 to fl1, plane1 gets refueled at city3 with fuel level fl6 to fl0, plane1 flies from city3 to city1 with fuel level fl3 to fl4, plane1 zooms from city1 to city2 with fuel level fl1 to fl4, plane1 zooms from city2 to city1 with fuel level fl4 to fl3, plane1 zooms from city0 to city2 with fuel level fl5 to fl0, plane1 zooms from city1 to city3 with fuel level fl2 to fl3, plane1 flies from city2 to city0 with fuel level fl3 to fl6, plane1 zooms from city1 to city2 with fuel level fl5 to fl1, plane1 zooms from city3 to city1 with fuel level fl0 to fl5, plane1 flies from city1 to city3 with fuel level fl2 to fl3, plane1 flies from city2 to city1 with fuel level fl2 to fl4, plane1 zooms from city1 to city0 with fuel level fl5 to fl4, plane1 zooms from city0 to city1 with fuel level fl1 to fl3, plane1 zooms from city3 to city2 with fuel level fl3 to fl0, plane1 zooms from city2 to city1 with fuel level fl2 to fl3, plane1 zooms from city3 to city0 with fuel level fl1 to fl0, plane1 gets refueled at city3 with fuel level fl1 to fl0, plane1 zooms from city0 to city2 with fuel level fl6 to fl4, plane1 zooms from city1 to city2 with fuel level fl1 to fl6, plane1 zooms from city1 to city3 with fuel level fl0 to fl3, plane1 zooms from city0 to city3 with fuel level fl6 to fl3, plane1 flies from city1 to city0 with fuel level fl3 to fl2, plane1 zooms from city1 to city3 with fuel level fl5 to fl6, plane1 flies from city3 to city2 with fuel level fl1 to fl2, plane1 zooms from city0 to city2 with fuel level fl3 to fl6, plane1 gets refueled at city2 with fuel level fl3 to fl5, plane1 zooms from city0 to city2 with fuel level fl0 to fl2, plane1 flies from city0 to city2 with fuel level fl0 to fl4, plane1 flies from city2 to city1 with fuel level fl5 to fl0, plane1 zooms from city2 to city1 with fuel level fl2 to fl3, plane1 zooms from city2 to city1 with fuel level fl1 to fl0, plane1 zooms from city0 to city1 with fuel level fl2 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl1 to fl3, plane1 flies from city1 to city0 with fuel level fl6 to fl2, plane1 zooms from city0 to city3 with fuel level fl0 to fl6, plane1 flies from city0 to city2 with fuel level fl6 to fl5, plane1 zooms from city2 to city0 with fuel level fl4 to fl1, plane1 zooms from city0 to city3 with fuel level fl4 to fl3, plane1 flies from city3 to city0 with fuel level fl5 to fl1, plane1 flies from city1 to city2 with fuel level fl1 to fl6, plane1 zooms from city2 to city1 with fuel level fl0 to fl1, plane1 zooms from city2 to city0 with fuel level fl3 to fl2, plane1 zooms from city3 to city0 with fuel level fl6 to fl5, plane1 zooms from city0 to city3 with fuel level fl2 to fl6, plane1 zooms from city0 to city3 with fuel level fl5 to fl0, plane1 zooms from city1 to city0 with fuel level fl2 to fl0, plane1 flies from city0 to city3 with fuel level fl4 to fl6, plane1 zooms from city0 to city3 with fuel level fl5 to fl4, plane1 zooms from city1 to city0 with fuel level fl3 to fl0, plane1 flies from city2 to city3 with fuel level fl1 to fl4, plane1 zooms from city2 to city0 with fuel level fl6 to fl0, plane1 zooms from city2 to city3 with fuel level fl2 to fl3, plane1 zooms from city1 to city0 with fuel level fl0 to fl1, plane1 zooms from city0 to city3 with fuel level fl3 to fl6, plane1 zooms from city1 to city3 with fuel level fl0 to fl6, plane1 zooms from city2 to city0 with fuel level fl5 to fl2, plane1 gets refueled at city3 with fuel level fl1 to fl4, plane1 zooms from city2 to city3 with fuel level fl6 to fl1, plane1 zooms from city3 to city1 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl1 to fl5, plane1 zooms from city2 to city0 with fuel level fl1 to fl3, plane1 zooms from city0 to city2 with fuel level fl3 to fl4, plane1 zooms from city2 to city3 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl0, plane1 zooms from city2 to city1 with fuel level fl0 to fl3, plane1 zooms from city3 to city0 with fuel level fl2 to fl1, plane1 flies from city0 to city1 with fuel level fl2 to fl3, plane1 flies from city3 to city2 with fuel level fl3 to fl1, plane1 zooms from city3 to city0 with fuel level fl4 to fl3, plane1 zooms from city3 to city2 with fuel level fl2 to fl0, plane1 zooms from city0 to city3 with fuel level fl0 to fl6, plane1 zooms from city0 to city2 with fuel level fl1 to fl6, plane1 zooms from city3 to city2 with fuel level fl6 to fl2, plane1 flies from city0 to city3 with fuel level fl0 to fl3, plane1 zooms from city1 to city0 with fuel level fl3 to fl5, plane1 zooms from city0 to city1 with fuel level fl3 to fl2, plane1 zooms from city1 to city0 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl4 to fl5, plane1 zooms from city0 to city1 with fuel level fl6 to fl0, plane1 flies from city1 to city2 with fuel level fl5 to fl6, plane1 zooms from city3 to city1 with fuel level fl0 to fl2, plane1 flies from city0 to city3 with fuel level fl5 to fl1, plane1 zooms from city1 to city0 with fuel level fl0 to fl6, plane1 flies from city2 to city1 with fuel level fl0 to fl5, plane1 flies from city0 to city2 with fuel level fl5 to fl2, plane1 zooms from city1 to city0 with fuel level fl3 to fl5, plane1 flies from city1 to city0 with fuel level fl6 to fl0, plane1 flies from city0 to city1 with fuel level fl1 to fl5, plane1 zooms from city3 to city2 with fuel level fl2 to fl3, plane1 zooms from city0 to city2 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl1 to fl0, plane1 zooms from city3 to city2 with fuel level fl4 to fl5, plane1 flies from city3 to city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl5 to fl4, plane1 zooms from city1 to city3 with fuel level fl2 to fl1, plane1 zooms from city0 to city3 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl5 to fl0, plane1 zooms from city0 to city2 with fuel level fl0 to fl1, plane1 zooms from city3 to city1 with fuel level fl2 to fl3, plane1 zooms from city0 to city2 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl4 to fl3, plane1 zooms from city3 to city2 with fuel level fl5 to fl4, plane1 zooms from city0 to city3 with fuel level fl6 to fl3, plane1 zooms from city2 to city3 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl5 to fl2, plane1 zooms from city1 to city0 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl5 to fl2, plane1 flies from city3 to city0 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl3 to fl2, plane1 zooms from city0 to city2 with fuel level fl4 to fl3, plane1 zooms from city1 to city0 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl0 to fl5, plane1 zooms from city1 to city3 with fuel level fl5 to fl3, plane1 zooms from city1 to city2 with fuel level fl2 to fl3, plane1 zooms from city1 to city3 with fuel level fl6 to fl1, plane1 zooms from city1 to city0 with fuel level fl4 to fl1, plane1 zooms from city2 to city1 with fuel level fl0 to fl2, plane1 flies from city3 to city1 with fuel level fl1 to fl3, plane1 flies from city3 to city2 with fuel level fl5 to fl3, plane1 zooms from city1 to city0 with fuel level fl1 to fl0, plane1 zooms from city2 to city1 with fuel level fl3 to fl2, plane1 zooms from city0 to city1 with fuel level fl4 to fl1, plane1 zooms from city0 to city1 with fuel level fl2 to fl6, plane1 zooms from city1 to city3 with fuel level fl2 to fl3, plane1 zooms from city1 to city3 with fuel level fl6 to fl1, plane1 zooms from city2 to city1 with fuel level fl6 to fl1, plane1 zooms from city0 to city3 with fuel level fl5 to fl2, plane1 flies from city1 to city2 with fuel level fl0 to fl1, plane1 zooms from city3 to city2 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl6 to fl3, plane1 zooms from city0 to city1 with fuel level fl4 to fl3, plane1 zooms from city1 to city0 with fuel level fl4 to fl1, plane1 zooms from city2 to city0 with fuel level fl4 to fl5, plane1 zooms from city3 to city0 with fuel level fl2 to fl3, plane1 zooms from city3 to city1 with fuel level fl6 to fl4, plane1 zooms from city1 to city0 with fuel level fl5 to fl1, plane1 gets refueled at city3 with fuel level fl2 to fl6, plane1 zooms from city0 to city1 with fuel level fl3 to fl1, plane1 zooms from city1 to city0 with fuel level fl3 to fl2, plane1 zooms from city2 to city1 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl3 to fl5, plane1 zooms from city1 to city0 with fuel level fl3 to fl5, plane1 zooms from city0 to city2 with fuel level fl3 to fl5, plane1 zooms from city3 to city0 with fuel level fl5 to fl4, plane1 gets refueled at city3 with fuel level fl1 to fl5, plane1 zooms from city2 to city0 with fuel level fl0 to fl5, plane1 zooms from city3 to city1 with fuel level fl6 to fl2, person1 departs plane1 at city3, plane1 zooms from city2 to city1 with fuel level fl1 to fl0, plane1 zooms from city3 to city1 with fuel level fl1 to fl5, plane1 flies from city1 to city2 with fuel level fl1 to fl2, plane1 zooms from city0 to city3 with fuel level fl4 to fl3, plane1 zooms from city1 to city0 with fuel level fl1 to fl6, plane1 zooms from city2 to city1 with fuel level fl0 to fl5, plane1 flies from city2 to city3 with fuel level fl6 to fl2, plane1 zooms from city1 to city0 with fuel level fl4 to fl5, plane1 zooms from city1 to city2 with fuel level fl6 to fl1, plane1 flies from city2 to city1 with fuel level fl4 to fl1, plane1 flies from city1 to city3 with fuel level fl1 to fl0, plane1 flies from city3 to city2 with fuel level fl5 to fl6, plane1 zooms from city1 to city3 with fuel level fl2 to fl1, plane1 zooms from city1 to city3 with fuel level fl1 to fl3, plane1 zooms from city3 to city1 with fuel level fl6 to fl1, plane1 zooms from city0 to city1 with fuel level fl5 to fl6, plane1 zooms from city0 to city2 with fuel level fl0 to fl5, plane1 zooms from city2 to city3 with fuel level fl1 to fl3, plane1 zooms from city1 to city2 with fuel level fl5 to fl0, plane1 zooms from city3 to city0 with fuel level fl6 to fl3, plane1 zooms from city0 to city2 with fuel level fl1 to fl5, plane1 zooms from city2 to city1 with fuel level fl1 to fl4, plane1 zooms from city1 to city2 with fuel level fl6 to fl2, plane1 zooms from city3 to city1 with fuel level fl3 to fl1, plane1 zooms from city2 to city3 with fuel level fl1 to fl2, plane1 gets refueled at city0 with fuel level fl1 to fl3, plane1 flies from city0 to city1 with fuel level fl3 to fl2, plane1 zooms from city0 to city2 with fuel level fl0 to fl3, plane1 zooms from city1 to city3 with fuel level fl1 to fl4, plane1 zooms from city3 to city2 with fuel level fl4 to fl0, plane1 zooms from city1 to city3 with fuel level fl0 to fl1, plane1 zooms from city3 to city1 with fuel level fl4 to fl0, plane1 zooms from city3 to city0 with fuel level fl2 to fl6, plane1 flies from city0 to city2 with fuel level fl0 to fl3, plane1 flies from city1 to city3 with fuel level fl4 to fl0, plane1 flies from city2 to city3 with fuel level fl1 to fl2, person1 departs plane1 at city0, plane1 zooms from city2 to city0 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl5 to fl6, plane1 flies from city0 to city1 with fuel level fl4 to fl2, person6 departs plane1 at city3, plane1 zooms from city2 to city3 with fuel level fl6 to fl1, plane1 zooms from city2 to city1 with fuel level fl4 to fl1, plane1 flies from city3 to city1 with fuel level fl4 to fl3, plane1 zooms from city0 to city2 with fuel level fl6 to fl3, plane1 zooms from city1 to city2 with fuel level fl6 to fl3, plane1 zooms from city2 to city1 with fuel level fl5 to fl2, plane1 flies from city0 to city1 with fuel level fl4 to fl1, plane1 zooms from city0 to city3 with fuel level fl2 to fl0, plane1 zooms from city0 to city1 with fuel level fl3 to fl4, plane1 zooms from city0 to city2 with fuel level fl1 to fl5, plane1 zooms from city0 to city1 with fuel level fl0 to fl1, plane1 zooms from city2 to city1 with fuel level fl1 to fl0, plane1 zooms from city0 to city1 with fuel level fl6 to fl3, plane1 zooms from city2 to city0 with fuel level fl2 to fl1, plane1 zooms from city0 to city3 with fuel level fl0 to fl4, plane1 zooms from city2 to city0 with fuel level fl1 to fl2, plane1 zooms from city1 to city2 with fuel level fl1 to fl0, plane1 flies from city1 to city2 with fuel level fl3 to fl1, plane1 zooms from city3 to city1 with fuel level fl1 to fl3, plane1 flies from city1 to city3 with fuel level fl2 to fl0, plane1 zooms from city0 to city3 with fuel level fl4 to fl6, plane1 flies from city1 to city0 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl5 to fl2, plane1 zooms from city2 to city3 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl1 to fl2, plane1 zooms from city3 to city1 with fuel level fl4 to fl0, plane1 zooms from city2 to city3 with fuel level fl1 to fl6, plane1 zooms from city1 to city0 with fuel level fl0 to fl4, plane1 zooms from city3 to city0 with fuel level fl0 to fl1, plane1 zooms from city3 to city1 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl5 to fl4, plane1 gets refueled at city1 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl4 to fl1, plane1 zooms from city1 to city3 with fuel level fl2 to fl5, plane1 zooms from city3 to city2 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl5 to fl2, plane1 zooms from city0 to city3 with fuel level fl2 to fl0, plane1 zooms from city2 to city0 with fuel level fl5 to fl3, plane1 zooms from city1 to city3 with fuel level fl0 to fl1, plane1 zooms from city2 to city3 with fuel level fl6 to fl5, plane1 zooms from city2 to city3 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl4 to fl5, plane1 gets refueled at city3 with fuel level fl4 to fl5, plane1 zooms from city2 to city3 with fuel level fl0 to fl6, plane1 zooms from city1 to city0 with fuel level fl6 to fl3, plane1 zooms from city1 to city3 with fuel level fl5 to fl1, plane1 flies from city0 to city2 with fuel level fl5 to fl0, plane1 zooms from city1 to city0 with fuel level fl1 to fl2, plane1 zooms from city2 to city3 with fuel level fl6 to fl0, plane1 zooms from city2 to city0 with fuel level fl6 to fl1, plane1 zooms from city3 to city0 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl1 to fl2, plane1 flies from city1 to city0 with fuel level fl5 to fl1, plane1 zooms from city2 to city0 with fuel level fl1 to fl0, plane1 flies from city2 to city1 with fuel level fl5 to fl3, plane1 zooms from city2 to city1 with fuel level fl0 to fl6, plane1 flies from city3 to city1 with fuel level fl3 to fl1, plane1 zooms from city2 to city3 with fuel level fl4 to fl5, plane1 zooms from city3 to city0 with fuel level fl4 to fl0, plane1 zooms from city1 to city0 with fuel level fl1 to fl0, plane1 zooms from city2 to city1 with fuel level fl4 to fl5, plane1 zooms from city0 to city1 with fuel level fl2 to fl5, plane1 zooms from city3 to city1 with fuel level fl6 to fl3, plane1 zooms from city1 to city3 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl3 to fl2, plane1 zooms from city1 to city2 with fuel level fl3 to fl4, plane1 zooms from city3 to city1 with fuel level fl1 to fl2, plane1 zooms from city3 to city2 with fuel level fl1 to fl6, plane1 zooms from city0 to city1 with fuel level fl6 to fl5, plane1 zooms from city0 to city3 with fuel level fl5 to fl2, plane1 zooms from city2 to city0 with fuel level fl1 to fl2, plane1 zooms from city3 to city0 with fuel level fl5 to fl0, plane1 zooms from city3 to city2 with fuel level fl0 to fl2, plane1 zooms from city0 to city1 with fuel level fl5 to fl2, plane1 flies from city3 to city1 with fuel level fl6 to fl3, plane1 zooms from city0 to city1 with fuel level fl1 to fl0, plane1 zooms from city1 to city2 with fuel level fl5 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl3, plane1 zooms from city0 to city3 with fuel level fl2 to fl6, plane1 zooms from city3 to city0 with fuel level fl6 to fl4, plane1 zooms from city2 to city1 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl6 to fl4, plane1 flies from city0 to city2 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl5 to fl3, plane1 zooms from city2 to city1 with fuel level fl3 to fl4, plane1 zooms from city0 to city2 with fuel level fl4 to fl5, plane1 zooms from city1 to city2 with fuel level fl0 to fl3, plane1 zooms from city1 to city0 with fuel level fl5 to fl0, plane1 zooms from city0 to city1 with fuel level fl6 to fl4, plane1 zooms from city0 to city3 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl0 to fl6, plane1 zooms from city3 to city2 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl3 to fl2, plane1 zooms from city0 to city3 with fuel level fl0 to fl2, plane1 zooms from city1 to city0 with fuel level fl2 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl5, plane1 gets refueled at city0 with fuel level fl2 to fl0, plane1 flies from city0 to city3 with fuel level fl2 to fl6, plane1 flies from city3 to city2 with fuel level fl4 to fl2, plane1 gets refueled at city3 with fuel level fl5 to fl1, plane1 zooms from city1 to city2 with fuel level fl5 to fl6, plane1 zooms from city3 to city1 with fuel level fl3 to fl6, plane1 zooms from city0 to city2 with fuel level fl2 to fl6, person4 boards plane1 at city0, plane1 zooms from city3 to city2 with fuel level fl1 to fl4, plane1 zooms from city1 to city3 with fuel level fl3 to fl2, plane1 gets refueled at city3 with fuel level fl6 to fl5, plane1 zooms from city2 to city0 with fuel level fl6 to fl0, plane1 zooms from city2 to city3 with fuel level fl3 to fl1, plane1 zooms from city1 to city2 with fuel level fl5 to fl1, plane1 zooms from city0 to city3 with fuel level fl2 to fl3, plane1 flies from city3 to city0 with fuel level fl4 to fl5, plane1 flies from city0 to city3 with fuel level fl0 to fl6, plane1 zooms from city1 to city2 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl0 to fl3, plane1 flies from city3 to city0 with fuel level fl3 to fl5, plane1 zooms from city1 to city0 with fuel level fl3 to fl2, plane1 zooms from city1 to city2 with fuel level fl1 to fl6, plane1 zooms from city2 to city3 with fuel level fl1 to fl3, plane1 zooms from city1 to city2 with fuel level fl1 to fl2, plane1 flies from city2 to city1 with fuel level fl4 to fl6, plane1 zooms from city0 to city1 with fuel level fl1 to fl2, plane1 flies from city3 to city2 with fuel level fl2 to fl6, plane1 zooms from city3 to city1 with fuel level fl3 to fl0, plane1 flies from city0 to city2 with fuel level fl1 to fl3, plane1 gets refueled at city3 with fuel level fl2 to fl0, plane1 zooms from city0 to city1 with fuel level fl5 to fl6, plane1 zooms from city0 to city2 with fuel level fl6 to fl1, plane1 zooms from city0 to city1 with fuel level fl2 to fl4, plane1 zooms from city0 to city2 with fuel level fl5 to fl3, plane1 flies from city3 to city1 with fuel level fl3 to fl0, plane1 zooms from city2 to city0 with fuel level fl4 to fl0, plane1 flies from city2 to city3 with fuel level fl3 to fl1, plane1 flies from city3 to city0 with fuel level fl5 to fl4, plane1 zooms from city3 to city0 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl2 to fl3, plane1 zooms from city1 to city0 with fuel level fl2 to fl0, plane1 zooms from city0 to city2 with fuel level fl3 to fl1, plane1 gets refueled at city2 with fuel level fl1 to fl6, plane1 flies from city0 to city1 with fuel level fl6 to fl5, plane1 zooms from city3 to city0 with fuel level fl1 to fl6, plane1 zooms from city1 to city3 with fuel level fl0 to fl6, plane1 zooms from city0 to city1 with fuel level fl3 to fl5, plane1 zooms from city1 to city0 with fuel level fl1 to fl6, plane1 zooms from city0 to city1 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl2 to fl1, plane1 zooms from city3 to city1 with fuel level fl1 to fl6, plane1 zooms from city3 to city1 with fuel level fl5 to fl4, plane1 flies from city1 to city2 with fuel level fl2 to fl0, plane1 zooms from city0 to city3 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl1 to fl3, plane1 flies from city1 to city0 with fuel level fl5 to fl0, plane1 flies from city2 to city0 with fuel level fl5 to fl0, plane1 zooms from city1 to city3 with fuel level fl3 to fl4, plane1 zooms from city1 to city2 with fuel level fl6 to fl0, plane1 flies from city3 to city0 with fuel level fl4 to fl2, plane1 zooms from city1 to city3 with fuel level fl6 to fl5, plane1 zooms from city3 to city0 with fuel level fl2 to fl0, plane1 zooms from city2 to city0 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl3 to fl5, plane1 flies from city3 to city0 with fuel level fl2 to fl6, plane1 zooms from city2 to city3 with fuel level fl5 to fl1, plane1 zooms from city2 to city0 with fuel level fl3 to fl1, plane1 zooms from city0 to city1 with fuel level fl0 to fl6, plane1 zooms from city1 to city3 with fuel level fl3 to fl1, plane1 zooms from city1 to city0 with fuel level fl0 to fl3, plane1 zooms from city3 to city2 with fuel level fl0 to fl1, plane1 zooms from city2 to city1 with fuel level fl4 to fl6, plane1 zooms from city0 to city3 with fuel level fl5 to fl2, plane1 zooms from city1 to city0 with fuel level fl0 to fl1, plane1 flies from city1 to city3 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl5 to fl4, plane1 zooms from city1 to city3 with fuel level fl4 to fl5, plane1 flies from city0 to city2 with fuel level fl6 to fl0, plane1 flies from city1 to city3 with fuel level fl0 to fl6, plane1 flies from city1 to city0 with fuel level fl1 to fl2, plane1 zooms from city0 to city1 with fuel level fl3 to fl2, plane1 zooms from city1 to city0 with fuel level fl6 to fl4, plane1 zooms from city1 to city0 with fuel level fl4 to fl1, plane1 zooms from city1 to city2 with fuel level fl4 to fl5, plane1 flies from city0 to city1 with fuel level fl4 to fl0, plane1 zooms from city0 to city3 with fuel level fl4 to fl0, plane1 zooms from city1 to city0 with fuel level fl6 to fl1, plane1 gets refueled at city3 with fuel level fl6 to fl4, plane1 flies from city1 to city2 with fuel level fl4 to fl6, plane1 zooms from city0 to city3 with fuel level fl2 to fl5, plane1 zooms from city2 to city0 with fuel level fl0 to fl6, plane1 zooms from city0 to city3 with fuel level fl4 to fl1, plane1 zooms from city1 to city0 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl4 to fl1, plane1 zooms from city0 to city3 with fuel level fl6 to fl3, plane1 zooms from city1 to city2 with fuel level fl4 to fl0, plane1 zooms from city0 to city1 with fuel level fl2 to fl3, plane1 zooms from city2 to city1 with fuel level fl2 to fl0, plane1 flies from city3 to city0 with fuel level fl6 to fl1, plane1 zooms from city1 to city0 with fuel level fl4 to fl3, plane1 zooms from city3 to city1 with fuel level fl3 to fl5, plane1 zooms from city3 to city2 with fuel level fl1 to fl6, plane1 zooms from city0 to city1 with fuel level fl2 to fl3, plane1 zooms from city1 to city2 with fuel level fl3 to fl5, plane1 zooms from city3 to city0 with fuel level fl1 to fl6, plane1 zooms from city1 to city2 with fuel level fl5 to fl4, plane1 flies from city0 to city3 with fuel level fl3 to fl4, plane1 flies from city0 to city1 with fuel level fl6 to fl3, plane1 zooms from city1 to city2 with fuel level fl2 to fl0, plane1 zooms from city0 to city1 with fuel level fl3 to fl4, plane1 zooms from city1 to city0 with fuel level fl1 to fl0, person5 boards plane1 at city2, plane1 zooms from city0 to city2 with fuel level fl3 to fl0, plane1 zooms from city2 to city3 with fuel level fl0 to fl4, plane1 zooms from city1 to city0 with fuel level fl6 to fl2, plane1 zooms from city0 to city3 with fuel level fl4 to fl5, plane1 zooms from city0 to city3 with fuel level fl0 to fl4, plane1 zooms from city1 to city3 with fuel level fl3 to fl2, plane1 zooms from city2 to city0 with fuel level fl6 to fl2, plane1 flies from city0 to city2 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl6 to fl3, plane1 zooms from city0 to city1 with fuel level fl4 to fl5, plane1 zooms from city2 to city0 with fuel level fl5 to fl4, plane1 flies from city1 to city2 with fuel level fl3 to fl2, plane1 zooms from city0 to city3 with fuel level fl4 to fl0, plane1 zooms from city3 to city2 with fuel level fl4 to fl3, plane1 zooms from city1 to city0 with fuel level fl2 to fl5, plane1 zooms from city2 to city3 with fuel level fl4 to fl3, plane1 zooms from city0 to city2 with fuel level fl2 to fl1, plane1 zooms from city2 to city0 with fuel level fl5 to fl2, plane1 zooms from city2 to city3 with fuel level fl1 to fl2, plane1 gets refueled at city2 with fuel level fl0 to fl2, plane1 zooms from city1 to city0 with fuel level fl4 to fl0, plane1 flies from city1 to city0 with fuel level fl1 to fl5, plane1 zooms from city3 to city0 with fuel level fl4 to fl5, plane1 zooms from city2 to city0 with fuel level fl3 to fl2, plane1 flies from city0 to city1 with fuel level fl1 to fl4, plane1 zooms from city0 to city3 with fuel level fl4 to fl6, plane1 zooms from city0 to city3 with fuel level fl1 to fl4, plane1 zooms from city1 to city0 with fuel level fl2 to fl4, plane1 zooms from city2 to city1 with fuel level fl2 to fl0, plane1 zooms from city1 to city0 with fuel level fl5 to fl1, plane1 zooms from city1 to city0 with fuel level fl5 to fl2, plane1 zooms from city2 to city3 with fuel level fl6 to fl0, plane1 flies from city1 to city3 with fuel level fl6 to fl0, plane1 zooms from city3 to city1 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl6 to fl5, plane1 gets refueled at city0 with fuel level fl4 to fl6, plane1 gets refueled at city1 with fuel level fl5 to fl4, person5 departs plane1 at city2, plane1 zooms from city2 to city0 with fuel level fl2 to fl4, plane1 zooms from city2 to city3 with fuel level fl3 to fl4, plane1 zooms from city0 to city1 with fuel level fl4 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl0, plane1 zooms from city3 to city2 with fuel level fl2 to fl0, plane1 zooms from city1 to city0 with fuel level fl6 to fl5, plane1 zooms from city3 to city1 with fuel level fl4 to fl3, plane1 zooms from city3 to city0 with fuel level fl3 to fl6, plane1 zooms from city0 to city3 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl3 to fl5, plane1 gets refueled at city3 with fuel level fl4 to fl3, plane1 zooms from city1 to city0 with fuel level fl6 to fl4, plane1 zooms from city2 to city3 with fuel level fl2 to fl3, person2 boards plane1 at city0, plane1 zooms from city1 to city2 with fuel level fl6 to fl4, plane1 gets refueled at city0 with fuel level fl5 to fl1, plane1 gets refueled at city2 with fuel level fl3 to fl0, plane1 zooms from city0 to city2 with fuel level fl0 to fl6, plane1 zooms from city2 to city1 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl4 to fl1, plane1 zooms from city0 to city3 with fuel level fl1 to fl0, plane1 zooms from city1 to city2 with fuel level fl1 to fl2, plane1 zooms from city2 to city1 with fuel level fl1 to fl6, plane1 gets refueled at city1 with fuel level fl6 to fl4, plane1 flies from city2 to city1 with fuel level fl1 to fl6, plane1 zooms from city0 to city3 with fuel level fl3 to fl0, plane1 zooms from city0 to city1 with fuel level fl0 to fl5, plane1 zooms from city1 to city0 with fuel level fl4 to fl0, plane1 zooms from city2 to city1 with fuel level fl1 to fl3, plane1 zooms from city3 to city2 with fuel level fl3 to fl0, plane1 zooms from city1 to city2 with fuel level fl2 to fl4, plane1 zooms from city0 to city3 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl0 to fl5, plane1 zooms from city2 to city1 with fuel level fl5 to fl3, plane1 zooms from city0 to city2 with fuel level fl0 to fl2, plane1 zooms from city2 to city0 with fuel level fl1 to fl6, plane1 zooms from city1 to city0 with fuel level fl3 to fl0, plane1 zooms from city3 to city2 with fuel level fl0 to fl2, plane1 zooms from city1 to city2 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl6 to fl5, plane1 zooms from city3 to city2 with fuel level fl3 to fl2, plane1 zooms from city0 to city1 with fuel level fl3 to fl0, plane1 zooms from city1 to city0 with fuel level fl1 to fl3, plane1 zooms from city0 to city2 with fuel level fl4 to fl6, plane1 zooms from city3 to city0 with fuel level fl0 to fl4, plane1 zooms from city3 to city0 with fuel level fl1 to fl6, plane1 zooms from city3 to city1 with fuel level fl5 to fl6, plane1 zooms from city1 to city3 with fuel level fl1 to fl3, plane1 flies from city1 to city2 with fuel level fl4 to fl1, plane1 zooms from city3 to city2 with fuel level fl1 to fl5, plane1 zooms from city2 to city1 with fuel level fl4 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl1, plane1 zooms from city0 to city3 with fuel level fl0 to fl2, plane1 flies from city3 to city1 with fuel level fl3 to fl6, plane1 zooms from city0 to city3 with fuel level fl3 to fl1, plane1 zooms from city3 to city1 with fuel level fl3 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl3, plane1 flies from city2 to city1 with fuel level fl4 to fl5, plane1 zooms from city3 to city0 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city2 with fuel level fl3 to fl5, plane1 zooms from city2 to city1 with fuel level fl0 to fl5, plane1 zooms from city0 to city1 with fuel level fl0 to fl6, plane1 zooms from city1 to city3 with fuel level fl2 to fl0, plane1 zooms from city2 to city1 with fuel level fl0 to fl6, plane1 flies from city0 to city2 with fuel level fl4 to fl5, plane1 zooms from city1 to city0 with fuel level fl4 to fl1, plane1 gets refueled at city1 with fuel level fl6 to fl2, plane1 gets refueled at city3 with fuel level fl2 to fl3, plane1 zooms from city0 to city2 with fuel level fl0 to fl5, plane1 gets refueled at city2 with fuel level fl1 to fl0, plane1 zooms from city0 to city1 with fuel level fl6 to fl5, plane1 zooms from city2 to city1 with fuel level fl2 to fl3, plane1 flies from city2 to city3 with fuel level fl0 to fl4, plane1 zooms from city2 to city3 with fuel level fl0 to fl5, person4 boards plane1 at city3, plane1 zooms from city2 to city0 with fuel level fl4 to fl6, plane1 zooms from city2 to city0 with fuel level fl3 to fl5, plane1 gets refueled at city2 with fuel level fl5 to fl3, plane1 zooms from city0 to city1 with fuel level fl2 to fl6, plane1 gets refueled at city0 with fuel level fl1 to fl4, plane1 zooms from city0 to city1 with fuel level fl5 to fl6, plane1 zooms from city3 to city2 with fuel level fl0 to fl4, plane1 flies from city0 to city1 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl4 to fl3, plane1 zooms from city1 to city2 with fuel level fl0 to fl4, plane1 flies from city2 to city0 with fuel level fl2 to fl0, plane1 zooms from city3 to city1 with fuel level fl0 to fl5, plane1 zooms from city2 to city3 with fuel level fl2 to fl6, plane1 zooms from city1 to city2 with fuel level fl1 to fl5, plane1 gets refueled at city1 with fuel level fl0 to fl3, plane1 zooms from city1 to city3 with fuel level fl4 to fl0, plane1 zooms from city3 to city0 with fuel level fl1 to fl6, plane1 zooms from city3 to city0 with fuel level fl3 to fl5, plane1 zooms from city1 to city3 with fuel level fl4 to fl2, plane1 flies from city3 to city2 with fuel level fl6 to fl1, plane1 zooms from city2 to city1 with fuel level fl2 to fl6, plane1 zooms from city0 to city1 with fuel level fl3 to fl4, plane1 flies from city0 to city3 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl5 to fl1, plane1 zooms from city0 to city2 with fuel level fl1 to fl2, plane1 zooms from city0 to city1 with fuel level fl1 to fl3, plane1 flies from city2 to city3 with fuel level fl2 to fl5, plane1 zooms from city1 to city3 with fuel level fl5 to fl2, plane1 gets refueled at city0 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl6 to fl2, plane1 zooms from city0 to city3 with fuel level fl2 to fl3, plane1 zooms from city0 to city2 with fuel level fl5 to fl3, plane1 zooms from city3 to city1 with fuel level fl4 to fl0, plane1 zooms from city1 to city0 with fuel level fl4 to fl6, plane1 flies from city3 to city1 with fuel level fl1 to fl4, plane1 zooms from city1 to city3 with fuel level fl0 to fl6, plane1 zooms from city1 to city0 with fuel level fl6 to fl1, plane1 zooms from city2 to city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl5 to fl0, plane1 flies from city3 to city2 with fuel level fl4 to fl5, plane1 zooms from city3 to city0 with fuel level fl4 to fl2, plane1 zooms from city1 to city0 with fuel level fl0 to fl1, plane1 flies from city2 to city0 with fuel level fl6 to fl3, plane1 zooms from city2 to city1 with fuel level fl2 to fl3, plane1 zooms from city3 to city0 with fuel level fl6 to fl1, plane1 zooms from city1 to city3 with fuel level fl0 to fl3, plane1 zooms from city3 to city1 with fuel level fl0 to fl3, plane1 flies from city2 to city0 with fuel level fl1 to fl6, plane1 zooms from city1 to city2 with fuel level fl5 to fl0, plane1 gets refueled at city3 with fuel level fl5 to fl2, plane1 flies from city2 to city3 with fuel level fl3 to fl0, plane1 flies from city3 to city1 with fuel level fl2 to fl3, plane1 zooms from city3 to city2 with fuel level fl5 to fl3, plane1 flies from city0 to city3 with fuel level fl1 to fl3, plane1 zooms from city1 to city0 with fuel level fl4 to fl5, person2 departs plane1 at city0, plane1 zooms from city0 to city1 with fuel level fl2 to fl0, plane1 gets refueled at city0 with fuel level fl3 to fl0, plane1 flies from city0 to city3 with fuel level fl0 to fl5, plane1 flies from city1 to city2 with fuel level fl6 to fl2, plane1 zooms from city1 to city2 with fuel level fl5 to fl3, plane1 zooms from city2 to city0 with fuel level fl6 to fl5, plane1 flies from city1 to city2 with fuel level fl6 to fl0, plane1 zooms from city1 to city3 with fuel level fl1 to fl0, plane1 flies from city0 to city2 with fuel level fl3 to fl5, plane1 zooms from city0 to city3 with fuel level fl6 to fl2, plane1 zooms from city0 to city3 with fuel level fl3 to fl1, plane1 zooms from city3 to city1 with fuel level fl3 to fl4, plane1 zooms from city0 to city3 with fuel level fl5 to fl2, plane1 zooms from city3 to city1 with fuel level fl6 to fl0, plane1 zooms from city0 to city1 with fuel level fl2 to fl0, plane1 gets refueled at city3 with fuel level fl6 to fl2, plane1 zooms from city3 to city2 with fuel level fl2 to fl5, plane1 flies from city3 to city2 with fuel level fl0 to fl3, plane1 flies from city3 to city0 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl0 to fl6, plane1 zooms from city3 to city2 with fuel level fl1 to fl3, plane1 zooms from city0 to city1 with fuel level fl3 to fl0, plane1 zooms from city3 to city2 with fuel level fl0 to fl5, person5 boards plane1 at city0, plane1 gets refueled at city1 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl1 to fl3, plane1 zooms from city2 to city0 with fuel level fl2 to fl0, plane1 zooms from city2 to city1 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl6 to fl2, plane1 zooms from city1 to city0 with fuel level fl6 to fl5, plane1 zooms from city0 to city1 with fuel level fl4 to fl0, plane1 zooms from city1 to city0 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl5 to fl6, plane1 flies from city2 to city1 with fuel level fl0 to fl2, plane1 zooms from city2 to city1 with fuel level fl6 to fl2, plane1 zooms from city1 to city3 with fuel level fl1 to fl0, plane1 zooms from city0 to city2 with fuel level fl2 to fl5, plane1 zooms from city3 to city1 with fuel level fl2 to fl5, plane1 zooms from city1 to city0 with fuel level fl4 to fl2, plane1 zooms from city1 to city0 with fuel level fl1 to fl2, plane1 flies from city3 to city1 with fuel level fl1 to fl6, plane1 zooms from city2 to city3 with fuel level fl5 to fl0, plane1 zooms from city2 to city0 with fuel level fl3 to fl4, plane1 zooms from city2 to city1 with fuel level fl3 to fl1, plane1 zooms from city2 to city0 with fuel level fl4 to fl2, plane1 zooms from city0 to city2 with fuel level fl5 to fl2, plane1 zooms from city2 to city0 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl2 to fl3, plane1 flies from city1 to city0 with fuel level fl3 to fl1, plane1 zooms from city0 to city3 with fuel level fl5 to fl3, plane1 zooms from city1 to city3 with fuel level fl2 to fl3, plane1 gets refueled at city2 with fuel level fl0 to fl4, plane1 flies from city1 to city2 with fuel level fl6 to fl3, plane1 zooms from city0 to city2 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl6 to fl5, plane1 zooms from city2 to city0 with fuel level fl0 to fl1, person5 boards plane1 at city3, plane1 zooms from city3 to city2 with fuel level fl2 to fl0, plane1 zooms from city1 to city3 with fuel level fl6 to fl4, plane1 gets refueled at city0 with fuel level fl4 to fl5, plane1 flies from city2 to city3 with fuel level fl6 to fl5, plane1 zooms from city0 to city2 with fuel level fl3 to fl6, plane1 zooms from city0 to city2 with fuel level fl4 to fl1, plane1 zooms from city3 to city0 with fuel level fl6 to fl5, plane1 zooms from city0 to city3 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl3 to fl4, plane1 zooms from city3 to city1 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl4 to fl0, plane1 flies from city0 to city3 with fuel level fl1 to fl4, plane1 zooms from city2 to city3 with fuel level fl6 to fl4, plane1 zooms from city3 to city0 with fuel level fl2 to fl0, plane1 zooms from city0 to city1 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl3 to fl2, plane1 zooms from city0 to city3 with fuel level fl2 to fl4, plane1 flies from city1 to city3 with fuel level fl6 to fl1, plane1 zooms from city1 to city0 with fuel level fl0 to fl3, plane1 flies from city0 to city2 with fuel level fl1 to fl6, plane1 zooms from city1 to city0 with fuel level fl2 to fl1, plane1 flies from city2 to city1 with fuel level fl3 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl2, plane1 zooms from city3 to city0 with fuel level fl5 to fl6, plane1 zooms from city3 to city2 with fuel level fl3 to fl6, plane1 zooms from city3 to city1 with fuel level fl0 to fl5, plane1 flies from city3 to city1 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl6 to fl5, plane1 zooms from city3 to city1 with fuel level fl4 to fl3, plane1 zooms from city2 to city0 with fuel level fl2 to fl0, plane1 zooms from city0 to city3 with fuel level fl0 to fl1, plane1 zooms from city2 to city1 with fuel level fl6 to fl3, plane1 zooms from city2 to city0 with fuel level fl1 to fl0, plane1 zooms from city0 to city3 with fuel level fl1 to fl6, plane1 zooms from city0 to city1 with fuel level fl6 to fl2, plane1 zooms from city2 to city0 with fuel level fl3 to fl6, plane1 zooms from city0 to city1 with fuel level fl2 to fl4, plane1 gets refueled at city2 with fuel level fl2 to fl0, plane1 zooms from city0 to city1 with fuel level fl3 to fl1, plane1 flies from city3 to city0 with fuel level fl3 to fl0, plane1 zooms from city3 to city1 with fuel level fl1 to fl5, plane1 flies from city2 to city1 with fuel level fl3 to fl6, plane1 zooms from city1 to city0 with fuel level fl1 to fl6, plane1 zooms from city3 to city1 with fuel level fl5 to fl2, plane1 zooms from city2 to city0 with fuel level fl0 to fl4, plane1 gets refueled at city2 with fuel level fl4 to fl2, plane1 zooms from city1 to city0 with fuel level fl3 to fl0, plane1 zooms from city0 to city2 with fuel level fl1 to fl3, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 zooms from city3 to city0 with fuel level fl1 to fl5, plane1 zooms from city3 to city1 with fuel level fl6 to fl5, plane1 zooms from city0 to city1 with fuel level fl2 to fl5, plane1 flies from city2 to city0 with fuel level fl0 to fl3, plane1 zooms from city0 to city2 with fuel level fl2 to fl3, plane1 zooms from city0 to city2 with fuel level fl6 to fl4, plane1 zooms from city1 to city2 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl4 to fl3, plane1 zooms from city3 to city2 with fuel level fl2 to fl6, plane1 zooms from city3 to city1 with fuel level fl3 to fl1, plane1 gets refueled at city3 with fuel level fl6 to fl1, plane1 zooms from city0 to city3 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl5 to fl6, plane1 zooms from city0 to city3 with fuel level fl0 to fl3, plane1 flies from city1 to city0 with fuel level fl6 to fl4, plane1 zooms from city2 to city3 with fuel level fl0 to fl4, plane1 zooms from city0 to city1 with fuel level fl5 to fl0, plane1 zooms from city3 to city0 with fuel level fl4 to fl6, plane1 zooms from city3 to city1 with fuel level fl1 to fl2, plane1 zooms from city2 to city0 with fuel level fl2 to fl1, plane1 flies from city3 to city1 with fuel level fl4 to fl1, plane1 zooms from city0 to city3 with fuel level fl0 to fl1, plane1 zooms from city0 to city1 with fuel level fl0 to fl4, plane1 zooms from city0 to city2 with fuel level fl3 to fl1, plane1 zooms from city0 to city1 with fuel level fl3 to fl6, plane1 zooms from city3 to city2 with fuel level fl0 to fl3, plane1 zooms from city3 to city0 with fuel level fl1 to fl4, plane1 zooms from city2 to city3 with fuel level fl2 to fl1, plane1 flies from city0 to city1 with fuel level fl3 to fl5, plane1 zooms from city1 to city2 with fuel level fl1 to fl5, plane1 flies from city1 to city3 with fuel level fl0 to fl1, plane1 zooms from city2 to city0 with fuel level fl3 to fl1, plane1 zooms from city0 to city1 with fuel level fl5 to fl1, plane1 zooms from city1 to city0 with fuel level fl6 to fl1, plane1 zooms from city1 to city2 with fuel level fl0 to fl4, plane1 zooms from city0 to city1 with fuel level fl4 to fl5, plane1 zooms from city1 to city3 with fuel level fl1 to fl5, plane1 zooms from city1 to city0 with fuel level fl3 to fl2, plane1 zooms from city2 to city3 with fuel level fl6 to fl3, plane1 gets refueled at city1 with fuel level fl5 to fl3, plane1 zooms from city3 to city0 with fuel level fl6 to fl4, plane1 zooms from city3 to city2 with fuel level fl2 to fl5, plane1 zooms from city2 to city1 with fuel level fl1 to fl5, plane1 flies from city1 to city3 with fuel level fl6 to fl5, plane1 zooms from city1 to city0 with fuel level fl5 to fl1, plane1 gets refueled at city2 with fuel level fl4 to fl0, plane1 zooms from city3 to city2 with fuel level fl5 to fl4, plane1 flies from city0 to city1 with fuel level fl5 to fl3, plane1 zooms from city2 to city0 with fuel level fl1 to fl2, plane1 flies from city0 to city3 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl5 to fl6, plane1 zooms from city1 to city2 with fuel level fl3 to fl1, plane1 zooms from city1 to city2 with fuel level fl4 to fl0, plane1 zooms from city2 to city3 with fuel level fl5 to fl4, plane1 zooms from city0 to city3 with fuel level fl0 to fl3, plane1 zooms from city2 to city1 with fuel level fl4 to fl0, plane1 zooms from city0 to city2 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl2 to fl0, plane1 flies from city3 to city1 with fuel level fl3 to fl5, plane1 zooms from city0 to city2 with fuel level fl5 to fl1, plane1 zooms from city3 to city1 with fuel level fl5 to fl6, plane1 zooms from city1 to city2 with fuel level fl4 to fl2, plane1 zooms from city0 to city2 with fuel level fl1 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl4, plane1 flies from city2 to city1 with fuel level fl5 to fl4, plane1 zooms from city3 to city0 with fuel level fl2 to fl4, plane1 zooms from city0 to city2 with fuel level fl0 to fl2, plane1 zooms from city2 to city1 with fuel level fl2 to fl6, plane1 zooms from city1 to city0 with fuel level fl3 to fl1, plane1 zooms from city0 to city3 with fuel level fl4 to fl5, plane1 zooms from city1 to city0 with fuel level fl1 to fl3, plane1 zooms from city1 to city0 with fuel level fl2 to fl0, plane1 flies from city2 to city0 with fuel level fl3 to fl5, plane1 zooms from city2 to city1 with fuel level fl3 to fl4, plane1 zooms from city3 to city2 with fuel level fl1 to fl5, plane1 zooms from city1 to city0 with fuel level fl4 to fl2, plane1 zooms from city1 to city3 with fuel level fl4 to fl0, plane1 zooms from city0 to city1 with fuel level fl4 to fl1, plane1 zooms from city2 to city3 with fuel level fl5 to fl0, plane1 flies from city2 to city3 with fuel level fl2 to fl0, plane1 zooms from city2 to city1 with fuel level fl5 to fl2, plane1 zooms from city2 to city1 with fuel level fl0 to fl3, plane1 zooms from city2 to city1 with fuel level fl2 to fl6, plane1 zooms from city0 to city1 with fuel level fl5 to fl3, plane1 zooms from city3 to city0 with fuel level fl0 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl2, plane1 gets refueled at city3 with fuel level fl3 to fl4, plane1 zooms from city0 to city2 with fuel level fl2 to fl0, plane1 flies from city0 to city3 with fuel level fl2 to fl4, plane1 zooms from city2 to city1 with fuel level fl3 to fl0, plane1 zooms from city1 to city3 with fuel level fl0 to fl4, plane1 gets refueled at city1 with fuel level fl6 to fl3, plane1 zooms from city1 to city2 with fuel level fl6 to fl5, plane1 zooms from city1 to city3 with fuel level fl4 to fl5, plane1 gets refueled at city3 with fuel level fl4 to fl6, plane1 zooms from city2 to city0 with fuel level fl6 to fl2, plane1 zooms from city3 to city0 with fuel level fl0 to fl2, plane1 zooms from city0 to city1 with fuel level fl6 to fl2, plane1 flies from city1 to city3 with fuel level fl1 to fl2, plane1 zooms from city3 to city2 with fuel level fl0 to fl1, plane1 zooms from city1 to city0 with fuel level fl3 to fl5, plane1 zooms from city2 to city1 with fuel level fl3 to fl5, plane1 zooms from city0 to city3 with fuel level fl3 to fl4, plane1 zooms from city1 to city0 with fuel level fl6 to fl3, plane1 zooms from city3 to city0 with fuel level fl2 to fl4, plane1 flies from city3 to city2 with fuel level fl4 to fl0, plane1 zooms from city1 to city2 with fuel level fl4 to fl1, plane1 zooms from city2 to city0 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl0 to fl6, plane1 zooms from city0 to city1 with fuel level fl0 to fl1, plane1 zooms from city3 to city2 with fuel level fl4 to fl5, plane1 zooms from city1 to city3 with fuel level fl5 to fl2, plane1 zooms from city3 to city1 with fuel level fl3 to fl2, plane1 zooms from city2 to city1 with fuel level fl5 to fl1, plane1 zooms from city2 to city3 with fuel level fl1 to fl0, plane1 flies from city1 to city3 with fuel level fl4 to fl5, plane1 zooms from city0 to city1 with fuel level fl3 to fl6, plane1 zooms from city0 to city3 with fuel level fl4 to fl6, plane1 flies from city0 to city1 with fuel level fl5 to fl6, plane1 zooms from city0 to city3 with fuel level fl0 to fl1, plane1 zooms from city3 to city0 with fuel level fl6 to fl3, plane1 zooms from city0 to city3 with fuel level fl0 to fl1, plane1 zooms from city2 to city0 with fuel level fl0 to fl1, plane1 zooms from city2 to city1 with fuel level fl0 to fl3, plane1 zooms from city3 to city2 with fuel level fl1 to fl6, plane1 zooms from city3 to city0 with fuel level fl6 to fl4, plane1 zooms from city1 to city2 with fuel level fl0 to fl6, plane1 flies from city3 to city2 with fuel level fl2 to fl4, plane1 zooms from city0 to city3 with fuel level fl6 to fl2, plane1 flies from city1 to city3 with fuel level fl5 to fl2, plane1 gets refueled at city2 with fuel level fl6 to fl1, plane1 flies from city2 to city0 with fuel level fl5 to fl1, plane1 zooms from city3 to city0 with fuel level fl2 to fl4, plane1 zooms from city2 to city3 with fuel level fl4 to fl2, plane1 zooms from city1 to city3 with fuel level fl2 to fl5, plane1 zooms from city3 to city1 with fuel level fl1 to fl4, plane1 zooms from city0 to city1 with fuel level fl4 to fl3, plane1 zooms from city0 to city3 with fuel level fl4 to fl1, plane1 zooms from city0 to city2 with fuel level fl6 to fl5, plane1 zooms from city1 to city2 with fuel level fl3 to fl4, plane1 zooms from city3 to city1 with fuel level fl4 to fl2, plane1 zooms from city1 to city3 with fuel level fl6 to fl1, plane1 zooms from city3 to city0 with fuel level fl4 to fl6, plane1 zooms from city3 to city1 with fuel level fl6 to fl5, plane1 zooms from city0 to city3 with fuel level fl5 to fl3, plane1 zooms from city0 to city1 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl1 to fl4, plane1 flies from city2 to city1 with fuel level fl6 to fl0, plane1 gets refueled at city2 with fuel level fl5 to fl1, plane1 zooms from city0 to city1 with fuel level fl2 to fl5, plane1 flies from city1 to city3 with fuel level fl1 to fl4, plane1 zooms from city2 to city0 with fuel level fl6 to fl4, plane1 zooms from city3 to city1 with fuel level fl6 to fl2, plane1 zooms from city0 to city1 with fuel level fl4 to fl1, plane1 zooms from city2 to city0 with fuel level fl2 to fl3, plane1 flies from city1 to city3 with fuel level fl2 to fl5, plane1 zooms from city2 to city0 with fuel level fl5 to fl1, plane1 gets refueled at city2 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl4 to fl6, plane1 gets refueled at city2 with fuel level fl1 to fl2, plane1 flies from city0 to city2 with fuel level fl3 to fl2, plane1 zooms from city3 to city0 with fuel level fl3 to fl4, plane1 zooms from city3 to city1 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl1 to fl3, plane1 zooms from city0 to city2 with fuel level fl4 to fl5, plane1 flies from city3 to city2 with fuel level fl6 to fl0, plane1 zooms from city3 to city1 with fuel level fl3 to fl2, plane1 flies from city3 to city2 with fuel level fl5 to fl0, plane1 zooms from city1 to city0 with fuel level fl1 to fl6, plane1 zooms from city3 to city1 with fuel level fl4 to fl6, plane1 zooms from city2 to city1 with fuel level fl4 to fl1, plane1 zooms from city0 to city1 with fuel level fl0 to fl2, plane1 zooms from city3 to city0 with fuel level fl5 to fl6, person4 departs plane1 at city0, plane1 zooms from city0 to city3 with fuel level fl4 to fl0, plane1 zooms from city3 to city0 with fuel level fl5 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl3, plane1 zooms from city0 to city2 with fuel level fl3 to fl1, plane1 flies from city2 to city1 with fuel level fl6 to fl1, plane1 zooms from city2 to city1 with fuel level fl5 to fl0, plane1 zooms from city2 to city3 with fuel level fl2 to fl3, plane1 zooms from city3 to city1 with fuel level fl2 to fl0, plane1 zooms from city3 to city1 with fuel level fl3 to fl6, plane1 zooms from city3 to city2 with fuel level fl4 to fl0, person6 departs plane1 at city2, plane1 zooms from city2 to city1 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl0 to fl4, plane1 zooms from city2 to city0 with fuel level fl4 to fl0, plane1 zooms from city3 to city0 with fuel level fl5 to fl6, plane1 zooms from city2 to city0 with fuel level fl3 to fl4, plane1 zooms from city3 to city2 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl2 to fl4, plane1 flies from city1 to city2 with fuel level fl2 to fl1, plane1 zooms from city1 to city2 with fuel level fl6 to fl1, plane1 zooms from city3 to city1 with fuel level fl2 to fl1, plane1 zooms from city0 to city2 with fuel level fl4 to fl0, plane1 zooms from city3 to city2 with fuel level fl1 to fl6, plane1 flies from city2 to city3 with fuel level fl1 to fl5, plane1 zooms from city3 to city2 with fuel level fl0 to fl6, plane1 zooms from city0 to city2 with fuel level fl0 to fl5, person3 departs plane1 at city0, plane1 zooms from city2 to city3 with fuel level fl3 to fl4, plane1 flies from city2 to city0 with fuel level fl1 to fl2, plane1 zooms from city1 to city3 with fuel level fl3 to fl6, plane1 zooms from city1 to city0 with fuel level fl2 to fl4, plane1 flies from city0 to city1 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl3 to fl4, plane1 zooms from city2 to city3 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl0 to fl2, plane1 zooms from city2 to city3 with fuel level fl3 to fl4, plane1 zooms from city3 to city2 with fuel level fl2 to fl1, plane1 zooms from city0 to city3 with fuel level fl5 to fl4, plane1 zooms from city0 to city1 with fuel level fl5 to fl0, plane1 zooms from city3 to city1 with fuel level fl3 to fl5, plane1 gets refueled at city3 with fuel level fl1 to fl2, plane1 zooms from city3 to city2 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl4 to fl5, plane1 zooms from city2 to city1 with fuel level fl1 to fl2, plane1 zooms from city1 to city3 with fuel level fl2 to fl4, plane1 zooms from city3 to city0 with fuel level fl0 to fl2, plane1 zooms from city3 to city2 with fuel level fl1 to fl2, plane1 zooms from city2 to city1 with fuel level fl4 to fl3, plane1 zooms from city0 to city3 with fuel level fl6 to fl1, plane1 zooms from city3 to city2 with fuel level fl1 to fl4, plane1 zooms from city0 to city1 with fuel level fl2 to fl0, person7 departs plane1 at city1, plane1 zooms from city1 to city0 with fuel level fl0 to fl2, plane1 flies from city0 to city2 with fuel level fl6 to fl4, plane1 gets refueled at city0 with fuel level fl5 to fl4, plane1 flies from city1 to city0 with fuel level fl1 to fl4, plane1 gets refueled at city1 with fuel level fl4 to fl0, plane1 zooms from city3 to city1 with fuel level fl2 to fl5, plane1 flies from city2 to city0 with fuel level fl5 to fl4, plane1 zooms from city2 to city0 with fuel level fl5 to fl4, plane1 zooms from city3 to city1 with fuel level fl6 to fl3, plane1 zooms from city3 to city1 with fuel level fl5 to fl1, plane1 zooms from city2 to city3 with fuel level fl3 to fl6, plane1 zooms from city3 to city2 with fuel level fl0 to fl5, plane1 zooms from city0 to city1 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl1 to fl4, plane1 zooms from city2 to city1 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl4 to fl6, plane1 zooms from city3 to city0 with fuel level fl1 to fl3, plane1 zooms from city2 to city0 with fuel level fl2 to fl5, plane1 zooms from city1 to city0 with fuel level fl1 to fl3, plane1 zooms from city1 to city3 with fuel level fl0 to fl3, person4 departs plane1 at city2, plane1 zooms from city3 to city0 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl2 to fl4, plane1 zooms from city1 to city3 with fuel level fl6 to fl0, plane1 zooms from city3 to city1 with fuel level fl0 to fl3, plane1 zooms from city1 to city2 with fuel level fl5 to fl3, plane1 flies from city0 to city3 with fuel level fl5 to fl6, plane1 gets refueled at city3 with fuel level fl3 to fl5, plane1 zooms from city0 to city3 with fuel level fl6 to fl5, plane1 gets refueled at city0 with fuel level fl5 to fl3, plane1 zooms from city2 to city1 with fuel level fl5 to fl4, plane1 zooms from city2 to city3 with fuel level fl3 to fl6, plane1 zooms from city3 to city1 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl5 to fl4, plane1 zooms from city2 to city3 with fuel level fl1 to fl3, plane1 zooms from city1 to city2 with fuel level fl3 to fl6, plane1 zooms from city1 to city0 with fuel level fl3 to fl2, plane1 zooms from city1 to city2 with fuel level fl2 to fl0, plane1 zooms from city3 to city0 with fuel level fl5 to fl0, plane1 zooms from city3 to city1 with fuel level fl0 to fl6, plane1 zooms from city3 to city2 with fuel level fl6 to fl0, plane1 gets refueled at city1 with fuel level fl3 to fl6, plane1 zooms from city2 to city1 with fuel level fl3 to fl0, plane1 zooms from city3 to city1 with fuel level fl3 to fl2, plane1 flies from city2 to city0 with fuel level fl0 to fl5, plane1 zooms from city0 to city2 with fuel level fl0 to fl5, person4 departs plane1 at city3, plane1 zooms from city3 to city2 with fuel level fl4 to fl3, plane1 zooms from city3 to city0 with fuel level fl5 to fl6, plane1 zooms from city2 to city1 with fuel level fl3 to fl1, plane1 zooms from city1 to city3 with fuel level fl4 to fl0, plane1 gets refueled at city3 with fuel level fl0 to fl3, plane1 flies from city1 to city3 with fuel level fl5 to fl4, plane1 zooms from city3 to city0 with fuel level fl5 to fl3, plane1 gets refueled at city3 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl6 to fl4, plane1 zooms from city1 to city3 with fuel level fl4 to fl1, plane1 zooms from city3 to city2 with fuel level fl3 to fl6, plane1 zooms from city3 to city2 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl1 to fl0, plane1 zooms from city3 to city0 with fuel level fl4 to fl2, plane1 zooms from city1 to city0 with fuel level fl0 to fl6, plane1 zooms from city0 to city3 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl0 to fl4, plane1 zooms from city0 to city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl4 to fl1, plane1 zooms from city2 to city3 with fuel level fl3 to fl5, plane1 gets refueled at city1 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl6 to fl4, plane1 zooms from city3 to city1 with fuel level fl2 to fl4, plane1 zooms from city3 to city0 with fuel level fl4 to fl1, plane1 zooms from city1 to city2 with fuel level fl3 to fl0, plane1 zooms from city0 to city1 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl0 to fl3, plane1 flies from city0 to city3 with fuel level fl6 to fl2, plane1 flies from city2 to city0 with fuel level fl1 to fl0, plane1 zooms from city3 to city1 with fuel level fl6 to fl3, plane1 zooms from city0 to city3 with fuel level fl2 to fl1, plane1 zooms from city1 to city0 with fuel level fl6 to fl2, plane1 zooms from city1 to city0 with fuel level fl3 to fl2, plane1 zooms from city1 to city0 with fuel level fl4 to fl3, plane1 zooms from city3 to city1 with fuel level fl1 to fl0, plane1 zooms from city3 to city1 with fuel level fl0 to fl4, plane1 zooms from city2 to city3 with fuel level fl6 to fl2, plane1 zooms from city0 to city2 with fuel level fl4 to fl6, plane1 zooms from city3 to city1 with fuel level fl1 to fl6, plane1 zooms from city3 to city2 with fuel level fl2 to fl3, plane1 zooms from city1 to city3 with fuel level fl0 to fl3, plane1 zooms from city2 to city0 with fuel level fl1 to fl4, plane1 zooms from city1 to city3 with fuel level fl3 to fl1, plane1 flies from city2 to city3 with fuel level fl0 to fl5, plane1 gets refueled at city2 with fuel level fl4 to fl1, plane1 zooms from city3 to city1 with fuel level fl0 to fl1, plane1 zooms from city3 to city0 with fuel level fl2 to fl6, plane1 flies from city0 to city2 with fuel level fl4 to fl0, plane1 zooms from city3 to city0 with fuel level fl6 to fl3, plane1 zooms from city0 to city2 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl6 to fl2, person5 departs plane1 at city3, plane1 zooms from city1 to city3 with fuel level fl4 to fl6, plane1 gets refueled at city3 with fuel level fl0 to fl6, plane1 zooms from city0 to city3 with fuel level fl4 to fl1, plane1 flies from city0 to city1 with fuel level fl0 to fl2, plane1 zooms from city3 to city0 with fuel level fl2 to fl3, plane1 flies from city0 to city2 with fuel level fl0 to fl5, plane1 flies from city2 to city3 with fuel level fl3 to fl2, plane1 flies from city1 to city2 with fuel level fl5 to fl3, plane1 zooms from city3 to city2 with fuel level fl5 to fl6, plane1 zooms from city3 to city2 with fuel level fl6 to fl4, plane1 zooms from city2 to city1 with fuel level fl5 to fl4, plane1 zooms from city3 to city1 with fuel level fl5 to fl3, plane1 zooms from city0 to city2 with fuel level fl4 to fl0, plane1 zooms from city0 to city2 with fuel level fl3 to fl6, plane1 zooms from city0 to city2 with fuel level fl6 to fl5, plane1 zooms from city3 to city1 with fuel level fl1 to fl2, plane1 flies from city0 to city3 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl3 to fl0, plane1 zooms from city3 to city2 with fuel level fl4 to fl2, plane1 zooms from city2 to city1 with fuel level fl1 to fl5, plane1 flies from city0 to city3 with fuel level fl4 to fl2, plane1 zooms from city2 to city1 with fuel level fl4 to fl3, plane1 zooms from city0 to city1 with fuel level fl0 to fl6, plane1 zooms from city0 to city1 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl5 to fl4, plane1 zooms from city1 to city2 with fuel level fl4 to fl5, plane1 flies from city3 to city0 with fuel level fl1 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl4, plane1 flies from city0 to city3 with fuel level fl6 to fl3, plane1 flies from city3 to city2 with fuel level fl4 to fl1, plane1 zooms from city1 to city2 with fuel level fl6 to fl3, plane1 zooms from city2 to city3 with fuel level fl5 to fl0, plane1 gets refueled at city1 with fuel level fl1 to fl4, plane1 zooms from city1 to city3 with fuel level fl3 to fl4, plane1 zooms from city1 to city0 with fuel level fl3 to fl0, plane1 zooms from city1 to city2 with fuel level fl0 to fl4, plane1 zooms from city2 to city3 with fuel level fl5 to fl2, plane1 zooms from city3 to city0 with fuel level fl0 to fl6, plane1 flies from city0 to city3 with fuel level fl6 to fl1, person3 departs plane1 at city2, plane1 zooms from city1 to city3 with fuel level fl6 to fl5, plane1 flies from city1 to city0 with fuel level fl6 to fl1, plane1 zooms from city0 to city3 with fuel level fl3 to fl5, plane1 zooms from city0 to city3 with fuel level fl6 to fl5, plane1 zooms from city1 to city0 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl6 to fl0, plane1 zooms from city3 to city2 with fuel level fl6 to fl2, plane1 zooms from city2 to city1 with fuel level fl1 to fl0, plane1 zooms from city0 to city2 with fuel level fl5 to fl6, plane1 gets refueled at city2 with fuel level fl6 to fl3, plane1 zooms from city2 to city0 with fuel level fl1 to fl5, plane1 zooms from city0 to city2 with fuel level fl0 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl5, plane1 zooms from city2 to city3 with fuel level fl5 to fl3, plane1 flies from city3 to city0 with fuel level fl2 to fl0, plane1 zooms from city3 to city2 with fuel level fl0 to fl5, plane1 zooms from city1 to city2 with fuel level fl4 to fl3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, plane1 zooms from city2 to city0 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl1 to fl0, plane1 gets refueled at city2 with fuel level fl0 to fl1, plane1 zooms from city3 to city0 with fuel level fl1 to fl2, plane1 zooms from city0 to city1 with fuel level fl6 to fl0, plane1 zooms from city2 to city0 with fuel level fl0 to fl3, plane1 zooms from city0 to city2 with fuel level fl2 to fl6, plane1 zooms from city3 to city1 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl0 to fl3, plane1 zooms from city0 to city1 with fuel level fl3 to fl5, plane1 zooms from city3 to city1 with fuel level fl5 to fl6, plane1 zooms from city0 to city3 with fuel level fl1 to fl6, plane1 zooms from city1 to city2 with fuel level fl2 to fl5, plane1 gets refueled at city1 with fuel level fl5 to fl6, plane1 zooms from city0 to city3 with fuel level fl5 to fl3, plane1 zooms from city0 to city1 with fuel level fl6 to fl4, plane1 zooms from city0 to city1 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl6 to fl4, plane1 flies from city2 to city3 with fuel level fl4 to fl1, plane1 zooms from city0 to city2 with fuel level fl2 to fl4, plane1 zooms from city2 to city3 with fuel level fl0 to fl1, person3 departs plane1 at city1, plane1 zooms from city0 to city3 with fuel level fl2 to fl5, plane1 zooms from city0 to city1 with fuel level fl4 to fl2, plane1 zooms from city3 to city1 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl5 to fl6, plane1 zooms from city1 to city0 with fuel level fl5 to fl6, plane1 zooms from city0 to city3 with fuel level fl5 to fl3, plane1 zooms from city0 to city3 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city3 with fuel level fl5 to fl3, plane1 zooms from city3 to city2 with fuel level fl5 to fl1, plane1 gets refueled at city1 with fuel level fl2 to fl1, plane1 zooms from city1 to city3 with fuel level fl6 to fl4, plane1 zooms from city1 to city0 with fuel level fl1 to fl4, plane1 zooms from city0 to city3 with fuel level fl2 to fl3, plane1 zooms from city1 to city0 with fuel level fl6 to fl2, plane1 zooms from city3 to city0 with fuel level fl5 to fl2, plane1 flies from city2 to city0 with fuel level fl5 to fl6, plane1 zooms from city1 to city3 with fuel level fl2 to fl0, plane1 zooms from city1 to city2 with fuel level fl2 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl2, plane1 zooms from city2 to city1 with fuel level fl0 to fl2, plane1 zooms from city3 to city2 with fuel level fl1 to fl5, plane1 zooms from city1 to city0 with fuel level fl6 to fl4, plane1 zooms from city0 to city3 with fuel level fl4 to fl1, plane1 flies from city2 to city3 with fuel level fl2 to fl4, plane1 gets refueled at city2 with fuel level fl5 to fl4, person2 departs plane1 at city1, plane1 zooms from city2 to city1 with fuel level fl2 to fl3, plane1 zooms from city1 to city2 with fuel level fl3 to fl6, plane1 zooms from city3 to city1 with fuel level fl6 to fl4, plane1 flies from city0 to city1 with fuel level fl4 to fl3, plane1 zooms from city3 to city0 with fuel level fl6 to fl2, plane1 flies from city2 to city3 with fuel level fl3 to fl4, plane1 zooms from city0 to city1 with fuel level fl6 to fl0, plane1 zooms from city0 to city3 with fuel level fl4 to fl2, plane1 zooms from city2 to city0 with fuel level fl1 to fl6, plane1 zooms from city0 to city3 with fuel level fl3 to fl0, plane1 zooms from city0 to city2 with fuel level fl0 to fl2, person3 boards plane1 at city2, plane1 zooms from city3 to city2 with fuel level fl4 to fl1, plane1 zooms from city2 to city3 with fuel level fl0 to fl4, plane1 zooms from city0 to city2 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl5 to fl1, plane1 zooms from city3 to city2 with fuel level fl0 to fl4, plane1 zooms from city3 to city0 with fuel level fl0 to fl3, plane1 zooms from city1 to city0 with fuel level fl2 to fl6, plane1 zooms from city1 to city0 with fuel level fl1 to fl6, plane1 zooms from city2 to city3 with fuel level fl4 to fl0, plane1 zooms from city3 to city2 with fuel level fl6 to fl1, plane1 zooms from city3 to city1 with fuel level fl6 to fl2, plane1 zooms from city0 to city3 with fuel level fl2 to fl1, plane1 flies from city0 to city1 with fuel level fl5 to fl1, plane1 gets refueled at city0 with fuel level fl2 to fl3, plane1 zooms from city1 to city3 with fuel level fl6 to fl4, plane1 zooms from city1 to city3 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl4 to fl0, plane1 zooms from city1 to city2 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl0 to fl6, plane1 flies from city3 to city2 with fuel level fl1 to fl3, person6 boards plane1 at city2, plane1 zooms from city1 to city0 with fuel level fl2 to fl6, plane1 flies from city0 to city1 with fuel level fl5 to fl4, plane1 zooms from city2 to city1 with fuel level fl0 to fl4, plane1 zooms from city3 to city1 with fuel level fl4 to fl0, plane1 zooms from city3 to city1 with fuel level fl5 to fl4, plane1 zooms from city1 to city2 with fuel level fl1 to fl0, plane1 flies from city3 to city2 with fuel level fl4 to fl6, plane1 zooms from city3 to city2 with fuel level fl2 to fl1, plane1 zooms from city2 to city0 with fuel level fl0 to fl5, plane1 flies from city2 to city1 with fuel level fl0 to fl3, plane1 zooms from city0 to city3 with fuel level fl6 to fl2, plane1 zooms from city2 to city1 with fuel level fl3 to fl0, plane1 zooms from city1 to city0 with fuel level fl4 to fl2, plane1 flies from city3 to city0 with fuel level fl4 to fl3, plane1 zooms from city0 to city1 with fuel level fl1 to fl0, plane1 zooms from city1 to city2 with fuel level fl3 to fl0, plane1 zooms from city2 to city3 with fuel level fl4 to fl0, plane1 zooms from city3 to city2 with fuel level fl6 to fl2, plane1 zooms from city3 to city2 with fuel level fl1 to fl3, plane1 zooms from city3 to city0 with fuel level fl1 to fl3, plane1 zooms from city2 to city1 with fuel level fl6 to fl1, plane1 zooms from city1 to city2 with fuel level fl5 to fl4, plane1 zooms from city0 to city3 with fuel level fl5 to fl0, plane1 zooms from city3 to city0 with fuel level fl4 to fl2, plane1 zooms from city0 to city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl1 to fl5, plane1 zooms from city3 to city2 with fuel level fl4 to fl1, plane1 flies from city1 to city0 with fuel level fl0 to fl6, plane1 zooms from city0 to city3 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl4 to fl6, plane1 zooms from city2 to city1 with fuel level fl1 to fl3, plane1 flies from city2 to city3 with fuel level fl1 to fl6, plane1 zooms from city2 to city0 with fuel level fl5 to fl1, plane1 zooms from city3 to city1 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl6 to fl3, plane1 flies from city1 to city0 with fuel level fl3 to fl4, plane1 flies from city0 to city1 with fuel level fl3 to fl6, plane1 zooms from city2 to city1 with fuel level fl3 to fl5, plane1 zooms from city3 to city2 with fuel level fl3 to fl6, plane1 zooms from city1 to city0 with fuel level fl0 to fl4, plane1 zooms from city0 to city3 with fuel level fl3 to fl0, plane1 zooms from city0 to city1 with fuel level fl1 to fl5, plane1 gets refueled at city1 with fuel level fl2 to fl5, plane1 flies from city3 to city1 with fuel level fl4 to fl5, plane1 zooms from city1 to city3 with fuel level fl1 to fl0, plane1 zooms from city1 to city0 with fuel level fl3 to fl6, plane1 zooms from city2 to city1 with fuel level fl6 to fl4, plane1 zooms from city2 to city3 with fuel level fl2 to fl4, plane1 flies from city2 to city0 with fuel level fl5 to fl3, plane1 zooms from city1 to city3 with fuel level fl2 to fl0, plane1 zooms from city3 to city0 with fuel level fl5 to fl3, plane1 zooms from city3 to city2 with fuel level fl3 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl5, plane1 zooms from city1 to city2 with fuel level fl4 to fl1, plane1 flies from city1 to city3 with fuel level fl6 to fl2, plane1 zooms from city2 to city3 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl0 to fl1, plane1 gets refueled at city0 with fuel level fl0 to fl2, plane1 gets refueled at city0 with fuel level fl5 to fl0, plane1 zooms from city0 to city3 with fuel level fl5 to fl4, plane1 zooms from city1 to city0 with fuel level fl5 to fl6, plane1 zooms from city1 to city0 with fuel level fl5 to fl3, person3 departs plane1 at city3, plane1 zooms from city3 to city2 with fuel level fl2 to fl4, plane1 zooms from city1 to city3 with fuel level fl4 to fl1, plane1 zooms from city1 to city0 with fuel level fl3 to fl6, person1 departs plane1 at city1, plane1 zooms from city0 to city3 with fuel level fl1 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl3, plane1 zooms from city2 to city0 with fuel level fl2 to fl4, plane1 zooms from city3 to city0 with fuel level fl5 to fl1, plane1 zooms from city1 to city2 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl5 to fl6, person5 departs plane1 at city1, plane1 zooms from city0 to city3 with fuel level fl1 to fl3, plane1 zooms from city0 to city1 with fuel level fl4 to fl3, plane1 flies from city2 to city3 with fuel level fl6 to fl4, plane1 zooms from city3 to city1 with fuel level fl2 to fl3, plane1 zooms from city2 to city0 with fuel level fl5 to fl6, plane1 flies from city3 to city2 with fuel level fl1 to fl0, plane1 zooms from city1 to city0 with fuel level fl0 to fl2, plane1 zooms from city3 to city2 with fuel level fl1 to fl3, plane1 zooms from city1 to city0 with fuel level fl5 to fl1, plane1 zooms from city1 to city2 with fuel level fl0 to fl5, plane1 zooms from city0 to city1 with fuel level fl0 to fl3, plane1 gets refueled at city1 with fuel level fl0 to fl5, plane1 zooms from city3 to city1 with fuel level fl6 to fl4, plane1 zooms from city1 to city0 with fuel level fl5 to fl2, plane1 zooms from city0 to city2 with fuel level fl6 to fl5, plane1 zooms from city0 to city2 with fuel level fl3 to fl2, plane1 gets refueled at city1 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl1 to fl4, plane1 flies from city1 to city0 with fuel level fl5 to fl4, plane1 zooms from city0 to city1 with fuel level fl0 to fl6, plane1 zooms from city0 to city3 with fuel level fl2 to fl4, plane1 zooms from city2 to city1 with fuel level fl3 to fl0, plane1 zooms from city1 to city2 with fuel level fl4 to fl0, plane1 zooms from city3 to city1 with fuel level fl5 to fl6, plane1 zooms from city1 to city0 with fuel level fl2 to fl5, plane1 zooms from city2 to city0 with fuel level fl5 to fl4, plane1 zooms from city2 to city1 with fuel level fl0 to fl4, plane1 zooms from city2 to city3 with fuel level fl0 to fl6, plane1 zooms from city2 to city1 with fuel level fl1 to fl6, plane1 zooms from city1 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city0 with fuel level fl2 to fl5, plane1 zooms from city3 to city1 with fuel level fl4 to fl5 and plane1 zooms from city2 to city1 with fuel level fl2 to fl0", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "130f22dc-2678-4976-97d8-f236f6dbb8b1", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "e6fb44c7-afe5-4b3c-a946-b918d34ef26f", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 zooms from city2 to city3 with fuel level fl0 to fl5, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "plane1 zooms from city2 to city3 with fuel level fl0 to fl5", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "338b99a8-bc37-4ab7-b724-54912f5affe4", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 zooms from city3 to city1 with fuel level fl4 to fl2, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "plane1 zooms from city3 to city1 with fuel level fl4 to fl2", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "8c8a0799-75d6-42fe-88f5-099ec5b528d1", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 zooms from city0 to city1 with fuel level fl4 to fl0 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "plane1 zooms from city0 to city1 with fuel level fl4 to fl0", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "0e1c2c93-4ec5-4acd-91b9-871587994710", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "8850c359-92db-4081-8753-a1eee95bcab4", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 zooms from city3 to city1 with fuel level fl2 to fl6, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "ff1507dd-e0d2-4a26-81a5-2c2cd93b884d", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 gets refueled at city0 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "04046830-b9e6-4e5d-820f-6df855492273", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 zooms from city2 to city0 with fuel level fl5 to fl6, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "3e5a5df5-dc73-4905-86bb-f33976c3a0ef", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 10 the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 zooms from city0 to city2 with fuel level fl4 to fl2, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3. Is the action: plane1 zooms from city0 to city2 with fuel level fl4 to fl2 executable at step 4, True or False?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "84c96921-019c-4a99-8ef1-32e99cf8787b", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 10 the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3. Is the action: plane1 flies from city3 to city1 with fuel level fl1 to fl0 executable at step 1, True or False?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "cb23f6b2-f6d3-475c-bde0-a5e2844fe662", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 10 the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3. Is the action: person2 boards plane1 at city1 executable at step 7, True or False?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "a41360b2-7693-46fd-a107-e30d7c072122", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 10 the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl2 to fl3, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3. Is the action: plane1 gets refueled at city1 with fuel level fl2 to fl3 executable at step 5, True or False?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "c74d14b5-468d-4b5f-9730-a911b58424a3", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "person8 departs plane1 at city3, plane1 zooms from city3 to city0 with fuel level fl3 to fl1, plane1 zooms from city3 to city2 with fuel level fl3 to fl1, person2 departs plane1 at city3, person7 departs plane1 at city3, plane1 flies from city3 to city1 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl3 to fl1, plane1 flies from city3 to city0 with fuel level fl3 to fl2, plane1 gets refueled at city3 with fuel level fl3 to fl4, person4 departs plane1 at city3 and plane1 flies from city3 to city2 with fuel level fl3 to fl2", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "a1f70b03-a848-40e4-b9cf-0ab002447f60", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "plane1 zooms from city2 to city1 with fuel level fl2 to fl4, plane1 zooms from city2 to city0 with fuel level fl1 to fl3, plane1 zooms from city3 to city0 with fuel level fl0 to fl3, plane1 zooms from city1 to city3 with fuel level fl6 to fl0, plane1 zooms from city2 to city3 with fuel level fl1 to fl3, plane1 zooms from city1 to city2 with fuel level fl1 to fl5, plane1 zooms from city1 to city0 with fuel level fl4 to fl1, plane1 zooms from city3 to city0 with fuel level fl2 to fl4, plane1 flies from city0 to city2 with fuel level fl3 to fl6, plane1 flies from city0 to city1 with fuel level fl0 to fl3, plane1 zooms from city1 to city0 with fuel level fl6 to fl5, plane1 flies from city2 to city0 with fuel level fl1 to fl4, plane1 flies from city0 to city2 with fuel level fl0 to fl1, plane1 zooms from city2 to city3 with fuel level fl1 to fl5, plane1 zooms from city1 to city3 with fuel level fl2 to fl6, plane1 zooms from city3 to city0 with fuel level fl3 to fl1, plane1 zooms from city0 to city3 with fuel level fl2 to fl6, plane1 zooms from city3 to city1 with fuel level fl4 to fl5, plane1 zooms from city2 to city0 with fuel level fl5 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl0, plane1 zooms from city0 to city1 with fuel level fl0 to fl5, plane1 flies from city0 to city2 with fuel level fl1 to fl4, plane1 flies from city3 to city1 with fuel level fl6 to fl2, plane1 zooms from city3 to city1 with fuel level fl6 to fl4, plane1 zooms from city1 to city3 with fuel level fl6 to fl2, plane1 zooms from city0 to city1 with fuel level fl5 to fl4, plane1 zooms from city0 to city2 with fuel level fl1 to fl4, plane1 zooms from city0 to city1 with fuel level fl6 to fl4, plane1 zooms from city3 to city0 with fuel level fl5 to fl3, plane1 zooms from city2 to city1 with fuel level fl6 to fl3, plane1 zooms from city1 to city2 with fuel level fl3 to fl2, plane1 zooms from city1 to city3 with fuel level fl2 to fl5, plane1 zooms from city0 to city3 with fuel level fl2 to fl0, plane1 zooms from city1 to city3 with fuel level fl0 to fl5, plane1 flies from city0 to city3 with fuel level fl2 to fl3, plane1 zooms from city1 to city0 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl2 to fl0, plane1 zooms from city1 to city0 with fuel level fl0 to fl2, plane1 flies from city0 to city3 with fuel level fl1 to fl6, plane1 zooms from city1 to city2 with fuel level fl0 to fl5, plane1 flies from city1 to city0 with fuel level fl1 to fl3, plane1 zooms from city2 to city1 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl4 to fl2, plane1 zooms from city1 to city2 with fuel level fl1 to fl4, person3 boards plane1 at city1, plane1 zooms from city0 to city2 with fuel level fl6 to fl1, plane1 zooms from city0 to city1 with fuel level fl0 to fl1, plane1 zooms from city3 to city1 with fuel level fl4 to fl2, plane1 zooms from city0 to city3 with fuel level fl4 to fl1, plane1 zooms from city3 to city1 with fuel level fl1 to fl6, plane1 flies from city0 to city3 with fuel level fl1 to fl0, plane1 zooms from city2 to city1 with fuel level fl2 to fl4, plane1 zooms from city3 to city0 with fuel level fl4 to fl1, plane1 zooms from city0 to city2 with fuel level fl6 to fl2, plane1 zooms from city3 to city1 with fuel level fl4 to fl1, plane1 zooms from city2 to city0 with fuel level fl3 to fl5, plane1 zooms from city0 to city2 with fuel level fl4 to fl1, plane1 gets refueled at city1 with fuel level fl3 to fl0, plane1 zooms from city0 to city2 with fuel level fl0 to fl2, plane1 flies from city3 to city2 with fuel level fl1 to fl5, plane1 zooms from city2 to city3 with fuel level fl6 to fl4, plane1 zooms from city3 to city2 with fuel level fl0 to fl1, plane1 zooms from city2 to city3 with fuel level fl1 to fl4, plane1 zooms from city2 to city0 with fuel level fl4 to fl5, plane1 zooms from city2 to city1 with fuel level fl1 to fl2, plane1 zooms from city0 to city3 with fuel level fl3 to fl4, plane1 flies from city3 to city1 with fuel level fl0 to fl4, plane1 zooms from city2 to city1 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl5 to fl4, plane1 zooms from city1 to city3 with fuel level fl2 to fl5, plane1 flies from city0 to city2 with fuel level fl5 to fl1, plane1 zooms from city1 to city2 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl5 to fl2, plane1 zooms from city1 to city2 with fuel level fl1 to fl6, plane1 zooms from city2 to city1 with fuel level fl1 to fl5, plane1 gets refueled at city3 with fuel level fl0 to fl4, plane1 zooms from city0 to city1 with fuel level fl5 to fl1, plane1 flies from city0 to city2 with fuel level fl4 to fl1, plane1 flies from city2 to city3 with fuel level fl1 to fl0, plane1 flies from city0 to city1 with fuel level fl1 to fl0, plane1 flies from city2 to city1 with fuel level fl3 to fl1, plane1 zooms from city1 to city0 with fuel level fl3 to fl1, plane1 zooms from city2 to city1 with fuel level fl6 to fl2, plane1 zooms from city3 to city1 with fuel level fl3 to fl2, plane1 zooms from city0 to city1 with fuel level fl5 to fl4, plane1 flies from city2 to city0 with fuel level fl6 to fl5, plane1 zooms from city2 to city0 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl3 to fl1, plane1 zooms from city3 to city1 with fuel level fl2 to fl0, plane1 zooms from city0 to city1 with fuel level fl4 to fl0, plane1 zooms from city1 to city3 with fuel level fl2 to fl4, plane1 zooms from city2 to city3 with fuel level fl3 to fl0, plane1 zooms from city1 to city2 with fuel level fl2 to fl6, plane1 flies from city3 to city2 with fuel level fl0 to fl5, plane1 zooms from city1 to city2 with fuel level fl4 to fl2, plane1 zooms from city0 to city3 with fuel level fl0 to fl2, plane1 zooms from city1 to city0 with fuel level fl4 to fl2, plane1 zooms from city0 to city3 with fuel level fl2 to fl1, plane1 zooms from city1 to city2 with fuel level fl3 to fl2, plane1 zooms from city2 to city3 with fuel level fl0 to fl1, plane1 zooms from city2 to city0 with fuel level fl3 to fl0, plane1 zooms from city1 to city0 with fuel level fl2 to fl0, plane1 zooms from city1 to city3 with fuel level fl5 to fl0, plane1 zooms from city0 to city2 with fuel level fl6 to fl1, plane1 zooms from city2 to city3 with fuel level fl1 to fl0, plane1 zooms from city1 to city0 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl5 to fl0, plane1 zooms from city3 to city0 with fuel level fl5 to fl0, plane1 flies from city1 to city2 with fuel level fl0 to fl4, plane1 zooms from city0 to city2 with fuel level fl6 to fl3, plane1 zooms from city3 to city0 with fuel level fl4 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl2, plane1 zooms from city3 to city0 with fuel level fl4 to fl3, plane1 gets refueled at city2 with fuel level fl6 to fl2, plane1 zooms from city2 to city3 with fuel level fl2 to fl0, plane1 zooms from city1 to city2 with fuel level fl2 to fl5, plane1 zooms from city1 to city2 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl5 to fl4, plane1 flies from city0 to city1 with fuel level fl1 to fl2, plane1 flies from city3 to city2 with fuel level fl2 to fl0, plane1 zooms from city2 to city1 with fuel level fl3 to fl1, plane1 zooms from city0 to city1 with fuel level fl1 to fl5, plane1 zooms from city3 to city2 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl2 to fl3, plane1 zooms from city2 to city1 with fuel level fl1 to fl4, plane1 flies from city0 to city3 with fuel level fl5 to fl2, plane1 flies from city2 to city3 with fuel level fl0 to fl1, plane1 gets refueled at city2 with fuel level fl5 to fl0, plane1 zooms from city3 to city1 with fuel level fl3 to fl4, plane1 zooms from city3 to city2 with fuel level fl5 to fl0, plane1 zooms from city0 to city1 with fuel level fl2 to fl1, plane1 flies from city1 to city2 with fuel level fl0 to fl6, plane1 zooms from city0 to city1 with fuel level fl0 to fl2, plane1 flies from city3 to city2 with fuel level fl3 to fl0, plane1 gets refueled at city2 with fuel level fl2 to fl3, plane1 zooms from city2 to city0 with fuel level fl6 to fl4, plane1 zooms from city0 to city2 with fuel level fl2 to fl4, plane1 zooms from city3 to city0 with fuel level fl0 to fl5, plane1 zooms from city3 to city1 with fuel level fl1 to fl2, plane1 zooms from city3 to city2 with fuel level fl2 to fl5, plane1 zooms from city1 to city2 with fuel level fl6 to fl4, plane1 zooms from city0 to city1 with fuel level fl3 to fl6, plane1 zooms from city0 to city2 with fuel level fl2 to fl3, plane1 zooms from city3 to city1 with fuel level fl0 to fl4, plane1 zooms from city3 to city0 with fuel level fl1 to fl3, plane1 zooms from city1 to city3 with fuel level fl3 to fl2, plane1 flies from city1 to city3 with fuel level fl3 to fl6, plane1 zooms from city1 to city3 with fuel level fl6 to fl2, plane1 zooms from city0 to city2 with fuel level fl4 to fl3, plane1 zooms from city1 to city3 with fuel level fl1 to fl6, plane1 zooms from city1 to city2 with fuel level fl5 to fl1, plane1 zooms from city0 to city2 with fuel level fl5 to fl0, plane1 gets refueled at city3 with fuel level fl6 to fl3, plane1 zooms from city2 to city3 with fuel level fl4 to fl3, plane1 zooms from city2 to city1 with fuel level fl3 to fl6, plane1 zooms from city3 to city2 with fuel level fl5 to fl3, plane1 zooms from city2 to city1 with fuel level fl0 to fl4, plane1 flies from city1 to city2 with fuel level fl6 to fl1, plane1 flies from city0 to city2 with fuel level fl4 to fl2, plane1 zooms from city1 to city3 with fuel level fl0 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl0, plane1 zooms from city2 to city0 with fuel level fl3 to fl0, plane1 zooms from city3 to city1 with fuel level fl6 to fl1, plane1 zooms from city2 to city0 with fuel level fl4 to fl3, plane1 flies from city0 to city1 with fuel level fl0 to fl4, plane1 flies from city0 to city2 with fuel level fl5 to fl3, plane1 zooms from city3 to city2 with fuel level fl1 to fl0, plane1 zooms from city2 to city1 with fuel level fl2 to fl1, plane1 gets refueled at city0 with fuel level fl4 to fl2, plane1 zooms from city1 to city3 with fuel level fl6 to fl3, plane1 zooms from city0 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city3 with fuel level fl6 to fl3, plane1 flies from city1 to city3 with fuel level fl0 to fl4, plane1 zooms from city1 to city3 with fuel level fl1 to fl2, plane1 zooms from city0 to city1 with fuel level fl6 to fl3, plane1 zooms from city0 to city2 with fuel level fl5 to fl4, plane1 zooms from city3 to city1 with fuel level fl2 to fl5, plane1 zooms from city0 to city2 with fuel level fl5 to fl3, plane1 zooms from city1 to city3 with fuel level fl6 to fl2, plane1 flies from city1 to city0 with fuel level fl4 to fl2, plane1 zooms from city0 to city2 with fuel level fl0 to fl4, plane1 zooms from city3 to city2 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl4 to fl2, plane1 zooms from city3 to city0 with fuel level fl4 to fl6, plane1 flies from city1 to city2 with fuel level fl6 to fl5, plane1 zooms from city3 to city0 with fuel level fl0 to fl6, plane1 flies from city2 to city0 with fuel level fl0 to fl2, plane1 flies from city1 to city0 with fuel level fl4 to fl5, plane1 zooms from city3 to city0 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl6 to fl4, plane1 zooms from city2 to city3 with fuel level fl4 to fl0, plane1 zooms from city2 to city0 with fuel level fl2 to fl0, plane1 zooms from city3 to city0 with fuel level fl4 to fl3, plane1 zooms from city1 to city0 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl5 to fl1, plane1 zooms from city2 to city1 with fuel level fl3 to fl5, plane1 zooms from city2 to city0 with fuel level fl5 to fl2, plane1 zooms from city2 to city1 with fuel level fl5 to fl4, plane1 zooms from city0 to city1 with fuel level fl6 to fl5, plane1 zooms from city3 to city2 with fuel level fl4 to fl3, plane1 zooms from city3 to city0 with fuel level fl0 to fl5, plane1 zooms from city3 to city2 with fuel level fl5 to fl2, plane1 zooms from city2 to city3 with fuel level fl3 to fl0, plane1 zooms from city0 to city1 with fuel level fl4 to fl5, plane1 zooms from city2 to city1 with fuel level fl0 to fl5, plane1 zooms from city3 to city1 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl1 to fl0, plane1 zooms from city0 to city2 with fuel level fl4 to fl3, plane1 zooms from city1 to city3 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl1 to fl3, plane1 zooms from city1 to city2 with fuel level fl3 to fl1, person1 boards plane1 at city0, plane1 zooms from city0 to city3 with fuel level fl4 to fl2, plane1 flies from city3 to city0 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl1 to fl6, plane1 flies from city1 to city2 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl4 to fl1, plane1 zooms from city1 to city0 with fuel level fl6 to fl0, plane1 zooms from city0 to city2 with fuel level fl5 to fl2, plane1 flies from city0 to city2 with fuel level fl5 to fl4, plane1 flies from city2 to city0 with fuel level fl4 to fl3, plane1 zooms from city1 to city3 with fuel level fl2 to fl4, plane1 gets refueled at city0 with fuel level fl2 to fl1, plane1 flies from city2 to city3 with fuel level fl5 to fl4, plane1 zooms from city0 to city2 with fuel level fl6 to fl2, plane1 zooms from city0 to city1 with fuel level fl4 to fl5, plane1 zooms from city0 to city3 with fuel level fl1 to fl2, plane1 zooms from city0 to city1 with fuel level fl4 to fl3, plane1 zooms from city3 to city2 with fuel level fl4 to fl3, plane1 zooms from city0 to city3 with fuel level fl6 to fl2, plane1 zooms from city1 to city0 with fuel level fl6 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl3, plane1 zooms from city2 to city0 with fuel level fl2 to fl5, plane1 zooms from city2 to city3 with fuel level fl4 to fl0, plane1 zooms from city0 to city3 with fuel level fl5 to fl1, plane1 flies from city2 to city1 with fuel level fl6 to fl4, plane1 zooms from city2 to city3 with fuel level fl5 to fl4, plane1 zooms from city1 to city0 with fuel level fl6 to fl3, plane1 flies from city1 to city0 with fuel level fl4 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl0, plane1 zooms from city0 to city1 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl0 to fl4, plane1 zooms from city0 to city2 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl0 to fl3, plane1 flies from city3 to city0 with fuel level fl2 to fl3, plane1 flies from city3 to city0 with fuel level fl6 to fl3, plane1 zooms from city3 to city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl6 to fl0, plane1 flies from city0 to city1 with fuel level fl3 to fl1, plane1 zooms from city0 to city1 with fuel level fl3 to fl1, plane1 zooms from city2 to city1 with fuel level fl0 to fl4, plane1 flies from city1 to city3 with fuel level fl3 to fl1, plane1 zooms from city2 to city0 with fuel level fl5 to fl0, plane1 zooms from city2 to city3 with fuel level fl6 to fl3, plane1 zooms from city2 to city1 with fuel level fl4 to fl0, plane1 gets refueled at city2 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl2 to fl6, plane1 zooms from city3 to city2 with fuel level fl5 to fl6, plane1 zooms from city1 to city0 with fuel level fl2 to fl3, plane1 zooms from city0 to city3 with fuel level fl5 to fl0, plane1 zooms from city2 to city3 with fuel level fl2 to fl5, plane1 zooms from city0 to city3 with fuel level fl6 to fl1, plane1 zooms from city1 to city2 with fuel level fl2 to fl3, plane1 zooms from city0 to city1 with fuel level fl5 to fl4, plane1 flies from city2 to city0 with fuel level fl1 to fl5, plane1 flies from city0 to city1 with fuel level fl2 to fl6, plane1 zooms from city2 to city1 with fuel level fl1 to fl5, plane1 flies from city0 to city1 with fuel level fl6 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl0, plane1 flies from city1 to city3 with fuel level fl4 to fl1, plane1 zooms from city1 to city0 with fuel level fl2 to fl6, plane1 zooms from city2 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city0 with fuel level fl1 to fl5, plane1 zooms from city3 to city2 with fuel level fl1 to fl3, plane1 zooms from city2 to city0 with fuel level fl0 to fl5, plane1 zooms from city1 to city0 with fuel level fl1 to fl4, plane1 zooms from city1 to city2 with fuel level fl5 to fl2, plane1 flies from city3 to city0 with fuel level fl2 to fl5, plane1 zooms from city2 to city1 with fuel level fl2 to fl0, plane1 zooms from city1 to city2 with fuel level fl0 to fl3, plane1 zooms from city2 to city0 with fuel level fl2 to fl6, plane1 zooms from city2 to city1 with fuel level fl2 to fl6, plane1 zooms from city3 to city1 with fuel level fl5 to fl3, plane1 flies from city1 to city3 with fuel level fl1 to fl5, plane1 zooms from city0 to city1 with fuel level fl1 to fl4, plane1 zooms from city2 to city3 with fuel level fl2 to fl4, plane1 zooms from city1 to city3 with fuel level fl0 to fl6, plane1 zooms from city0 to city3 with fuel level fl2 to fl3, plane1 zooms from city0 to city2 with fuel level fl2 to fl1, plane1 zooms from city0 to city3 with fuel level fl5 to fl6, plane1 zooms from city0 to city3 with fuel level fl6 to fl3, plane1 zooms from city2 to city3 with fuel level fl2 to fl1, plane1 zooms from city2 to city0 with fuel level fl1 to fl2, plane1 zooms from city1 to city3 with fuel level fl4 to fl3, plane1 zooms from city2 to city1 with fuel level fl1 to fl2, plane1 flies from city3 to city2 with fuel level fl0 to fl1, plane1 zooms from city3 to city0 with fuel level fl6 to fl1, plane1 flies from city3 to city1 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl0 to fl3, plane1 flies from city1 to city0 with fuel level fl2 to fl4, plane1 zooms from city3 to city1 with fuel level fl4 to fl1, plane1 zooms from city1 to city0 with fuel level fl6 to fl4, plane1 zooms from city0 to city3 with fuel level fl2 to fl5, plane1 zooms from city1 to city2 with fuel level fl1 to fl3, plane1 zooms from city0 to city2 with fuel level fl1 to fl0, plane1 flies from city3 to city2 with fuel level fl6 to fl5, plane1 flies from city2 to city0 with fuel level fl6 to fl4, plane1 zooms from city2 to city1 with fuel level fl1 to fl3, plane1 zooms from city0 to city1 with fuel level fl0 to fl4, plane1 zooms from city3 to city2 with fuel level fl4 to fl5, person7 boards plane1 at city2, plane1 zooms from city1 to city2 with fuel level fl1 to fl2, plane1 zooms from city0 to city2 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl0 to fl6, plane1 zooms from city1 to city0 with fuel level fl5 to fl3, plane1 zooms from city3 to city2 with fuel level fl6 to fl2, plane1 flies from city3 to city1 with fuel level fl0 to fl6, plane1 flies from city2 to city1 with fuel level fl4 to fl2, plane1 gets refueled at city3 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl1 to fl2, plane1 zooms from city3 to city2 with fuel level fl6 to fl1, plane1 zooms from city1 to city2 with fuel level fl4 to fl3, plane1 zooms from city0 to city1 with fuel level fl5 to fl3, plane1 zooms from city0 to city3 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl6 to fl3, plane1 zooms from city2 to city0 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl2 to fl5, plane1 gets refueled at city3 with fuel level fl4 to fl1, plane1 flies from city3 to city2 with fuel level fl3 to fl5, plane1 zooms from city0 to city1 with fuel level fl4 to fl0, plane1 flies from city0 to city1 with fuel level fl5 to fl2, plane1 gets refueled at city0 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl6 to fl0, plane1 zooms from city2 to city0 with fuel level fl2 to fl3, plane1 zooms from city1 to city0 with fuel level fl3 to fl4, plane1 zooms from city2 to city3 with fuel level fl1 to fl0, plane1 zooms from city3 to city0 with fuel level fl3 to fl0, plane1 zooms from city2 to city3 with fuel level fl2 to fl5, plane1 zooms from city1 to city2 with fuel level fl4 to fl6, plane1 zooms from city2 to city0 with fuel level fl3 to fl1, plane1 zooms from city3 to city0 with fuel level fl5 to fl4, plane1 zooms from city2 to city1 with fuel level fl5 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl4, plane1 zooms from city0 to city1 with fuel level fl0 to fl4, plane1 gets refueled at city0 with fuel level fl3 to fl1, plane1 zooms from city3 to city1 with fuel level fl0 to fl6, plane1 zooms from city1 to city0 with fuel level fl2 to fl4, plane1 zooms from city1 to city0 with fuel level fl6 to fl3, plane1 zooms from city2 to city0 with fuel level fl0 to fl1, plane1 flies from city1 to city0 with fuel level fl4 to fl1, plane1 flies from city0 to city1 with fuel level fl2 to fl0, plane1 zooms from city0 to city3 with fuel level fl6 to fl4, plane1 zooms from city3 to city2 with fuel level fl6 to fl0, plane1 zooms from city2 to city3 with fuel level fl6 to fl5, plane1 zooms from city1 to city0 with fuel level fl5 to fl4, plane1 zooms from city2 to city0 with fuel level fl5 to fl6, plane1 flies from city3 to city0 with fuel level fl5 to fl0, plane1 zooms from city0 to city3 with fuel level fl6 to fl0, plane1 zooms from city2 to city0 with fuel level fl6 to fl0, person2 boards plane1 at city2, plane1 zooms from city1 to city2 with fuel level fl1 to fl3, plane1 zooms from city0 to city2 with fuel level fl3 to fl2, plane1 zooms from city1 to city2 with fuel level fl0 to fl6, plane1 zooms from city2 to city0 with fuel level fl0 to fl2, plane1 flies from city0 to city1 with fuel level fl3 to fl0, plane1 flies from city2 to city1 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl5 to fl3, plane1 zooms from city2 to city0 with fuel level fl2 to fl6, plane1 zooms from city1 to city2 with fuel level fl5 to fl0, plane1 zooms from city0 to city2 with fuel level fl0 to fl1, plane1 flies from city0 to city3 with fuel level fl0 to fl2, plane1 gets refueled at city1 with fuel level fl0 to fl4, plane1 zooms from city1 to city0 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl0 to fl4, plane1 zooms from city1 to city3 with fuel level fl5 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl5, plane1 gets refueled at city1 with fuel level fl5 to fl1, plane1 zooms from city0 to city2 with fuel level fl4 to fl2, plane1 zooms from city0 to city2 with fuel level fl4 to fl1, plane1 zooms from city0 to city1 with fuel level fl4 to fl5, plane1 zooms from city2 to city1 with fuel level fl3 to fl2, plane1 flies from city3 to city0 with fuel level fl6 to fl2, plane1 zooms from city3 to city1 with fuel level fl3 to fl1, plane1 zooms from city2 to city3 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl2 to fl3, plane1 zooms from city1 to city0 with fuel level fl3 to fl5, plane1 zooms from city1 to city0 with fuel level fl2 to fl3, plane1 zooms from city2 to city3 with fuel level fl3 to fl5, plane1 flies from city0 to city2 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl0 to fl5, plane1 gets refueled at city3 with fuel level fl2 to fl1, plane1 zooms from city3 to city1 with fuel level fl2 to fl4, plane1 zooms from city0 to city3 with fuel level fl6 to fl5, plane1 flies from city2 to city1 with fuel level fl1 to fl2, plane1 zooms from city1 to city3 with fuel level fl0 to fl2, plane1 zooms from city2 to city1 with fuel level fl6 to fl0, plane1 zooms from city2 to city0 with fuel level fl3 to fl5, plane1 zooms from city2 to city1 with fuel level fl6 to fl1, plane1 zooms from city3 to city2 with fuel level fl3 to fl5, plane1 zooms from city1 to city2 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl0, plane1 zooms from city3 to city1 with fuel level fl5 to fl2, plane1 flies from city3 to city2 with fuel level fl2 to fl1, plane1 zooms from city0 to city2 with fuel level fl1 to fl0, plane1 zooms from city1 to city3 with fuel level fl5 to fl1, plane1 zooms from city0 to city1 with fuel level fl5 to fl1, plane1 zooms from city3 to city1 with fuel level fl0 to fl6, plane1 zooms from city1 to city2 with fuel level fl1 to fl2, plane1 zooms from city3 to city1 with fuel level fl1 to fl5, plane1 flies from city3 to city2 with fuel level fl5 to fl4, plane1 zooms from city3 to city1 with fuel level fl6 to fl0, plane1 zooms from city0 to city1 with fuel level fl1 to fl2, plane1 flies from city2 to city0 with fuel level fl6 to fl0, plane1 zooms from city1 to city2 with fuel level fl6 to fl4, plane1 flies from city2 to city3 with fuel level fl1 to fl3, plane1 flies from city0 to city3 with fuel level fl3 to fl1, plane1 zooms from city1 to city0 with fuel level fl3 to fl1, person2 boards plane1 at city1, plane1 zooms from city3 to city1 with fuel level fl2 to fl6, plane1 zooms from city0 to city1 with fuel level fl4 to fl6, plane1 zooms from city3 to city2 with fuel level fl4 to fl2, plane1 flies from city0 to city3 with fuel level fl5 to fl4, plane1 zooms from city2 to city0 with fuel level fl4 to fl2, plane1 flies from city0 to city3 with fuel level fl1 to fl5, plane1 zooms from city0 to city2 with fuel level fl4 to fl6, plane1 zooms from city3 to city1 with fuel level fl3 to fl4, plane1 zooms from city2 to city1 with fuel level fl4 to fl5, plane1 zooms from city3 to city2 with fuel level fl0 to fl1, plane1 zooms from city2 to city0 with fuel level fl4 to fl1, plane1 gets refueled at city1 with fuel level fl2 to fl4, plane1 zooms from city3 to city1 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl1 to fl4, plane1 zooms from city3 to city0 with fuel level fl4 to fl1, plane1 zooms from city1 to city2 with fuel level fl2 to fl6, plane1 flies from city2 to city1 with fuel level fl4 to fl0, plane1 zooms from city1 to city2 with fuel level fl2 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl5, person8 departs plane1 at city1, plane1 flies from city3 to city1 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl2 to fl3, plane1 zooms from city3 to city2 with fuel level fl6 to fl5, plane1 zooms from city1 to city0 with fuel level fl1 to fl4, plane1 zooms from city2 to city1 with fuel level fl1 to fl6, plane1 zooms from city0 to city1 with fuel level fl2 to fl5, plane1 zooms from city3 to city1 with fuel level fl0 to fl2, plane1 zooms from city3 to city1 with fuel level fl2 to fl3, plane1 zooms from city2 to city3 with fuel level fl2 to fl6, plane1 zooms from city0 to city3 with fuel level fl6 to fl0, plane1 zooms from city0 to city1 with fuel level fl4 to fl1, plane1 zooms from city2 to city1 with fuel level fl5 to fl1, plane1 zooms from city0 to city3 with fuel level fl6 to fl0, plane1 flies from city3 to city2 with fuel level fl4 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl5, plane1 zooms from city3 to city1 with fuel level fl3 to fl5, plane1 zooms from city2 to city1 with fuel level fl4 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl3, plane1 zooms from city2 to city1 with fuel level fl2 to fl1, plane1 zooms from city1 to city0 with fuel level fl2 to fl3, plane1 flies from city2 to city1 with fuel level fl3 to fl0, plane1 zooms from city0 to city2 with fuel level fl1 to fl6, plane1 zooms from city0 to city2 with fuel level fl1 to fl0, plane1 gets refueled at city2 with fuel level fl0 to fl5, plane1 zooms from city2 to city0 with fuel level fl3 to fl4, plane1 zooms from city2 to city0 with fuel level fl3 to fl0, plane1 zooms from city0 to city1 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl5 to fl3, plane1 zooms from city3 to city2 with fuel level fl1 to fl2, plane1 zooms from city1 to city3 with fuel level fl1 to fl6, plane1 zooms from city2 to city3 with fuel level fl5 to fl6, plane1 zooms from city0 to city2 with fuel level fl4 to fl5, plane1 flies from city0 to city1 with fuel level fl2 to fl4, plane1 zooms from city1 to city3 with fuel level fl4 to fl1, plane1 zooms from city0 to city2 with fuel level fl3 to fl2, plane1 zooms from city1 to city3 with fuel level fl0 to fl4, plane1 zooms from city1 to city0 with fuel level fl6 to fl1, plane1 zooms from city3 to city0 with fuel level fl3 to fl0, plane1 zooms from city3 to city2 with fuel level fl6 to fl2, plane1 zooms from city2 to city3 with fuel level fl0 to fl3, plane1 flies from city2 to city3 with fuel level fl4 to fl3, plane1 gets refueled at city0 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl2 to fl4, plane1 zooms from city2 to city0 with fuel level fl6 to fl3, plane1 zooms from city0 to city1 with fuel level fl3 to fl2, plane1 zooms from city2 to city3 with fuel level fl2 to fl5, plane1 zooms from city1 to city2 with fuel level fl5 to fl3, plane1 zooms from city2 to city3 with fuel level fl0 to fl1, plane1 zooms from city3 to city2 with fuel level fl1 to fl6, plane1 zooms from city1 to city2 with fuel level fl1 to fl3, plane1 flies from city3 to city0 with fuel level fl0 to fl6, plane1 gets refueled at city2 with fuel level fl6 to fl4, plane1 zooms from city0 to city1 with fuel level fl2 to fl5, plane1 flies from city1 to city2 with fuel level fl3 to fl5, plane1 zooms from city2 to city1 with fuel level fl1 to fl2, person2 boards plane1 at city3, plane1 zooms from city2 to city0 with fuel level fl5 to fl0, plane1 zooms from city3 to city2 with fuel level fl3 to fl2, plane1 zooms from city2 to city0 with fuel level fl1 to fl0, plane1 zooms from city2 to city0 with fuel level fl3 to fl0, plane1 zooms from city2 to city0 with fuel level fl6 to fl2, plane1 zooms from city0 to city3 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl2 to fl3, plane1 zooms from city2 to city0 with fuel level fl6 to fl0, plane1 zooms from city3 to city2 with fuel level fl3 to fl0, plane1 zooms from city3 to city0 with fuel level fl3 to fl2, plane1 flies from city3 to city0 with fuel level fl0 to fl2, plane1 zooms from city2 to city1 with fuel level fl1 to fl0, plane1 flies from city3 to city0 with fuel level fl4 to fl0, plane1 zooms from city2 to city1 with fuel level fl0 to fl4, plane1 zooms from city3 to city1 with fuel level fl6 to fl5, plane1 flies from city1 to city0 with fuel level fl2 to fl6, plane1 zooms from city1 to city2 with fuel level fl5 to fl6, plane1 flies from city1 to city0 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl6 to fl2, plane1 zooms from city2 to city1 with fuel level fl2 to fl5, plane1 flies from city2 to city0 with fuel level fl6 to fl2, person7 boards plane1 at city1, plane1 zooms from city3 to city1 with fuel level fl3 to fl1, plane1 gets refueled at city2 with fuel level fl6 to fl5, plane1 zooms from city1 to city2 with fuel level fl0 to fl1, plane1 zooms from city0 to city2 with fuel level fl3 to fl0, plane1 zooms from city0 to city3 with fuel level fl5 to fl1, plane1 zooms from city2 to city3 with fuel level fl2 to fl5, plane1 zooms from city0 to city2 with fuel level fl2 to fl5, plane1 zooms from city0 to city1 with fuel level fl6 to fl3, plane1 zooms from city0 to city2 with fuel level fl4 to fl3, plane1 flies from city2 to city1 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl4 to fl6, plane1 flies from city2 to city1 with fuel level fl0 to fl6, plane1 zooms from city3 to city2 with fuel level fl0 to fl2, plane1 zooms from city2 to city3 with fuel level fl0 to fl2, plane1 zooms from city2 to city0 with fuel level fl2 to fl5, plane1 zooms from city1 to city0 with fuel level fl6 to fl4, plane1 zooms from city3 to city2 with fuel level fl1 to fl3, plane1 zooms from city3 to city1 with fuel level fl0 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl5, plane1 zooms from city2 to city1 with fuel level fl0 to fl5, plane1 zooms from city2 to city3 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl1 to fl6, plane1 zooms from city3 to city0 with fuel level fl3 to fl1, plane1 zooms from city3 to city0 with fuel level fl1 to fl3, plane1 flies from city2 to city0 with fuel level fl4 to fl6, plane1 gets refueled at city3 with fuel level fl0 to fl2, plane1 zooms from city0 to city1 with fuel level fl5 to fl1, plane1 zooms from city3 to city0 with fuel level fl2 to fl6, plane1 zooms from city3 to city2 with fuel level fl6 to fl4, plane1 zooms from city1 to city2 with fuel level fl6 to fl3, plane1 flies from city2 to city0 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl6 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl3, plane1 zooms from city2 to city1 with fuel level fl4 to fl1, plane1 zooms from city0 to city3 with fuel level fl1 to fl6, plane1 zooms from city2 to city3 with fuel level fl1 to fl5, plane1 zooms from city0 to city3 with fuel level fl6 to fl0, plane1 flies from city3 to city1 with fuel level fl2 to fl5, plane1 flies from city1 to city3 with fuel level fl5 to fl6, plane1 flies from city2 to city1 with fuel level fl0 to fl4, plane1 zooms from city2 to city1 with fuel level fl1 to fl5, plane1 zooms from city3 to city2 with fuel level fl5 to fl2, plane1 zooms from city0 to city3 with fuel level fl0 to fl6, plane1 zooms from city0 to city3 with fuel level fl6 to fl1, plane1 flies from city3 to city1 with fuel level fl2 to fl4, plane1 zooms from city3 to city1 with fuel level fl5 to fl2, plane1 flies from city0 to city2 with fuel level fl3 to fl1, plane1 zooms from city0 to city1 with fuel level fl6 to fl2, plane1 zooms from city3 to city1 with fuel level fl4 to fl2, plane1 zooms from city2 to city0 with fuel level fl2 to fl0, plane1 zooms from city2 to city0 with fuel level fl2 to fl6, plane1 zooms from city0 to city3 with fuel level fl1 to fl0, plane1 zooms from city3 to city2 with fuel level fl3 to fl4, plane1 zooms from city0 to city1 with fuel level fl6 to fl1, plane1 zooms from city2 to city0 with fuel level fl1 to fl3, plane1 flies from city0 to city1 with fuel level fl0 to fl1, plane1 zooms from city0 to city1 with fuel level fl1 to fl3, plane1 flies from city1 to city2 with fuel level fl0 to fl3, plane1 zooms from city3 to city0 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl5 to fl6, plane1 zooms from city1 to city2 with fuel level fl0 to fl5, plane1 zooms from city1 to city3 with fuel level fl1 to fl4, plane1 zooms from city1 to city3 with fuel level fl0 to fl4, plane1 gets refueled at city1 with fuel level fl2 to fl6, plane1 zooms from city0 to city2 with fuel level fl3 to fl5, plane1 zooms from city3 to city0 with fuel level fl4 to fl0, plane1 flies from city1 to city0 with fuel level fl6 to fl5, plane1 zooms from city1 to city2 with fuel level fl5 to fl2, plane1 zooms from city1 to city0 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl2 to fl4, plane1 zooms from city2 to city3 with fuel level fl0 to fl6, plane1 zooms from city1 to city0 with fuel level fl4 to fl6, plane1 gets refueled at city1 with fuel level fl5 to fl0, plane1 zooms from city2 to city3 with fuel level fl6 to fl4, plane1 zooms from city2 to city0 with fuel level fl3 to fl0, plane1 zooms from city2 to city3 with fuel level fl0 to fl4, plane1 zooms from city1 to city3 with fuel level fl0 to fl2, plane1 zooms from city1 to city0 with fuel level fl2 to fl5, plane1 zooms from city1 to city3 with fuel level fl5 to fl4, plane1 zooms from city3 to city2 with fuel level fl3 to fl1, plane1 flies from city0 to city1 with fuel level fl0 to fl5, plane1 zooms from city1 to city2 with fuel level fl0 to fl2, plane1 zooms from city1 to city3 with fuel level fl6 to fl1, plane1 flies from city2 to city0 with fuel level fl1 to fl3, plane1 flies from city1 to city2 with fuel level fl1 to fl5, plane1 zooms from city3 to city2 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl2 to fl5, plane1 flies from city1 to city2 with fuel level fl6 to fl4, plane1 flies from city0 to city3 with fuel level fl2 to fl5, plane1 flies from city0 to city1 with fuel level fl6 to fl0, plane1 zooms from city3 to city2 with fuel level fl3 to fl0, plane1 zooms from city2 to city3 with fuel level fl3 to fl5, plane1 zooms from city3 to city0 with fuel level fl0 to fl2, plane1 zooms from city0 to city1 with fuel level fl5 to fl3, plane1 zooms from city1 to city0 with fuel level fl5 to fl0, plane1 zooms from city1 to city3 with fuel level fl6 to fl5, plane1 zooms from city1 to city2 with fuel level fl1 to fl0, plane1 zooms from city1 to city3 with fuel level fl1 to fl5, plane1 zooms from city3 to city0 with fuel level fl2 to fl5, plane1 gets refueled at city2 with fuel level fl4 to fl3, plane1 zooms from city3 to city2 with fuel level fl0 to fl3, plane1 zooms from city0 to city3 with fuel level fl4 to fl3, plane1 zooms from city2 to city3 with fuel level fl0 to fl2, plane1 zooms from city3 to city0 with fuel level fl2 to fl6, plane1 zooms from city1 to city0 with fuel level fl5 to fl6, plane1 zooms from city0 to city1 with fuel level fl1 to fl6, plane1 zooms from city0 to city3 with fuel level fl6 to fl1, plane1 flies from city2 to city0 with fuel level fl2 to fl6, plane1 zooms from city2 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city0 with fuel level fl4 to fl5, plane1 zooms from city1 to city3 with fuel level fl5 to fl0, person1 boards plane1 at city3, plane1 flies from city0 to city2 with fuel level fl0 to fl6, plane1 flies from city2 to city1 with fuel level fl1 to fl0, plane1 flies from city0 to city3 with fuel level fl6 to fl4, plane1 zooms from city2 to city3 with fuel level fl1 to fl6, person6 boards plane1 at city3, plane1 zooms from city1 to city0 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl1, plane1 zooms from city2 to city3 with fuel level fl4 to fl1, plane1 zooms from city1 to city2 with fuel level fl6 to fl3, plane1 zooms from city1 to city3 with fuel level fl0 to fl2, plane1 zooms from city0 to city1 with fuel level fl0 to fl5, plane1 gets refueled at city0 with fuel level fl1 to fl6, plane1 flies from city1 to city2 with fuel level fl1 to fl3, plane1 zooms from city1 to city2 with fuel level fl1 to fl6, plane1 zooms from city3 to city1 with fuel level fl3 to fl0, plane1 zooms from city3 to city1 with fuel level fl0 to fl2, plane1 zooms from city2 to city3 with fuel level fl1 to fl5, plane1 zooms from city2 to city1 with fuel level fl2 to fl5, plane1 zooms from city3 to city0 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl2 to fl1, plane1 flies from city3 to city0 with fuel level fl2 to fl4, plane1 zooms from city1 to city3 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl1 to fl2, person5 departs plane1 at city0, plane1 flies from city1 to city2 with fuel level fl4 to fl5, plane1 zooms from city0 to city3 with fuel level fl5 to fl1, plane1 zooms from city3 to city0 with fuel level fl0 to fl2, plane1 zooms from city1 to city2 with fuel level fl0 to fl2, plane1 zooms from city1 to city0 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl6 to fl2, plane1 zooms from city3 to city1 with fuel level fl5 to fl3, plane1 zooms from city1 to city2 with fuel level fl2 to fl0, plane1 zooms from city1 to city2 with fuel level fl3 to fl0, plane1 zooms from city3 to city0 with fuel level fl6 to fl2, plane1 flies from city0 to city2 with fuel level fl2 to fl5, plane1 zooms from city2 to city0 with fuel level fl2 to fl3, plane1 zooms from city1 to city2 with fuel level fl5 to fl6, plane1 flies from city0 to city1 with fuel level fl4 to fl5, plane1 zooms from city1 to city2 with fuel level fl2 to fl6, plane1 zooms from city2 to city1 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl3 to fl4, plane1 zooms from city2 to city1 with fuel level fl0 to fl1, plane1 zooms from city0 to city1 with fuel level fl3 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl3, plane1 zooms from city3 to city1 with fuel level fl3 to fl4, plane1 zooms from city1 to city0 with fuel level fl3 to fl4, plane1 zooms from city0 to city2 with fuel level fl2 to fl5, plane1 zooms from city0 to city1 with fuel level fl4 to fl0, plane1 zooms from city3 to city0 with fuel level fl1 to fl2, plane1 zooms from city3 to city0 with fuel level fl6 to fl1, plane1 flies from city1 to city3 with fuel level fl3 to fl0, plane1 zooms from city2 to city1 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl4 to fl5, plane1 zooms from city2 to city1 with fuel level fl3 to fl2, plane1 zooms from city0 to city2 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl5 to fl2, plane1 flies from city1 to city3 with fuel level fl6 to fl3, plane1 zooms from city3 to city0 with fuel level fl4 to fl1, plane1 zooms from city3 to city2 with fuel level fl6 to fl5, plane1 zooms from city3 to city0 with fuel level fl3 to fl6, plane1 zooms from city3 to city1 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl3 to fl4, plane1 zooms from city0 to city3 with fuel level fl5 to fl6, plane1 flies from city0 to city2 with fuel level fl4 to fl3, plane1 zooms from city2 to city3 with fuel level fl0 to fl6, plane1 zooms from city0 to city2 with fuel level fl0 to fl4, plane1 zooms from city0 to city2 with fuel level fl0 to fl6, plane1 zooms from city0 to city2 with fuel level fl2 to fl6, plane1 zooms from city0 to city1 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl1 to fl0, plane1 flies from city2 to city0 with fuel level fl2 to fl1, plane1 flies from city2 to city3 with fuel level fl4 to fl2, plane1 zooms from city2 to city1 with fuel level fl4 to fl2, plane1 zooms from city1 to city2 with fuel level fl0 to fl2, plane1 zooms from city0 to city1 with fuel level fl4 to fl2, plane1 zooms from city1 to city0 with fuel level fl3 to fl1, plane1 zooms from city1 to city3 with fuel level fl1 to fl2, plane1 gets refueled at city3 with fuel level fl0 to fl5, plane1 zooms from city0 to city2 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl6 to fl0, plane1 zooms from city3 to city2 with fuel level fl2 to fl6, plane1 zooms from city0 to city2 with fuel level fl2 to fl5, person7 boards plane1 at city0, plane1 zooms from city0 to city2 with fuel level fl6 to fl5, plane1 zooms from city3 to city2 with fuel level fl5 to fl4, plane1 zooms from city3 to city0 with fuel level fl3 to fl5, plane1 zooms from city3 to city2 with fuel level fl5 to fl3, plane1 zooms from city3 to city0 with fuel level fl0 to fl3, plane1 zooms from city0 to city2 with fuel level fl2 to fl0, plane1 zooms from city2 to city1 with fuel level fl5 to fl2, plane1 gets refueled at city0 with fuel level fl6 to fl4, plane1 flies from city0 to city3 with fuel level fl4 to fl3, plane1 zooms from city3 to city0 with fuel level fl4 to fl2, plane1 flies from city3 to city1 with fuel level fl0 to fl5, plane1 gets refueled at city2 with fuel level fl2 to fl6, plane1 flies from city3 to city2 with fuel level fl3 to fl6, plane1 zooms from city0 to city2 with fuel level fl3 to fl4, plane1 zooms from city2 to city0 with fuel level fl2 to fl4, plane1 flies from city2 to city1 with fuel level fl5 to fl1, plane1 zooms from city1 to city0 with fuel level fl4 to fl0, plane1 zooms from city3 to city1 with fuel level fl5 to fl3, plane1 zooms from city3 to city2 with fuel level fl6 to fl5, plane1 zooms from city3 to city0 with fuel level fl3 to fl4, plane1 zooms from city0 to city2 with fuel level fl5 to fl4, plane1 gets refueled at city1 with fuel level fl1 to fl6, plane1 zooms from city2 to city0 with fuel level fl3 to fl6, plane1 zooms from city0 to city1 with fuel level fl1 to fl6, plane1 zooms from city2 to city1 with fuel level fl4 to fl2, plane1 zooms from city3 to city1 with fuel level fl6 to fl1, plane1 zooms from city2 to city0 with fuel level fl6 to fl3, plane1 zooms from city3 to city1 with fuel level fl0 to fl4, plane1 zooms from city1 to city2 with fuel level fl1 to fl0, plane1 zooms from city0 to city2 with fuel level fl2 to fl0, plane1 flies from city3 to city0 with fuel level fl0 to fl5, plane1 gets refueled at city3 with fuel level fl3 to fl1, plane1 zooms from city1 to city3 with fuel level fl2 to fl1, plane1 flies from city3 to city0 with fuel level fl6 to fl4, plane1 zooms from city3 to city0 with fuel level fl6 to fl3, plane1 zooms from city3 to city1 with fuel level fl4 to fl5, plane1 zooms from city3 to city0 with fuel level fl0 to fl5, plane1 zooms from city1 to city2 with fuel level fl1 to fl2, plane1 zooms from city2 to city0 with fuel level fl3 to fl5, plane1 zooms from city2 to city0 with fuel level fl4 to fl6, person6 departs plane1 at city1, plane1 zooms from city3 to city0 with fuel level fl3 to fl1, plane1 flies from city1 to city0 with fuel level fl0 to fl3, plane1 flies from city3 to city2 with fuel level fl2 to fl3, plane1 zooms from city1 to city3 with fuel level fl3 to fl2, plane1 gets refueled at city1 with fuel level fl0 to fl6, plane1 zooms from city3 to city0 with fuel level fl5 to fl6, plane1 zooms from city3 to city2 with fuel level fl6 to fl4, plane1 gets refueled at city3 with fuel level fl4 to fl2, plane1 zooms from city3 to city0 with fuel level fl4 to fl0, plane1 zooms from city1 to city2 with fuel level fl6 to fl1, plane1 zooms from city3 to city2 with fuel level fl1 to fl0, plane1 flies from city2 to city1 with fuel level fl5 to fl2, plane1 zooms from city3 to city2 with fuel level fl2 to fl3, plane1 zooms from city0 to city1 with fuel level fl5 to fl0, plane1 zooms from city1 to city3 with fuel level fl1 to fl3, plane1 zooms from city1 to city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl5 to fl0, plane1 zooms from city3 to city2 with fuel level fl2 to fl5, plane1 gets refueled at city0 with fuel level fl0 to fl3, plane1 zooms from city2 to city1 with fuel level fl5 to fl1, plane1 zooms from city1 to city0 with fuel level fl0 to fl4, plane1 zooms from city3 to city1 with fuel level fl0 to fl5, plane1 flies from city0 to city3 with fuel level fl4 to fl5, plane1 zooms from city1 to city2 with fuel level fl1 to fl3, plane1 zooms from city1 to city0 with fuel level fl6 to fl2, plane1 gets refueled at city0 with fuel level fl1 to fl5, plane1 zooms from city3 to city1 with fuel level fl1 to fl4, plane1 flies from city3 to city0 with fuel level fl2 to fl1, plane1 zooms from city1 to city3 with fuel level fl3 to fl0, plane1 zooms from city0 to city3 with fuel level fl3 to fl5, plane1 zooms from city3 to city1 with fuel level fl0 to fl5, plane1 zooms from city0 to city2 with fuel level fl4 to fl5, plane1 zooms from city3 to city1 with fuel level fl0 to fl4, plane1 zooms from city3 to city1 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl0 to fl3, plane1 zooms from city2 to city0 with fuel level fl5 to fl1, plane1 flies from city1 to city2 with fuel level fl3 to fl4, plane1 zooms from city2 to city3 with fuel level fl1 to fl6, plane1 zooms from city0 to city1 with fuel level fl3 to fl1, plane1 flies from city1 to city0 with fuel level fl1 to fl6, plane1 zooms from city0 to city3 with fuel level fl1 to fl0, plane1 flies from city1 to city0 with fuel level fl4 to fl6, plane1 zooms from city2 to city0 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl2 to fl4, plane1 zooms from city2 to city1 with fuel level fl0 to fl2, plane1 flies from city0 to city1 with fuel level fl6 to fl4, plane1 zooms from city0 to city2 with fuel level fl4 to fl3, plane1 zooms from city3 to city2 with fuel level fl4 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl1, plane1 zooms from city3 to city2 with fuel level fl6 to fl3, plane1 zooms from city1 to city0 with fuel level fl0 to fl1, plane1 flies from city1 to city0 with fuel level fl0 to fl4, plane1 zooms from city2 to city0 with fuel level fl5 to fl0, plane1 zooms from city2 to city1 with fuel level fl2 to fl1, plane1 flies from city2 to city3 with fuel level fl0 to fl2, plane1 zooms from city2 to city0 with fuel level fl2 to fl1, plane1 zooms from city0 to city2 with fuel level fl1 to fl0, plane1 zooms from city1 to city2 with fuel level fl4 to fl3, plane1 zooms from city0 to city1 with fuel level fl4 to fl3, plane1 flies from city3 to city2 with fuel level fl6 to fl3, plane1 zooms from city1 to city2 with fuel level fl4 to fl2, plane1 zooms from city0 to city3 with fuel level fl1 to fl0, plane1 gets refueled at city2 with fuel level fl5 to fl6, plane1 zooms from city1 to city0 with fuel level fl0 to fl4, plane1 zooms from city0 to city3 with fuel level fl0 to fl3, plane1 zooms from city0 to city1 with fuel level fl3 to fl4, plane1 zooms from city1 to city0 with fuel level fl5 to fl6, plane1 zooms from city0 to city3 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl2 to fl0, plane1 gets refueled at city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl6 to fl1, plane1 zooms from city1 to city3 with fuel level fl4 to fl1, plane1 zooms from city2 to city3 with fuel level fl6 to fl5, plane1 zooms from city1 to city3 with fuel level fl2 to fl4, plane1 zooms from city2 to city1 with fuel level fl1 to fl4, plane1 zooms from city2 to city1 with fuel level fl4 to fl0, plane1 gets refueled at city2 with fuel level fl1 to fl5, plane1 zooms from city3 to city2 with fuel level fl0 to fl2, plane1 flies from city3 to city0 with fuel level fl1 to fl6, plane1 zooms from city2 to city0 with fuel level fl5 to fl6, plane1 zooms from city2 to city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl0 to fl5, plane1 zooms from city3 to city2 with fuel level fl2 to fl3, plane1 zooms from city1 to city0 with fuel level fl6 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl4, plane1 zooms from city2 to city1 with fuel level fl3 to fl4, plane1 flies from city2 to city1 with fuel level fl5 to fl6, person8 boards plane1 at city3, plane1 flies from city1 to city0 with fuel level fl5 to fl3, person3 boards plane1 at city0, plane1 zooms from city1 to city3 with fuel level fl3 to fl1, plane1 zooms from city1 to city0 with fuel level fl1 to fl0, plane1 zooms from city1 to city2 with fuel level fl3 to fl6, plane1 zooms from city1 to city0 with fuel level fl3 to fl4, plane1 flies from city3 to city1 with fuel level fl5 to fl1, plane1 zooms from city0 to city1 with fuel level fl6 to fl3, plane1 flies from city3 to city1 with fuel level fl5 to fl3, plane1 zooms from city0 to city2 with fuel level fl1 to fl4, plane1 zooms from city2 to city3 with fuel level fl5 to fl3, plane1 zooms from city0 to city2 with fuel level fl0 to fl4, plane1 flies from city2 to city0 with fuel level fl4 to fl5, plane1 zooms from city1 to city0 with fuel level fl1 to fl5, plane1 zooms from city2 to city3 with fuel level fl0 to fl2, person6 boards plane1 at city0, plane1 zooms from city2 to city0 with fuel level fl6 to fl4, plane1 zooms from city1 to city3 with fuel level fl2 to fl3, plane1 zooms from city0 to city2 with fuel level fl5 to fl2, plane1 zooms from city3 to city1 with fuel level fl4 to fl5, plane1 zooms from city2 to city0 with fuel level fl5 to fl3, plane1 zooms from city2 to city3 with fuel level fl4 to fl3, plane1 zooms from city0 to city2 with fuel level fl2 to fl3, plane1 flies from city2 to city1 with fuel level fl6 to fl2, plane1 flies from city3 to city1 with fuel level fl6 to fl4, plane1 flies from city0 to city1 with fuel level fl6 to fl1, plane1 zooms from city2 to city3 with fuel level fl4 to fl2, plane1 zooms from city0 to city3 with fuel level fl1 to fl6, plane1 zooms from city0 to city1 with fuel level fl5 to fl2, plane1 zooms from city0 to city1 with fuel level fl6 to fl1, plane1 zooms from city3 to city1 with fuel level fl3 to fl0, plane1 zooms from city3 to city1 with fuel level fl5 to fl2, plane1 zooms from city2 to city1 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl1 to fl5, plane1 zooms from city2 to city3 with fuel level fl0 to fl2, plane1 zooms from city1 to city3 with fuel level fl1 to fl5, plane1 zooms from city0 to city1 with fuel level fl1 to fl0, plane1 zooms from city0 to city3 with fuel level fl5 to fl4, person8 boards plane1 at city2, plane1 zooms from city0 to city2 with fuel level fl5 to fl0, plane1 zooms from city2 to city1 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl1 to fl4, plane1 zooms from city0 to city3 with fuel level fl4 to fl0, plane1 flies from city0 to city1 with fuel level fl5 to fl0, plane1 zooms from city1 to city2 with fuel level fl3 to fl4, plane1 gets refueled at city0 with fuel level fl1 to fl2, plane1 zooms from city0 to city3 with fuel level fl6 to fl1, plane1 zooms from city1 to city0 with fuel level fl3 to fl4, plane1 zooms from city3 to city2 with fuel level fl3 to fl2, plane1 zooms from city2 to city0 with fuel level fl4 to fl3, plane1 zooms from city3 to city0 with fuel level fl3 to fl2, plane1 zooms from city1 to city2 with fuel level fl0 to fl6, plane1 zooms from city0 to city2 with fuel level fl3 to fl5, plane1 zooms from city3 to city2 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl1 to fl6, plane1 zooms from city0 to city3 with fuel level fl3 to fl6, plane1 zooms from city1 to city0 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl5 to fl2, plane1 zooms from city0 to city3 with fuel level fl5 to fl6, plane1 zooms from city0 to city1 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl0 to fl4, plane1 zooms from city2 to city3 with fuel level fl5 to fl4, plane1 zooms from city2 to city1 with fuel level fl1 to fl4, plane1 flies from city2 to city3 with fuel level fl5 to fl2, plane1 zooms from city0 to city1 with fuel level fl0 to fl5, plane1 zooms from city2 to city3 with fuel level fl6 to fl3, plane1 zooms from city2 to city0 with fuel level fl1 to fl6, plane1 zooms from city0 to city2 with fuel level fl2 to fl6, plane1 flies from city2 to city0 with fuel level fl6 to fl1, plane1 zooms from city3 to city2 with fuel level fl4 to fl0, plane1 zooms from city1 to city0 with fuel level fl0 to fl4, plane1 gets refueled at city1 with fuel level fl4 to fl2, plane1 zooms from city2 to city1 with fuel level fl5 to fl6, plane1 flies from city3 to city1 with fuel level fl6 to fl5, plane1 zooms from city0 to city2 with fuel level fl0 to fl1, plane1 zooms from city2 to city3 with fuel level fl6 to fl2, plane1 zooms from city3 to city2 with fuel level fl2 to fl5, plane1 flies from city2 to city0 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl3 to fl1, plane1 zooms from city3 to city2 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl3 to fl1, plane1 zooms from city3 to city2 with fuel level fl4 to fl3, plane1 zooms from city1 to city2 with fuel level fl3 to fl6, plane1 zooms from city0 to city2 with fuel level fl5 to fl4, plane1 flies from city2 to city0 with fuel level fl3 to fl2, plane1 zooms from city1 to city3 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl2 to fl6, plane1 zooms from city2 to city3 with fuel level fl6 to fl3, plane1 zooms from city2 to city0 with fuel level fl3 to fl4, plane1 zooms from city0 to city3 with fuel level fl2 to fl5, plane1 flies from city1 to city3 with fuel level fl0 to fl3, plane1 zooms from city1 to city3 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl1 to fl3, plane1 zooms from city1 to city2 with fuel level fl4 to fl1, plane1 zooms from city2 to city3 with fuel level fl3 to fl5, plane1 flies from city3 to city2 with fuel level fl6 to fl2, plane1 zooms from city1 to city3 with fuel level fl1 to fl6, plane1 zooms from city1 to city0 with fuel level fl4 to fl5, plane1 zooms from city0 to city1 with fuel level fl0 to fl1, plane1 zooms from city3 to city1 with fuel level fl6 to fl0, plane1 zooms from city1 to city2 with fuel level fl0 to fl1, plane1 zooms from city0 to city2 with fuel level fl6 to fl4, plane1 flies from city3 to city1 with fuel level fl1 to fl5, plane1 zooms from city0 to city3 with fuel level fl3 to fl1, plane1 zooms from city0 to city3 with fuel level fl2 to fl0, plane1 zooms from city3 to city1 with fuel level fl2 to fl6, plane1 zooms from city2 to city3 with fuel level fl3 to fl1, plane1 zooms from city2 to city3 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl5 to fl4, plane1 zooms from city0 to city2 with fuel level fl1 to fl2, plane1 zooms from city3 to city0 with fuel level fl3 to fl1, plane1 flies from city1 to city0 with fuel level fl2 to fl3, plane1 zooms from city0 to city3 with fuel level fl6 to fl5, plane1 gets refueled at city1 with fuel level fl6 to fl5, plane1 zooms from city2 to city1 with fuel level fl4 to fl1, plane1 flies from city1 to city0 with fuel level fl5 to fl6, plane1 zooms from city3 to city1 with fuel level fl3 to fl0, plane1 zooms from city2 to city0 with fuel level fl4 to fl3, plane1 flies from city2 to city0 with fuel level fl0 to fl4, plane1 zooms from city3 to city0 with fuel level fl3 to fl5, plane1 zooms from city0 to city3 with fuel level fl2 to fl4, plane1 zooms from city3 to city2 with fuel level fl1 to fl4, plane1 zooms from city3 to city2 with fuel level fl3 to fl4, plane1 zooms from city2 to city1 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl1 to fl6, person3 boards plane1 at city3, plane1 zooms from city1 to city2 with fuel level fl3 to fl1, plane1 zooms from city3 to city2 with fuel level fl6 to fl1, plane1 zooms from city3 to city0 with fuel level fl0 to fl4, plane1 zooms from city0 to city3 with fuel level fl3 to fl5, plane1 flies from city1 to city0 with fuel level fl3 to fl5, plane1 zooms from city2 to city1 with fuel level fl5 to fl3, plane1 zooms from city0 to city3 with fuel level fl2 to fl6, plane1 zooms from city3 to city2 with fuel level fl3 to fl2, plane1 zooms from city2 to city3 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl6 to fl2, plane1 zooms from city0 to city1 with fuel level fl1 to fl2, plane1 flies from city0 to city3 with fuel level fl4 to fl0, plane1 zooms from city3 to city2 with fuel level fl5 to fl1, plane1 zooms from city0 to city3 with fuel level fl5 to fl0, plane1 zooms from city2 to city3 with fuel level fl6 to fl1, plane1 flies from city1 to city2 with fuel level fl2 to fl6, plane1 zooms from city0 to city3 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl0 to fl1, plane1 flies from city0 to city3 with fuel level fl3 to fl2, plane1 zooms from city2 to city1 with fuel level fl6 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl4 to fl5, plane1 zooms from city0 to city2 with fuel level fl1 to fl4, plane1 zooms from city1 to city0 with fuel level fl1 to fl5, plane1 zooms from city0 to city2 with fuel level fl4 to fl0, plane1 zooms from city2 to city1 with fuel level fl5 to fl3, plane1 zooms from city2 to city0 with fuel level fl6 to fl3, plane1 flies from city2 to city0 with fuel level fl3 to fl0, plane1 zooms from city2 to city3 with fuel level fl5 to fl0, plane1 zooms from city3 to city0 with fuel level fl6 to fl2, plane1 zooms from city1 to city0 with fuel level fl6 to fl5, plane1 flies from city1 to city3 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl2 to fl4, plane1 zooms from city0 to city1 with fuel level fl5 to fl0, plane1 zooms from city2 to city0 with fuel level fl3 to fl1, plane1 flies from city2 to city3 with fuel level fl2 to fl1, person8 departs plane1 at city0, plane1 zooms from city0 to city1 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl1 to fl2, plane1 zooms from city0 to city1 with fuel level fl4 to fl2, plane1 zooms from city2 to city3 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl0 to fl3, plane1 flies from city1 to city2 with fuel level fl4 to fl2, plane1 zooms from city3 to city1 with fuel level fl0 to fl1, plane1 zooms from city3 to city1 with fuel level fl4 to fl2, plane1 flies from city0 to city3 with fuel level fl6 to fl5, plane1 zooms from city2 to city0 with fuel level fl6 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl0, plane1 zooms from city0 to city3 with fuel level fl6 to fl4, plane1 zooms from city3 to city1 with fuel level fl3 to fl6, plane1 zooms from city1 to city3 with fuel level fl6 to fl3, plane1 zooms from city3 to city2 with fuel level fl2 to fl1, plane1 zooms from city3 to city1 with fuel level fl5 to fl0, plane1 zooms from city1 to city0 with fuel level fl4 to fl0, plane1 zooms from city3 to city0 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl3 to fl0, plane1 zooms from city1 to city3 with fuel level fl0 to fl6, plane1 zooms from city3 to city0 with fuel level fl3 to fl4, plane1 zooms from city2 to city1 with fuel level fl0 to fl1, plane1 zooms from city2 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city2 with fuel level fl4 to fl3, plane1 zooms from city3 to city1 with fuel level fl2 to fl3, plane1 zooms from city2 to city3 with fuel level fl0 to fl4, plane1 flies from city2 to city3 with fuel level fl4 to fl5, plane1 zooms from city0 to city3 with fuel level fl6 to fl4, plane1 zooms from city1 to city0 with fuel level fl0 to fl6, plane1 zooms from city1 to city0 with fuel level fl3 to fl1, plane1 zooms from city2 to city0 with fuel level fl2 to fl4, plane1 zooms from city0 to city2 with fuel level fl4 to fl6, plane1 zooms from city0 to city2 with fuel level fl0 to fl1, plane1 flies from city2 to city0 with fuel level fl5 to fl2, plane1 zooms from city0 to city2 with fuel level fl2 to fl0, plane1 zooms from city3 to city0 with fuel level fl1 to fl4, plane1 zooms from city2 to city0 with fuel level fl5 to fl3, plane1 zooms from city0 to city2 with fuel level fl5 to fl1, plane1 gets refueled at city3 with fuel level fl3 to fl0, plane1 zooms from city3 to city1 with fuel level fl0 to fl1, plane1 zooms from city3 to city0 with fuel level fl4 to fl5, plane1 zooms from city1 to city3 with fuel level fl5 to fl3, plane1 zooms from city3 to city0 with fuel level fl0 to fl3, plane1 zooms from city3 to city1 with fuel level fl4 to fl1, plane1 zooms from city0 to city2 with fuel level fl5 to fl4, plane1 zooms from city1 to city3 with fuel level fl3 to fl6, plane1 zooms from city1 to city2 with fuel level fl3 to fl2, plane1 zooms from city1 to city3 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city3 with fuel level fl0 to fl4, plane1 zooms from city0 to city1 with fuel level fl2 to fl6, plane1 zooms from city3 to city1 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl5 to fl1, plane1 gets refueled at city1 with fuel level fl3 to fl4, plane1 flies from city1 to city0 with fuel level fl0 to fl2, plane1 flies from city0 to city3 with fuel level fl3 to fl6, plane1 flies from city0 to city3 with fuel level fl6 to fl0, person1 departs plane1 at city2, plane1 zooms from city2 to city3 with fuel level fl1 to fl2, plane1 zooms from city3 to city0 with fuel level fl6 to fl4, plane1 zooms from city1 to city3 with fuel level fl5 to fl1, plane1 zooms from city3 to city2 with fuel level fl0 to fl4, plane1 zooms from city3 to city2 with fuel level fl6 to fl3, plane1 zooms from city3 to city1 with fuel level fl6 to fl4, plane1 zooms from city3 to city1 with fuel level fl3 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl6, plane1 zooms from city1 to city0 with fuel level fl0 to fl3, plane1 zooms from city1 to city3 with fuel level fl3 to fl5, plane1 zooms from city3 to city2 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl6 to fl1, plane1 zooms from city1 to city3 with fuel level fl3 to fl5, plane1 zooms from city3 to city0 with fuel level fl0 to fl6, plane1 zooms from city3 to city1 with fuel level fl4 to fl6, plane1 zooms from city3 to city0 with fuel level fl2 to fl1, plane1 zooms from city1 to city0 with fuel level fl2 to fl3, plane1 zooms from city0 to city1 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl1 to fl5, plane1 zooms from city3 to city0 with fuel level fl4 to fl5, plane1 zooms from city2 to city3 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl2 to fl3, plane1 zooms from city3 to city1 with fuel level fl3 to fl5, plane1 zooms from city2 to city0 with fuel level fl6 to fl1, plane1 zooms from city1 to city2 with fuel level fl0 to fl3, plane1 flies from city1 to city2 with fuel level fl5 to fl1, plane1 zooms from city0 to city2 with fuel level fl5 to fl6, plane1 zooms from city0 to city1 with fuel level fl5 to fl6, plane1 zooms from city0 to city1 with fuel level fl5 to fl4, plane1 flies from city0 to city2 with fuel level fl5 to fl6, plane1 zooms from city0 to city1 with fuel level fl0 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl4, plane1 zooms from city0 to city3 with fuel level fl3 to fl4, plane1 zooms from city0 to city1 with fuel level fl0 to fl1, plane1 zooms from city3 to city2 with fuel level fl2 to fl4, plane1 flies from city0 to city3 with fuel level fl4 to fl1, plane1 zooms from city3 to city0 with fuel level fl4 to fl3, plane1 flies from city2 to city1 with fuel level fl2 to fl3, plane1 zooms from city2 to city1 with fuel level fl4 to fl6, plane1 zooms from city3 to city0 with fuel level fl6 to fl2, plane1 zooms from city3 to city0 with fuel level fl1 to fl6, plane1 zooms from city2 to city1 with fuel level fl5 to fl4, plane1 zooms from city0 to city1 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl2 to fl5, plane1 zooms from city1 to city3 with fuel level fl6 to fl2, plane1 zooms from city2 to city0 with fuel level fl6 to fl2, plane1 gets refueled at city1 with fuel level fl3 to fl1, plane1 zooms from city1 to city0 with fuel level fl5 to fl3, plane1 zooms from city1 to city3 with fuel level fl0 to fl1, plane1 zooms from city1 to city0 with fuel level fl4 to fl3, plane1 zooms from city1 to city2 with fuel level fl5 to fl4, plane1 zooms from city0 to city2 with fuel level fl6 to fl0, plane1 flies from city3 to city1 with fuel level fl0 to fl1, plane1 gets refueled at city3 with fuel level fl0 to fl1, plane1 zooms from city1 to city3 with fuel level fl5 to fl3, plane1 zooms from city0 to city3 with fuel level fl4 to fl0, plane1 flies from city0 to city3 with fuel level fl2 to fl0, plane1 zooms from city1 to city2 with fuel level fl2 to fl3, plane1 zooms from city0 to city2 with fuel level fl3 to fl1, plane1 zooms from city0 to city1 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl1 to fl6, plane1 zooms from city3 to city1 with fuel level fl1 to fl0, plane1 zooms from city1 to city3 with fuel level fl3 to fl0, plane1 flies from city1 to city0 with fuel level fl4 to fl3, plane1 zooms from city0 to city2 with fuel level fl4 to fl1, plane1 gets refueled at city3 with fuel level fl1 to fl6, plane1 zooms from city2 to city0 with fuel level fl6 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl3, plane1 zooms from city1 to city2 with fuel level fl3 to fl2, plane1 zooms from city2 to city0 with fuel level fl2 to fl5, plane1 gets refueled at city0 with fuel level fl3 to fl4, plane1 zooms from city2 to city3 with fuel level fl3 to fl2, plane1 zooms from city2 to city0 with fuel level fl6 to fl5, plane1 zooms from city0 to city1 with fuel level fl3 to fl6, plane1 zooms from city0 to city2 with fuel level fl6 to fl1, plane1 zooms from city2 to city0 with fuel level fl0 to fl4, plane1 zooms from city2 to city1 with fuel level fl6 to fl2, plane1 zooms from city3 to city2 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl2 to fl0, plane1 zooms from city1 to city2 with fuel level fl0 to fl4, plane1 zooms from city2 to city3 with fuel level fl4 to fl5, plane1 zooms from city0 to city2 with fuel level fl2 to fl0, plane1 zooms from city3 to city1 with fuel level fl2 to fl6, plane1 zooms from city0 to city2 with fuel level fl0 to fl3, plane1 zooms from city0 to city1 with fuel level fl6 to fl4, plane1 zooms from city2 to city3 with fuel level fl5 to fl6, plane1 zooms from city2 to city1 with fuel level fl5 to fl4, plane1 zooms from city1 to city0 with fuel level fl2 to fl1, plane1 zooms from city1 to city2 with fuel level fl2 to fl1, plane1 zooms from city1 to city0 with fuel level fl5 to fl2, plane1 zooms from city0 to city2 with fuel level fl2 to fl3, plane1 zooms from city3 to city0 with fuel level fl3 to fl6, plane1 zooms from city3 to city2 with fuel level fl6 to fl3, plane1 zooms from city2 to city1 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl5, plane1 flies from city0 to city2 with fuel level fl2 to fl0, plane1 zooms from city0 to city2 with fuel level fl5 to fl0, plane1 zooms from city3 to city2 with fuel level fl0 to fl4, plane1 zooms from city1 to city3 with fuel level fl4 to fl2, plane1 zooms from city2 to city1 with fuel level fl4 to fl5, plane1 zooms from city0 to city2 with fuel level fl0 to fl6, plane1 zooms from city1 to city3 with fuel level fl5 to fl3, plane1 gets refueled at city0 with fuel level fl0 to fl6, plane1 zooms from city3 to city0 with fuel level fl1 to fl2, plane1 gets refueled at city2 with fuel level fl2 to fl1, plane1 zooms from city1 to city0 with fuel level fl1 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl4, plane1 flies from city1 to city0 with fuel level fl2 to fl5, plane1 zooms from city1 to city0 with fuel level fl2 to fl0, plane1 zooms from city1 to city0 with fuel level fl0 to fl1, plane1 flies from city2 to city1 with fuel level fl2 to fl0, plane1 zooms from city2 to city3 with fuel level fl4 to fl1, plane1 zooms from city0 to city1 with fuel level fl0 to fl6, plane1 zooms from city2 to city1 with fuel level fl1 to fl2, plane1 zooms from city0 to city1 with fuel level fl6 to fl1, plane1 zooms from city0 to city3 with fuel level fl5 to fl3, plane1 flies from city2 to city3 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl2 to fl0, plane1 zooms from city0 to city2 with fuel level fl0 to fl5, plane1 zooms from city3 to city0 with fuel level fl3 to fl6, plane1 flies from city1 to city3 with fuel level fl1 to fl6, plane1 zooms from city2 to city1 with fuel level fl3 to fl6, plane1 zooms from city3 to city1 with fuel level fl2 to fl0, plane1 zooms from city3 to city2 with fuel level fl5 to fl1, plane1 zooms from city2 to city0 with fuel level fl4 to fl1, plane1 zooms from city1 to city3 with fuel level fl2 to fl6, plane1 flies from city0 to city3 with fuel level fl0 to fl4, plane1 zooms from city1 to city2 with fuel level fl1 to fl4, plane1 zooms from city0 to city3 with fuel level fl5 to fl1, plane1 gets refueled at city3 with fuel level fl5 to fl6, person8 boards plane1 at city0, plane1 flies from city3 to city1 with fuel level fl6 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl4, plane1 zooms from city3 to city0 with fuel level fl4 to fl3, plane1 zooms from city2 to city1 with fuel level fl5 to fl0, plane1 zooms from city0 to city2 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl3 to fl6, plane1 flies from city3 to city1 with fuel level fl5 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl6, plane1 zooms from city0 to city2 with fuel level fl2 to fl1, plane1 flies from city1 to city3 with fuel level fl0 to fl5, plane1 flies from city3 to city1 with fuel level fl5 to fl4, plane1 zooms from city1 to city0 with fuel level fl5 to fl0, plane1 zooms from city3 to city0 with fuel level fl2 to fl5, plane1 zooms from city1 to city0 with fuel level fl5 to fl3, person4 boards plane1 at city1, plane1 zooms from city2 to city1 with fuel level fl2 to fl4, plane1 zooms from city3 to city0 with fuel level fl3 to fl0, plane1 zooms from city2 to city0 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl1 to fl4, plane1 zooms from city3 to city0 with fuel level fl6 to fl3, plane1 zooms from city2 to city3 with fuel level fl0 to fl1, plane1 zooms from city2 to city1 with fuel level fl6 to fl3, plane1 zooms from city1 to city0 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl5 to fl2, plane1 flies from city1 to city3 with fuel level fl2 to fl4, plane1 zooms from city1 to city3 with fuel level fl1 to fl6, plane1 zooms from city3 to city2 with fuel level fl4 to fl0, plane1 zooms from city2 to city0 with fuel level fl5 to fl1, plane1 zooms from city0 to city3 with fuel level fl4 to fl3, plane1 zooms from city1 to city2 with fuel level fl6 to fl5, plane1 zooms from city1 to city3 with fuel level fl3 to fl5, plane1 zooms from city2 to city0 with fuel level fl6 to fl1, plane1 zooms from city0 to city2 with fuel level fl2 to fl1, plane1 zooms from city3 to city0 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl6 to fl0, plane1 zooms from city1 to city3 with fuel level fl6 to fl5, plane1 zooms from city2 to city1 with fuel level fl0 to fl6, plane1 zooms from city0 to city2 with fuel level fl2 to fl4, plane1 zooms from city2 to city1 with fuel level fl1 to fl4, plane1 zooms from city2 to city1 with fuel level fl2 to fl4, plane1 zooms from city3 to city1 with fuel level fl6 to fl5, plane1 zooms from city1 to city2 with fuel level fl4 to fl5, plane1 zooms from city2 to city0 with fuel level fl0 to fl6, plane1 zooms from city2 to city0 with fuel level fl1 to fl0, plane1 flies from city3 to city0 with fuel level fl3 to fl4, plane1 zooms from city3 to city0 with fuel level fl6 to fl5, plane1 zooms from city3 to city0 with fuel level fl4 to fl5, plane1 zooms from city3 to city2 with fuel level fl5 to fl6, plane1 zooms from city3 to city2 with fuel level fl3 to fl6, plane1 zooms from city0 to city1 with fuel level fl0 to fl2, plane1 zooms from city2 to city3 with fuel level fl0 to fl3, plane1 zooms from city2 to city1 with fuel level fl3 to fl5, plane1 zooms from city0 to city3 with fuel level fl4 to fl5, plane1 flies from city1 to city0 with fuel level fl2 to fl0, plane1 zooms from city1 to city0 with fuel level fl4 to fl6, plane1 gets refueled at city2 with fuel level fl3 to fl2, plane1 zooms from city2 to city0 with fuel level fl5 to fl0, plane1 zooms from city3 to city2 with fuel level fl0 to fl1, plane1 flies from city0 to city2 with fuel level fl6 to fl2, plane1 flies from city3 to city0 with fuel level fl5 to fl3, plane1 zooms from city0 to city2 with fuel level fl4 to fl1, plane1 flies from city1 to city0 with fuel level fl0 to fl5, plane1 zooms from city0 to city3 with fuel level fl6 to fl4, plane1 zooms from city1 to city3 with fuel level fl1 to fl2, plane1 zooms from city1 to city0 with fuel level fl2 to fl1, plane1 zooms from city0 to city3 with fuel level fl3 to fl0, plane1 zooms from city3 to city2 with fuel level fl3 to fl2, plane1 zooms from city0 to city1 with fuel level fl1 to fl2, plane1 flies from city2 to city0 with fuel level fl3 to fl1, plane1 flies from city1 to city3 with fuel level fl1 to fl3, plane1 zooms from city1 to city3 with fuel level fl1 to fl4, plane1 zooms from city0 to city1 with fuel level fl1 to fl4, plane1 zooms from city0 to city3 with fuel level fl1 to fl2, plane1 zooms from city1 to city2 with fuel level fl5 to fl1, plane1 zooms from city1 to city0 with fuel level fl0 to fl5, plane1 zooms from city2 to city0 with fuel level fl2 to fl1, person7 departs plane1 at city2, plane1 gets refueled at city0 with fuel level fl2 to fl6, plane1 zooms from city3 to city0 with fuel level fl5 to fl2, plane1 zooms from city0 to city2 with fuel level fl4 to fl0, plane1 zooms from city2 to city0 with fuel level fl1 to fl4, plane1 zooms from city2 to city1 with fuel level fl6 to fl4, plane1 zooms from city2 to city1 with fuel level fl0 to fl2, plane1 zooms from city2 to city0 with fuel level fl2 to fl3, plane1 flies from city3 to city2 with fuel level fl6 to fl4, plane1 zooms from city3 to city2 with fuel level fl5 to fl0, plane1 zooms from city2 to city1 with fuel level fl4 to fl3, plane1 zooms from city3 to city0 with fuel level fl3 to fl6, plane1 flies from city0 to city2 with fuel level fl2 to fl6, plane1 flies from city2 to city3 with fuel level fl2 to fl6, plane1 zooms from city0 to city1 with fuel level fl2 to fl6, plane1 zooms from city1 to city3 with fuel level fl6 to fl4, plane1 zooms from city3 to city1 with fuel level fl1 to fl3, plane1 zooms from city2 to city1 with fuel level fl3 to fl0, plane1 gets refueled at city2 with fuel level fl6 to fl0, plane1 gets refueled at city3 with fuel level fl2 to fl4, plane1 zooms from city0 to city1 with fuel level fl6 to fl1, plane1 zooms from city0 to city2 with fuel level fl1 to fl0, plane1 zooms from city1 to city3 with fuel level fl1 to fl2, plane1 zooms from city2 to city0 with fuel level fl2 to fl6, plane1 zooms from city3 to city2 with fuel level fl6 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl2, plane1 zooms from city1 to city0 with fuel level fl5 to fl3, plane1 zooms from city3 to city1 with fuel level fl5 to fl1, plane1 flies from city1 to city3 with fuel level fl3 to fl5, plane1 flies from city1 to city2 with fuel level fl2 to fl5, plane1 zooms from city0 to city1 with fuel level fl0 to fl5, plane1 zooms from city1 to city0 with fuel level fl6 to fl1, plane1 zooms from city2 to city3 with fuel level fl5 to fl3, plane1 gets refueled at city1 with fuel level fl5 to fl2, plane1 zooms from city1 to city2 with fuel level fl5 to fl4, plane1 zooms from city2 to city3 with fuel level fl0 to fl3, person7 boards plane1 at city3, plane1 zooms from city3 to city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city0 with fuel level fl6 to fl0, plane1 zooms from city2 to city0 with fuel level fl6 to fl5, person1 boards plane1 at city2, plane1 flies from city3 to city1 with fuel level fl4 to fl0, plane1 zooms from city0 to city1 with fuel level fl1 to fl5, plane1 zooms from city2 to city0 with fuel level fl1 to fl2, plane1 flies from city3 to city2 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl3 to fl4, plane1 flies from city1 to city3 with fuel level fl4 to fl3, plane1 zooms from city3 to city0 with fuel level fl5 to fl3, plane1 zooms from city2 to city0 with fuel level fl4 to fl5, plane1 zooms from city3 to city0 with fuel level fl0 to fl6, plane1 flies from city2 to city0 with fuel level fl4 to fl1, plane1 zooms from city2 to city0 with fuel level fl2 to fl6, plane1 zooms from city3 to city0 with fuel level fl3 to fl0, plane1 zooms from city3 to city0 with fuel level fl3 to fl0, plane1 flies from city1 to city2 with fuel level fl5 to fl4, plane1 flies from city2 to city0 with fuel level fl4 to fl0, plane1 zooms from city2 to city1 with fuel level fl3 to fl1, plane1 zooms from city1 to city3 with fuel level fl5 to fl1, plane1 gets refueled at city0 with fuel level fl2 to fl4, plane1 flies from city0 to city2 with fuel level fl2 to fl3, plane1 zooms from city3 to city2 with fuel level fl0 to fl4, plane1 zooms from city0 to city1 with fuel level fl5 to fl2, plane1 zooms from city2 to city3 with fuel level fl4 to fl5, plane1 zooms from city3 to city1 with fuel level fl1 to fl3, plane1 zooms from city2 to city0 with fuel level fl4 to fl6, plane1 zooms from city3 to city2 with fuel level fl6 to fl0, plane1 zooms from city0 to city1 with fuel level fl1 to fl3, plane1 zooms from city1 to city3 with fuel level fl6 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl2 to fl0, plane1 zooms from city1 to city0 with fuel level fl3 to fl6, plane1 zooms from city0 to city1 with fuel level fl2 to fl3, plane1 flies from city3 to city1 with fuel level fl5 to fl2, plane1 zooms from city3 to city2 with fuel level fl0 to fl5, plane1 zooms from city3 to city0 with fuel level fl1 to fl2, plane1 flies from city2 to city1 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl3 to fl1, plane1 zooms from city2 to city0 with fuel level fl6 to fl1, plane1 gets refueled at city1 with fuel level fl4 to fl5, plane1 zooms from city2 to city3 with fuel level fl2 to fl4, plane1 zooms from city0 to city3 with fuel level fl1 to fl2, plane1 zooms from city3 to city2 with fuel level fl6 to fl0, plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 zooms from city0 to city1 with fuel level fl6 to fl3, plane1 flies from city3 to city2 with fuel level fl0 to fl2, plane1 flies from city0 to city3 with fuel level fl5 to fl0, plane1 flies from city2 to city1 with fuel level fl6 to fl3, plane1 zooms from city0 to city1 with fuel level fl1 to fl0, plane1 zooms from city0 to city3 with fuel level fl0 to fl1, plane1 zooms from city3 to city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city3 with fuel level fl3 to fl1, plane1 zooms from city2 to city3 with fuel level fl3 to fl4, plane1 zooms from city3 to city2 with fuel level fl5 to fl3, plane1 zooms from city0 to city1 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl1 to fl4, plane1 zooms from city2 to city0 with fuel level fl2 to fl4, plane1 gets refueled at city2 with fuel level fl5 to fl2, plane1 flies from city2 to city0 with fuel level fl3 to fl4, plane1 zooms from city3 to city1 with fuel level fl6 to fl3, plane1 flies from city0 to city1 with fuel level fl1 to fl6, plane1 zooms from city3 to city0 with fuel level fl0 to fl2, plane1 zooms from city3 to city1 with fuel level fl1 to fl0, plane1 flies from city3 to city2 with fuel level fl2 to fl5, plane1 zooms from city1 to city0 with fuel level fl0 to fl2, plane1 zooms from city1 to city2 with fuel level fl2 to fl3, plane1 flies from city2 to city3 with fuel level fl4 to fl0, plane1 flies from city3 to city2 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl1 to fl4, plane1 zooms from city2 to city0 with fuel level fl6 to fl1, plane1 zooms from city2 to city1 with fuel level fl6 to fl1, plane1 zooms from city1 to city0 with fuel level fl5 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl2, plane1 zooms from city0 to city3 with fuel level fl0 to fl4, plane1 zooms from city1 to city2 with fuel level fl1 to fl4, plane1 zooms from city1 to city0 with fuel level fl3 to fl0, plane1 zooms from city0 to city2 with fuel level fl2 to fl5, plane1 zooms from city2 to city0 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl3 to fl4, plane1 zooms from city2 to city1 with fuel level fl6 to fl5, plane1 zooms from city1 to city2 with fuel level fl3 to fl1, plane1 flies from city1 to city3 with fuel level fl6 to fl4, plane1 gets refueled at city0 with fuel level fl4 to fl1, plane1 gets refueled at city0 with fuel level fl6 to fl0, plane1 zooms from city0 to city3 with fuel level fl0 to fl3, plane1 zooms from city1 to city2 with fuel level fl0 to fl6, plane1 zooms from city2 to city0 with fuel level fl1 to fl5, plane1 zooms from city3 to city0 with fuel level fl1 to fl2, plane1 flies from city3 to city1 with fuel level fl2 to fl6, plane1 zooms from city2 to city1 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl0 to fl2, plane1 zooms from city1 to city2 with fuel level fl2 to fl5, plane1 zooms from city3 to city0 with fuel level fl1 to fl0, plane1 zooms from city0 to city2 with fuel level fl3 to fl4, plane1 zooms from city2 to city3 with fuel level fl3 to fl0, plane1 zooms from city3 to city1 with fuel level fl2 to fl3, plane1 zooms from city2 to city0 with fuel level fl0 to fl5, plane1 zooms from city3 to city1 with fuel level fl4 to fl1, plane1 gets refueled at city2 with fuel level fl1 to fl4, plane1 zooms from city2 to city3 with fuel level fl6 to fl1, plane1 zooms from city2 to city0 with fuel level fl6 to fl3, plane1 zooms from city3 to city2 with fuel level fl6 to fl5, plane1 zooms from city2 to city1 with fuel level fl2 to fl5, plane1 flies from city1 to city3 with fuel level fl5 to fl3, plane1 zooms from city0 to city1 with fuel level fl2 to fl3, plane1 zooms from city3 to city2 with fuel level fl2 to fl0, plane1 flies from city2 to city3 with fuel level fl2 to fl3, person6 departs plane1 at city0, plane1 zooms from city3 to city2 with fuel level fl5 to fl3, plane1 zooms from city0 to city1 with fuel level fl1 to fl4, plane1 flies from city3 to city2 with fuel level fl3 to fl4, plane1 zooms from city3 to city1 with fuel level fl0 to fl1, plane1 gets refueled at city0 with fuel level fl6 to fl3, plane1 zooms from city2 to city1 with fuel level fl5 to fl1, plane1 zooms from city3 to city1 with fuel level fl6 to fl2, plane1 zooms from city3 to city0 with fuel level fl5 to fl3, plane1 zooms from city0 to city2 with fuel level fl5 to fl0, plane1 zooms from city2 to city1 with fuel level fl0 to fl1, plane1 zooms from city3 to city0 with fuel level fl2 to fl6, plane1 zooms from city1 to city3 with fuel level fl5 to fl6, plane1 gets refueled at city2 with fuel level fl4 to fl5, plane1 zooms from city2 to city0 with fuel level fl2 to fl3, plane1 zooms from city2 to city0 with fuel level fl4 to fl6, plane1 zooms from city0 to city3 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl4 to fl0, plane1 zooms from city2 to city1 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl4 to fl2, plane1 zooms from city3 to city0 with fuel level fl1 to fl5, plane1 flies from city2 to city1 with fuel level fl1 to fl3, plane1 zooms from city2 to city1 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl5 to fl2, plane1 zooms from city2 to city0 with fuel level fl4 to fl0, plane1 flies from city2 to city0 with fuel level fl0 to fl6, plane1 zooms from city0 to city3 with fuel level fl1 to fl3, plane1 zooms from city2 to city0 with fuel level fl0 to fl4, plane1 zooms from city2 to city3 with fuel level fl2 to fl0, plane1 gets refueled at city3 with fuel level fl4 to fl0, plane1 zooms from city1 to city0 with fuel level fl6 to fl2, plane1 zooms from city2 to city1 with fuel level fl3 to fl6, plane1 zooms from city1 to city0 with fuel level fl5 to fl0, plane1 zooms from city3 to city1 with fuel level fl1 to fl6, plane1 zooms from city0 to city2 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl1 to fl3, plane1 gets refueled at city0 with fuel level fl6 to fl5, plane1 zooms from city2 to city1 with fuel level fl5 to fl2, plane1 zooms from city3 to city2 with fuel level fl6 to fl1, plane1 zooms from city1 to city3 with fuel level fl6 to fl1, plane1 flies from city2 to city1 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl2 to fl0, plane1 zooms from city2 to city1 with fuel level fl4 to fl6, plane1 zooms from city2 to city0 with fuel level fl6 to fl3, plane1 zooms from city3 to city2 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl1 to fl4, plane1 zooms from city0 to city3 with fuel level fl0 to fl3, plane1 zooms from city0 to city1 with fuel level fl3 to fl0, plane1 zooms from city0 to city1 with fuel level fl3 to fl1, plane1 zooms from city1 to city0 with fuel level fl0 to fl5, plane1 zooms from city0 to city2 with fuel level fl3 to fl2, plane1 flies from city0 to city3 with fuel level fl1 to fl2, plane1 zooms from city2 to city1 with fuel level fl6 to fl2, plane1 flies from city3 to city0 with fuel level fl1 to fl0, plane1 zooms from city3 to city0 with fuel level fl1 to fl3, plane1 zooms from city3 to city0 with fuel level fl6 to fl0, plane1 zooms from city0 to city1 with fuel level fl5 to fl3, plane1 zooms from city2 to city3 with fuel level fl6 to fl4, plane1 flies from city2 to city3 with fuel level fl5 to fl0, plane1 zooms from city3 to city0 with fuel level fl2 to fl5, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 zooms from city0 to city3 with fuel level fl2 to fl5, plane1 zooms from city3 to city2 with fuel level fl5 to fl4, plane1 zooms from city0 to city3 with fuel level fl4 to fl2, plane1 zooms from city1 to city0 with fuel level fl2 to fl4, plane1 zooms from city3 to city1 with fuel level fl2 to fl1, plane1 zooms from city1 to city3 with fuel level fl3 to fl5, plane1 zooms from city1 to city2 with fuel level fl3 to fl5, plane1 zooms from city0 to city1 with fuel level fl6 to fl2, plane1 zooms from city0 to city2 with fuel level fl5 to fl4, plane1 zooms from city1 to city0 with fuel level fl1 to fl2, plane1 zooms from city2 to city0 with fuel level fl4 to fl3, plane1 zooms from city2 to city0 with fuel level fl0 to fl6, plane1 zooms from city3 to city0 with fuel level fl6 to fl1, plane1 flies from city1 to city0 with fuel level fl5 to fl2, plane1 zooms from city3 to city2 with fuel level fl5 to fl0, plane1 zooms from city0 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city3 with fuel level fl0 to fl4, plane1 zooms from city3 to city2 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl0 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl2, plane1 zooms from city2 to city1 with fuel level fl0 to fl6, plane1 zooms from city3 to city0 with fuel level fl2 to fl0, plane1 zooms from city0 to city2 with fuel level fl1 to fl3, plane1 zooms from city3 to city0 with fuel level fl5 to fl4, plane1 zooms from city1 to city0 with fuel level fl0 to fl5, plane1 zooms from city1 to city3 with fuel level fl3 to fl1, plane1 zooms from city1 to city2 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl6 to fl4, plane1 zooms from city1 to city2 with fuel level fl2 to fl0, plane1 gets refueled at city0 with fuel level fl5 to fl2, plane1 zooms from city2 to city3 with fuel level fl1 to fl2, plane1 zooms from city0 to city2 with fuel level fl1 to fl4, plane1 zooms from city0 to city1 with fuel level fl2 to fl4, plane1 zooms from city1 to city3 with fuel level fl2 to fl1, plane1 zooms from city0 to city2 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl5 to fl2, plane1 zooms from city2 to city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city0 with fuel level fl2 to fl1, plane1 gets refueled at city0 with fuel level fl6 to fl1, plane1 zooms from city0 to city3 with fuel level fl4 to fl3, plane1 flies from city0 to city1 with fuel level fl2 to fl1, plane1 zooms from city1 to city2 with fuel level fl0 to fl1, plane1 zooms from city1 to city0 with fuel level fl0 to fl3, plane1 zooms from city1 to city0 with fuel level fl1 to fl5, plane1 zooms from city2 to city1 with fuel level fl5 to fl6, plane1 zooms from city2 to city0 with fuel level fl5 to fl0, plane1 zooms from city3 to city1 with fuel level fl5 to fl0, plane1 zooms from city2 to city3 with fuel level fl1 to fl6, plane1 zooms from city1 to city2 with fuel level fl4 to fl1, plane1 zooms from city1 to city3 with fuel level fl6 to fl0, plane1 zooms from city2 to city1 with fuel level fl5 to fl3, plane1 zooms from city2 to city0 with fuel level fl1 to fl6, plane1 zooms from city0 to city1 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl5 to fl0, plane1 zooms from city3 to city0 with fuel level fl4 to fl0, plane1 flies from city2 to city3 with fuel level fl5 to fl6, plane1 zooms from city2 to city0 with fuel level fl3 to fl5, plane1 zooms from city3 to city1 with fuel level fl1 to fl0, plane1 zooms from city3 to city1 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl4 to fl1, plane1 zooms from city2 to city3 with fuel level fl5 to fl3, plane1 flies from city2 to city3 with fuel level fl0 to fl3, plane1 zooms from city0 to city2 with fuel level fl3 to fl1, plane1 zooms from city0 to city3 with fuel level fl4 to fl5, plane1 zooms from city1 to city3 with fuel level fl5 to fl4, plane1 zooms from city3 to city2 with fuel level fl5 to fl0, plane1 zooms from city3 to city1 with fuel level fl2 to fl0, plane1 flies from city3 to city1 with fuel level fl1 to fl2, plane1 zooms from city1 to city3 with fuel level fl3 to fl4, plane1 flies from city2 to city0 with fuel level fl2 to fl5, plane1 flies from city2 to city0 with fuel level fl0 to fl1, plane1 zooms from city3 to city1 with fuel level fl6 to fl2, plane1 zooms from city0 to city1 with fuel level fl1 to fl2, plane1 zooms from city3 to city2 with fuel level fl6 to fl3, plane1 zooms from city1 to city0 with fuel level fl6 to fl3, plane1 zooms from city1 to city0 with fuel level fl4 to fl3, plane1 zooms from city0 to city1 with fuel level fl5 to fl0, plane1 zooms from city1 to city0 with fuel level fl4 to fl6, plane1 flies from city2 to city0 with fuel level fl2 to fl3, plane1 zooms from city3 to city0 with fuel level fl3 to fl5, plane1 zooms from city3 to city1 with fuel level fl1 to fl6, plane1 zooms from city1 to city2 with fuel level fl3 to fl0, plane1 zooms from city2 to city0 with fuel level fl1 to fl3, plane1 zooms from city3 to city0 with fuel level fl1 to fl4, plane1 zooms from city3 to city2 with fuel level fl4 to fl1, plane1 zooms from city1 to city0 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl3 to fl4, plane1 zooms from city3 to city1 with fuel level fl1 to fl4, plane1 zooms from city1 to city3 with fuel level fl2 to fl5, plane1 zooms from city2 to city0 with fuel level fl1 to fl4, plane1 flies from city0 to city2 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl1 to fl5, plane1 zooms from city0 to city1 with fuel level fl5 to fl3, plane1 zooms from city2 to city3 with fuel level fl2 to fl6, plane1 flies from city3 to city0 with fuel level fl4 to fl1, plane1 flies from city2 to city3 with fuel level fl5 to fl1, plane1 zooms from city2 to city1 with fuel level fl2 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl2, plane1 zooms from city0 to city1 with fuel level fl4 to fl2, plane1 gets refueled at city2 with fuel level fl3 to fl1, plane1 zooms from city2 to city0 with fuel level fl1 to fl0, plane1 zooms from city2 to city1 with fuel level fl3 to fl1, plane1 zooms from city1 to city2 with fuel level fl5 to fl1, plane1 flies from city1 to city3 with fuel level fl5 to fl0, plane1 flies from city1 to city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl4 to fl6, plane1 zooms from city3 to city1 with fuel level fl4 to fl5, plane1 zooms from city2 to city1 with fuel level fl1 to fl6, plane1 flies from city3 to city0 with fuel level fl0 to fl3, plane1 zooms from city0 to city3 with fuel level fl4 to fl5, plane1 zooms from city0 to city2 with fuel level fl3 to fl6, plane1 zooms from city3 to city1 with fuel level fl5 to fl4, plane1 zooms from city1 to city2 with fuel level fl0 to fl2, plane1 zooms from city1 to city2 with fuel level fl0 to fl1, plane1 zooms from city0 to city2 with fuel level fl0 to fl4, plane1 zooms from city3 to city1 with fuel level fl4 to fl3, plane1 zooms from city0 to city1 with fuel level fl3 to fl2, plane1 zooms from city1 to city2 with fuel level fl6 to fl5, plane1 zooms from city1 to city3 with fuel level fl6 to fl5, plane1 gets refueled at city1 with fuel level fl4 to fl3, plane1 zooms from city0 to city1 with fuel level fl0 to fl3, plane1 zooms from city1 to city0 with fuel level fl5 to fl4, plane1 zooms from city0 to city3 with fuel level fl6 to fl3, plane1 zooms from city1 to city3 with fuel level fl3 to fl0, plane1 zooms from city0 to city2 with fuel level fl0 to fl6, plane1 zooms from city3 to city0 with fuel level fl5 to fl0, plane1 zooms from city0 to city1 with fuel level fl1 to fl5, plane1 zooms from city1 to city3 with fuel level fl1 to fl5, plane1 gets refueled at city0 with fuel level fl3 to fl6, plane1 zooms from city0 to city3 with fuel level fl1 to fl4, plane1 zooms from city3 to city2 with fuel level fl5 to fl6, plane1 gets refueled at city0 with fuel level fl0 to fl4, plane1 flies from city1 to city2 with fuel level fl3 to fl0, plane1 zooms from city1 to city2 with fuel level fl6 to fl2, plane1 zooms from city2 to city1 with fuel level fl2 to fl0, plane1 zooms from city0 to city2 with fuel level fl3 to fl0, plane1 zooms from city1 to city3 with fuel level fl5 to fl4, plane1 flies from city0 to city2 with fuel level fl6 to fl3, plane1 zooms from city3 to city2 with fuel level fl1 to fl0, plane1 flies from city0 to city2 with fuel level fl3 to fl0, plane1 flies from city1 to city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl2 to fl6, plane1 zooms from city2 to city3 with fuel level fl4 to fl5, plane1 zooms from city2 to city3 with fuel level fl5 to fl4, plane1 zooms from city0 to city3 with fuel level fl3 to fl0, plane1 gets refueled at city1 with fuel level fl4 to fl6, plane1 flies from city3 to city1 with fuel level fl2 to fl1, plane1 zooms from city1 to city2 with fuel level fl4 to fl6, plane1 flies from city0 to city2 with fuel level fl1 to fl2, plane1 zooms from city2 to city1 with fuel level fl3 to fl6, plane1 zooms from city0 to city1 with fuel level fl0 to fl3, plane1 zooms from city2 to city0 with fuel level fl6 to fl5, plane1 flies from city2 to city3 with fuel level fl4 to fl6, plane1 gets refueled at city0 with fuel level fl4 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl5, plane1 zooms from city1 to city3 with fuel level fl5 to fl2, plane1 zooms from city0 to city2 with fuel level fl5 to fl6, plane1 zooms from city3 to city2 with fuel level fl5 to fl2, plane1 gets refueled at city3 with fuel level fl5 to fl0, plane1 flies from city0 to city2 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl0 to fl2, plane1 zooms from city2 to city0 with fuel level fl0 to fl4, plane1 zooms from city3 to city1 with fuel level fl1 to fl0, plane1 zooms from city2 to city3 with fuel level fl5 to fl6, plane1 gets refueled at city0 with fuel level fl1 to fl0, plane1 zooms from city1 to city2 with fuel level fl2 to fl1, plane1 flies from city1 to city2 with fuel level fl1 to fl4, plane1 flies from city3 to city1 with fuel level fl4 to fl6, plane1 zooms from city3 to city1 with fuel level fl3 to fl6, plane1 zooms from city2 to city3 with fuel level fl4 to fl6, plane1 zooms from city0 to city2 with fuel level fl5 to fl3, plane1 flies from city1 to city3 with fuel level fl4 to fl6, plane1 zooms from city3 to city1 with fuel level fl2 to fl6, plane1 zooms from city2 to city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl0 to fl2, plane1 zooms from city2 to city3 with fuel level fl0 to fl3, plane1 zooms from city3 to city2 with fuel level fl3 to fl4, person8 departs plane1 at city2, plane1 flies from city1 to city2 with fuel level fl1 to fl0, plane1 zooms from city1 to city3 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl5 to fl4, plane1 zooms from city3 to city0 with fuel level fl4 to fl0, plane1 zooms from city0 to city1 with fuel level fl3 to fl5, plane1 zooms from city3 to city1 with fuel level fl5 to fl1, plane1 zooms from city0 to city1 with fuel level fl3 to fl0, plane1 flies from city3 to city1 with fuel level fl0 to fl2, plane1 flies from city1 to city3 with fuel level fl2 to fl1, plane1 zooms from city0 to city2 with fuel level fl5 to fl3, plane1 zooms from city1 to city2 with fuel level fl6 to fl0, plane1 zooms from city2 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city0 with fuel level fl5 to fl2, plane1 zooms from city1 to city2 with fuel level fl5 to fl2, plane1 zooms from city2 to city3 with fuel level fl5 to fl0, plane1 zooms from city2 to city3 with fuel level fl0 to fl1, plane1 zooms from city0 to city2 with fuel level fl3 to fl0, plane1 gets refueled at city0 with fuel level fl2 to fl5, plane1 zooms from city2 to city1 with fuel level fl6 to fl5, plane1 zooms from city3 to city1 with fuel level fl2 to fl5, plane1 zooms from city0 to city2 with fuel level fl1 to fl3, plane1 zooms from city0 to city1 with fuel level fl0 to fl3, plane1 flies from city1 to city3 with fuel level fl3 to fl4, plane1 zooms from city3 to city1 with fuel level fl5 to fl4, plane1 zooms from city0 to city1 with fuel level fl6 to fl2, plane1 zooms from city2 to city0 with fuel level fl4 to fl2, plane1 flies from city0 to city1 with fuel level fl4 to fl6, plane1 zooms from city0 to city2 with fuel level fl2 to fl4, plane1 zooms from city0 to city1 with fuel level fl1 to fl0, plane1 zooms from city3 to city1 with fuel level fl2 to fl4, plane1 flies from city3 to city0 with fuel level fl0 to fl4, plane1 zooms from city0 to city2 with fuel level fl6 to fl1, plane1 zooms from city2 to city1 with fuel level fl4 to fl3, plane1 zooms from city3 to city2 with fuel level fl3 to fl5, plane1 flies from city1 to city2 with fuel level fl0 to fl2, plane1 zooms from city2 to city3 with fuel level fl6 to fl0, plane1 zooms from city3 to city1 with fuel level fl1 to fl3, plane1 gets refueled at city2 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl2 to fl3, plane1 zooms from city1 to city2 with fuel level fl1 to fl6, plane1 gets refueled at city2 with fuel level fl2 to fl5, plane1 flies from city3 to city0 with fuel level fl6 to fl5, plane1 zooms from city3 to city0 with fuel level fl1 to fl0, plane1 flies from city1 to city3 with fuel level fl0 to fl2, plane1 zooms from city2 to city1 with fuel level fl0 to fl5, plane1 zooms from city3 to city1 with fuel level fl5 to fl3, plane1 flies from city0 to city2 with fuel level fl3 to fl4, plane1 zooms from city3 to city2 with fuel level fl6 to fl3, plane1 zooms from city0 to city3 with fuel level fl5 to fl6, plane1 zooms from city1 to city3 with fuel level fl4 to fl0, plane1 zooms from city1 to city2 with fuel level fl2 to fl6, plane1 zooms from city0 to city1 with fuel level fl6 to fl5, plane1 zooms from city0 to city1 with fuel level fl6 to fl5, plane1 zooms from city0 to city1 with fuel level fl4 to fl1, plane1 zooms from city3 to city1 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl2 to fl3, plane1 zooms from city2 to city1 with fuel level fl5 to fl0, plane1 gets refueled at city1 with fuel level fl1 to fl0, plane1 zooms from city0 to city1 with fuel level fl1 to fl6, plane1 flies from city2 to city1 with fuel level fl3 to fl4, plane1 zooms from city2 to city1 with fuel level fl5 to fl0, plane1 zooms from city0 to city3 with fuel level fl0 to fl6, plane1 zooms from city1 to city3 with fuel level fl6 to fl0, plane1 zooms from city1 to city3 with fuel level fl6 to fl4, plane1 zooms from city0 to city2 with fuel level fl1 to fl6, plane1 zooms from city1 to city0 with fuel level fl4 to fl3, plane1 zooms from city2 to city3 with fuel level fl0 to fl6, plane1 flies from city1 to city2 with fuel level fl2 to fl3, plane1 gets refueled at city3 with fuel level fl5 to fl3, plane1 zooms from city3 to city2 with fuel level fl3 to fl1, plane1 zooms from city1 to city0 with fuel level fl5 to fl4, plane1 zooms from city3 to city1 with fuel level fl3 to fl1, plane1 zooms from city3 to city1 with fuel level fl5 to fl6, plane1 zooms from city3 to city1 with fuel level fl1 to fl4, plane1 zooms from city0 to city3 with fuel level fl0 to fl5, plane1 flies from city1 to city2 with fuel level fl4 to fl3, plane1 zooms from city3 to city1 with fuel level fl6 to fl3, plane1 zooms from city1 to city0 with fuel level fl5 to fl6, plane1 zooms from city2 to city1 with fuel level fl5 to fl0, plane1 zooms from city0 to city3 with fuel level fl2 to fl1, plane1 zooms from city3 to city0 with fuel level fl6 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl2 to fl4, plane1 zooms from city3 to city2 with fuel level fl0 to fl6, plane1 zooms from city2 to city0 with fuel level fl0 to fl3, plane1 zooms from city1 to city3 with fuel level fl4 to fl3, plane1 zooms from city3 to city0 with fuel level fl0 to fl4, plane1 zooms from city3 to city2 with fuel level fl3 to fl4, plane1 flies from city3 to city0 with fuel level fl1 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl2, plane1 gets refueled at city2 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl3 to fl1, plane1 flies from city2 to city1 with fuel level fl2 to fl5, plane1 zooms from city0 to city1 with fuel level fl2 to fl0, plane1 zooms from city1 to city0 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl1 to fl0, plane1 zooms from city2 to city3 with fuel level fl3 to fl1, plane1 zooms from city2 to city1 with fuel level fl6 to fl0, plane1 zooms from city3 to city2 with fuel level fl5 to fl4, plane1 zooms from city0 to city2 with fuel level fl3 to fl5, plane1 zooms from city1 to city3 with fuel level fl1 to fl2, plane1 zooms from city2 to city1 with fuel level fl4 to fl5, plane1 zooms from city2 to city3 with fuel level fl1 to fl2, plane1 zooms from city2 to city3 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl2 to fl5, plane1 flies from city2 to city1 with fuel level fl1 to fl4, plane1 flies from city3 to city2 with fuel level fl0 to fl4, person4 boards plane1 at city2, plane1 zooms from city3 to city2 with fuel level fl4 to fl6, plane1 zooms from city1 to city3 with fuel level fl3 to fl5, plane1 zooms from city2 to city1 with fuel level fl0 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl4, plane1 zooms from city2 to city0 with fuel level fl1 to fl5, plane1 flies from city3 to city0 with fuel level fl3 to fl1, plane1 zooms from city3 to city0 with fuel level fl0 to fl4, plane1 zooms from city2 to city3 with fuel level fl1 to fl5, plane1 zooms from city0 to city1 with fuel level fl1 to fl4, plane1 zooms from city2 to city1 with fuel level fl1 to fl6, plane1 zooms from city0 to city2 with fuel level fl4 to fl5, plane1 zooms from city3 to city1 with fuel level fl3 to fl2, plane1 zooms from city1 to city2 with fuel level fl0 to fl2, plane1 flies from city2 to city1 with fuel level fl2 to fl6, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 flies from city3 to city0 with fuel level fl4 to fl6, plane1 zooms from city1 to city3 with fuel level fl5 to fl0, plane1 zooms from city1 to city3 with fuel level fl5 to fl6, plane1 zooms from city0 to city1 with fuel level fl6 to fl1, plane1 zooms from city3 to city1 with fuel level fl1 to fl3, plane1 zooms from city3 to city0 with fuel level fl6 to fl0, plane1 zooms from city2 to city0 with fuel level fl5 to fl1, plane1 zooms from city1 to city2 with fuel level fl6 to fl1, plane1 zooms from city0 to city1 with fuel level fl4 to fl2, plane1 zooms from city0 to city3 with fuel level fl3 to fl1, plane1 flies from city3 to city0 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl5 to fl1, plane1 zooms from city2 to city1 with fuel level fl4 to fl0, plane1 zooms from city0 to city1 with fuel level fl6 to fl4, plane1 zooms from city3 to city0 with fuel level fl3 to fl2, plane1 zooms from city0 to city2 with fuel level fl5 to fl1, plane1 flies from city0 to city2 with fuel level fl1 to fl0, plane1 flies from city3 to city2 with fuel level fl0 to fl6, plane1 flies from city3 to city0 with fuel level fl1 to fl2, plane1 zooms from city0 to city2 with fuel level fl4 to fl0, plane1 zooms from city3 to city2 with fuel level fl2 to fl6, plane1 zooms from city1 to city0 with fuel level fl0 to fl5, plane1 flies from city1 to city2 with fuel level fl3 to fl6, plane1 zooms from city0 to city2 with fuel level fl1 to fl5, person6 boards plane1 at city1, plane1 zooms from city2 to city0 with fuel level fl5 to fl4, plane1 zooms from city3 to city0 with fuel level fl6 to fl2, plane1 gets refueled at city0 with fuel level fl6 to fl2, plane1 zooms from city3 to city2 with fuel level fl4 to fl1, plane1 zooms from city1 to city0 with fuel level fl5 to fl1, plane1 zooms from city3 to city2 with fuel level fl1 to fl0, plane1 flies from city1 to city0 with fuel level fl3 to fl0, plane1 zooms from city2 to city3 with fuel level fl6 to fl0, plane1 flies from city0 to city1 with fuel level fl2 to fl5, plane1 zooms from city1 to city2 with fuel level fl3 to fl4, plane1 zooms from city3 to city0 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl6 to fl2, person7 departs plane1 at city0, plane1 flies from city3 to city2 with fuel level fl1 to fl6, plane1 zooms from city0 to city3 with fuel level fl6 to fl2, plane1 flies from city3 to city1 with fuel level fl2 to fl0, plane1 zooms from city1 to city2 with fuel level fl4 to fl6, plane1 zooms from city1 to city3 with fuel level fl3 to fl0, plane1 zooms from city3 to city2 with fuel level fl6 to fl5, plane1 zooms from city1 to city3 with fuel level fl6 to fl3, plane1 zooms from city1 to city0 with fuel level fl1 to fl2, plane1 zooms from city0 to city2 with fuel level fl6 to fl0, plane1 zooms from city2 to city3 with fuel level fl4 to fl1, plane1 gets refueled at city2 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl4 to fl5, plane1 flies from city2 to city3 with fuel level fl0 to fl6, plane1 flies from city0 to city3 with fuel level fl3 to fl0, plane1 zooms from city3 to city1 with fuel level fl4 to fl3, plane1 zooms from city0 to city1 with fuel level fl1 to fl6, plane1 zooms from city3 to city1 with fuel level fl4 to fl3, plane1 zooms from city2 to city1 with fuel level fl3 to fl6, person4 departs plane1 at city1, plane1 zooms from city0 to city1 with fuel level fl1 to fl4, plane1 zooms from city3 to city0 with fuel level fl6 to fl1, plane1 zooms from city0 to city3 with fuel level fl2 to fl0, plane1 zooms from city3 to city1 with fuel level fl2 to fl0, plane1 gets refueled at city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl6 to fl5, plane1 zooms from city3 to city0 with fuel level fl5 to fl1, plane1 zooms from city1 to city0 with fuel level fl4 to fl5, plane1 zooms from city3 to city2 with fuel level fl0 to fl5, plane1 zooms from city1 to city2 with fuel level fl6 to fl2, plane1 zooms from city0 to city1 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl0 to fl6, plane1 zooms from city0 to city2 with fuel level fl3 to fl0, plane1 zooms from city0 to city3 with fuel level fl5 to fl1, plane1 zooms from city2 to city1 with fuel level fl6 to fl1, plane1 zooms from city1 to city0 with fuel level fl6 to fl0, plane1 zooms from city1 to city0 with fuel level fl2 to fl5, plane1 gets refueled at city0 with fuel level fl4 to fl3, plane1 zooms from city0 to city3 with fuel level fl3 to fl2, plane1 zooms from city0 to city1 with fuel level fl2 to fl1, plane1 zooms from city2 to city1 with fuel level fl1 to fl3, plane1 zooms from city3 to city1 with fuel level fl2 to fl6, plane1 zooms from city0 to city3 with fuel level fl0 to fl5, plane1 zooms from city0 to city2 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl2 to fl1, plane1 zooms from city2 to city1 with fuel level fl6 to fl5, plane1 zooms from city0 to city3 with fuel level fl5 to fl0, plane1 zooms from city2 to city1 with fuel level fl5 to fl6, plane1 zooms from city1 to city2 with fuel level fl6 to fl5, plane1 flies from city0 to city3 with fuel level fl5 to fl3, plane1 flies from city1 to city0 with fuel level fl1 to fl0, plane1 zooms from city1 to city3 with fuel level fl3 to fl6, plane1 zooms from city3 to city1 with fuel level fl2 to fl1, plane1 zooms from city3 to city0 with fuel level fl1 to fl4, plane1 zooms from city2 to city1 with fuel level fl2 to fl4, plane1 flies from city0 to city2 with fuel level fl6 to fl1, plane1 zooms from city2 to city3 with fuel level fl4 to fl6, plane1 zooms from city1 to city0 with fuel level fl5 to fl0, plane1 zooms from city0 to city2 with fuel level fl6 to fl0, plane1 zooms from city2 to city1 with fuel level fl0 to fl3, plane1 gets refueled at city2 with fuel level fl2 to fl4, plane1 zooms from city3 to city2 with fuel level fl3 to fl0, plane1 zooms from city3 to city0 with fuel level fl1 to fl5, plane1 zooms from city0 to city3 with fuel level fl3 to fl6, plane1 flies from city2 to city3 with fuel level fl6 to fl1, plane1 zooms from city2 to city3 with fuel level fl6 to fl1, person2 departs plane1 at city2, plane1 zooms from city2 to city3 with fuel level fl6 to fl4, plane1 flies from city2 to city3 with fuel level fl6 to fl0, plane1 zooms from city1 to city3 with fuel level fl2 to fl0, plane1 zooms from city1 to city2 with fuel level fl4 to fl5, plane1 zooms from city3 to city1 with fuel level fl2 to fl5, plane1 flies from city3 to city2 with fuel level fl5 to fl1, plane1 flies from city1 to city3 with fuel level fl2 to fl6, plane1 zooms from city0 to city3 with fuel level fl1 to fl5, plane1 zooms from city2 to city1 with fuel level fl5 to fl1, plane1 zooms from city3 to city0 with fuel level fl2 to fl5, plane1 zooms from city0 to city2 with fuel level fl4 to fl2, plane1 zooms from city1 to city0 with fuel level fl5 to fl2, plane1 zooms from city0 to city3 with fuel level fl3 to fl1, plane1 flies from city1 to city0 with fuel level fl6 to fl3, plane1 zooms from city2 to city3 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl0 to fl4, plane1 zooms from city0 to city3 with fuel level fl2 to fl1, plane1 zooms from city2 to city1 with fuel level fl4 to fl2, plane1 zooms from city1 to city3 with fuel level fl4 to fl5, plane1 zooms from city2 to city0 with fuel level fl6 to fl0, plane1 flies from city1 to city2 with fuel level fl5 to fl0, plane1 zooms from city0 to city3 with fuel level fl5 to fl4, plane1 zooms from city3 to city2 with fuel level fl4 to fl0, plane1 zooms from city1 to city0 with fuel level fl2 to fl6, plane1 flies from city1 to city2 with fuel level fl4 to fl0, plane1 flies from city3 to city1 with fuel level fl6 to fl1, plane1 zooms from city1 to city2 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl1 to fl0, plane1 zooms from city0 to city3 with fuel level fl3 to fl2, plane1 zooms from city1 to city0 with fuel level fl6 to fl0, plane1 zooms from city2 to city1 with fuel level fl0 to fl1, plane1 zooms from city0 to city2 with fuel level fl0 to fl1, plane1 zooms from city3 to city1 with fuel level fl6 to fl5, plane1 zooms from city3 to city1 with fuel level fl1 to fl2, plane1 zooms from city3 to city2 with fuel level fl2 to fl1, plane1 zooms from city2 to city0 with fuel level fl2 to fl1, plane1 zooms from city1 to city0 with fuel level fl0 to fl5, plane1 zooms from city1 to city2 with fuel level fl5 to fl2, plane1 zooms from city3 to city1 with fuel level fl1 to fl5, plane1 zooms from city0 to city3 with fuel level fl2 to fl3, plane1 zooms from city2 to city1 with fuel level fl4 to fl1, plane1 gets refueled at city0 with fuel level fl0 to fl5, plane1 zooms from city0 to city1 with fuel level fl2 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl2, plane1 zooms from city1 to city2 with fuel level fl3 to fl0, plane1 gets refueled at city2 with fuel level fl4 to fl6, plane1 zooms from city2 to city1 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl2 to fl0, plane1 zooms from city1 to city3 with fuel level fl3 to fl0, plane1 flies from city2 to city1 with fuel level fl6 to fl5, plane1 gets refueled at city3 with fuel level fl2 to fl5, plane1 gets refueled at city1 with fuel level fl6 to fl1, plane1 zooms from city3 to city1 with fuel level fl2 to fl4, plane1 flies from city0 to city1 with fuel level fl1 to fl3, person5 boards plane1 at city1, plane1 zooms from city2 to city1 with fuel level fl5 to fl2, plane1 zooms from city0 to city2 with fuel level fl1 to fl6, plane1 zooms from city0 to city3 with fuel level fl6 to fl5, plane1 zooms from city1 to city3 with fuel level fl3 to fl6, plane1 zooms from city0 to city1 with fuel level fl2 to fl3, plane1 zooms from city2 to city0 with fuel level fl1 to fl5, plane1 flies from city2 to city3 with fuel level fl3 to fl5, plane1 zooms from city1 to city0 with fuel level fl4 to fl0, plane1 flies from city2 to city3 with fuel level fl6 to fl3, plane1 gets refueled at city3 with fuel level fl5 to fl4, plane1 zooms from city3 to city1 with fuel level fl6 to fl1, plane1 zooms from city1 to city3 with fuel level fl2 to fl6, plane1 flies from city2 to city3 with fuel level fl5 to fl3, plane1 zooms from city2 to city0 with fuel level fl3 to fl6, plane1 gets refueled at city1 with fuel level fl1 to fl3, plane1 zooms from city1 to city2 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl3 to fl4, plane1 zooms from city2 to city1 with fuel level fl2 to fl5, plane1 zooms from city3 to city0 with fuel level fl2 to fl5, plane1 zooms from city0 to city3 with fuel level fl1 to fl5, plane1 flies from city1 to city2 with fuel level fl0 to fl5, plane1 zooms from city0 to city3 with fuel level fl6 to fl4, plane1 flies from city1 to city2 with fuel level fl5 to fl2, plane1 zooms from city3 to city1 with fuel level fl5 to fl0, plane1 zooms from city3 to city1 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl1 to fl0, plane1 zooms from city3 to city1 with fuel level fl6 to fl1, plane1 zooms from city1 to city3 with fuel level fl0 to fl3, plane1 flies from city3 to city0 with fuel level fl5 to fl2, plane1 zooms from city1 to city0 with fuel level fl2 to fl3, plane1 zooms from city3 to city1 with fuel level fl4 to fl0, plane1 zooms from city0 to city3 with fuel level fl3 to fl5, plane1 zooms from city0 to city3 with fuel level fl1 to fl3, plane1 zooms from city2 to city0 with fuel level fl3 to fl1, plane1 flies from city2 to city1 with fuel level fl4 to fl3, plane1 zooms from city2 to city3 with fuel level fl4 to fl1, plane1 zooms from city1 to city2 with fuel level fl6 to fl2, plane1 zooms from city2 to city3 with fuel level fl4 to fl6, plane1 zooms from city2 to city0 with fuel level fl5 to fl3, plane1 zooms from city0 to city3 with fuel level fl0 to fl5, plane1 flies from city3 to city0 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl5 to fl1, plane1 zooms from city2 to city3 with fuel level fl4 to fl6, plane1 zooms from city3 to city0 with fuel level fl2 to fl4, plane1 zooms from city1 to city0 with fuel level fl3 to fl4, plane1 zooms from city0 to city3 with fuel level fl1 to fl2, plane1 zooms from city3 to city1 with fuel level fl5 to fl1, plane1 gets refueled at city3 with fuel level fl6 to fl0, plane1 flies from city3 to city1 with fuel level fl3 to fl4, plane1 zooms from city1 to city2 with fuel level fl1 to fl4, plane1 zooms from city2 to city1 with fuel level fl4 to fl3, plane1 zooms from city0 to city2 with fuel level fl5 to fl0, plane1 zooms from city1 to city3 with fuel level fl2 to fl3, plane1 flies from city2 to city0 with fuel level fl3 to fl6, plane1 zooms from city1 to city2 with fuel level fl5 to fl1, plane1 zooms from city3 to city1 with fuel level fl0 to fl5, plane1 flies from city1 to city3 with fuel level fl2 to fl3, plane1 flies from city2 to city1 with fuel level fl2 to fl4, plane1 zooms from city1 to city0 with fuel level fl5 to fl4, plane1 zooms from city0 to city1 with fuel level fl1 to fl3, plane1 zooms from city3 to city2 with fuel level fl3 to fl0, plane1 zooms from city2 to city1 with fuel level fl2 to fl3, plane1 zooms from city3 to city0 with fuel level fl1 to fl0, plane1 gets refueled at city3 with fuel level fl1 to fl0, plane1 zooms from city0 to city2 with fuel level fl6 to fl4, plane1 zooms from city1 to city2 with fuel level fl1 to fl6, plane1 zooms from city1 to city3 with fuel level fl0 to fl3, plane1 zooms from city0 to city3 with fuel level fl6 to fl3, plane1 flies from city1 to city0 with fuel level fl3 to fl2, plane1 zooms from city1 to city3 with fuel level fl5 to fl6, plane1 flies from city3 to city2 with fuel level fl1 to fl2, plane1 zooms from city0 to city2 with fuel level fl3 to fl6, plane1 gets refueled at city2 with fuel level fl3 to fl5, plane1 zooms from city0 to city2 with fuel level fl0 to fl2, plane1 flies from city0 to city2 with fuel level fl0 to fl4, plane1 flies from city2 to city1 with fuel level fl5 to fl0, plane1 zooms from city2 to city1 with fuel level fl2 to fl3, plane1 zooms from city2 to city1 with fuel level fl1 to fl0, plane1 zooms from city0 to city1 with fuel level fl2 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl1 to fl3, plane1 flies from city1 to city0 with fuel level fl6 to fl2, plane1 zooms from city0 to city3 with fuel level fl0 to fl6, plane1 flies from city0 to city2 with fuel level fl6 to fl5, plane1 zooms from city2 to city0 with fuel level fl4 to fl1, plane1 zooms from city0 to city3 with fuel level fl4 to fl3, plane1 flies from city3 to city0 with fuel level fl5 to fl1, plane1 flies from city1 to city2 with fuel level fl1 to fl6, plane1 zooms from city2 to city1 with fuel level fl0 to fl1, plane1 zooms from city2 to city0 with fuel level fl3 to fl2, plane1 zooms from city3 to city0 with fuel level fl6 to fl5, plane1 zooms from city0 to city3 with fuel level fl2 to fl6, plane1 zooms from city0 to city3 with fuel level fl5 to fl0, plane1 zooms from city1 to city0 with fuel level fl2 to fl0, plane1 flies from city0 to city3 with fuel level fl4 to fl6, plane1 zooms from city0 to city3 with fuel level fl5 to fl4, plane1 zooms from city1 to city0 with fuel level fl3 to fl0, plane1 flies from city2 to city3 with fuel level fl1 to fl4, plane1 zooms from city2 to city0 with fuel level fl6 to fl0, plane1 zooms from city2 to city3 with fuel level fl2 to fl3, plane1 zooms from city1 to city0 with fuel level fl0 to fl1, plane1 zooms from city0 to city3 with fuel level fl3 to fl6, plane1 zooms from city1 to city3 with fuel level fl0 to fl6, plane1 zooms from city2 to city0 with fuel level fl5 to fl2, plane1 gets refueled at city3 with fuel level fl1 to fl4, plane1 zooms from city2 to city3 with fuel level fl6 to fl1, plane1 zooms from city3 to city1 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl1 to fl5, plane1 zooms from city2 to city0 with fuel level fl1 to fl3, plane1 zooms from city0 to city2 with fuel level fl3 to fl4, plane1 zooms from city2 to city3 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl0, plane1 zooms from city2 to city1 with fuel level fl0 to fl3, plane1 zooms from city3 to city0 with fuel level fl2 to fl1, plane1 flies from city0 to city1 with fuel level fl2 to fl3, plane1 flies from city3 to city2 with fuel level fl3 to fl1, plane1 zooms from city3 to city0 with fuel level fl4 to fl3, plane1 zooms from city3 to city2 with fuel level fl2 to fl0, plane1 zooms from city0 to city3 with fuel level fl0 to fl6, plane1 zooms from city0 to city2 with fuel level fl1 to fl6, plane1 zooms from city3 to city2 with fuel level fl6 to fl2, plane1 flies from city0 to city3 with fuel level fl0 to fl3, plane1 zooms from city1 to city0 with fuel level fl3 to fl5, plane1 zooms from city0 to city1 with fuel level fl3 to fl2, plane1 zooms from city1 to city0 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl4 to fl5, plane1 zooms from city0 to city1 with fuel level fl6 to fl0, plane1 flies from city1 to city2 with fuel level fl5 to fl6, plane1 zooms from city3 to city1 with fuel level fl0 to fl2, plane1 flies from city0 to city3 with fuel level fl5 to fl1, plane1 zooms from city1 to city0 with fuel level fl0 to fl6, plane1 flies from city2 to city1 with fuel level fl0 to fl5, plane1 flies from city0 to city2 with fuel level fl5 to fl2, plane1 zooms from city1 to city0 with fuel level fl3 to fl5, plane1 flies from city1 to city0 with fuel level fl6 to fl0, plane1 flies from city0 to city1 with fuel level fl1 to fl5, plane1 zooms from city3 to city2 with fuel level fl2 to fl3, plane1 zooms from city0 to city2 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl1 to fl0, plane1 zooms from city3 to city2 with fuel level fl4 to fl5, plane1 flies from city3 to city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl5 to fl4, plane1 zooms from city1 to city3 with fuel level fl2 to fl1, plane1 zooms from city0 to city3 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl5 to fl0, plane1 zooms from city0 to city2 with fuel level fl0 to fl1, plane1 zooms from city3 to city1 with fuel level fl2 to fl3, plane1 zooms from city0 to city2 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl4 to fl3, plane1 zooms from city3 to city2 with fuel level fl5 to fl4, plane1 zooms from city0 to city3 with fuel level fl6 to fl3, plane1 zooms from city2 to city3 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl5 to fl2, plane1 zooms from city1 to city0 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl5 to fl2, plane1 flies from city3 to city0 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl3 to fl2, plane1 zooms from city0 to city2 with fuel level fl4 to fl3, plane1 zooms from city1 to city0 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl0 to fl5, plane1 zooms from city1 to city3 with fuel level fl5 to fl3, plane1 zooms from city1 to city2 with fuel level fl2 to fl3, plane1 zooms from city1 to city3 with fuel level fl6 to fl1, plane1 zooms from city1 to city0 with fuel level fl4 to fl1, plane1 zooms from city2 to city1 with fuel level fl0 to fl2, plane1 flies from city3 to city1 with fuel level fl1 to fl3, plane1 flies from city3 to city2 with fuel level fl5 to fl3, plane1 zooms from city1 to city0 with fuel level fl1 to fl0, plane1 zooms from city2 to city1 with fuel level fl3 to fl2, plane1 zooms from city0 to city1 with fuel level fl4 to fl1, plane1 zooms from city0 to city1 with fuel level fl2 to fl6, person8 boards plane1 at city1, plane1 zooms from city1 to city3 with fuel level fl2 to fl3, plane1 zooms from city1 to city3 with fuel level fl6 to fl1, plane1 zooms from city2 to city1 with fuel level fl6 to fl1, plane1 zooms from city0 to city3 with fuel level fl5 to fl2, plane1 flies from city1 to city2 with fuel level fl0 to fl1, plane1 zooms from city3 to city2 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl6 to fl3, plane1 zooms from city0 to city1 with fuel level fl4 to fl3, plane1 zooms from city1 to city0 with fuel level fl4 to fl1, plane1 zooms from city2 to city0 with fuel level fl4 to fl5, plane1 zooms from city3 to city0 with fuel level fl2 to fl3, plane1 zooms from city3 to city1 with fuel level fl6 to fl4, plane1 zooms from city1 to city0 with fuel level fl5 to fl1, plane1 gets refueled at city3 with fuel level fl2 to fl6, plane1 zooms from city0 to city1 with fuel level fl3 to fl1, plane1 zooms from city1 to city0 with fuel level fl3 to fl2, plane1 zooms from city2 to city1 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl3 to fl5, plane1 zooms from city1 to city0 with fuel level fl3 to fl5, plane1 zooms from city0 to city2 with fuel level fl3 to fl5, plane1 zooms from city3 to city0 with fuel level fl5 to fl4, plane1 gets refueled at city3 with fuel level fl1 to fl5, plane1 zooms from city2 to city0 with fuel level fl0 to fl5, plane1 zooms from city3 to city1 with fuel level fl6 to fl2, person1 departs plane1 at city3, plane1 zooms from city2 to city1 with fuel level fl1 to fl0, plane1 zooms from city3 to city1 with fuel level fl1 to fl5, plane1 flies from city1 to city2 with fuel level fl1 to fl2, plane1 zooms from city0 to city3 with fuel level fl4 to fl3, plane1 zooms from city1 to city0 with fuel level fl1 to fl6, plane1 zooms from city2 to city1 with fuel level fl0 to fl5, plane1 flies from city2 to city3 with fuel level fl6 to fl2, plane1 zooms from city1 to city0 with fuel level fl4 to fl5, plane1 zooms from city1 to city2 with fuel level fl6 to fl1, plane1 flies from city2 to city1 with fuel level fl4 to fl1, plane1 flies from city1 to city3 with fuel level fl1 to fl0, plane1 flies from city3 to city2 with fuel level fl5 to fl6, plane1 zooms from city1 to city3 with fuel level fl2 to fl1, plane1 zooms from city1 to city3 with fuel level fl1 to fl3, plane1 zooms from city3 to city1 with fuel level fl6 to fl1, plane1 zooms from city0 to city1 with fuel level fl5 to fl6, plane1 zooms from city0 to city2 with fuel level fl0 to fl5, plane1 zooms from city2 to city3 with fuel level fl1 to fl3, plane1 zooms from city1 to city2 with fuel level fl5 to fl0, plane1 zooms from city3 to city0 with fuel level fl6 to fl3, plane1 zooms from city0 to city2 with fuel level fl1 to fl5, plane1 zooms from city2 to city1 with fuel level fl1 to fl4, plane1 zooms from city1 to city2 with fuel level fl6 to fl2, plane1 zooms from city2 to city3 with fuel level fl1 to fl2, plane1 gets refueled at city0 with fuel level fl1 to fl3, plane1 flies from city0 to city1 with fuel level fl3 to fl2, plane1 zooms from city0 to city2 with fuel level fl0 to fl3, plane1 zooms from city1 to city3 with fuel level fl1 to fl4, plane1 zooms from city3 to city2 with fuel level fl4 to fl0, plane1 zooms from city1 to city3 with fuel level fl0 to fl1, plane1 zooms from city3 to city1 with fuel level fl4 to fl0, plane1 zooms from city3 to city0 with fuel level fl2 to fl6, plane1 flies from city0 to city2 with fuel level fl0 to fl3, plane1 flies from city1 to city3 with fuel level fl4 to fl0, plane1 flies from city2 to city3 with fuel level fl1 to fl2, person1 departs plane1 at city0, plane1 zooms from city2 to city0 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl5 to fl6, plane1 flies from city0 to city1 with fuel level fl4 to fl2, person6 departs plane1 at city3, plane1 zooms from city2 to city3 with fuel level fl6 to fl1, plane1 zooms from city2 to city1 with fuel level fl4 to fl1, plane1 flies from city3 to city1 with fuel level fl4 to fl3, plane1 zooms from city0 to city2 with fuel level fl6 to fl3, plane1 zooms from city1 to city2 with fuel level fl6 to fl3, plane1 zooms from city2 to city1 with fuel level fl5 to fl2, plane1 flies from city0 to city1 with fuel level fl4 to fl1, plane1 zooms from city0 to city3 with fuel level fl2 to fl0, plane1 zooms from city0 to city1 with fuel level fl3 to fl4, plane1 zooms from city0 to city2 with fuel level fl1 to fl5, plane1 zooms from city0 to city1 with fuel level fl0 to fl1, plane1 zooms from city2 to city1 with fuel level fl1 to fl0, plane1 zooms from city0 to city1 with fuel level fl6 to fl3, plane1 zooms from city2 to city0 with fuel level fl2 to fl1, plane1 zooms from city0 to city3 with fuel level fl0 to fl4, plane1 zooms from city2 to city0 with fuel level fl1 to fl2, plane1 zooms from city1 to city2 with fuel level fl1 to fl0, plane1 flies from city1 to city2 with fuel level fl3 to fl1, plane1 zooms from city3 to city1 with fuel level fl1 to fl3, plane1 flies from city1 to city3 with fuel level fl2 to fl0, plane1 zooms from city0 to city3 with fuel level fl4 to fl6, plane1 flies from city1 to city0 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl5 to fl2, plane1 zooms from city2 to city3 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl1 to fl2, plane1 zooms from city3 to city1 with fuel level fl4 to fl0, plane1 zooms from city2 to city3 with fuel level fl1 to fl6, plane1 zooms from city1 to city0 with fuel level fl0 to fl4, plane1 zooms from city3 to city0 with fuel level fl0 to fl1, plane1 zooms from city3 to city1 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl5 to fl4, plane1 gets refueled at city1 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl4 to fl1, plane1 zooms from city1 to city3 with fuel level fl2 to fl5, plane1 zooms from city3 to city2 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl5 to fl2, plane1 zooms from city0 to city3 with fuel level fl2 to fl0, plane1 zooms from city2 to city0 with fuel level fl5 to fl3, plane1 zooms from city1 to city3 with fuel level fl0 to fl1, plane1 zooms from city2 to city3 with fuel level fl6 to fl5, plane1 zooms from city2 to city3 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl4 to fl5, plane1 gets refueled at city3 with fuel level fl4 to fl5, plane1 zooms from city2 to city3 with fuel level fl0 to fl6, plane1 zooms from city1 to city0 with fuel level fl6 to fl3, plane1 zooms from city1 to city3 with fuel level fl5 to fl1, plane1 flies from city0 to city2 with fuel level fl5 to fl0, plane1 zooms from city1 to city0 with fuel level fl1 to fl2, plane1 zooms from city2 to city3 with fuel level fl6 to fl0, plane1 zooms from city2 to city0 with fuel level fl6 to fl1, plane1 zooms from city3 to city0 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl1 to fl2, plane1 flies from city1 to city0 with fuel level fl5 to fl1, plane1 zooms from city2 to city0 with fuel level fl1 to fl0, plane1 flies from city2 to city1 with fuel level fl5 to fl3, plane1 zooms from city2 to city1 with fuel level fl0 to fl6, plane1 flies from city3 to city1 with fuel level fl3 to fl1, plane1 zooms from city2 to city3 with fuel level fl4 to fl5, plane1 zooms from city3 to city0 with fuel level fl4 to fl0, plane1 zooms from city1 to city0 with fuel level fl1 to fl0, plane1 zooms from city2 to city1 with fuel level fl4 to fl5, plane1 zooms from city0 to city1 with fuel level fl2 to fl5, plane1 zooms from city3 to city1 with fuel level fl6 to fl3, plane1 zooms from city1 to city3 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl3 to fl2, plane1 zooms from city1 to city2 with fuel level fl3 to fl4, plane1 zooms from city3 to city1 with fuel level fl1 to fl2, plane1 zooms from city3 to city2 with fuel level fl1 to fl6, plane1 zooms from city0 to city1 with fuel level fl6 to fl5, plane1 zooms from city0 to city3 with fuel level fl5 to fl2, plane1 zooms from city2 to city0 with fuel level fl1 to fl2, plane1 zooms from city3 to city0 with fuel level fl5 to fl0, plane1 zooms from city3 to city2 with fuel level fl0 to fl2, plane1 zooms from city0 to city1 with fuel level fl5 to fl2, plane1 flies from city3 to city1 with fuel level fl6 to fl3, plane1 zooms from city0 to city1 with fuel level fl1 to fl0, plane1 zooms from city1 to city2 with fuel level fl5 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl3, plane1 zooms from city0 to city3 with fuel level fl2 to fl6, plane1 zooms from city3 to city0 with fuel level fl6 to fl4, plane1 zooms from city2 to city1 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl6 to fl4, plane1 flies from city0 to city2 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl5 to fl3, plane1 zooms from city2 to city1 with fuel level fl3 to fl4, plane1 zooms from city0 to city2 with fuel level fl4 to fl5, plane1 zooms from city1 to city2 with fuel level fl0 to fl3, plane1 zooms from city1 to city0 with fuel level fl5 to fl0, plane1 zooms from city0 to city1 with fuel level fl6 to fl4, plane1 zooms from city0 to city3 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl0 to fl6, plane1 zooms from city3 to city2 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl3 to fl2, plane1 zooms from city0 to city3 with fuel level fl0 to fl2, plane1 zooms from city1 to city0 with fuel level fl2 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl5, plane1 gets refueled at city0 with fuel level fl2 to fl0, plane1 flies from city0 to city3 with fuel level fl2 to fl6, plane1 flies from city3 to city2 with fuel level fl4 to fl2, plane1 gets refueled at city3 with fuel level fl5 to fl1, plane1 zooms from city1 to city2 with fuel level fl5 to fl6, plane1 zooms from city3 to city1 with fuel level fl3 to fl6, plane1 zooms from city0 to city2 with fuel level fl2 to fl6, person4 boards plane1 at city0, plane1 zooms from city3 to city2 with fuel level fl1 to fl4, plane1 zooms from city1 to city3 with fuel level fl3 to fl2, plane1 gets refueled at city3 with fuel level fl6 to fl5, plane1 zooms from city2 to city0 with fuel level fl6 to fl0, plane1 zooms from city2 to city3 with fuel level fl3 to fl1, plane1 zooms from city1 to city2 with fuel level fl5 to fl1, plane1 zooms from city0 to city3 with fuel level fl2 to fl3, plane1 flies from city3 to city0 with fuel level fl4 to fl5, plane1 flies from city0 to city3 with fuel level fl0 to fl6, plane1 zooms from city1 to city2 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl0 to fl3, plane1 flies from city3 to city0 with fuel level fl3 to fl5, plane1 zooms from city1 to city0 with fuel level fl3 to fl2, plane1 zooms from city1 to city2 with fuel level fl1 to fl6, plane1 zooms from city2 to city3 with fuel level fl1 to fl3, plane1 zooms from city1 to city2 with fuel level fl1 to fl2, plane1 flies from city2 to city1 with fuel level fl4 to fl6, plane1 zooms from city0 to city1 with fuel level fl1 to fl2, plane1 flies from city3 to city2 with fuel level fl2 to fl6, plane1 zooms from city3 to city1 with fuel level fl3 to fl0, plane1 flies from city0 to city2 with fuel level fl1 to fl3, plane1 gets refueled at city3 with fuel level fl2 to fl0, plane1 zooms from city0 to city1 with fuel level fl5 to fl6, plane1 zooms from city0 to city2 with fuel level fl6 to fl1, plane1 zooms from city0 to city1 with fuel level fl2 to fl4, plane1 zooms from city0 to city2 with fuel level fl5 to fl3, plane1 flies from city3 to city1 with fuel level fl3 to fl0, plane1 zooms from city2 to city0 with fuel level fl4 to fl0, plane1 flies from city2 to city3 with fuel level fl3 to fl1, plane1 flies from city3 to city0 with fuel level fl5 to fl4, plane1 zooms from city3 to city0 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl2 to fl3, plane1 zooms from city1 to city0 with fuel level fl2 to fl0, plane1 zooms from city0 to city2 with fuel level fl3 to fl1, plane1 gets refueled at city2 with fuel level fl1 to fl6, plane1 flies from city0 to city1 with fuel level fl6 to fl5, plane1 zooms from city3 to city0 with fuel level fl1 to fl6, plane1 zooms from city1 to city3 with fuel level fl0 to fl6, plane1 zooms from city0 to city1 with fuel level fl3 to fl5, plane1 zooms from city1 to city0 with fuel level fl1 to fl6, plane1 zooms from city0 to city1 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl2 to fl1, plane1 zooms from city3 to city1 with fuel level fl1 to fl6, plane1 zooms from city3 to city1 with fuel level fl5 to fl4, plane1 flies from city1 to city2 with fuel level fl2 to fl0, plane1 zooms from city0 to city3 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl1 to fl3, plane1 flies from city1 to city0 with fuel level fl5 to fl0, plane1 flies from city2 to city0 with fuel level fl5 to fl0, plane1 zooms from city1 to city3 with fuel level fl3 to fl4, plane1 zooms from city1 to city2 with fuel level fl6 to fl0, plane1 flies from city3 to city0 with fuel level fl4 to fl2, plane1 zooms from city1 to city3 with fuel level fl6 to fl5, plane1 zooms from city3 to city0 with fuel level fl2 to fl0, plane1 zooms from city2 to city0 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl3 to fl5, plane1 flies from city3 to city0 with fuel level fl2 to fl6, plane1 zooms from city2 to city3 with fuel level fl5 to fl1, plane1 zooms from city2 to city0 with fuel level fl3 to fl1, plane1 zooms from city0 to city1 with fuel level fl0 to fl6, plane1 zooms from city1 to city3 with fuel level fl3 to fl1, plane1 zooms from city1 to city0 with fuel level fl0 to fl3, plane1 zooms from city3 to city2 with fuel level fl0 to fl1, plane1 zooms from city2 to city1 with fuel level fl4 to fl6, plane1 zooms from city0 to city3 with fuel level fl5 to fl2, plane1 zooms from city1 to city0 with fuel level fl0 to fl1, plane1 flies from city1 to city3 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl5 to fl4, plane1 zooms from city1 to city3 with fuel level fl4 to fl5, plane1 flies from city0 to city2 with fuel level fl6 to fl0, plane1 flies from city1 to city3 with fuel level fl0 to fl6, plane1 flies from city1 to city0 with fuel level fl1 to fl2, plane1 zooms from city0 to city1 with fuel level fl3 to fl2, plane1 zooms from city1 to city0 with fuel level fl6 to fl4, plane1 zooms from city1 to city0 with fuel level fl4 to fl1, plane1 zooms from city1 to city2 with fuel level fl4 to fl5, plane1 flies from city0 to city1 with fuel level fl4 to fl0, plane1 zooms from city0 to city3 with fuel level fl4 to fl0, plane1 zooms from city1 to city0 with fuel level fl6 to fl1, plane1 gets refueled at city3 with fuel level fl6 to fl4, plane1 flies from city1 to city2 with fuel level fl4 to fl6, plane1 zooms from city0 to city3 with fuel level fl2 to fl5, plane1 zooms from city2 to city0 with fuel level fl0 to fl6, plane1 zooms from city0 to city3 with fuel level fl4 to fl1, plane1 zooms from city1 to city0 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl4 to fl1, plane1 zooms from city0 to city3 with fuel level fl6 to fl3, plane1 zooms from city1 to city2 with fuel level fl4 to fl0, plane1 zooms from city0 to city1 with fuel level fl2 to fl3, plane1 zooms from city2 to city1 with fuel level fl2 to fl0, plane1 flies from city3 to city0 with fuel level fl6 to fl1, plane1 zooms from city1 to city0 with fuel level fl4 to fl3, plane1 zooms from city3 to city1 with fuel level fl3 to fl5, plane1 zooms from city3 to city2 with fuel level fl1 to fl6, plane1 zooms from city0 to city1 with fuel level fl2 to fl3, plane1 zooms from city1 to city2 with fuel level fl3 to fl5, plane1 zooms from city3 to city0 with fuel level fl1 to fl6, plane1 zooms from city1 to city2 with fuel level fl5 to fl4, plane1 flies from city0 to city3 with fuel level fl3 to fl4, plane1 flies from city0 to city1 with fuel level fl6 to fl3, plane1 zooms from city1 to city2 with fuel level fl2 to fl0, plane1 zooms from city0 to city1 with fuel level fl3 to fl4, plane1 zooms from city1 to city0 with fuel level fl1 to fl0, person5 boards plane1 at city2, plane1 zooms from city0 to city2 with fuel level fl3 to fl0, plane1 zooms from city2 to city3 with fuel level fl0 to fl4, plane1 zooms from city1 to city0 with fuel level fl6 to fl2, plane1 zooms from city0 to city3 with fuel level fl4 to fl5, plane1 zooms from city0 to city3 with fuel level fl0 to fl4, plane1 zooms from city1 to city3 with fuel level fl3 to fl2, plane1 zooms from city2 to city0 with fuel level fl6 to fl2, plane1 flies from city0 to city2 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl6 to fl3, plane1 zooms from city0 to city1 with fuel level fl4 to fl5, plane1 zooms from city2 to city0 with fuel level fl5 to fl4, plane1 flies from city1 to city2 with fuel level fl3 to fl2, plane1 zooms from city0 to city3 with fuel level fl4 to fl0, plane1 zooms from city3 to city2 with fuel level fl4 to fl3, plane1 zooms from city1 to city0 with fuel level fl2 to fl5, plane1 zooms from city2 to city3 with fuel level fl4 to fl3, plane1 zooms from city0 to city2 with fuel level fl2 to fl1, plane1 zooms from city2 to city0 with fuel level fl5 to fl2, plane1 zooms from city2 to city3 with fuel level fl1 to fl2, plane1 gets refueled at city2 with fuel level fl0 to fl2, plane1 zooms from city1 to city0 with fuel level fl4 to fl0, plane1 flies from city1 to city0 with fuel level fl1 to fl5, plane1 zooms from city3 to city0 with fuel level fl4 to fl5, plane1 zooms from city2 to city0 with fuel level fl3 to fl2, plane1 flies from city0 to city1 with fuel level fl1 to fl4, plane1 zooms from city0 to city3 with fuel level fl4 to fl6, plane1 zooms from city0 to city3 with fuel level fl1 to fl4, plane1 zooms from city1 to city0 with fuel level fl2 to fl4, plane1 zooms from city2 to city1 with fuel level fl2 to fl0, plane1 zooms from city1 to city0 with fuel level fl5 to fl1, plane1 zooms from city1 to city0 with fuel level fl5 to fl2, plane1 zooms from city2 to city3 with fuel level fl6 to fl0, plane1 flies from city1 to city3 with fuel level fl6 to fl0, plane1 zooms from city3 to city1 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl6 to fl5, plane1 gets refueled at city0 with fuel level fl4 to fl6, plane1 gets refueled at city1 with fuel level fl5 to fl4, person5 departs plane1 at city2, plane1 zooms from city2 to city0 with fuel level fl2 to fl4, plane1 zooms from city2 to city3 with fuel level fl3 to fl4, plane1 zooms from city0 to city1 with fuel level fl4 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl0, plane1 zooms from city3 to city2 with fuel level fl2 to fl0, plane1 zooms from city1 to city0 with fuel level fl6 to fl5, plane1 zooms from city3 to city1 with fuel level fl4 to fl3, plane1 zooms from city3 to city0 with fuel level fl3 to fl6, plane1 zooms from city0 to city3 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl3 to fl5, plane1 gets refueled at city3 with fuel level fl4 to fl3, plane1 zooms from city1 to city0 with fuel level fl6 to fl4, plane1 zooms from city2 to city3 with fuel level fl2 to fl3, person2 boards plane1 at city0, plane1 zooms from city1 to city2 with fuel level fl6 to fl4, plane1 gets refueled at city0 with fuel level fl5 to fl1, plane1 gets refueled at city2 with fuel level fl3 to fl0, plane1 zooms from city0 to city2 with fuel level fl0 to fl6, plane1 zooms from city2 to city1 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl4 to fl1, plane1 zooms from city0 to city3 with fuel level fl1 to fl0, plane1 zooms from city1 to city2 with fuel level fl1 to fl2, plane1 zooms from city2 to city1 with fuel level fl1 to fl6, plane1 gets refueled at city1 with fuel level fl6 to fl4, plane1 flies from city2 to city1 with fuel level fl1 to fl6, plane1 zooms from city0 to city3 with fuel level fl3 to fl0, plane1 zooms from city0 to city1 with fuel level fl0 to fl5, plane1 zooms from city1 to city0 with fuel level fl4 to fl0, plane1 zooms from city2 to city1 with fuel level fl1 to fl3, plane1 zooms from city3 to city2 with fuel level fl3 to fl0, plane1 zooms from city1 to city2 with fuel level fl2 to fl4, plane1 zooms from city0 to city3 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl0 to fl5, plane1 zooms from city2 to city1 with fuel level fl5 to fl3, plane1 zooms from city0 to city2 with fuel level fl0 to fl2, plane1 zooms from city2 to city0 with fuel level fl1 to fl6, plane1 zooms from city1 to city0 with fuel level fl3 to fl0, plane1 zooms from city3 to city2 with fuel level fl0 to fl2, plane1 zooms from city1 to city2 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl6 to fl5, plane1 zooms from city3 to city2 with fuel level fl3 to fl2, plane1 zooms from city0 to city1 with fuel level fl3 to fl0, plane1 zooms from city1 to city0 with fuel level fl1 to fl3, plane1 zooms from city0 to city2 with fuel level fl4 to fl6, plane1 zooms from city3 to city0 with fuel level fl0 to fl4, plane1 zooms from city3 to city0 with fuel level fl1 to fl6, plane1 zooms from city3 to city1 with fuel level fl5 to fl6, plane1 zooms from city1 to city3 with fuel level fl1 to fl3, plane1 flies from city1 to city2 with fuel level fl4 to fl1, plane1 zooms from city3 to city2 with fuel level fl1 to fl5, plane1 zooms from city2 to city1 with fuel level fl4 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl1, plane1 zooms from city0 to city3 with fuel level fl0 to fl2, plane1 flies from city3 to city1 with fuel level fl3 to fl6, plane1 zooms from city0 to city3 with fuel level fl3 to fl1, plane1 zooms from city3 to city1 with fuel level fl3 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl3, plane1 flies from city2 to city1 with fuel level fl4 to fl5, plane1 zooms from city3 to city0 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city2 with fuel level fl3 to fl5, plane1 zooms from city2 to city1 with fuel level fl0 to fl5, plane1 zooms from city0 to city1 with fuel level fl0 to fl6, plane1 zooms from city1 to city3 with fuel level fl2 to fl0, plane1 zooms from city2 to city1 with fuel level fl0 to fl6, plane1 flies from city0 to city2 with fuel level fl4 to fl5, plane1 zooms from city1 to city0 with fuel level fl4 to fl1, plane1 gets refueled at city1 with fuel level fl6 to fl2, plane1 gets refueled at city3 with fuel level fl2 to fl3, plane1 zooms from city0 to city2 with fuel level fl0 to fl5, plane1 gets refueled at city2 with fuel level fl1 to fl0, plane1 zooms from city0 to city1 with fuel level fl6 to fl5, plane1 zooms from city2 to city1 with fuel level fl2 to fl3, plane1 flies from city2 to city3 with fuel level fl0 to fl4, plane1 zooms from city2 to city3 with fuel level fl0 to fl5, person4 boards plane1 at city3, plane1 zooms from city2 to city0 with fuel level fl4 to fl6, plane1 zooms from city2 to city0 with fuel level fl3 to fl5, plane1 gets refueled at city2 with fuel level fl5 to fl3, plane1 zooms from city0 to city1 with fuel level fl2 to fl6, plane1 gets refueled at city0 with fuel level fl1 to fl4, plane1 zooms from city0 to city1 with fuel level fl5 to fl6, plane1 zooms from city3 to city2 with fuel level fl0 to fl4, plane1 flies from city0 to city1 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl4 to fl3, plane1 zooms from city1 to city2 with fuel level fl0 to fl4, plane1 flies from city2 to city0 with fuel level fl2 to fl0, plane1 zooms from city3 to city1 with fuel level fl0 to fl5, plane1 zooms from city2 to city3 with fuel level fl2 to fl6, plane1 zooms from city1 to city2 with fuel level fl1 to fl5, plane1 gets refueled at city1 with fuel level fl0 to fl3, plane1 zooms from city1 to city3 with fuel level fl4 to fl0, plane1 zooms from city3 to city0 with fuel level fl1 to fl6, plane1 zooms from city3 to city0 with fuel level fl3 to fl5, plane1 zooms from city1 to city3 with fuel level fl4 to fl2, plane1 flies from city3 to city2 with fuel level fl6 to fl1, plane1 zooms from city2 to city1 with fuel level fl2 to fl6, plane1 zooms from city0 to city1 with fuel level fl3 to fl4, plane1 flies from city0 to city3 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl5 to fl1, plane1 zooms from city0 to city2 with fuel level fl1 to fl2, plane1 zooms from city0 to city1 with fuel level fl1 to fl3, plane1 flies from city2 to city3 with fuel level fl2 to fl5, plane1 zooms from city1 to city3 with fuel level fl5 to fl2, plane1 gets refueled at city0 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl6 to fl2, plane1 zooms from city0 to city3 with fuel level fl2 to fl3, plane1 zooms from city0 to city2 with fuel level fl5 to fl3, plane1 zooms from city3 to city1 with fuel level fl4 to fl0, plane1 zooms from city1 to city0 with fuel level fl4 to fl6, plane1 flies from city3 to city1 with fuel level fl1 to fl4, plane1 zooms from city1 to city3 with fuel level fl0 to fl6, plane1 zooms from city1 to city0 with fuel level fl6 to fl1, plane1 zooms from city2 to city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl5 to fl0, plane1 flies from city3 to city2 with fuel level fl4 to fl5, plane1 zooms from city3 to city0 with fuel level fl4 to fl2, plane1 zooms from city1 to city0 with fuel level fl0 to fl1, plane1 flies from city2 to city0 with fuel level fl6 to fl3, plane1 zooms from city2 to city1 with fuel level fl2 to fl3, plane1 zooms from city3 to city0 with fuel level fl6 to fl1, plane1 zooms from city1 to city3 with fuel level fl0 to fl3, plane1 zooms from city3 to city1 with fuel level fl0 to fl3, plane1 flies from city2 to city0 with fuel level fl1 to fl6, plane1 zooms from city1 to city2 with fuel level fl5 to fl0, plane1 gets refueled at city3 with fuel level fl5 to fl2, plane1 flies from city2 to city3 with fuel level fl3 to fl0, plane1 flies from city3 to city1 with fuel level fl2 to fl3, plane1 zooms from city3 to city2 with fuel level fl5 to fl3, plane1 flies from city0 to city3 with fuel level fl1 to fl3, plane1 zooms from city1 to city0 with fuel level fl4 to fl5, person2 departs plane1 at city0, plane1 zooms from city0 to city1 with fuel level fl2 to fl0, plane1 gets refueled at city0 with fuel level fl3 to fl0, plane1 flies from city0 to city3 with fuel level fl0 to fl5, plane1 flies from city1 to city2 with fuel level fl6 to fl2, plane1 zooms from city1 to city2 with fuel level fl5 to fl3, plane1 zooms from city2 to city0 with fuel level fl6 to fl5, plane1 flies from city1 to city2 with fuel level fl6 to fl0, plane1 zooms from city1 to city3 with fuel level fl1 to fl0, plane1 flies from city0 to city2 with fuel level fl3 to fl5, plane1 zooms from city0 to city3 with fuel level fl6 to fl2, plane1 zooms from city0 to city3 with fuel level fl3 to fl1, plane1 zooms from city3 to city1 with fuel level fl3 to fl4, plane1 zooms from city0 to city3 with fuel level fl5 to fl2, plane1 zooms from city3 to city1 with fuel level fl6 to fl0, plane1 zooms from city0 to city1 with fuel level fl2 to fl0, plane1 gets refueled at city3 with fuel level fl6 to fl2, plane1 zooms from city3 to city2 with fuel level fl2 to fl5, plane1 flies from city3 to city2 with fuel level fl0 to fl3, plane1 zooms from city3 to city1 with fuel level fl0 to fl6, plane1 zooms from city3 to city2 with fuel level fl1 to fl3, plane1 zooms from city0 to city1 with fuel level fl3 to fl0, plane1 zooms from city3 to city2 with fuel level fl0 to fl5, person5 boards plane1 at city0, plane1 gets refueled at city1 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl1 to fl3, plane1 zooms from city2 to city0 with fuel level fl2 to fl0, plane1 zooms from city2 to city1 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl6 to fl2, plane1 zooms from city1 to city0 with fuel level fl6 to fl5, plane1 zooms from city0 to city1 with fuel level fl4 to fl0, plane1 zooms from city1 to city0 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl5 to fl6, plane1 flies from city2 to city1 with fuel level fl0 to fl2, plane1 zooms from city2 to city1 with fuel level fl6 to fl2, plane1 zooms from city1 to city3 with fuel level fl1 to fl0, plane1 zooms from city0 to city2 with fuel level fl2 to fl5, plane1 zooms from city3 to city1 with fuel level fl2 to fl5, plane1 zooms from city1 to city0 with fuel level fl4 to fl2, plane1 zooms from city1 to city0 with fuel level fl1 to fl2, plane1 flies from city3 to city1 with fuel level fl1 to fl6, plane1 zooms from city2 to city3 with fuel level fl5 to fl0, plane1 zooms from city2 to city0 with fuel level fl3 to fl4, plane1 zooms from city2 to city1 with fuel level fl3 to fl1, plane1 zooms from city2 to city0 with fuel level fl4 to fl2, plane1 zooms from city0 to city2 with fuel level fl5 to fl2, plane1 zooms from city2 to city0 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl2 to fl3, plane1 flies from city1 to city0 with fuel level fl3 to fl1, plane1 zooms from city0 to city3 with fuel level fl5 to fl3, plane1 zooms from city1 to city3 with fuel level fl2 to fl3, plane1 gets refueled at city2 with fuel level fl0 to fl4, plane1 flies from city1 to city2 with fuel level fl6 to fl3, plane1 zooms from city0 to city2 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl6 to fl5, plane1 zooms from city2 to city0 with fuel level fl0 to fl1, person5 boards plane1 at city3, plane1 zooms from city3 to city2 with fuel level fl2 to fl0, plane1 zooms from city1 to city3 with fuel level fl6 to fl4, plane1 gets refueled at city0 with fuel level fl4 to fl5, plane1 flies from city2 to city3 with fuel level fl6 to fl5, plane1 zooms from city0 to city2 with fuel level fl3 to fl6, plane1 zooms from city0 to city2 with fuel level fl4 to fl1, plane1 zooms from city3 to city0 with fuel level fl6 to fl5, plane1 zooms from city0 to city3 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl3 to fl4, plane1 zooms from city3 to city1 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl4 to fl0, plane1 flies from city0 to city3 with fuel level fl1 to fl4, plane1 zooms from city2 to city3 with fuel level fl6 to fl4, plane1 zooms from city3 to city0 with fuel level fl2 to fl0, plane1 zooms from city0 to city1 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl3 to fl2, plane1 zooms from city0 to city3 with fuel level fl2 to fl4, plane1 flies from city1 to city3 with fuel level fl6 to fl1, plane1 zooms from city1 to city0 with fuel level fl0 to fl3, plane1 flies from city0 to city2 with fuel level fl1 to fl6, plane1 zooms from city1 to city0 with fuel level fl2 to fl1, plane1 flies from city2 to city1 with fuel level fl3 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl2, plane1 zooms from city3 to city0 with fuel level fl5 to fl6, plane1 zooms from city3 to city2 with fuel level fl3 to fl6, plane1 zooms from city3 to city1 with fuel level fl0 to fl5, plane1 flies from city3 to city1 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl6 to fl5, plane1 zooms from city3 to city1 with fuel level fl4 to fl3, plane1 zooms from city2 to city0 with fuel level fl2 to fl0, plane1 zooms from city0 to city3 with fuel level fl0 to fl1, plane1 zooms from city2 to city1 with fuel level fl6 to fl3, plane1 zooms from city2 to city0 with fuel level fl1 to fl0, plane1 zooms from city0 to city3 with fuel level fl1 to fl6, plane1 zooms from city0 to city1 with fuel level fl6 to fl2, plane1 zooms from city2 to city0 with fuel level fl3 to fl6, plane1 zooms from city0 to city1 with fuel level fl2 to fl4, plane1 gets refueled at city2 with fuel level fl2 to fl0, plane1 zooms from city0 to city1 with fuel level fl3 to fl1, plane1 flies from city3 to city0 with fuel level fl3 to fl0, plane1 zooms from city3 to city1 with fuel level fl1 to fl5, plane1 flies from city2 to city1 with fuel level fl3 to fl6, plane1 zooms from city1 to city0 with fuel level fl1 to fl6, plane1 zooms from city3 to city1 with fuel level fl5 to fl2, plane1 zooms from city2 to city0 with fuel level fl0 to fl4, plane1 gets refueled at city2 with fuel level fl4 to fl2, plane1 zooms from city1 to city0 with fuel level fl3 to fl0, plane1 zooms from city0 to city2 with fuel level fl1 to fl3, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 zooms from city3 to city0 with fuel level fl1 to fl5, plane1 zooms from city3 to city1 with fuel level fl6 to fl5, plane1 zooms from city0 to city1 with fuel level fl2 to fl5, plane1 flies from city2 to city0 with fuel level fl0 to fl3, plane1 zooms from city0 to city2 with fuel level fl2 to fl3, plane1 zooms from city0 to city2 with fuel level fl6 to fl4, plane1 zooms from city1 to city2 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl4 to fl3, plane1 zooms from city3 to city2 with fuel level fl2 to fl6, plane1 zooms from city3 to city1 with fuel level fl3 to fl1, plane1 gets refueled at city3 with fuel level fl6 to fl1, plane1 zooms from city0 to city3 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl5 to fl6, plane1 zooms from city0 to city3 with fuel level fl0 to fl3, plane1 flies from city1 to city0 with fuel level fl6 to fl4, plane1 zooms from city2 to city3 with fuel level fl0 to fl4, plane1 zooms from city0 to city1 with fuel level fl5 to fl0, plane1 zooms from city3 to city0 with fuel level fl4 to fl6, plane1 zooms from city3 to city1 with fuel level fl1 to fl2, plane1 zooms from city2 to city0 with fuel level fl2 to fl1, plane1 flies from city3 to city1 with fuel level fl4 to fl1, plane1 zooms from city0 to city3 with fuel level fl0 to fl1, plane1 zooms from city0 to city1 with fuel level fl0 to fl4, plane1 zooms from city0 to city2 with fuel level fl3 to fl1, plane1 zooms from city0 to city1 with fuel level fl3 to fl6, plane1 zooms from city3 to city2 with fuel level fl0 to fl3, plane1 zooms from city3 to city0 with fuel level fl1 to fl4, plane1 zooms from city2 to city3 with fuel level fl2 to fl1, plane1 flies from city0 to city1 with fuel level fl3 to fl5, plane1 zooms from city1 to city2 with fuel level fl1 to fl5, plane1 flies from city1 to city3 with fuel level fl0 to fl1, plane1 zooms from city2 to city0 with fuel level fl3 to fl1, plane1 zooms from city0 to city1 with fuel level fl5 to fl1, plane1 zooms from city1 to city0 with fuel level fl6 to fl1, plane1 zooms from city1 to city2 with fuel level fl0 to fl4, plane1 zooms from city0 to city1 with fuel level fl4 to fl5, plane1 zooms from city1 to city3 with fuel level fl1 to fl5, plane1 zooms from city1 to city0 with fuel level fl3 to fl2, plane1 zooms from city2 to city3 with fuel level fl6 to fl3, plane1 gets refueled at city1 with fuel level fl5 to fl3, plane1 zooms from city3 to city0 with fuel level fl6 to fl4, plane1 zooms from city3 to city2 with fuel level fl2 to fl5, plane1 zooms from city2 to city1 with fuel level fl1 to fl5, plane1 flies from city1 to city3 with fuel level fl6 to fl5, plane1 zooms from city1 to city0 with fuel level fl5 to fl1, plane1 gets refueled at city2 with fuel level fl4 to fl0, plane1 zooms from city3 to city2 with fuel level fl5 to fl4, plane1 flies from city0 to city1 with fuel level fl5 to fl3, plane1 zooms from city2 to city0 with fuel level fl1 to fl2, plane1 flies from city0 to city3 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl5 to fl6, plane1 zooms from city1 to city2 with fuel level fl3 to fl1, plane1 zooms from city1 to city2 with fuel level fl4 to fl0, plane1 zooms from city2 to city3 with fuel level fl5 to fl4, plane1 zooms from city0 to city3 with fuel level fl0 to fl3, plane1 zooms from city2 to city1 with fuel level fl4 to fl0, plane1 zooms from city0 to city2 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl2 to fl0, plane1 flies from city3 to city1 with fuel level fl3 to fl5, plane1 zooms from city0 to city2 with fuel level fl5 to fl1, plane1 zooms from city3 to city1 with fuel level fl5 to fl6, plane1 zooms from city1 to city2 with fuel level fl4 to fl2, plane1 zooms from city0 to city2 with fuel level fl1 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl4, plane1 flies from city2 to city1 with fuel level fl5 to fl4, plane1 zooms from city3 to city0 with fuel level fl2 to fl4, plane1 zooms from city0 to city2 with fuel level fl0 to fl2, plane1 zooms from city2 to city1 with fuel level fl2 to fl6, plane1 zooms from city1 to city0 with fuel level fl3 to fl1, plane1 zooms from city0 to city3 with fuel level fl4 to fl5, plane1 zooms from city1 to city0 with fuel level fl1 to fl3, plane1 zooms from city1 to city0 with fuel level fl2 to fl0, plane1 flies from city2 to city0 with fuel level fl3 to fl5, plane1 zooms from city2 to city1 with fuel level fl3 to fl4, plane1 zooms from city3 to city2 with fuel level fl1 to fl5, plane1 zooms from city1 to city0 with fuel level fl4 to fl2, plane1 zooms from city1 to city3 with fuel level fl4 to fl0, plane1 zooms from city0 to city1 with fuel level fl4 to fl1, plane1 zooms from city2 to city3 with fuel level fl5 to fl0, plane1 flies from city2 to city3 with fuel level fl2 to fl0, plane1 zooms from city2 to city1 with fuel level fl5 to fl2, plane1 zooms from city2 to city1 with fuel level fl0 to fl3, plane1 zooms from city2 to city1 with fuel level fl2 to fl6, plane1 zooms from city0 to city1 with fuel level fl5 to fl3, plane1 zooms from city3 to city0 with fuel level fl0 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl2 to fl0, plane1 flies from city0 to city3 with fuel level fl2 to fl4, plane1 zooms from city2 to city1 with fuel level fl3 to fl0, plane1 zooms from city1 to city3 with fuel level fl0 to fl4, plane1 gets refueled at city1 with fuel level fl6 to fl3, plane1 zooms from city1 to city2 with fuel level fl6 to fl5, plane1 zooms from city1 to city3 with fuel level fl4 to fl5, plane1 gets refueled at city3 with fuel level fl4 to fl6, plane1 zooms from city2 to city0 with fuel level fl6 to fl2, plane1 zooms from city3 to city0 with fuel level fl0 to fl2, plane1 zooms from city0 to city1 with fuel level fl6 to fl2, plane1 flies from city1 to city3 with fuel level fl1 to fl2, plane1 zooms from city3 to city2 with fuel level fl0 to fl1, plane1 zooms from city1 to city0 with fuel level fl3 to fl5, plane1 zooms from city2 to city1 with fuel level fl3 to fl5, plane1 zooms from city0 to city3 with fuel level fl3 to fl4, plane1 zooms from city1 to city0 with fuel level fl6 to fl3, plane1 zooms from city3 to city0 with fuel level fl2 to fl4, plane1 flies from city3 to city2 with fuel level fl4 to fl0, plane1 zooms from city1 to city2 with fuel level fl4 to fl1, plane1 zooms from city2 to city0 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl0 to fl6, plane1 zooms from city0 to city1 with fuel level fl0 to fl1, plane1 zooms from city3 to city2 with fuel level fl4 to fl5, plane1 zooms from city1 to city3 with fuel level fl5 to fl2, plane1 zooms from city3 to city1 with fuel level fl3 to fl2, plane1 zooms from city2 to city1 with fuel level fl5 to fl1, plane1 zooms from city2 to city3 with fuel level fl1 to fl0, plane1 flies from city1 to city3 with fuel level fl4 to fl5, plane1 zooms from city0 to city1 with fuel level fl3 to fl6, plane1 zooms from city0 to city3 with fuel level fl4 to fl6, plane1 flies from city0 to city1 with fuel level fl5 to fl6, plane1 zooms from city0 to city3 with fuel level fl0 to fl1, plane1 zooms from city3 to city0 with fuel level fl6 to fl3, plane1 zooms from city0 to city3 with fuel level fl0 to fl1, plane1 zooms from city2 to city0 with fuel level fl0 to fl1, plane1 zooms from city2 to city1 with fuel level fl0 to fl3, person1 boards plane1 at city1, plane1 zooms from city3 to city2 with fuel level fl1 to fl6, plane1 zooms from city3 to city0 with fuel level fl6 to fl4, plane1 zooms from city1 to city2 with fuel level fl0 to fl6, plane1 flies from city3 to city2 with fuel level fl2 to fl4, plane1 zooms from city0 to city3 with fuel level fl6 to fl2, plane1 flies from city1 to city3 with fuel level fl5 to fl2, plane1 gets refueled at city2 with fuel level fl6 to fl1, plane1 flies from city2 to city0 with fuel level fl5 to fl1, plane1 zooms from city3 to city0 with fuel level fl2 to fl4, plane1 zooms from city2 to city3 with fuel level fl4 to fl2, plane1 zooms from city1 to city3 with fuel level fl2 to fl5, plane1 zooms from city3 to city1 with fuel level fl1 to fl4, plane1 zooms from city0 to city1 with fuel level fl4 to fl3, plane1 zooms from city0 to city3 with fuel level fl4 to fl1, plane1 zooms from city0 to city2 with fuel level fl6 to fl5, plane1 zooms from city1 to city2 with fuel level fl3 to fl4, plane1 zooms from city3 to city1 with fuel level fl4 to fl2, plane1 zooms from city1 to city3 with fuel level fl6 to fl1, plane1 zooms from city3 to city0 with fuel level fl4 to fl6, plane1 zooms from city3 to city1 with fuel level fl6 to fl5, plane1 zooms from city0 to city3 with fuel level fl5 to fl3, plane1 zooms from city0 to city1 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl1 to fl4, plane1 flies from city2 to city1 with fuel level fl6 to fl0, plane1 gets refueled at city2 with fuel level fl5 to fl1, plane1 zooms from city0 to city1 with fuel level fl2 to fl5, plane1 flies from city1 to city3 with fuel level fl1 to fl4, plane1 zooms from city2 to city0 with fuel level fl6 to fl4, plane1 zooms from city3 to city1 with fuel level fl6 to fl2, plane1 zooms from city0 to city1 with fuel level fl4 to fl1, plane1 zooms from city2 to city0 with fuel level fl2 to fl3, plane1 flies from city1 to city3 with fuel level fl2 to fl5, plane1 zooms from city2 to city0 with fuel level fl5 to fl1, plane1 gets refueled at city2 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl4 to fl6, plane1 gets refueled at city2 with fuel level fl1 to fl2, plane1 flies from city0 to city2 with fuel level fl3 to fl2, plane1 zooms from city3 to city0 with fuel level fl3 to fl4, plane1 zooms from city3 to city1 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl1 to fl3, plane1 zooms from city0 to city2 with fuel level fl4 to fl5, plane1 flies from city3 to city2 with fuel level fl6 to fl0, plane1 zooms from city3 to city1 with fuel level fl3 to fl2, plane1 flies from city3 to city2 with fuel level fl5 to fl0, plane1 zooms from city1 to city0 with fuel level fl1 to fl6, plane1 zooms from city3 to city1 with fuel level fl4 to fl6, plane1 zooms from city2 to city1 with fuel level fl4 to fl1, plane1 zooms from city0 to city1 with fuel level fl0 to fl2, plane1 zooms from city3 to city0 with fuel level fl5 to fl6, person4 departs plane1 at city0, plane1 zooms from city0 to city3 with fuel level fl4 to fl0, plane1 zooms from city3 to city0 with fuel level fl5 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl3, plane1 zooms from city0 to city2 with fuel level fl3 to fl1, plane1 flies from city2 to city1 with fuel level fl6 to fl1, plane1 zooms from city2 to city1 with fuel level fl5 to fl0, plane1 zooms from city2 to city3 with fuel level fl2 to fl3, plane1 zooms from city3 to city1 with fuel level fl2 to fl0, plane1 zooms from city3 to city1 with fuel level fl3 to fl6, plane1 zooms from city3 to city2 with fuel level fl4 to fl0, person6 departs plane1 at city2, plane1 zooms from city2 to city1 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl0 to fl4, plane1 zooms from city2 to city0 with fuel level fl4 to fl0, plane1 zooms from city3 to city0 with fuel level fl5 to fl6, plane1 zooms from city2 to city0 with fuel level fl3 to fl4, plane1 zooms from city3 to city2 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl2 to fl4, plane1 flies from city1 to city2 with fuel level fl2 to fl1, plane1 zooms from city1 to city2 with fuel level fl6 to fl1, plane1 zooms from city3 to city1 with fuel level fl2 to fl1, plane1 zooms from city0 to city2 with fuel level fl4 to fl0, plane1 zooms from city3 to city2 with fuel level fl1 to fl6, plane1 flies from city2 to city3 with fuel level fl1 to fl5, plane1 zooms from city3 to city2 with fuel level fl0 to fl6, plane1 zooms from city0 to city2 with fuel level fl0 to fl5, person3 departs plane1 at city0, plane1 zooms from city2 to city3 with fuel level fl3 to fl4, plane1 flies from city2 to city0 with fuel level fl1 to fl2, plane1 zooms from city1 to city3 with fuel level fl3 to fl6, plane1 zooms from city1 to city0 with fuel level fl2 to fl4, plane1 flies from city0 to city1 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl3 to fl4, plane1 zooms from city2 to city3 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl0 to fl2, plane1 zooms from city2 to city3 with fuel level fl3 to fl4, plane1 zooms from city3 to city2 with fuel level fl2 to fl1, plane1 zooms from city0 to city3 with fuel level fl5 to fl4, plane1 zooms from city0 to city1 with fuel level fl5 to fl0, plane1 zooms from city3 to city1 with fuel level fl3 to fl5, plane1 gets refueled at city3 with fuel level fl1 to fl2, plane1 zooms from city3 to city2 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl4 to fl5, plane1 zooms from city2 to city1 with fuel level fl1 to fl2, plane1 zooms from city1 to city3 with fuel level fl2 to fl4, plane1 zooms from city3 to city0 with fuel level fl0 to fl2, plane1 zooms from city3 to city2 with fuel level fl1 to fl2, plane1 zooms from city2 to city1 with fuel level fl4 to fl3, plane1 zooms from city0 to city3 with fuel level fl6 to fl1, plane1 zooms from city3 to city2 with fuel level fl1 to fl4, plane1 zooms from city0 to city1 with fuel level fl2 to fl0, person7 departs plane1 at city1, plane1 zooms from city1 to city0 with fuel level fl0 to fl2, plane1 flies from city0 to city2 with fuel level fl6 to fl4, plane1 gets refueled at city0 with fuel level fl5 to fl4, plane1 flies from city1 to city0 with fuel level fl1 to fl4, plane1 gets refueled at city1 with fuel level fl4 to fl0, plane1 zooms from city3 to city1 with fuel level fl2 to fl5, plane1 flies from city2 to city0 with fuel level fl5 to fl4, plane1 zooms from city2 to city0 with fuel level fl5 to fl4, plane1 zooms from city3 to city1 with fuel level fl6 to fl3, plane1 zooms from city3 to city1 with fuel level fl5 to fl1, plane1 zooms from city2 to city3 with fuel level fl3 to fl6, plane1 zooms from city3 to city2 with fuel level fl0 to fl5, plane1 zooms from city0 to city1 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl1 to fl4, plane1 zooms from city2 to city1 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl4 to fl6, plane1 zooms from city3 to city0 with fuel level fl1 to fl3, plane1 zooms from city2 to city0 with fuel level fl2 to fl5, plane1 zooms from city1 to city0 with fuel level fl1 to fl3, plane1 zooms from city1 to city3 with fuel level fl0 to fl3, person4 departs plane1 at city2, plane1 zooms from city3 to city0 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl2 to fl4, plane1 zooms from city1 to city3 with fuel level fl6 to fl0, plane1 zooms from city3 to city1 with fuel level fl0 to fl3, plane1 zooms from city1 to city2 with fuel level fl5 to fl3, plane1 flies from city0 to city3 with fuel level fl5 to fl6, plane1 gets refueled at city3 with fuel level fl3 to fl5, plane1 zooms from city0 to city3 with fuel level fl6 to fl5, plane1 gets refueled at city0 with fuel level fl5 to fl3, plane1 zooms from city2 to city1 with fuel level fl5 to fl4, plane1 zooms from city2 to city3 with fuel level fl3 to fl6, plane1 zooms from city3 to city1 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl5 to fl4, plane1 zooms from city2 to city3 with fuel level fl1 to fl3, plane1 zooms from city1 to city2 with fuel level fl3 to fl6, plane1 zooms from city1 to city0 with fuel level fl3 to fl2, plane1 zooms from city1 to city2 with fuel level fl2 to fl0, plane1 zooms from city3 to city0 with fuel level fl5 to fl0, plane1 zooms from city3 to city1 with fuel level fl0 to fl6, plane1 zooms from city3 to city2 with fuel level fl6 to fl0, plane1 gets refueled at city1 with fuel level fl3 to fl6, plane1 zooms from city2 to city1 with fuel level fl3 to fl0, plane1 zooms from city3 to city1 with fuel level fl3 to fl2, plane1 flies from city2 to city0 with fuel level fl0 to fl5, plane1 zooms from city0 to city2 with fuel level fl0 to fl5, plane1 zooms from city3 to city2 with fuel level fl4 to fl3, plane1 zooms from city3 to city0 with fuel level fl5 to fl6, plane1 zooms from city2 to city1 with fuel level fl3 to fl1, plane1 zooms from city1 to city3 with fuel level fl4 to fl0, plane1 gets refueled at city3 with fuel level fl0 to fl3, plane1 flies from city1 to city3 with fuel level fl5 to fl4, plane1 zooms from city3 to city0 with fuel level fl5 to fl3, plane1 gets refueled at city3 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl6 to fl4, plane1 zooms from city1 to city3 with fuel level fl4 to fl1, plane1 zooms from city3 to city2 with fuel level fl3 to fl6, plane1 zooms from city3 to city2 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl1 to fl0, plane1 zooms from city3 to city0 with fuel level fl4 to fl2, plane1 zooms from city1 to city0 with fuel level fl0 to fl6, plane1 zooms from city0 to city3 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl0 to fl4, plane1 zooms from city0 to city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl4 to fl1, plane1 zooms from city2 to city3 with fuel level fl3 to fl5, plane1 gets refueled at city1 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl6 to fl4, plane1 zooms from city3 to city1 with fuel level fl2 to fl4, plane1 zooms from city3 to city0 with fuel level fl4 to fl1, plane1 zooms from city1 to city2 with fuel level fl3 to fl0, plane1 zooms from city0 to city1 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl0 to fl3, plane1 flies from city0 to city3 with fuel level fl6 to fl2, plane1 flies from city2 to city0 with fuel level fl1 to fl0, plane1 zooms from city3 to city1 with fuel level fl6 to fl3, plane1 zooms from city0 to city3 with fuel level fl2 to fl1, plane1 zooms from city1 to city0 with fuel level fl6 to fl2, plane1 zooms from city1 to city0 with fuel level fl3 to fl2, plane1 zooms from city1 to city0 with fuel level fl4 to fl3, plane1 zooms from city3 to city1 with fuel level fl1 to fl0, plane1 zooms from city3 to city1 with fuel level fl0 to fl4, plane1 zooms from city2 to city3 with fuel level fl6 to fl2, plane1 zooms from city0 to city2 with fuel level fl4 to fl6, plane1 zooms from city3 to city1 with fuel level fl1 to fl6, plane1 zooms from city3 to city2 with fuel level fl2 to fl3, plane1 zooms from city1 to city3 with fuel level fl0 to fl3, plane1 zooms from city2 to city0 with fuel level fl1 to fl4, plane1 zooms from city1 to city3 with fuel level fl3 to fl1, plane1 flies from city2 to city3 with fuel level fl0 to fl5, plane1 gets refueled at city2 with fuel level fl4 to fl1, plane1 zooms from city3 to city1 with fuel level fl0 to fl1, plane1 zooms from city3 to city0 with fuel level fl2 to fl6, plane1 flies from city0 to city2 with fuel level fl4 to fl0, plane1 zooms from city3 to city0 with fuel level fl6 to fl3, plane1 zooms from city0 to city2 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl6 to fl2, person5 departs plane1 at city3, plane1 zooms from city1 to city3 with fuel level fl4 to fl6, plane1 gets refueled at city3 with fuel level fl0 to fl6, plane1 zooms from city0 to city3 with fuel level fl4 to fl1, plane1 flies from city0 to city1 with fuel level fl0 to fl2, plane1 zooms from city3 to city0 with fuel level fl2 to fl3, plane1 flies from city0 to city2 with fuel level fl0 to fl5, plane1 flies from city2 to city3 with fuel level fl3 to fl2, plane1 flies from city1 to city2 with fuel level fl5 to fl3, plane1 zooms from city3 to city2 with fuel level fl5 to fl6, plane1 zooms from city3 to city2 with fuel level fl6 to fl4, plane1 zooms from city2 to city1 with fuel level fl5 to fl4, plane1 zooms from city3 to city1 with fuel level fl5 to fl3, plane1 zooms from city0 to city2 with fuel level fl4 to fl0, plane1 zooms from city0 to city2 with fuel level fl3 to fl6, plane1 zooms from city0 to city2 with fuel level fl6 to fl5, plane1 zooms from city3 to city1 with fuel level fl1 to fl2, plane1 flies from city0 to city3 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl3 to fl0, plane1 zooms from city3 to city2 with fuel level fl4 to fl2, plane1 zooms from city2 to city1 with fuel level fl1 to fl5, plane1 flies from city0 to city3 with fuel level fl4 to fl2, plane1 zooms from city2 to city1 with fuel level fl4 to fl3, plane1 zooms from city0 to city1 with fuel level fl0 to fl6, plane1 zooms from city0 to city1 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl5 to fl4, plane1 zooms from city1 to city2 with fuel level fl4 to fl5, plane1 flies from city3 to city0 with fuel level fl1 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl4, plane1 flies from city0 to city3 with fuel level fl6 to fl3, plane1 flies from city3 to city2 with fuel level fl4 to fl1, plane1 zooms from city1 to city2 with fuel level fl6 to fl3, plane1 zooms from city2 to city3 with fuel level fl5 to fl0, plane1 gets refueled at city1 with fuel level fl1 to fl4, plane1 zooms from city1 to city3 with fuel level fl3 to fl4, plane1 zooms from city1 to city0 with fuel level fl3 to fl0, plane1 zooms from city1 to city2 with fuel level fl0 to fl4, plane1 zooms from city2 to city3 with fuel level fl5 to fl2, plane1 zooms from city3 to city0 with fuel level fl0 to fl6, plane1 flies from city0 to city3 with fuel level fl6 to fl1, person3 departs plane1 at city2, plane1 zooms from city1 to city3 with fuel level fl6 to fl5, plane1 flies from city1 to city0 with fuel level fl6 to fl1, plane1 zooms from city0 to city3 with fuel level fl3 to fl5, plane1 zooms from city0 to city3 with fuel level fl6 to fl5, plane1 zooms from city1 to city0 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl6 to fl0, plane1 zooms from city3 to city2 with fuel level fl6 to fl2, plane1 zooms from city2 to city1 with fuel level fl1 to fl0, plane1 zooms from city0 to city2 with fuel level fl5 to fl6, plane1 gets refueled at city2 with fuel level fl6 to fl3, plane1 zooms from city2 to city0 with fuel level fl1 to fl5, plane1 zooms from city0 to city2 with fuel level fl0 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl5, plane1 zooms from city2 to city3 with fuel level fl5 to fl3, plane1 flies from city3 to city0 with fuel level fl2 to fl0, plane1 zooms from city3 to city2 with fuel level fl0 to fl5, plane1 zooms from city1 to city2 with fuel level fl4 to fl3, plane1 zooms from city2 to city0 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl1 to fl0, plane1 gets refueled at city2 with fuel level fl0 to fl1, plane1 zooms from city3 to city0 with fuel level fl1 to fl2, plane1 zooms from city0 to city1 with fuel level fl6 to fl0, plane1 zooms from city2 to city0 with fuel level fl0 to fl3, plane1 zooms from city0 to city2 with fuel level fl2 to fl6, plane1 zooms from city3 to city1 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl0 to fl3, plane1 zooms from city0 to city1 with fuel level fl3 to fl5, plane1 zooms from city3 to city1 with fuel level fl5 to fl6, plane1 zooms from city0 to city3 with fuel level fl1 to fl6, plane1 zooms from city1 to city2 with fuel level fl2 to fl5, plane1 gets refueled at city1 with fuel level fl5 to fl6, plane1 zooms from city0 to city3 with fuel level fl5 to fl3, plane1 zooms from city0 to city1 with fuel level fl6 to fl4, plane1 zooms from city0 to city1 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl6 to fl4, plane1 flies from city2 to city3 with fuel level fl4 to fl1, plane1 zooms from city0 to city2 with fuel level fl2 to fl4, plane1 zooms from city2 to city3 with fuel level fl0 to fl1, person3 departs plane1 at city1, plane1 zooms from city0 to city3 with fuel level fl2 to fl5, plane1 zooms from city0 to city1 with fuel level fl4 to fl2, plane1 zooms from city3 to city1 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl5 to fl6, plane1 zooms from city1 to city0 with fuel level fl5 to fl6, plane1 zooms from city0 to city3 with fuel level fl5 to fl3, plane1 zooms from city0 to city3 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city3 with fuel level fl5 to fl3, plane1 zooms from city3 to city2 with fuel level fl5 to fl1, plane1 gets refueled at city1 with fuel level fl2 to fl1, plane1 zooms from city1 to city3 with fuel level fl6 to fl4, plane1 zooms from city1 to city0 with fuel level fl1 to fl4, plane1 zooms from city0 to city3 with fuel level fl2 to fl3, plane1 zooms from city1 to city0 with fuel level fl6 to fl2, plane1 zooms from city3 to city0 with fuel level fl5 to fl2, plane1 flies from city2 to city0 with fuel level fl5 to fl6, plane1 zooms from city1 to city3 with fuel level fl2 to fl0, plane1 zooms from city1 to city2 with fuel level fl2 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl2, plane1 zooms from city2 to city1 with fuel level fl0 to fl2, plane1 zooms from city3 to city2 with fuel level fl1 to fl5, plane1 zooms from city1 to city0 with fuel level fl6 to fl4, plane1 zooms from city0 to city3 with fuel level fl4 to fl1, plane1 flies from city2 to city3 with fuel level fl2 to fl4, plane1 gets refueled at city2 with fuel level fl5 to fl4, person2 departs plane1 at city1, plane1 zooms from city2 to city1 with fuel level fl2 to fl3, plane1 zooms from city1 to city2 with fuel level fl3 to fl6, plane1 zooms from city3 to city1 with fuel level fl6 to fl4, plane1 flies from city0 to city1 with fuel level fl4 to fl3, plane1 zooms from city3 to city0 with fuel level fl6 to fl2, plane1 flies from city2 to city3 with fuel level fl3 to fl4, plane1 zooms from city0 to city1 with fuel level fl6 to fl0, plane1 zooms from city0 to city3 with fuel level fl4 to fl2, plane1 zooms from city2 to city0 with fuel level fl1 to fl6, plane1 zooms from city0 to city3 with fuel level fl3 to fl0, plane1 zooms from city0 to city2 with fuel level fl0 to fl2, person3 boards plane1 at city2, plane1 zooms from city3 to city2 with fuel level fl4 to fl1, plane1 zooms from city2 to city3 with fuel level fl0 to fl4, plane1 zooms from city0 to city2 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl5 to fl1, plane1 zooms from city3 to city2 with fuel level fl0 to fl4, plane1 zooms from city3 to city0 with fuel level fl0 to fl3, plane1 zooms from city1 to city0 with fuel level fl2 to fl6, plane1 zooms from city1 to city0 with fuel level fl1 to fl6, plane1 zooms from city2 to city3 with fuel level fl4 to fl0, plane1 zooms from city3 to city2 with fuel level fl6 to fl1, plane1 zooms from city3 to city1 with fuel level fl6 to fl2, plane1 zooms from city0 to city3 with fuel level fl2 to fl1, plane1 flies from city0 to city1 with fuel level fl5 to fl1, plane1 gets refueled at city0 with fuel level fl2 to fl3, plane1 zooms from city1 to city3 with fuel level fl6 to fl4, plane1 zooms from city1 to city3 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl4 to fl0, plane1 zooms from city1 to city2 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl0 to fl6, plane1 flies from city3 to city2 with fuel level fl1 to fl3, person6 boards plane1 at city2, plane1 zooms from city1 to city0 with fuel level fl2 to fl6, plane1 flies from city0 to city1 with fuel level fl5 to fl4, plane1 zooms from city2 to city1 with fuel level fl0 to fl4, plane1 zooms from city3 to city1 with fuel level fl4 to fl0, plane1 zooms from city3 to city1 with fuel level fl5 to fl4, plane1 zooms from city1 to city2 with fuel level fl1 to fl0, plane1 flies from city3 to city2 with fuel level fl4 to fl6, plane1 zooms from city3 to city2 with fuel level fl2 to fl1, plane1 zooms from city2 to city0 with fuel level fl0 to fl5, plane1 flies from city2 to city1 with fuel level fl0 to fl3, plane1 zooms from city0 to city3 with fuel level fl6 to fl2, plane1 zooms from city2 to city1 with fuel level fl3 to fl0, plane1 zooms from city1 to city0 with fuel level fl4 to fl2, plane1 flies from city3 to city0 with fuel level fl4 to fl3, plane1 zooms from city0 to city1 with fuel level fl1 to fl0, plane1 zooms from city1 to city2 with fuel level fl3 to fl0, plane1 zooms from city2 to city3 with fuel level fl4 to fl0, plane1 zooms from city3 to city2 with fuel level fl6 to fl2, plane1 zooms from city3 to city2 with fuel level fl1 to fl3, plane1 zooms from city3 to city0 with fuel level fl1 to fl3, plane1 zooms from city2 to city1 with fuel level fl6 to fl1, plane1 zooms from city1 to city2 with fuel level fl5 to fl4, plane1 zooms from city0 to city3 with fuel level fl5 to fl0, plane1 zooms from city3 to city0 with fuel level fl4 to fl2, plane1 zooms from city0 to city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl1 to fl5, plane1 zooms from city3 to city2 with fuel level fl4 to fl1, plane1 flies from city1 to city0 with fuel level fl0 to fl6, plane1 zooms from city0 to city3 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl4 to fl6, plane1 zooms from city2 to city1 with fuel level fl1 to fl3, plane1 flies from city2 to city3 with fuel level fl1 to fl6, plane1 zooms from city2 to city0 with fuel level fl5 to fl1, plane1 zooms from city3 to city1 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl6 to fl3, plane1 flies from city1 to city0 with fuel level fl3 to fl4, plane1 flies from city0 to city1 with fuel level fl3 to fl6, plane1 zooms from city2 to city1 with fuel level fl3 to fl5, plane1 zooms from city3 to city2 with fuel level fl3 to fl6, plane1 zooms from city1 to city0 with fuel level fl0 to fl4, plane1 zooms from city0 to city3 with fuel level fl3 to fl0, plane1 zooms from city0 to city1 with fuel level fl1 to fl5, plane1 gets refueled at city1 with fuel level fl2 to fl5, plane1 flies from city3 to city1 with fuel level fl4 to fl5, plane1 zooms from city1 to city3 with fuel level fl1 to fl0, plane1 zooms from city1 to city0 with fuel level fl3 to fl6, plane1 zooms from city2 to city1 with fuel level fl6 to fl4, plane1 zooms from city2 to city3 with fuel level fl2 to fl4, plane1 flies from city2 to city0 with fuel level fl5 to fl3, plane1 zooms from city1 to city3 with fuel level fl2 to fl0, plane1 zooms from city3 to city0 with fuel level fl5 to fl3, plane1 zooms from city3 to city2 with fuel level fl3 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl5, plane1 zooms from city1 to city2 with fuel level fl4 to fl1, plane1 flies from city1 to city3 with fuel level fl6 to fl2, plane1 zooms from city2 to city3 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl0 to fl1, plane1 gets refueled at city0 with fuel level fl0 to fl2, plane1 gets refueled at city0 with fuel level fl5 to fl0, plane1 zooms from city0 to city3 with fuel level fl5 to fl4, plane1 zooms from city1 to city0 with fuel level fl5 to fl6, plane1 zooms from city1 to city0 with fuel level fl5 to fl3, person3 departs plane1 at city3, plane1 zooms from city3 to city2 with fuel level fl2 to fl4, plane1 zooms from city1 to city3 with fuel level fl4 to fl1, plane1 zooms from city1 to city0 with fuel level fl3 to fl6, person1 departs plane1 at city1, plane1 zooms from city0 to city3 with fuel level fl1 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl3, plane1 zooms from city2 to city0 with fuel level fl2 to fl4, plane1 zooms from city3 to city0 with fuel level fl5 to fl1, plane1 zooms from city1 to city2 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl5 to fl6, person5 departs plane1 at city1, plane1 zooms from city0 to city3 with fuel level fl1 to fl3, plane1 zooms from city0 to city1 with fuel level fl4 to fl3, plane1 flies from city2 to city3 with fuel level fl6 to fl4, plane1 zooms from city3 to city1 with fuel level fl2 to fl3, plane1 zooms from city2 to city0 with fuel level fl5 to fl6, plane1 flies from city3 to city2 with fuel level fl1 to fl0, plane1 zooms from city1 to city0 with fuel level fl0 to fl2, plane1 zooms from city3 to city2 with fuel level fl1 to fl3, plane1 zooms from city1 to city0 with fuel level fl5 to fl1, plane1 zooms from city1 to city2 with fuel level fl0 to fl5, plane1 zooms from city0 to city1 with fuel level fl0 to fl3, plane1 gets refueled at city1 with fuel level fl0 to fl5, plane1 zooms from city3 to city1 with fuel level fl6 to fl4, plane1 zooms from city1 to city0 with fuel level fl5 to fl2, plane1 zooms from city0 to city2 with fuel level fl6 to fl5, plane1 zooms from city0 to city2 with fuel level fl3 to fl2, plane1 gets refueled at city1 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl1 to fl4, plane1 flies from city1 to city0 with fuel level fl5 to fl4, plane1 zooms from city0 to city1 with fuel level fl0 to fl6, plane1 zooms from city0 to city3 with fuel level fl2 to fl4, plane1 zooms from city2 to city1 with fuel level fl3 to fl0, plane1 zooms from city1 to city2 with fuel level fl4 to fl0, plane1 zooms from city3 to city1 with fuel level fl5 to fl6, plane1 zooms from city1 to city0 with fuel level fl2 to fl5, plane1 zooms from city2 to city0 with fuel level fl5 to fl4, plane1 zooms from city2 to city1 with fuel level fl0 to fl4, plane1 zooms from city2 to city3 with fuel level fl0 to fl6, plane1 zooms from city2 to city1 with fuel level fl1 to fl6, plane1 zooms from city1 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city0 with fuel level fl2 to fl5, plane1 zooms from city3 to city1 with fuel level fl4 to fl5 and plane1 zooms from city2 to city1 with fuel level fl2 to fl0", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "81c556ea-6e2b-4de2-b6ab-553db3a19ebb", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, plane1 flies from city0 to city2 with fuel level fl1 to fl0, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "plane1 flies from city0 to city2 with fuel level fl1 to fl0", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "010e1540-b239-4aa8-8b1e-a7ed675bdc0c", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "160dcddc-b4bb-4f70-b1a2-ca73eac0ee7d", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 zooms from city1 to city3 with fuel level fl5 to fl6, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "plane1 zooms from city1 to city3 with fuel level fl5 to fl6", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "7ceb22a3-b13d-4452-a475-e4f763f248ea", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 zooms from city2 to city0 with fuel level fl5 to fl3, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "plane1 zooms from city2 to city0 with fuel level fl5 to fl3", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "09db4b3f-3e69-4564-b3a7-347d08e5b18b", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "fb12b8e4-2d22-44e8-932f-977d623a0849", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 zooms from city2 to city3 with fuel level fl0 to fl2. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "779c15aa-5908-40ed-825e-454d764b549b", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 zooms from city0 to city3 with fuel level fl3 to fl6, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "d34953c6-db06-4fe9-95d9-ff444dd8953e", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 flies from city0 to city1 with fuel level fl4 to fl3, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "fc753f29-5fe7-4c3d-a10a-a637eba09c9e", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 15 the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1. Is the action: person8 boards plane1 at city1 executable at step 6, True or False?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "0078d835-8bd3-4c45-9c14-fa72802b974c", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 15 the following actions are planned to be performed: plane1 zooms from city1 to city2 with fuel level fl0 to fl4, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1. Is the action: plane1 zooms from city1 to city2 with fuel level fl0 to fl4 executable at step 1, True or False?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "ba7a0beb-5a9d-4f2a-a3c8-973ea93bbddd", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 15 the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1. Is the action: plane1 flies from city1 to city3 with fuel level fl4 to fl3 executable at step 8, True or False?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "936405ad-b482-4a70-9cfc-97540f35b6d6", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 15 the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1. Is the action: person7 departs plane1 at city2 executable at step 13, True or False?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "c7acfb87-03cc-4362-b4ae-0a1a24007b18", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "plane1 flies from city0 to city3 with fuel level fl1 to fl0, plane1 flies from city0 to city1 with fuel level fl1 to fl0, person5 departs plane1 at city0, person3 boards plane1 at city0, plane1 gets refueled at city0 with fuel level fl1 to fl2, person8 departs plane1 at city0, plane1 flies from city0 to city2 with fuel level fl1 to fl0 and person4 departs plane1 at city0", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "e82a9d7e-122f-4036-be9a-97331a7be1b6", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "plane1 zooms from city2 to city1 with fuel level fl2 to fl4, plane1 zooms from city2 to city0 with fuel level fl1 to fl3, plane1 zooms from city3 to city0 with fuel level fl0 to fl3, plane1 zooms from city1 to city3 with fuel level fl6 to fl0, plane1 zooms from city2 to city3 with fuel level fl1 to fl3, plane1 zooms from city1 to city2 with fuel level fl1 to fl5, plane1 zooms from city1 to city0 with fuel level fl4 to fl1, plane1 zooms from city3 to city0 with fuel level fl2 to fl4, plane1 flies from city0 to city2 with fuel level fl3 to fl6, plane1 flies from city0 to city1 with fuel level fl0 to fl3, plane1 zooms from city1 to city0 with fuel level fl6 to fl5, plane1 flies from city2 to city0 with fuel level fl1 to fl4, plane1 flies from city0 to city2 with fuel level fl0 to fl1, plane1 zooms from city2 to city3 with fuel level fl1 to fl5, plane1 zooms from city1 to city3 with fuel level fl2 to fl6, plane1 zooms from city3 to city0 with fuel level fl3 to fl1, plane1 zooms from city0 to city3 with fuel level fl2 to fl6, plane1 zooms from city3 to city1 with fuel level fl4 to fl5, plane1 zooms from city2 to city0 with fuel level fl5 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl0, plane1 zooms from city0 to city1 with fuel level fl0 to fl5, plane1 flies from city0 to city2 with fuel level fl1 to fl4, plane1 flies from city3 to city1 with fuel level fl6 to fl2, plane1 zooms from city3 to city1 with fuel level fl6 to fl4, plane1 zooms from city1 to city3 with fuel level fl6 to fl2, plane1 zooms from city0 to city1 with fuel level fl5 to fl4, plane1 zooms from city0 to city2 with fuel level fl1 to fl4, plane1 zooms from city0 to city1 with fuel level fl6 to fl4, plane1 zooms from city3 to city0 with fuel level fl5 to fl3, plane1 zooms from city2 to city1 with fuel level fl6 to fl3, plane1 zooms from city1 to city2 with fuel level fl3 to fl2, plane1 zooms from city1 to city3 with fuel level fl2 to fl5, plane1 zooms from city0 to city3 with fuel level fl2 to fl0, plane1 zooms from city1 to city3 with fuel level fl0 to fl5, plane1 flies from city0 to city3 with fuel level fl2 to fl3, plane1 zooms from city1 to city0 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl2 to fl0, plane1 zooms from city1 to city0 with fuel level fl0 to fl2, plane1 flies from city0 to city3 with fuel level fl1 to fl6, plane1 zooms from city1 to city2 with fuel level fl0 to fl5, plane1 flies from city1 to city0 with fuel level fl1 to fl3, plane1 zooms from city2 to city1 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl4 to fl2, plane1 zooms from city1 to city2 with fuel level fl1 to fl4, person3 boards plane1 at city1, plane1 zooms from city0 to city2 with fuel level fl6 to fl1, plane1 zooms from city0 to city1 with fuel level fl0 to fl1, plane1 zooms from city3 to city1 with fuel level fl4 to fl2, plane1 zooms from city0 to city3 with fuel level fl4 to fl1, plane1 zooms from city3 to city1 with fuel level fl1 to fl6, plane1 zooms from city2 to city1 with fuel level fl2 to fl4, plane1 zooms from city3 to city0 with fuel level fl4 to fl1, plane1 zooms from city0 to city2 with fuel level fl6 to fl2, plane1 zooms from city3 to city1 with fuel level fl4 to fl1, plane1 zooms from city2 to city0 with fuel level fl3 to fl5, plane1 zooms from city0 to city2 with fuel level fl4 to fl1, plane1 gets refueled at city1 with fuel level fl3 to fl0, plane1 zooms from city0 to city2 with fuel level fl0 to fl2, plane1 flies from city3 to city2 with fuel level fl1 to fl5, plane1 zooms from city2 to city3 with fuel level fl6 to fl4, plane1 zooms from city3 to city2 with fuel level fl0 to fl1, plane1 zooms from city2 to city3 with fuel level fl1 to fl4, plane1 zooms from city2 to city0 with fuel level fl4 to fl5, plane1 zooms from city2 to city1 with fuel level fl1 to fl2, plane1 zooms from city0 to city3 with fuel level fl3 to fl4, plane1 flies from city3 to city1 with fuel level fl0 to fl4, plane1 zooms from city2 to city1 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl5 to fl4, plane1 zooms from city1 to city3 with fuel level fl2 to fl5, plane1 flies from city0 to city2 with fuel level fl5 to fl1, plane1 zooms from city1 to city2 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl5 to fl2, plane1 zooms from city1 to city2 with fuel level fl1 to fl6, plane1 zooms from city2 to city1 with fuel level fl1 to fl5, plane1 gets refueled at city3 with fuel level fl0 to fl4, plane1 zooms from city0 to city1 with fuel level fl5 to fl1, plane1 flies from city0 to city2 with fuel level fl4 to fl1, plane1 flies from city2 to city3 with fuel level fl1 to fl0, plane1 flies from city2 to city1 with fuel level fl3 to fl1, plane1 zooms from city1 to city0 with fuel level fl3 to fl1, plane1 zooms from city2 to city1 with fuel level fl6 to fl2, plane1 zooms from city3 to city1 with fuel level fl3 to fl2, plane1 zooms from city0 to city1 with fuel level fl5 to fl4, plane1 flies from city2 to city0 with fuel level fl6 to fl5, plane1 zooms from city2 to city0 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl3 to fl1, plane1 zooms from city3 to city1 with fuel level fl2 to fl0, plane1 zooms from city0 to city1 with fuel level fl4 to fl0, plane1 zooms from city1 to city3 with fuel level fl2 to fl4, plane1 zooms from city2 to city3 with fuel level fl3 to fl0, plane1 zooms from city1 to city2 with fuel level fl2 to fl6, plane1 flies from city3 to city2 with fuel level fl0 to fl5, plane1 zooms from city1 to city2 with fuel level fl4 to fl2, plane1 zooms from city0 to city3 with fuel level fl0 to fl2, plane1 zooms from city1 to city0 with fuel level fl4 to fl2, plane1 zooms from city0 to city3 with fuel level fl2 to fl1, plane1 zooms from city1 to city2 with fuel level fl3 to fl2, plane1 zooms from city2 to city3 with fuel level fl0 to fl1, plane1 zooms from city2 to city0 with fuel level fl3 to fl0, plane1 zooms from city1 to city0 with fuel level fl2 to fl0, plane1 zooms from city1 to city3 with fuel level fl5 to fl0, plane1 zooms from city0 to city2 with fuel level fl6 to fl1, plane1 zooms from city2 to city3 with fuel level fl1 to fl0, plane1 zooms from city1 to city0 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl5 to fl0, plane1 zooms from city3 to city0 with fuel level fl5 to fl0, plane1 flies from city1 to city2 with fuel level fl0 to fl4, plane1 zooms from city0 to city2 with fuel level fl6 to fl3, plane1 zooms from city3 to city0 with fuel level fl4 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl2, plane1 zooms from city3 to city0 with fuel level fl4 to fl3, plane1 gets refueled at city2 with fuel level fl6 to fl2, plane1 zooms from city2 to city3 with fuel level fl2 to fl0, plane1 zooms from city1 to city2 with fuel level fl2 to fl5, plane1 zooms from city1 to city2 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl5 to fl4, plane1 flies from city0 to city1 with fuel level fl1 to fl2, plane1 flies from city3 to city2 with fuel level fl2 to fl0, plane1 zooms from city2 to city1 with fuel level fl3 to fl1, plane1 zooms from city0 to city1 with fuel level fl1 to fl5, plane1 zooms from city3 to city2 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl2 to fl3, plane1 zooms from city2 to city1 with fuel level fl1 to fl4, plane1 flies from city0 to city3 with fuel level fl5 to fl2, plane1 flies from city2 to city3 with fuel level fl0 to fl1, plane1 gets refueled at city2 with fuel level fl5 to fl0, plane1 zooms from city3 to city1 with fuel level fl3 to fl4, plane1 zooms from city3 to city2 with fuel level fl5 to fl0, plane1 zooms from city0 to city1 with fuel level fl2 to fl1, plane1 flies from city1 to city2 with fuel level fl0 to fl6, plane1 zooms from city0 to city1 with fuel level fl0 to fl2, plane1 flies from city3 to city2 with fuel level fl3 to fl0, plane1 gets refueled at city2 with fuel level fl2 to fl3, plane1 zooms from city2 to city0 with fuel level fl6 to fl4, plane1 zooms from city0 to city2 with fuel level fl2 to fl4, plane1 zooms from city3 to city0 with fuel level fl0 to fl5, plane1 zooms from city3 to city1 with fuel level fl1 to fl2, plane1 zooms from city3 to city2 with fuel level fl2 to fl5, plane1 zooms from city1 to city2 with fuel level fl6 to fl4, plane1 zooms from city0 to city1 with fuel level fl3 to fl6, plane1 zooms from city0 to city2 with fuel level fl2 to fl3, plane1 zooms from city3 to city1 with fuel level fl0 to fl4, plane1 zooms from city3 to city0 with fuel level fl1 to fl3, plane1 zooms from city1 to city3 with fuel level fl3 to fl2, plane1 flies from city1 to city3 with fuel level fl3 to fl6, plane1 zooms from city1 to city3 with fuel level fl6 to fl2, plane1 zooms from city0 to city2 with fuel level fl4 to fl3, plane1 zooms from city1 to city3 with fuel level fl1 to fl6, plane1 zooms from city1 to city2 with fuel level fl5 to fl1, plane1 zooms from city0 to city2 with fuel level fl5 to fl0, plane1 gets refueled at city3 with fuel level fl6 to fl3, plane1 zooms from city2 to city3 with fuel level fl4 to fl3, plane1 zooms from city2 to city1 with fuel level fl3 to fl6, plane1 zooms from city3 to city2 with fuel level fl5 to fl3, plane1 zooms from city2 to city1 with fuel level fl0 to fl4, plane1 flies from city1 to city2 with fuel level fl6 to fl1, plane1 flies from city0 to city2 with fuel level fl4 to fl2, plane1 zooms from city1 to city3 with fuel level fl0 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl0, plane1 zooms from city2 to city0 with fuel level fl3 to fl0, plane1 zooms from city3 to city1 with fuel level fl6 to fl1, plane1 zooms from city2 to city0 with fuel level fl4 to fl3, plane1 flies from city0 to city1 with fuel level fl0 to fl4, plane1 flies from city0 to city2 with fuel level fl5 to fl3, plane1 zooms from city3 to city2 with fuel level fl1 to fl0, plane1 zooms from city2 to city1 with fuel level fl2 to fl1, plane1 gets refueled at city0 with fuel level fl4 to fl2, plane1 zooms from city1 to city3 with fuel level fl6 to fl3, plane1 zooms from city0 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city3 with fuel level fl6 to fl3, plane1 flies from city1 to city3 with fuel level fl0 to fl4, plane1 zooms from city1 to city3 with fuel level fl1 to fl2, plane1 zooms from city0 to city1 with fuel level fl6 to fl3, plane1 zooms from city0 to city2 with fuel level fl5 to fl4, plane1 zooms from city3 to city1 with fuel level fl2 to fl5, plane1 zooms from city0 to city2 with fuel level fl5 to fl3, plane1 zooms from city1 to city3 with fuel level fl6 to fl2, plane1 flies from city1 to city0 with fuel level fl4 to fl2, plane1 zooms from city0 to city2 with fuel level fl0 to fl4, plane1 zooms from city3 to city2 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl4 to fl2, plane1 zooms from city3 to city0 with fuel level fl4 to fl6, plane1 flies from city1 to city2 with fuel level fl6 to fl5, plane1 zooms from city3 to city0 with fuel level fl0 to fl6, plane1 flies from city2 to city0 with fuel level fl0 to fl2, plane1 flies from city1 to city0 with fuel level fl4 to fl5, plane1 zooms from city3 to city0 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl6 to fl4, plane1 zooms from city2 to city3 with fuel level fl4 to fl0, plane1 zooms from city2 to city0 with fuel level fl2 to fl0, plane1 zooms from city3 to city0 with fuel level fl4 to fl3, plane1 zooms from city1 to city0 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl5 to fl1, plane1 zooms from city2 to city1 with fuel level fl3 to fl5, plane1 zooms from city2 to city0 with fuel level fl5 to fl2, plane1 zooms from city2 to city1 with fuel level fl5 to fl4, plane1 zooms from city0 to city1 with fuel level fl6 to fl5, plane1 zooms from city3 to city2 with fuel level fl4 to fl3, plane1 zooms from city3 to city0 with fuel level fl0 to fl5, plane1 zooms from city3 to city2 with fuel level fl5 to fl2, plane1 zooms from city2 to city3 with fuel level fl3 to fl0, plane1 zooms from city0 to city1 with fuel level fl4 to fl5, plane1 zooms from city2 to city1 with fuel level fl0 to fl5, plane1 zooms from city3 to city1 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl1 to fl0, plane1 zooms from city0 to city2 with fuel level fl4 to fl3, plane1 zooms from city1 to city3 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl1 to fl3, plane1 zooms from city1 to city2 with fuel level fl3 to fl1, person1 boards plane1 at city0, plane1 zooms from city0 to city3 with fuel level fl4 to fl2, plane1 flies from city3 to city0 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl1 to fl6, plane1 flies from city1 to city2 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl4 to fl1, plane1 zooms from city1 to city0 with fuel level fl6 to fl0, plane1 zooms from city0 to city2 with fuel level fl5 to fl2, plane1 flies from city0 to city2 with fuel level fl5 to fl4, plane1 flies from city2 to city0 with fuel level fl4 to fl3, plane1 zooms from city1 to city3 with fuel level fl2 to fl4, plane1 gets refueled at city0 with fuel level fl2 to fl1, plane1 flies from city2 to city3 with fuel level fl5 to fl4, plane1 zooms from city0 to city2 with fuel level fl6 to fl2, plane1 zooms from city0 to city1 with fuel level fl4 to fl5, plane1 zooms from city0 to city3 with fuel level fl1 to fl2, plane1 zooms from city0 to city1 with fuel level fl4 to fl3, plane1 zooms from city3 to city2 with fuel level fl4 to fl3, plane1 zooms from city0 to city3 with fuel level fl6 to fl2, plane1 zooms from city1 to city0 with fuel level fl6 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl3, plane1 zooms from city2 to city0 with fuel level fl2 to fl5, plane1 zooms from city2 to city3 with fuel level fl4 to fl0, plane1 zooms from city0 to city3 with fuel level fl5 to fl1, plane1 flies from city2 to city1 with fuel level fl6 to fl4, plane1 zooms from city2 to city3 with fuel level fl5 to fl4, plane1 zooms from city1 to city0 with fuel level fl6 to fl3, plane1 flies from city1 to city0 with fuel level fl4 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl0, plane1 zooms from city0 to city1 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl0 to fl4, plane1 zooms from city0 to city2 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl0 to fl3, plane1 flies from city3 to city0 with fuel level fl2 to fl3, plane1 flies from city3 to city0 with fuel level fl6 to fl3, plane1 zooms from city3 to city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl6 to fl0, plane1 flies from city0 to city1 with fuel level fl3 to fl1, plane1 zooms from city0 to city1 with fuel level fl3 to fl1, plane1 zooms from city2 to city1 with fuel level fl0 to fl4, plane1 flies from city1 to city3 with fuel level fl3 to fl1, plane1 zooms from city2 to city0 with fuel level fl5 to fl0, plane1 zooms from city2 to city3 with fuel level fl6 to fl3, plane1 zooms from city2 to city1 with fuel level fl4 to fl0, plane1 gets refueled at city2 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl2 to fl6, plane1 zooms from city3 to city2 with fuel level fl5 to fl6, plane1 zooms from city1 to city0 with fuel level fl2 to fl3, plane1 zooms from city0 to city3 with fuel level fl5 to fl0, plane1 zooms from city2 to city3 with fuel level fl2 to fl5, plane1 zooms from city0 to city3 with fuel level fl6 to fl1, plane1 zooms from city1 to city2 with fuel level fl2 to fl3, plane1 zooms from city0 to city1 with fuel level fl5 to fl4, plane1 flies from city2 to city0 with fuel level fl1 to fl5, plane1 flies from city0 to city1 with fuel level fl2 to fl6, plane1 zooms from city2 to city1 with fuel level fl1 to fl5, plane1 flies from city0 to city1 with fuel level fl6 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl0, plane1 flies from city1 to city3 with fuel level fl4 to fl1, plane1 zooms from city1 to city0 with fuel level fl2 to fl6, plane1 zooms from city2 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city0 with fuel level fl1 to fl5, plane1 zooms from city3 to city2 with fuel level fl1 to fl3, plane1 zooms from city2 to city0 with fuel level fl0 to fl5, plane1 zooms from city1 to city0 with fuel level fl1 to fl4, plane1 zooms from city1 to city2 with fuel level fl5 to fl2, person8 departs plane1 at city3, plane1 flies from city3 to city0 with fuel level fl2 to fl5, plane1 zooms from city2 to city1 with fuel level fl2 to fl0, plane1 zooms from city1 to city2 with fuel level fl0 to fl3, plane1 zooms from city2 to city0 with fuel level fl2 to fl6, plane1 zooms from city2 to city1 with fuel level fl2 to fl6, plane1 zooms from city3 to city1 with fuel level fl5 to fl3, plane1 flies from city1 to city3 with fuel level fl1 to fl5, plane1 zooms from city0 to city1 with fuel level fl1 to fl4, plane1 zooms from city2 to city3 with fuel level fl2 to fl4, plane1 zooms from city1 to city3 with fuel level fl0 to fl6, plane1 zooms from city0 to city3 with fuel level fl2 to fl3, plane1 zooms from city0 to city2 with fuel level fl2 to fl1, plane1 zooms from city0 to city3 with fuel level fl5 to fl6, plane1 zooms from city0 to city3 with fuel level fl6 to fl3, plane1 zooms from city2 to city3 with fuel level fl2 to fl1, plane1 zooms from city2 to city0 with fuel level fl1 to fl2, plane1 zooms from city1 to city3 with fuel level fl4 to fl3, plane1 zooms from city2 to city1 with fuel level fl1 to fl2, plane1 flies from city3 to city2 with fuel level fl0 to fl1, plane1 zooms from city3 to city0 with fuel level fl6 to fl1, plane1 flies from city3 to city1 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl0 to fl3, plane1 flies from city1 to city0 with fuel level fl2 to fl4, plane1 zooms from city3 to city1 with fuel level fl4 to fl1, plane1 zooms from city1 to city0 with fuel level fl6 to fl4, plane1 zooms from city0 to city3 with fuel level fl2 to fl5, plane1 zooms from city1 to city2 with fuel level fl1 to fl3, plane1 zooms from city0 to city2 with fuel level fl1 to fl0, plane1 flies from city3 to city2 with fuel level fl6 to fl5, plane1 flies from city2 to city0 with fuel level fl6 to fl4, plane1 zooms from city2 to city1 with fuel level fl1 to fl3, plane1 zooms from city0 to city1 with fuel level fl0 to fl4, plane1 zooms from city3 to city2 with fuel level fl4 to fl5, person7 boards plane1 at city2, plane1 zooms from city1 to city2 with fuel level fl1 to fl2, plane1 zooms from city0 to city2 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl0 to fl6, plane1 zooms from city1 to city0 with fuel level fl5 to fl3, plane1 zooms from city3 to city2 with fuel level fl6 to fl2, plane1 flies from city3 to city1 with fuel level fl0 to fl6, plane1 flies from city2 to city1 with fuel level fl4 to fl2, plane1 gets refueled at city3 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl1 to fl2, plane1 zooms from city3 to city2 with fuel level fl6 to fl1, plane1 zooms from city1 to city2 with fuel level fl4 to fl3, plane1 zooms from city0 to city1 with fuel level fl5 to fl3, plane1 zooms from city0 to city3 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl6 to fl3, plane1 zooms from city2 to city0 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl2 to fl5, plane1 gets refueled at city3 with fuel level fl4 to fl1, plane1 flies from city3 to city2 with fuel level fl3 to fl5, plane1 zooms from city0 to city1 with fuel level fl4 to fl0, plane1 flies from city0 to city1 with fuel level fl5 to fl2, plane1 gets refueled at city0 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl6 to fl0, plane1 zooms from city2 to city0 with fuel level fl2 to fl3, plane1 zooms from city1 to city0 with fuel level fl3 to fl4, plane1 zooms from city2 to city3 with fuel level fl1 to fl0, plane1 zooms from city3 to city0 with fuel level fl3 to fl0, plane1 zooms from city2 to city3 with fuel level fl2 to fl5, plane1 zooms from city1 to city2 with fuel level fl4 to fl6, plane1 zooms from city2 to city0 with fuel level fl3 to fl1, plane1 zooms from city3 to city0 with fuel level fl5 to fl4, plane1 zooms from city2 to city1 with fuel level fl5 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl4, plane1 zooms from city0 to city1 with fuel level fl0 to fl4, plane1 gets refueled at city0 with fuel level fl3 to fl1, plane1 zooms from city3 to city1 with fuel level fl0 to fl6, plane1 zooms from city1 to city0 with fuel level fl2 to fl4, plane1 zooms from city1 to city0 with fuel level fl6 to fl3, plane1 zooms from city2 to city0 with fuel level fl0 to fl1, plane1 flies from city1 to city0 with fuel level fl4 to fl1, plane1 flies from city0 to city1 with fuel level fl2 to fl0, plane1 zooms from city0 to city3 with fuel level fl6 to fl4, plane1 zooms from city3 to city2 with fuel level fl6 to fl0, plane1 zooms from city2 to city3 with fuel level fl6 to fl5, plane1 zooms from city1 to city0 with fuel level fl5 to fl4, plane1 zooms from city2 to city0 with fuel level fl5 to fl6, plane1 flies from city3 to city0 with fuel level fl5 to fl0, plane1 zooms from city0 to city3 with fuel level fl6 to fl0, plane1 zooms from city2 to city0 with fuel level fl6 to fl0, person2 boards plane1 at city2, plane1 zooms from city1 to city2 with fuel level fl1 to fl3, plane1 zooms from city0 to city2 with fuel level fl3 to fl2, plane1 zooms from city1 to city2 with fuel level fl0 to fl6, plane1 zooms from city2 to city0 with fuel level fl0 to fl2, plane1 flies from city0 to city1 with fuel level fl3 to fl0, plane1 flies from city2 to city1 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl5 to fl3, plane1 zooms from city2 to city0 with fuel level fl2 to fl6, plane1 zooms from city1 to city2 with fuel level fl5 to fl0, plane1 zooms from city0 to city2 with fuel level fl0 to fl1, plane1 flies from city0 to city3 with fuel level fl0 to fl2, plane1 gets refueled at city1 with fuel level fl0 to fl4, plane1 zooms from city1 to city0 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl0 to fl4, plane1 zooms from city1 to city3 with fuel level fl5 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl5, plane1 gets refueled at city1 with fuel level fl5 to fl1, plane1 zooms from city0 to city2 with fuel level fl4 to fl2, plane1 zooms from city0 to city2 with fuel level fl4 to fl1, plane1 zooms from city0 to city1 with fuel level fl4 to fl5, plane1 zooms from city2 to city1 with fuel level fl3 to fl2, plane1 flies from city3 to city0 with fuel level fl6 to fl2, plane1 zooms from city3 to city1 with fuel level fl3 to fl1, plane1 zooms from city2 to city3 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl2 to fl3, plane1 zooms from city1 to city0 with fuel level fl3 to fl5, plane1 zooms from city1 to city0 with fuel level fl2 to fl3, plane1 zooms from city2 to city3 with fuel level fl3 to fl5, plane1 flies from city0 to city2 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl0 to fl5, plane1 gets refueled at city3 with fuel level fl2 to fl1, plane1 zooms from city3 to city1 with fuel level fl2 to fl4, plane1 zooms from city0 to city3 with fuel level fl6 to fl5, plane1 flies from city2 to city1 with fuel level fl1 to fl2, plane1 zooms from city1 to city3 with fuel level fl0 to fl2, plane1 zooms from city2 to city1 with fuel level fl6 to fl0, plane1 zooms from city2 to city0 with fuel level fl3 to fl5, plane1 zooms from city2 to city1 with fuel level fl6 to fl1, plane1 zooms from city3 to city2 with fuel level fl3 to fl5, plane1 zooms from city1 to city2 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl0, plane1 zooms from city3 to city1 with fuel level fl5 to fl2, plane1 flies from city3 to city2 with fuel level fl2 to fl1, plane1 zooms from city0 to city2 with fuel level fl1 to fl0, plane1 zooms from city1 to city3 with fuel level fl5 to fl1, plane1 zooms from city0 to city1 with fuel level fl5 to fl1, plane1 zooms from city3 to city1 with fuel level fl0 to fl6, plane1 zooms from city1 to city2 with fuel level fl1 to fl2, plane1 zooms from city3 to city1 with fuel level fl1 to fl5, plane1 flies from city3 to city2 with fuel level fl5 to fl4, plane1 zooms from city3 to city1 with fuel level fl6 to fl0, plane1 zooms from city0 to city1 with fuel level fl1 to fl2, plane1 flies from city2 to city0 with fuel level fl6 to fl0, plane1 zooms from city1 to city2 with fuel level fl6 to fl4, plane1 flies from city2 to city3 with fuel level fl1 to fl3, plane1 flies from city0 to city3 with fuel level fl3 to fl1, plane1 zooms from city1 to city0 with fuel level fl3 to fl1, person2 boards plane1 at city1, plane1 zooms from city3 to city1 with fuel level fl2 to fl6, plane1 zooms from city0 to city1 with fuel level fl4 to fl6, plane1 zooms from city3 to city2 with fuel level fl4 to fl2, plane1 flies from city0 to city3 with fuel level fl5 to fl4, plane1 zooms from city2 to city0 with fuel level fl4 to fl2, plane1 flies from city0 to city3 with fuel level fl1 to fl5, plane1 zooms from city0 to city2 with fuel level fl4 to fl6, plane1 zooms from city3 to city1 with fuel level fl3 to fl4, plane1 zooms from city2 to city1 with fuel level fl4 to fl5, plane1 zooms from city3 to city2 with fuel level fl0 to fl1, plane1 zooms from city2 to city0 with fuel level fl4 to fl1, plane1 gets refueled at city1 with fuel level fl2 to fl4, plane1 zooms from city3 to city1 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl1 to fl4, plane1 zooms from city3 to city0 with fuel level fl4 to fl1, plane1 zooms from city1 to city2 with fuel level fl2 to fl6, plane1 flies from city2 to city1 with fuel level fl4 to fl0, plane1 zooms from city1 to city2 with fuel level fl2 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl5, person8 departs plane1 at city1, plane1 flies from city3 to city1 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl2 to fl3, plane1 zooms from city3 to city2 with fuel level fl6 to fl5, plane1 zooms from city1 to city0 with fuel level fl1 to fl4, plane1 zooms from city2 to city1 with fuel level fl1 to fl6, plane1 zooms from city0 to city1 with fuel level fl2 to fl5, plane1 zooms from city3 to city1 with fuel level fl0 to fl2, plane1 zooms from city3 to city1 with fuel level fl2 to fl3, plane1 zooms from city2 to city3 with fuel level fl2 to fl6, plane1 zooms from city0 to city3 with fuel level fl6 to fl0, plane1 zooms from city0 to city1 with fuel level fl4 to fl1, plane1 zooms from city2 to city1 with fuel level fl5 to fl1, plane1 zooms from city0 to city3 with fuel level fl6 to fl0, plane1 flies from city3 to city2 with fuel level fl4 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl5, plane1 zooms from city3 to city1 with fuel level fl3 to fl5, plane1 zooms from city2 to city1 with fuel level fl4 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl3, plane1 zooms from city2 to city1 with fuel level fl2 to fl1, plane1 zooms from city1 to city0 with fuel level fl2 to fl3, plane1 flies from city2 to city1 with fuel level fl3 to fl0, plane1 zooms from city0 to city2 with fuel level fl1 to fl6, plane1 zooms from city0 to city2 with fuel level fl1 to fl0, plane1 gets refueled at city2 with fuel level fl0 to fl5, plane1 zooms from city2 to city0 with fuel level fl3 to fl4, plane1 zooms from city2 to city0 with fuel level fl3 to fl0, plane1 zooms from city0 to city1 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl5 to fl3, plane1 zooms from city3 to city2 with fuel level fl1 to fl2, plane1 zooms from city1 to city3 with fuel level fl1 to fl6, plane1 zooms from city2 to city3 with fuel level fl5 to fl6, plane1 zooms from city0 to city2 with fuel level fl4 to fl5, plane1 flies from city0 to city1 with fuel level fl2 to fl4, plane1 zooms from city1 to city3 with fuel level fl4 to fl1, plane1 zooms from city0 to city2 with fuel level fl3 to fl2, plane1 zooms from city1 to city3 with fuel level fl0 to fl4, plane1 zooms from city1 to city0 with fuel level fl6 to fl1, plane1 zooms from city3 to city0 with fuel level fl3 to fl0, plane1 zooms from city3 to city2 with fuel level fl6 to fl2, plane1 zooms from city2 to city3 with fuel level fl0 to fl3, plane1 flies from city2 to city3 with fuel level fl4 to fl3, plane1 gets refueled at city0 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl2 to fl4, plane1 zooms from city2 to city0 with fuel level fl6 to fl3, plane1 zooms from city0 to city1 with fuel level fl3 to fl2, plane1 zooms from city2 to city3 with fuel level fl2 to fl5, plane1 zooms from city1 to city2 with fuel level fl5 to fl3, plane1 zooms from city2 to city3 with fuel level fl0 to fl1, plane1 zooms from city3 to city2 with fuel level fl1 to fl6, plane1 zooms from city1 to city2 with fuel level fl1 to fl3, plane1 flies from city3 to city0 with fuel level fl0 to fl6, plane1 gets refueled at city2 with fuel level fl6 to fl4, plane1 zooms from city0 to city1 with fuel level fl2 to fl5, plane1 flies from city1 to city2 with fuel level fl3 to fl5, plane1 zooms from city2 to city1 with fuel level fl1 to fl2, person2 boards plane1 at city3, plane1 zooms from city2 to city0 with fuel level fl5 to fl0, plane1 zooms from city3 to city2 with fuel level fl3 to fl2, plane1 zooms from city2 to city0 with fuel level fl1 to fl0, plane1 zooms from city2 to city0 with fuel level fl3 to fl0, plane1 zooms from city2 to city0 with fuel level fl6 to fl2, plane1 zooms from city0 to city3 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl2 to fl3, plane1 zooms from city2 to city0 with fuel level fl6 to fl0, plane1 zooms from city3 to city2 with fuel level fl3 to fl0, plane1 zooms from city3 to city0 with fuel level fl3 to fl2, plane1 flies from city3 to city0 with fuel level fl0 to fl2, plane1 zooms from city2 to city1 with fuel level fl1 to fl0, plane1 flies from city3 to city0 with fuel level fl4 to fl0, plane1 zooms from city2 to city1 with fuel level fl0 to fl4, plane1 zooms from city3 to city1 with fuel level fl6 to fl5, plane1 flies from city1 to city0 with fuel level fl2 to fl6, plane1 zooms from city1 to city2 with fuel level fl5 to fl6, plane1 flies from city1 to city0 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl6 to fl2, plane1 zooms from city2 to city1 with fuel level fl2 to fl5, plane1 flies from city2 to city0 with fuel level fl6 to fl2, person7 boards plane1 at city1, plane1 zooms from city3 to city1 with fuel level fl3 to fl1, plane1 gets refueled at city2 with fuel level fl6 to fl5, plane1 zooms from city1 to city2 with fuel level fl0 to fl1, plane1 zooms from city0 to city2 with fuel level fl3 to fl0, plane1 zooms from city0 to city3 with fuel level fl5 to fl1, plane1 zooms from city2 to city3 with fuel level fl2 to fl5, plane1 zooms from city0 to city2 with fuel level fl2 to fl5, plane1 zooms from city0 to city1 with fuel level fl6 to fl3, plane1 zooms from city0 to city2 with fuel level fl4 to fl3, plane1 flies from city2 to city1 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl4 to fl6, plane1 flies from city2 to city1 with fuel level fl0 to fl6, plane1 zooms from city3 to city2 with fuel level fl0 to fl2, plane1 zooms from city2 to city3 with fuel level fl0 to fl2, plane1 zooms from city2 to city0 with fuel level fl2 to fl5, plane1 zooms from city1 to city0 with fuel level fl6 to fl4, plane1 zooms from city3 to city2 with fuel level fl1 to fl3, plane1 zooms from city3 to city1 with fuel level fl0 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl5, plane1 zooms from city2 to city1 with fuel level fl0 to fl5, plane1 zooms from city2 to city3 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl1 to fl6, plane1 zooms from city3 to city0 with fuel level fl3 to fl1, plane1 zooms from city3 to city0 with fuel level fl1 to fl3, plane1 flies from city2 to city0 with fuel level fl4 to fl6, plane1 gets refueled at city3 with fuel level fl0 to fl2, plane1 zooms from city0 to city1 with fuel level fl5 to fl1, plane1 zooms from city3 to city0 with fuel level fl2 to fl6, plane1 zooms from city3 to city2 with fuel level fl6 to fl4, plane1 zooms from city1 to city2 with fuel level fl6 to fl3, plane1 flies from city2 to city0 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl6 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl3, plane1 zooms from city2 to city1 with fuel level fl4 to fl1, plane1 zooms from city0 to city3 with fuel level fl1 to fl6, plane1 zooms from city2 to city3 with fuel level fl1 to fl5, plane1 zooms from city0 to city3 with fuel level fl6 to fl0, plane1 flies from city3 to city1 with fuel level fl2 to fl5, plane1 flies from city1 to city3 with fuel level fl5 to fl6, plane1 flies from city2 to city1 with fuel level fl0 to fl4, plane1 zooms from city2 to city1 with fuel level fl1 to fl5, plane1 zooms from city3 to city2 with fuel level fl5 to fl2, plane1 zooms from city0 to city3 with fuel level fl0 to fl6, plane1 zooms from city0 to city3 with fuel level fl6 to fl1, plane1 flies from city3 to city1 with fuel level fl2 to fl4, plane1 zooms from city3 to city1 with fuel level fl5 to fl2, plane1 flies from city0 to city2 with fuel level fl3 to fl1, plane1 zooms from city0 to city1 with fuel level fl6 to fl2, plane1 zooms from city3 to city1 with fuel level fl4 to fl2, plane1 zooms from city2 to city0 with fuel level fl2 to fl0, plane1 zooms from city2 to city0 with fuel level fl2 to fl6, plane1 zooms from city0 to city3 with fuel level fl1 to fl0, plane1 zooms from city3 to city2 with fuel level fl3 to fl4, plane1 zooms from city0 to city1 with fuel level fl6 to fl1, plane1 zooms from city2 to city0 with fuel level fl1 to fl3, plane1 flies from city0 to city1 with fuel level fl0 to fl1, plane1 zooms from city0 to city1 with fuel level fl1 to fl3, plane1 flies from city1 to city2 with fuel level fl0 to fl3, plane1 zooms from city3 to city0 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl5 to fl6, plane1 zooms from city1 to city2 with fuel level fl0 to fl5, plane1 zooms from city1 to city3 with fuel level fl1 to fl4, plane1 zooms from city1 to city3 with fuel level fl0 to fl4, plane1 gets refueled at city1 with fuel level fl2 to fl6, plane1 zooms from city0 to city2 with fuel level fl3 to fl5, plane1 zooms from city3 to city0 with fuel level fl4 to fl0, plane1 flies from city1 to city0 with fuel level fl6 to fl5, plane1 zooms from city1 to city2 with fuel level fl5 to fl2, plane1 zooms from city1 to city0 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl2 to fl4, plane1 zooms from city2 to city3 with fuel level fl0 to fl6, plane1 zooms from city1 to city0 with fuel level fl4 to fl6, plane1 gets refueled at city1 with fuel level fl5 to fl0, plane1 zooms from city2 to city3 with fuel level fl6 to fl4, plane1 zooms from city2 to city0 with fuel level fl3 to fl0, plane1 zooms from city2 to city3 with fuel level fl0 to fl4, plane1 zooms from city1 to city3 with fuel level fl0 to fl2, plane1 zooms from city1 to city0 with fuel level fl2 to fl5, plane1 zooms from city1 to city3 with fuel level fl5 to fl4, plane1 zooms from city3 to city2 with fuel level fl3 to fl1, plane1 flies from city0 to city1 with fuel level fl0 to fl5, plane1 zooms from city1 to city2 with fuel level fl0 to fl2, plane1 zooms from city1 to city3 with fuel level fl6 to fl1, plane1 flies from city2 to city0 with fuel level fl1 to fl3, plane1 flies from city1 to city2 with fuel level fl1 to fl5, plane1 zooms from city3 to city2 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl2 to fl5, plane1 flies from city1 to city2 with fuel level fl6 to fl4, plane1 flies from city0 to city3 with fuel level fl2 to fl5, plane1 flies from city0 to city1 with fuel level fl6 to fl0, plane1 zooms from city3 to city2 with fuel level fl3 to fl0, plane1 zooms from city2 to city3 with fuel level fl3 to fl5, plane1 zooms from city3 to city0 with fuel level fl0 to fl2, plane1 zooms from city0 to city1 with fuel level fl5 to fl3, plane1 zooms from city1 to city0 with fuel level fl5 to fl0, plane1 zooms from city1 to city3 with fuel level fl6 to fl5, plane1 zooms from city1 to city2 with fuel level fl1 to fl0, plane1 zooms from city1 to city3 with fuel level fl1 to fl5, plane1 zooms from city3 to city0 with fuel level fl2 to fl5, plane1 gets refueled at city2 with fuel level fl4 to fl3, plane1 zooms from city3 to city2 with fuel level fl0 to fl3, plane1 zooms from city0 to city3 with fuel level fl4 to fl3, plane1 zooms from city2 to city3 with fuel level fl0 to fl2, plane1 zooms from city3 to city0 with fuel level fl2 to fl6, plane1 zooms from city1 to city0 with fuel level fl5 to fl6, plane1 zooms from city0 to city1 with fuel level fl1 to fl6, plane1 zooms from city0 to city3 with fuel level fl6 to fl1, plane1 flies from city2 to city0 with fuel level fl2 to fl6, plane1 zooms from city2 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city0 with fuel level fl4 to fl5, plane1 zooms from city1 to city3 with fuel level fl5 to fl0, person1 boards plane1 at city3, plane1 flies from city0 to city2 with fuel level fl0 to fl6, plane1 flies from city2 to city1 with fuel level fl1 to fl0, plane1 flies from city0 to city3 with fuel level fl6 to fl4, plane1 zooms from city2 to city3 with fuel level fl1 to fl6, person6 boards plane1 at city3, plane1 zooms from city1 to city0 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl1, plane1 zooms from city2 to city3 with fuel level fl4 to fl1, plane1 zooms from city1 to city2 with fuel level fl6 to fl3, plane1 zooms from city1 to city3 with fuel level fl0 to fl2, plane1 zooms from city0 to city1 with fuel level fl0 to fl5, plane1 gets refueled at city0 with fuel level fl1 to fl6, plane1 flies from city1 to city2 with fuel level fl1 to fl3, plane1 zooms from city1 to city2 with fuel level fl1 to fl6, plane1 zooms from city3 to city1 with fuel level fl3 to fl0, plane1 zooms from city3 to city1 with fuel level fl0 to fl2, plane1 zooms from city2 to city3 with fuel level fl1 to fl5, plane1 zooms from city2 to city1 with fuel level fl2 to fl5, plane1 zooms from city3 to city0 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl2 to fl1, plane1 flies from city3 to city0 with fuel level fl2 to fl4, plane1 zooms from city1 to city3 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl1 to fl2, plane1 flies from city1 to city2 with fuel level fl4 to fl5, plane1 zooms from city0 to city3 with fuel level fl5 to fl1, plane1 zooms from city3 to city0 with fuel level fl0 to fl2, plane1 zooms from city1 to city2 with fuel level fl0 to fl2, plane1 zooms from city1 to city0 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl6 to fl2, plane1 zooms from city3 to city1 with fuel level fl5 to fl3, plane1 zooms from city1 to city2 with fuel level fl2 to fl0, plane1 zooms from city1 to city2 with fuel level fl3 to fl0, plane1 zooms from city3 to city0 with fuel level fl6 to fl2, plane1 flies from city0 to city2 with fuel level fl2 to fl5, plane1 zooms from city2 to city0 with fuel level fl2 to fl3, plane1 zooms from city1 to city2 with fuel level fl5 to fl6, plane1 flies from city0 to city1 with fuel level fl4 to fl5, plane1 zooms from city1 to city2 with fuel level fl2 to fl6, plane1 zooms from city2 to city1 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl3 to fl4, plane1 zooms from city2 to city1 with fuel level fl0 to fl1, plane1 zooms from city0 to city1 with fuel level fl3 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl3, plane1 zooms from city3 to city1 with fuel level fl3 to fl4, plane1 zooms from city1 to city0 with fuel level fl3 to fl4, plane1 zooms from city0 to city2 with fuel level fl2 to fl5, plane1 zooms from city0 to city1 with fuel level fl4 to fl0, plane1 zooms from city3 to city0 with fuel level fl1 to fl2, plane1 zooms from city3 to city0 with fuel level fl6 to fl1, plane1 flies from city1 to city3 with fuel level fl3 to fl0, plane1 zooms from city2 to city1 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl4 to fl5, plane1 zooms from city2 to city1 with fuel level fl3 to fl2, plane1 zooms from city0 to city2 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl5 to fl2, plane1 flies from city1 to city3 with fuel level fl6 to fl3, plane1 zooms from city3 to city0 with fuel level fl4 to fl1, plane1 zooms from city3 to city2 with fuel level fl6 to fl5, plane1 zooms from city3 to city0 with fuel level fl3 to fl6, plane1 zooms from city3 to city1 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl3 to fl4, plane1 zooms from city0 to city3 with fuel level fl5 to fl6, plane1 flies from city0 to city2 with fuel level fl4 to fl3, plane1 zooms from city2 to city3 with fuel level fl0 to fl6, plane1 zooms from city0 to city2 with fuel level fl0 to fl4, plane1 zooms from city0 to city2 with fuel level fl0 to fl6, plane1 zooms from city0 to city2 with fuel level fl2 to fl6, plane1 zooms from city0 to city1 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl1 to fl0, plane1 flies from city2 to city0 with fuel level fl2 to fl1, plane1 flies from city2 to city3 with fuel level fl4 to fl2, plane1 zooms from city2 to city1 with fuel level fl4 to fl2, plane1 zooms from city1 to city2 with fuel level fl0 to fl2, plane1 zooms from city0 to city1 with fuel level fl4 to fl2, plane1 zooms from city3 to city0 with fuel level fl3 to fl1, plane1 zooms from city1 to city0 with fuel level fl3 to fl1, plane1 zooms from city1 to city3 with fuel level fl1 to fl2, plane1 gets refueled at city3 with fuel level fl0 to fl5, plane1 zooms from city0 to city2 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl6 to fl0, plane1 zooms from city3 to city2 with fuel level fl2 to fl6, plane1 zooms from city0 to city2 with fuel level fl2 to fl5, person7 boards plane1 at city0, plane1 zooms from city0 to city2 with fuel level fl6 to fl5, plane1 zooms from city3 to city2 with fuel level fl5 to fl4, plane1 zooms from city3 to city0 with fuel level fl3 to fl5, plane1 zooms from city3 to city2 with fuel level fl5 to fl3, plane1 zooms from city3 to city0 with fuel level fl0 to fl3, plane1 zooms from city0 to city2 with fuel level fl2 to fl0, plane1 zooms from city2 to city1 with fuel level fl5 to fl2, plane1 gets refueled at city0 with fuel level fl6 to fl4, plane1 flies from city0 to city3 with fuel level fl4 to fl3, plane1 zooms from city3 to city0 with fuel level fl4 to fl2, plane1 flies from city3 to city1 with fuel level fl0 to fl5, plane1 gets refueled at city2 with fuel level fl2 to fl6, plane1 flies from city3 to city2 with fuel level fl3 to fl6, plane1 zooms from city0 to city2 with fuel level fl3 to fl4, plane1 zooms from city2 to city0 with fuel level fl2 to fl4, plane1 flies from city2 to city1 with fuel level fl5 to fl1, plane1 zooms from city1 to city0 with fuel level fl4 to fl0, plane1 zooms from city3 to city1 with fuel level fl5 to fl3, plane1 zooms from city3 to city2 with fuel level fl6 to fl5, plane1 zooms from city3 to city0 with fuel level fl3 to fl4, plane1 zooms from city0 to city2 with fuel level fl5 to fl4, plane1 gets refueled at city1 with fuel level fl1 to fl6, plane1 zooms from city2 to city0 with fuel level fl3 to fl6, plane1 zooms from city0 to city1 with fuel level fl1 to fl6, plane1 zooms from city2 to city1 with fuel level fl4 to fl2, plane1 zooms from city3 to city1 with fuel level fl6 to fl1, plane1 zooms from city2 to city0 with fuel level fl6 to fl3, plane1 zooms from city3 to city1 with fuel level fl0 to fl4, plane1 zooms from city1 to city2 with fuel level fl1 to fl0, plane1 zooms from city0 to city2 with fuel level fl2 to fl0, plane1 flies from city3 to city0 with fuel level fl0 to fl5, plane1 gets refueled at city3 with fuel level fl3 to fl1, plane1 zooms from city1 to city3 with fuel level fl2 to fl1, plane1 flies from city3 to city0 with fuel level fl6 to fl4, plane1 zooms from city3 to city0 with fuel level fl6 to fl3, plane1 zooms from city3 to city1 with fuel level fl4 to fl5, plane1 zooms from city3 to city0 with fuel level fl0 to fl5, plane1 zooms from city1 to city2 with fuel level fl1 to fl2, plane1 zooms from city2 to city0 with fuel level fl3 to fl5, plane1 zooms from city2 to city0 with fuel level fl4 to fl6, person6 departs plane1 at city1, plane1 zooms from city3 to city0 with fuel level fl3 to fl1, plane1 flies from city1 to city0 with fuel level fl0 to fl3, plane1 flies from city3 to city2 with fuel level fl2 to fl3, plane1 zooms from city1 to city3 with fuel level fl3 to fl2, plane1 gets refueled at city1 with fuel level fl0 to fl6, plane1 zooms from city3 to city0 with fuel level fl5 to fl6, plane1 zooms from city3 to city2 with fuel level fl6 to fl4, plane1 gets refueled at city3 with fuel level fl4 to fl2, plane1 zooms from city3 to city0 with fuel level fl4 to fl0, plane1 zooms from city1 to city2 with fuel level fl6 to fl1, plane1 zooms from city3 to city2 with fuel level fl1 to fl0, plane1 flies from city2 to city1 with fuel level fl5 to fl2, plane1 zooms from city3 to city2 with fuel level fl2 to fl3, plane1 zooms from city0 to city1 with fuel level fl5 to fl0, plane1 zooms from city1 to city3 with fuel level fl1 to fl3, plane1 zooms from city1 to city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl5 to fl0, plane1 zooms from city3 to city2 with fuel level fl2 to fl5, plane1 gets refueled at city0 with fuel level fl0 to fl3, plane1 zooms from city2 to city1 with fuel level fl5 to fl1, plane1 zooms from city1 to city0 with fuel level fl0 to fl4, plane1 zooms from city3 to city1 with fuel level fl0 to fl5, plane1 flies from city0 to city3 with fuel level fl4 to fl5, plane1 zooms from city1 to city2 with fuel level fl1 to fl3, plane1 zooms from city1 to city0 with fuel level fl6 to fl2, plane1 gets refueled at city0 with fuel level fl1 to fl5, plane1 zooms from city3 to city1 with fuel level fl1 to fl4, plane1 flies from city3 to city0 with fuel level fl2 to fl1, plane1 zooms from city1 to city3 with fuel level fl3 to fl0, plane1 zooms from city0 to city3 with fuel level fl3 to fl5, plane1 zooms from city3 to city1 with fuel level fl0 to fl5, plane1 zooms from city0 to city2 with fuel level fl4 to fl5, plane1 zooms from city3 to city1 with fuel level fl0 to fl4, plane1 zooms from city3 to city1 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl0 to fl3, plane1 zooms from city2 to city0 with fuel level fl5 to fl1, plane1 flies from city1 to city2 with fuel level fl3 to fl4, plane1 zooms from city2 to city3 with fuel level fl1 to fl6, plane1 zooms from city0 to city1 with fuel level fl3 to fl1, plane1 flies from city1 to city0 with fuel level fl1 to fl6, plane1 zooms from city0 to city3 with fuel level fl1 to fl0, plane1 flies from city1 to city0 with fuel level fl4 to fl6, plane1 zooms from city2 to city0 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl2 to fl4, plane1 zooms from city2 to city1 with fuel level fl0 to fl2, plane1 flies from city0 to city1 with fuel level fl6 to fl4, plane1 zooms from city0 to city2 with fuel level fl4 to fl3, plane1 zooms from city3 to city2 with fuel level fl4 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl1, plane1 zooms from city3 to city2 with fuel level fl6 to fl3, plane1 zooms from city1 to city0 with fuel level fl0 to fl1, plane1 flies from city1 to city0 with fuel level fl0 to fl4, plane1 zooms from city2 to city0 with fuel level fl5 to fl0, plane1 zooms from city2 to city1 with fuel level fl2 to fl1, plane1 flies from city2 to city3 with fuel level fl0 to fl2, plane1 zooms from city2 to city0 with fuel level fl2 to fl1, plane1 zooms from city0 to city2 with fuel level fl1 to fl0, plane1 zooms from city1 to city2 with fuel level fl4 to fl3, plane1 zooms from city0 to city1 with fuel level fl4 to fl3, plane1 flies from city3 to city2 with fuel level fl6 to fl3, plane1 zooms from city1 to city2 with fuel level fl4 to fl2, plane1 zooms from city0 to city3 with fuel level fl1 to fl0, plane1 gets refueled at city2 with fuel level fl5 to fl6, plane1 zooms from city1 to city0 with fuel level fl0 to fl4, plane1 zooms from city0 to city3 with fuel level fl0 to fl3, plane1 zooms from city0 to city1 with fuel level fl3 to fl4, plane1 zooms from city1 to city0 with fuel level fl5 to fl6, plane1 zooms from city0 to city3 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl2 to fl0, plane1 gets refueled at city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl6 to fl1, plane1 zooms from city1 to city3 with fuel level fl4 to fl1, plane1 zooms from city2 to city3 with fuel level fl6 to fl5, plane1 zooms from city1 to city3 with fuel level fl2 to fl4, plane1 zooms from city2 to city1 with fuel level fl1 to fl4, plane1 zooms from city2 to city1 with fuel level fl4 to fl0, plane1 gets refueled at city2 with fuel level fl1 to fl5, plane1 zooms from city3 to city2 with fuel level fl0 to fl2, plane1 flies from city3 to city0 with fuel level fl1 to fl6, plane1 zooms from city2 to city0 with fuel level fl5 to fl6, plane1 zooms from city2 to city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl0 to fl5, plane1 zooms from city3 to city2 with fuel level fl2 to fl3, plane1 zooms from city1 to city0 with fuel level fl6 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl4, plane1 zooms from city2 to city1 with fuel level fl3 to fl4, plane1 flies from city2 to city1 with fuel level fl5 to fl6, person8 boards plane1 at city3, plane1 flies from city1 to city0 with fuel level fl5 to fl3, plane1 zooms from city1 to city3 with fuel level fl3 to fl1, plane1 zooms from city1 to city0 with fuel level fl1 to fl0, plane1 zooms from city1 to city2 with fuel level fl3 to fl6, plane1 zooms from city1 to city0 with fuel level fl3 to fl4, plane1 flies from city3 to city1 with fuel level fl5 to fl1, plane1 zooms from city0 to city1 with fuel level fl6 to fl3, plane1 flies from city3 to city1 with fuel level fl5 to fl3, plane1 zooms from city0 to city2 with fuel level fl1 to fl4, plane1 zooms from city2 to city3 with fuel level fl5 to fl3, plane1 zooms from city0 to city2 with fuel level fl0 to fl4, plane1 flies from city2 to city0 with fuel level fl4 to fl5, plane1 zooms from city1 to city0 with fuel level fl1 to fl5, plane1 zooms from city2 to city3 with fuel level fl0 to fl2, person6 boards plane1 at city0, plane1 zooms from city2 to city0 with fuel level fl6 to fl4, plane1 zooms from city1 to city3 with fuel level fl2 to fl3, plane1 zooms from city0 to city2 with fuel level fl5 to fl2, plane1 zooms from city3 to city1 with fuel level fl4 to fl5, plane1 zooms from city2 to city0 with fuel level fl5 to fl3, plane1 zooms from city2 to city3 with fuel level fl4 to fl3, plane1 zooms from city0 to city2 with fuel level fl2 to fl3, plane1 flies from city2 to city1 with fuel level fl6 to fl2, plane1 flies from city3 to city1 with fuel level fl6 to fl4, plane1 flies from city0 to city1 with fuel level fl6 to fl1, plane1 zooms from city2 to city3 with fuel level fl4 to fl2, plane1 zooms from city0 to city3 with fuel level fl1 to fl6, plane1 zooms from city0 to city1 with fuel level fl5 to fl2, plane1 zooms from city0 to city1 with fuel level fl6 to fl1, plane1 zooms from city3 to city1 with fuel level fl3 to fl0, plane1 zooms from city3 to city1 with fuel level fl5 to fl2, plane1 zooms from city2 to city1 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl1 to fl5, plane1 zooms from city2 to city3 with fuel level fl0 to fl2, plane1 zooms from city1 to city3 with fuel level fl1 to fl5, plane1 zooms from city0 to city1 with fuel level fl1 to fl0, plane1 zooms from city0 to city3 with fuel level fl5 to fl4, person8 boards plane1 at city2, plane1 zooms from city0 to city2 with fuel level fl5 to fl0, plane1 zooms from city2 to city1 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl1 to fl4, plane1 zooms from city0 to city3 with fuel level fl4 to fl0, plane1 flies from city0 to city1 with fuel level fl5 to fl0, plane1 zooms from city1 to city2 with fuel level fl3 to fl4, plane1 zooms from city0 to city3 with fuel level fl6 to fl1, plane1 zooms from city1 to city0 with fuel level fl3 to fl4, plane1 zooms from city3 to city2 with fuel level fl3 to fl2, plane1 zooms from city2 to city0 with fuel level fl4 to fl3, plane1 zooms from city3 to city0 with fuel level fl3 to fl2, plane1 zooms from city1 to city2 with fuel level fl0 to fl6, plane1 zooms from city0 to city2 with fuel level fl3 to fl5, plane1 zooms from city3 to city2 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl1 to fl6, plane1 zooms from city0 to city3 with fuel level fl3 to fl6, plane1 zooms from city1 to city0 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl5 to fl2, plane1 zooms from city0 to city3 with fuel level fl5 to fl6, plane1 zooms from city0 to city1 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl0 to fl4, plane1 zooms from city2 to city3 with fuel level fl5 to fl4, plane1 zooms from city2 to city1 with fuel level fl1 to fl4, plane1 flies from city2 to city3 with fuel level fl5 to fl2, plane1 zooms from city0 to city1 with fuel level fl0 to fl5, plane1 zooms from city2 to city3 with fuel level fl6 to fl3, plane1 zooms from city2 to city0 with fuel level fl1 to fl6, plane1 zooms from city0 to city2 with fuel level fl2 to fl6, plane1 flies from city2 to city0 with fuel level fl6 to fl1, plane1 zooms from city3 to city2 with fuel level fl3 to fl1, plane1 zooms from city3 to city2 with fuel level fl4 to fl0, plane1 zooms from city1 to city0 with fuel level fl0 to fl4, plane1 gets refueled at city1 with fuel level fl4 to fl2, plane1 zooms from city2 to city1 with fuel level fl5 to fl6, plane1 flies from city3 to city1 with fuel level fl6 to fl5, plane1 zooms from city0 to city2 with fuel level fl0 to fl1, plane1 zooms from city2 to city3 with fuel level fl6 to fl2, plane1 zooms from city3 to city2 with fuel level fl2 to fl5, plane1 flies from city2 to city0 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl3 to fl1, plane1 zooms from city3 to city2 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl3 to fl1, plane1 zooms from city3 to city2 with fuel level fl4 to fl3, plane1 zooms from city1 to city2 with fuel level fl3 to fl6, plane1 zooms from city0 to city2 with fuel level fl5 to fl4, plane1 flies from city2 to city0 with fuel level fl3 to fl2, plane1 zooms from city1 to city3 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl2 to fl6, plane1 zooms from city2 to city3 with fuel level fl6 to fl3, plane1 zooms from city2 to city0 with fuel level fl3 to fl4, plane1 zooms from city0 to city3 with fuel level fl2 to fl5, plane1 flies from city1 to city3 with fuel level fl0 to fl3, plane1 zooms from city1 to city3 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl1 to fl3, plane1 zooms from city1 to city2 with fuel level fl4 to fl1, plane1 zooms from city2 to city3 with fuel level fl3 to fl5, plane1 flies from city3 to city2 with fuel level fl6 to fl2, plane1 zooms from city1 to city3 with fuel level fl1 to fl6, plane1 zooms from city1 to city0 with fuel level fl4 to fl5, plane1 zooms from city0 to city1 with fuel level fl0 to fl1, plane1 zooms from city3 to city1 with fuel level fl6 to fl0, plane1 zooms from city1 to city2 with fuel level fl0 to fl1, plane1 zooms from city0 to city2 with fuel level fl6 to fl4, plane1 flies from city3 to city1 with fuel level fl1 to fl5, plane1 zooms from city0 to city3 with fuel level fl3 to fl1, plane1 zooms from city0 to city3 with fuel level fl2 to fl0, plane1 zooms from city3 to city1 with fuel level fl2 to fl6, plane1 zooms from city2 to city3 with fuel level fl3 to fl1, plane1 zooms from city2 to city3 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl5 to fl4, plane1 zooms from city0 to city2 with fuel level fl1 to fl2, plane1 zooms from city3 to city0 with fuel level fl3 to fl1, plane1 flies from city1 to city0 with fuel level fl2 to fl3, plane1 zooms from city0 to city3 with fuel level fl6 to fl5, plane1 gets refueled at city1 with fuel level fl6 to fl5, plane1 zooms from city2 to city1 with fuel level fl4 to fl1, plane1 flies from city1 to city0 with fuel level fl5 to fl6, plane1 zooms from city3 to city1 with fuel level fl3 to fl0, plane1 zooms from city2 to city0 with fuel level fl4 to fl3, plane1 flies from city2 to city0 with fuel level fl0 to fl4, plane1 zooms from city3 to city0 with fuel level fl3 to fl5, plane1 zooms from city0 to city3 with fuel level fl2 to fl4, plane1 zooms from city3 to city2 with fuel level fl1 to fl4, plane1 zooms from city3 to city2 with fuel level fl3 to fl4, plane1 zooms from city2 to city1 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl1 to fl6, person3 boards plane1 at city3, plane1 zooms from city1 to city2 with fuel level fl3 to fl1, plane1 zooms from city3 to city2 with fuel level fl6 to fl1, plane1 zooms from city3 to city0 with fuel level fl0 to fl4, plane1 zooms from city0 to city3 with fuel level fl3 to fl5, plane1 flies from city1 to city0 with fuel level fl3 to fl5, plane1 zooms from city2 to city1 with fuel level fl5 to fl3, plane1 zooms from city0 to city3 with fuel level fl2 to fl6, plane1 zooms from city3 to city2 with fuel level fl3 to fl2, plane1 zooms from city2 to city3 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl6 to fl2, plane1 zooms from city0 to city1 with fuel level fl1 to fl2, plane1 flies from city0 to city3 with fuel level fl4 to fl0, plane1 zooms from city3 to city2 with fuel level fl5 to fl1, plane1 zooms from city0 to city3 with fuel level fl5 to fl0, plane1 zooms from city2 to city3 with fuel level fl6 to fl1, plane1 flies from city1 to city2 with fuel level fl2 to fl6, plane1 zooms from city0 to city3 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl0 to fl1, plane1 flies from city0 to city3 with fuel level fl3 to fl2, plane1 zooms from city2 to city1 with fuel level fl6 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl4 to fl5, plane1 zooms from city0 to city2 with fuel level fl1 to fl4, plane1 zooms from city1 to city0 with fuel level fl1 to fl5, plane1 zooms from city0 to city2 with fuel level fl4 to fl0, plane1 zooms from city2 to city1 with fuel level fl5 to fl3, plane1 zooms from city2 to city0 with fuel level fl6 to fl3, plane1 flies from city2 to city0 with fuel level fl3 to fl0, plane1 zooms from city2 to city3 with fuel level fl5 to fl0, plane1 zooms from city3 to city0 with fuel level fl6 to fl2, plane1 zooms from city1 to city0 with fuel level fl6 to fl5, plane1 flies from city1 to city3 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl2 to fl4, plane1 zooms from city0 to city1 with fuel level fl5 to fl0, plane1 zooms from city2 to city0 with fuel level fl3 to fl1, plane1 flies from city2 to city3 with fuel level fl2 to fl1, plane1 zooms from city0 to city1 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl1 to fl2, plane1 zooms from city0 to city1 with fuel level fl4 to fl2, plane1 zooms from city2 to city3 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl0 to fl3, plane1 flies from city1 to city2 with fuel level fl4 to fl2, plane1 zooms from city3 to city1 with fuel level fl0 to fl1, plane1 zooms from city3 to city1 with fuel level fl4 to fl2, plane1 flies from city0 to city3 with fuel level fl6 to fl5, plane1 zooms from city2 to city0 with fuel level fl6 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl0, plane1 zooms from city0 to city3 with fuel level fl6 to fl4, plane1 zooms from city3 to city1 with fuel level fl3 to fl6, plane1 zooms from city1 to city3 with fuel level fl6 to fl3, plane1 zooms from city3 to city2 with fuel level fl2 to fl1, plane1 zooms from city3 to city1 with fuel level fl5 to fl0, plane1 zooms from city1 to city0 with fuel level fl4 to fl0, plane1 zooms from city3 to city0 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl3 to fl0, plane1 zooms from city1 to city3 with fuel level fl0 to fl6, plane1 zooms from city3 to city0 with fuel level fl3 to fl4, plane1 zooms from city2 to city1 with fuel level fl0 to fl1, plane1 zooms from city2 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city2 with fuel level fl4 to fl3, plane1 zooms from city3 to city1 with fuel level fl2 to fl3, plane1 zooms from city2 to city3 with fuel level fl0 to fl4, plane1 flies from city2 to city3 with fuel level fl4 to fl5, plane1 zooms from city0 to city3 with fuel level fl6 to fl4, plane1 zooms from city1 to city0 with fuel level fl0 to fl6, plane1 zooms from city1 to city0 with fuel level fl3 to fl1, plane1 zooms from city2 to city0 with fuel level fl2 to fl4, plane1 zooms from city0 to city2 with fuel level fl4 to fl6, plane1 zooms from city0 to city2 with fuel level fl0 to fl1, plane1 flies from city2 to city0 with fuel level fl5 to fl2, plane1 zooms from city0 to city2 with fuel level fl2 to fl0, plane1 zooms from city3 to city0 with fuel level fl1 to fl4, plane1 zooms from city2 to city0 with fuel level fl5 to fl3, plane1 zooms from city0 to city2 with fuel level fl5 to fl1, plane1 gets refueled at city3 with fuel level fl3 to fl0, plane1 zooms from city3 to city1 with fuel level fl0 to fl1, plane1 zooms from city3 to city0 with fuel level fl4 to fl5, plane1 zooms from city1 to city3 with fuel level fl5 to fl3, plane1 zooms from city3 to city0 with fuel level fl0 to fl3, plane1 zooms from city3 to city1 with fuel level fl4 to fl1, plane1 zooms from city0 to city2 with fuel level fl5 to fl4, plane1 zooms from city1 to city3 with fuel level fl3 to fl6, plane1 zooms from city1 to city2 with fuel level fl3 to fl2, plane1 zooms from city1 to city3 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city3 with fuel level fl0 to fl4, plane1 zooms from city0 to city1 with fuel level fl2 to fl6, plane1 zooms from city3 to city1 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl5 to fl1, plane1 gets refueled at city1 with fuel level fl3 to fl4, plane1 flies from city1 to city0 with fuel level fl0 to fl2, plane1 flies from city0 to city3 with fuel level fl3 to fl6, plane1 flies from city0 to city3 with fuel level fl6 to fl0, person1 departs plane1 at city2, plane1 zooms from city2 to city3 with fuel level fl1 to fl2, plane1 zooms from city3 to city0 with fuel level fl6 to fl4, plane1 zooms from city1 to city3 with fuel level fl5 to fl1, plane1 zooms from city3 to city2 with fuel level fl0 to fl4, plane1 zooms from city3 to city2 with fuel level fl6 to fl3, plane1 zooms from city3 to city1 with fuel level fl6 to fl4, plane1 zooms from city3 to city1 with fuel level fl3 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl6, plane1 zooms from city1 to city0 with fuel level fl0 to fl3, plane1 zooms from city1 to city3 with fuel level fl3 to fl5, plane1 zooms from city3 to city2 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl6 to fl1, plane1 zooms from city1 to city3 with fuel level fl3 to fl5, plane1 zooms from city3 to city0 with fuel level fl0 to fl6, plane1 zooms from city3 to city1 with fuel level fl4 to fl6, plane1 zooms from city3 to city0 with fuel level fl2 to fl1, plane1 zooms from city1 to city0 with fuel level fl2 to fl3, plane1 zooms from city0 to city1 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl1 to fl5, plane1 zooms from city3 to city0 with fuel level fl4 to fl5, plane1 zooms from city2 to city3 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl2 to fl3, plane1 zooms from city3 to city1 with fuel level fl3 to fl5, plane1 zooms from city2 to city0 with fuel level fl6 to fl1, plane1 zooms from city1 to city2 with fuel level fl0 to fl3, plane1 flies from city1 to city2 with fuel level fl5 to fl1, plane1 zooms from city0 to city2 with fuel level fl5 to fl6, plane1 zooms from city0 to city1 with fuel level fl5 to fl6, plane1 zooms from city0 to city1 with fuel level fl5 to fl4, plane1 flies from city0 to city2 with fuel level fl5 to fl6, plane1 zooms from city0 to city1 with fuel level fl0 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl4, plane1 zooms from city0 to city3 with fuel level fl3 to fl4, plane1 zooms from city0 to city1 with fuel level fl0 to fl1, plane1 zooms from city3 to city2 with fuel level fl2 to fl4, plane1 flies from city0 to city3 with fuel level fl4 to fl1, plane1 zooms from city3 to city0 with fuel level fl4 to fl3, plane1 flies from city2 to city1 with fuel level fl2 to fl3, plane1 zooms from city2 to city1 with fuel level fl4 to fl6, plane1 zooms from city3 to city0 with fuel level fl6 to fl2, plane1 zooms from city3 to city0 with fuel level fl1 to fl6, plane1 zooms from city2 to city1 with fuel level fl5 to fl4, plane1 zooms from city0 to city1 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl2 to fl5, plane1 zooms from city1 to city3 with fuel level fl6 to fl2, plane1 zooms from city2 to city0 with fuel level fl6 to fl2, plane1 gets refueled at city1 with fuel level fl3 to fl1, plane1 zooms from city1 to city0 with fuel level fl5 to fl3, plane1 zooms from city1 to city3 with fuel level fl0 to fl1, plane1 zooms from city1 to city0 with fuel level fl4 to fl3, plane1 zooms from city1 to city2 with fuel level fl5 to fl4, plane1 zooms from city0 to city2 with fuel level fl6 to fl0, plane1 flies from city3 to city1 with fuel level fl0 to fl1, plane1 gets refueled at city3 with fuel level fl0 to fl1, plane1 zooms from city1 to city3 with fuel level fl5 to fl3, plane1 zooms from city0 to city3 with fuel level fl4 to fl0, plane1 flies from city0 to city3 with fuel level fl2 to fl0, plane1 zooms from city1 to city2 with fuel level fl2 to fl3, plane1 zooms from city0 to city2 with fuel level fl3 to fl1, plane1 zooms from city0 to city1 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl1 to fl6, plane1 zooms from city3 to city1 with fuel level fl1 to fl0, plane1 zooms from city1 to city3 with fuel level fl3 to fl0, plane1 flies from city1 to city0 with fuel level fl4 to fl3, plane1 zooms from city0 to city2 with fuel level fl4 to fl1, plane1 gets refueled at city3 with fuel level fl1 to fl6, plane1 zooms from city2 to city0 with fuel level fl6 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl3, plane1 zooms from city1 to city2 with fuel level fl3 to fl2, plane1 zooms from city2 to city0 with fuel level fl2 to fl5, plane1 gets refueled at city0 with fuel level fl3 to fl4, plane1 zooms from city2 to city3 with fuel level fl3 to fl2, plane1 zooms from city2 to city0 with fuel level fl6 to fl5, plane1 zooms from city0 to city1 with fuel level fl3 to fl6, plane1 zooms from city0 to city2 with fuel level fl6 to fl1, plane1 zooms from city2 to city0 with fuel level fl0 to fl4, plane1 zooms from city2 to city1 with fuel level fl6 to fl2, plane1 zooms from city3 to city2 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl2 to fl0, plane1 zooms from city1 to city2 with fuel level fl0 to fl4, plane1 zooms from city2 to city3 with fuel level fl4 to fl5, plane1 zooms from city0 to city2 with fuel level fl2 to fl0, plane1 zooms from city3 to city1 with fuel level fl2 to fl6, plane1 zooms from city0 to city2 with fuel level fl0 to fl3, plane1 zooms from city0 to city1 with fuel level fl6 to fl4, plane1 zooms from city2 to city3 with fuel level fl5 to fl6, plane1 zooms from city2 to city1 with fuel level fl5 to fl4, plane1 zooms from city1 to city0 with fuel level fl2 to fl1, plane1 zooms from city1 to city2 with fuel level fl2 to fl1, plane1 zooms from city1 to city0 with fuel level fl5 to fl2, plane1 zooms from city0 to city2 with fuel level fl2 to fl3, plane1 zooms from city3 to city0 with fuel level fl3 to fl6, plane1 zooms from city3 to city2 with fuel level fl6 to fl3, plane1 zooms from city2 to city1 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl5, plane1 flies from city0 to city2 with fuel level fl2 to fl0, plane1 zooms from city0 to city2 with fuel level fl5 to fl0, plane1 zooms from city3 to city2 with fuel level fl0 to fl4, plane1 zooms from city1 to city3 with fuel level fl4 to fl2, plane1 zooms from city2 to city1 with fuel level fl4 to fl5, plane1 zooms from city0 to city2 with fuel level fl0 to fl6, plane1 zooms from city1 to city3 with fuel level fl5 to fl3, plane1 gets refueled at city0 with fuel level fl0 to fl6, plane1 zooms from city3 to city0 with fuel level fl1 to fl2, plane1 gets refueled at city2 with fuel level fl2 to fl1, plane1 zooms from city1 to city0 with fuel level fl1 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl4, plane1 flies from city1 to city0 with fuel level fl2 to fl5, plane1 zooms from city1 to city0 with fuel level fl2 to fl0, plane1 zooms from city1 to city0 with fuel level fl0 to fl1, plane1 flies from city2 to city1 with fuel level fl2 to fl0, plane1 zooms from city2 to city3 with fuel level fl4 to fl1, plane1 zooms from city0 to city1 with fuel level fl0 to fl6, plane1 zooms from city2 to city1 with fuel level fl1 to fl2, plane1 zooms from city0 to city1 with fuel level fl6 to fl1, plane1 zooms from city0 to city3 with fuel level fl5 to fl3, plane1 flies from city2 to city3 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl2 to fl0, plane1 zooms from city0 to city2 with fuel level fl0 to fl5, plane1 zooms from city3 to city0 with fuel level fl3 to fl6, plane1 flies from city1 to city3 with fuel level fl1 to fl6, plane1 zooms from city2 to city1 with fuel level fl3 to fl6, plane1 zooms from city3 to city1 with fuel level fl2 to fl0, plane1 zooms from city3 to city2 with fuel level fl5 to fl1, plane1 zooms from city2 to city0 with fuel level fl4 to fl1, plane1 zooms from city1 to city3 with fuel level fl2 to fl6, plane1 flies from city0 to city3 with fuel level fl0 to fl4, plane1 zooms from city1 to city2 with fuel level fl1 to fl4, plane1 zooms from city0 to city3 with fuel level fl5 to fl1, plane1 gets refueled at city3 with fuel level fl5 to fl6, person8 boards plane1 at city0, plane1 flies from city3 to city1 with fuel level fl6 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl4, plane1 zooms from city3 to city0 with fuel level fl4 to fl3, plane1 zooms from city2 to city1 with fuel level fl5 to fl0, plane1 zooms from city0 to city2 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl3 to fl6, plane1 flies from city3 to city1 with fuel level fl5 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl6, plane1 zooms from city0 to city2 with fuel level fl2 to fl1, plane1 flies from city1 to city3 with fuel level fl0 to fl5, plane1 flies from city3 to city1 with fuel level fl5 to fl4, plane1 zooms from city1 to city0 with fuel level fl5 to fl0, plane1 zooms from city3 to city0 with fuel level fl2 to fl5, plane1 zooms from city1 to city0 with fuel level fl5 to fl3, person4 boards plane1 at city1, plane1 zooms from city2 to city1 with fuel level fl2 to fl4, plane1 zooms from city3 to city0 with fuel level fl3 to fl0, plane1 zooms from city2 to city0 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl1 to fl4, plane1 zooms from city3 to city0 with fuel level fl6 to fl3, plane1 zooms from city2 to city3 with fuel level fl0 to fl1, plane1 zooms from city2 to city1 with fuel level fl6 to fl3, plane1 zooms from city1 to city0 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl5 to fl2, plane1 flies from city1 to city3 with fuel level fl2 to fl4, plane1 zooms from city1 to city3 with fuel level fl1 to fl6, plane1 zooms from city3 to city2 with fuel level fl4 to fl0, plane1 zooms from city2 to city0 with fuel level fl5 to fl1, plane1 zooms from city0 to city3 with fuel level fl4 to fl3, plane1 zooms from city1 to city2 with fuel level fl6 to fl5, plane1 zooms from city1 to city3 with fuel level fl3 to fl5, plane1 zooms from city2 to city0 with fuel level fl6 to fl1, plane1 zooms from city0 to city2 with fuel level fl2 to fl1, plane1 zooms from city3 to city0 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl6 to fl0, plane1 zooms from city1 to city3 with fuel level fl6 to fl5, plane1 zooms from city2 to city1 with fuel level fl0 to fl6, plane1 zooms from city0 to city2 with fuel level fl2 to fl4, plane1 zooms from city2 to city1 with fuel level fl1 to fl4, plane1 zooms from city2 to city1 with fuel level fl2 to fl4, plane1 zooms from city3 to city1 with fuel level fl6 to fl5, plane1 zooms from city1 to city2 with fuel level fl4 to fl5, plane1 zooms from city2 to city0 with fuel level fl0 to fl6, plane1 zooms from city2 to city0 with fuel level fl1 to fl0, plane1 flies from city3 to city0 with fuel level fl3 to fl4, plane1 zooms from city3 to city0 with fuel level fl6 to fl5, plane1 zooms from city3 to city0 with fuel level fl4 to fl5, plane1 zooms from city3 to city2 with fuel level fl5 to fl6, plane1 zooms from city3 to city2 with fuel level fl3 to fl6, plane1 zooms from city0 to city1 with fuel level fl0 to fl2, plane1 zooms from city2 to city3 with fuel level fl0 to fl3, plane1 zooms from city2 to city1 with fuel level fl3 to fl5, plane1 zooms from city0 to city3 with fuel level fl4 to fl5, plane1 flies from city1 to city0 with fuel level fl2 to fl0, plane1 zooms from city1 to city0 with fuel level fl4 to fl6, plane1 gets refueled at city2 with fuel level fl3 to fl2, plane1 zooms from city2 to city0 with fuel level fl5 to fl0, plane1 zooms from city3 to city2 with fuel level fl0 to fl1, plane1 flies from city0 to city2 with fuel level fl6 to fl2, plane1 flies from city3 to city0 with fuel level fl5 to fl3, plane1 zooms from city0 to city2 with fuel level fl4 to fl1, plane1 flies from city1 to city0 with fuel level fl0 to fl5, plane1 zooms from city0 to city3 with fuel level fl6 to fl4, plane1 zooms from city1 to city3 with fuel level fl1 to fl2, plane1 zooms from city1 to city0 with fuel level fl2 to fl1, plane1 zooms from city0 to city3 with fuel level fl3 to fl0, plane1 zooms from city3 to city2 with fuel level fl3 to fl2, plane1 zooms from city0 to city1 with fuel level fl1 to fl2, plane1 flies from city2 to city0 with fuel level fl3 to fl1, plane1 flies from city1 to city3 with fuel level fl1 to fl3, plane1 zooms from city1 to city3 with fuel level fl1 to fl4, plane1 zooms from city0 to city1 with fuel level fl1 to fl4, plane1 zooms from city0 to city3 with fuel level fl1 to fl2, plane1 zooms from city1 to city2 with fuel level fl5 to fl1, plane1 zooms from city1 to city0 with fuel level fl0 to fl5, plane1 zooms from city2 to city0 with fuel level fl2 to fl1, person7 departs plane1 at city2, plane1 gets refueled at city0 with fuel level fl2 to fl6, plane1 zooms from city3 to city0 with fuel level fl5 to fl2, plane1 zooms from city0 to city2 with fuel level fl4 to fl0, plane1 zooms from city2 to city0 with fuel level fl1 to fl4, plane1 zooms from city2 to city1 with fuel level fl6 to fl4, plane1 zooms from city2 to city1 with fuel level fl0 to fl2, plane1 zooms from city2 to city0 with fuel level fl2 to fl3, plane1 flies from city3 to city2 with fuel level fl6 to fl4, plane1 zooms from city3 to city2 with fuel level fl5 to fl0, plane1 zooms from city2 to city1 with fuel level fl4 to fl3, person2 departs plane1 at city3, plane1 zooms from city3 to city0 with fuel level fl3 to fl6, plane1 flies from city0 to city2 with fuel level fl2 to fl6, plane1 flies from city2 to city3 with fuel level fl2 to fl6, person7 departs plane1 at city3, plane1 zooms from city0 to city1 with fuel level fl2 to fl6, plane1 zooms from city1 to city3 with fuel level fl6 to fl4, plane1 zooms from city3 to city1 with fuel level fl1 to fl3, plane1 zooms from city2 to city1 with fuel level fl3 to fl0, plane1 gets refueled at city2 with fuel level fl6 to fl0, plane1 gets refueled at city3 with fuel level fl2 to fl4, plane1 zooms from city0 to city1 with fuel level fl6 to fl1, plane1 zooms from city0 to city2 with fuel level fl1 to fl0, plane1 zooms from city1 to city3 with fuel level fl1 to fl2, plane1 zooms from city2 to city0 with fuel level fl2 to fl6, plane1 zooms from city3 to city2 with fuel level fl6 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl2, plane1 zooms from city1 to city0 with fuel level fl5 to fl3, plane1 zooms from city3 to city1 with fuel level fl5 to fl1, plane1 flies from city1 to city3 with fuel level fl3 to fl5, plane1 flies from city1 to city2 with fuel level fl2 to fl5, plane1 zooms from city0 to city1 with fuel level fl0 to fl5, plane1 zooms from city1 to city0 with fuel level fl6 to fl1, plane1 zooms from city2 to city3 with fuel level fl5 to fl3, plane1 gets refueled at city1 with fuel level fl5 to fl2, plane1 zooms from city1 to city2 with fuel level fl5 to fl4, plane1 zooms from city2 to city3 with fuel level fl0 to fl3, person7 boards plane1 at city3, plane1 zooms from city3 to city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city0 with fuel level fl6 to fl0, plane1 zooms from city2 to city0 with fuel level fl6 to fl5, person1 boards plane1 at city2, plane1 flies from city3 to city1 with fuel level fl4 to fl0, plane1 zooms from city0 to city1 with fuel level fl1 to fl5, plane1 zooms from city2 to city0 with fuel level fl1 to fl2, plane1 flies from city3 to city2 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl3 to fl4, plane1 flies from city1 to city3 with fuel level fl4 to fl3, plane1 zooms from city3 to city0 with fuel level fl5 to fl3, plane1 zooms from city2 to city0 with fuel level fl4 to fl5, plane1 zooms from city3 to city0 with fuel level fl0 to fl6, plane1 flies from city2 to city0 with fuel level fl4 to fl1, plane1 zooms from city2 to city0 with fuel level fl2 to fl6, plane1 zooms from city3 to city0 with fuel level fl3 to fl0, plane1 zooms from city3 to city0 with fuel level fl3 to fl0, plane1 flies from city1 to city2 with fuel level fl5 to fl4, plane1 flies from city2 to city0 with fuel level fl4 to fl0, plane1 zooms from city2 to city1 with fuel level fl3 to fl1, plane1 zooms from city1 to city3 with fuel level fl5 to fl1, plane1 gets refueled at city0 with fuel level fl2 to fl4, plane1 flies from city0 to city2 with fuel level fl2 to fl3, plane1 zooms from city3 to city2 with fuel level fl0 to fl4, plane1 zooms from city0 to city1 with fuel level fl5 to fl2, plane1 zooms from city2 to city3 with fuel level fl4 to fl5, plane1 zooms from city3 to city1 with fuel level fl1 to fl3, plane1 zooms from city2 to city0 with fuel level fl4 to fl6, plane1 zooms from city3 to city2 with fuel level fl6 to fl0, plane1 zooms from city0 to city1 with fuel level fl1 to fl3, plane1 zooms from city1 to city3 with fuel level fl6 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl2 to fl0, plane1 zooms from city1 to city0 with fuel level fl3 to fl6, plane1 zooms from city0 to city1 with fuel level fl2 to fl3, plane1 flies from city3 to city1 with fuel level fl5 to fl2, plane1 zooms from city3 to city2 with fuel level fl0 to fl5, plane1 zooms from city3 to city0 with fuel level fl1 to fl2, plane1 flies from city2 to city1 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl3 to fl1, plane1 zooms from city2 to city0 with fuel level fl6 to fl1, plane1 gets refueled at city1 with fuel level fl4 to fl5, plane1 zooms from city2 to city3 with fuel level fl2 to fl4, plane1 zooms from city0 to city3 with fuel level fl1 to fl2, plane1 zooms from city3 to city2 with fuel level fl6 to fl0, plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 zooms from city0 to city1 with fuel level fl6 to fl3, plane1 flies from city3 to city2 with fuel level fl0 to fl2, plane1 flies from city0 to city3 with fuel level fl5 to fl0, plane1 flies from city2 to city1 with fuel level fl6 to fl3, plane1 zooms from city0 to city1 with fuel level fl1 to fl0, plane1 zooms from city0 to city3 with fuel level fl0 to fl1, plane1 zooms from city3 to city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city3 with fuel level fl3 to fl1, plane1 zooms from city2 to city3 with fuel level fl3 to fl4, plane1 zooms from city3 to city2 with fuel level fl5 to fl3, plane1 zooms from city0 to city1 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl1 to fl4, plane1 zooms from city2 to city0 with fuel level fl2 to fl4, plane1 gets refueled at city2 with fuel level fl5 to fl2, plane1 flies from city2 to city0 with fuel level fl3 to fl4, plane1 zooms from city3 to city1 with fuel level fl6 to fl3, plane1 flies from city0 to city1 with fuel level fl1 to fl6, plane1 zooms from city3 to city0 with fuel level fl0 to fl2, plane1 zooms from city3 to city1 with fuel level fl1 to fl0, plane1 flies from city3 to city2 with fuel level fl2 to fl5, plane1 zooms from city1 to city0 with fuel level fl0 to fl2, plane1 zooms from city1 to city2 with fuel level fl2 to fl3, plane1 flies from city2 to city3 with fuel level fl4 to fl0, plane1 flies from city3 to city2 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl1 to fl4, plane1 zooms from city2 to city0 with fuel level fl6 to fl1, plane1 zooms from city2 to city1 with fuel level fl6 to fl1, plane1 zooms from city1 to city0 with fuel level fl5 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl2, plane1 zooms from city0 to city3 with fuel level fl0 to fl4, plane1 zooms from city1 to city2 with fuel level fl1 to fl4, plane1 zooms from city1 to city0 with fuel level fl3 to fl0, plane1 zooms from city0 to city2 with fuel level fl2 to fl5, plane1 zooms from city2 to city0 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl3 to fl4, plane1 zooms from city2 to city1 with fuel level fl6 to fl5, plane1 zooms from city1 to city2 with fuel level fl3 to fl1, plane1 flies from city1 to city3 with fuel level fl6 to fl4, plane1 gets refueled at city0 with fuel level fl4 to fl1, plane1 gets refueled at city0 with fuel level fl6 to fl0, plane1 zooms from city0 to city3 with fuel level fl0 to fl3, plane1 zooms from city1 to city2 with fuel level fl0 to fl6, plane1 zooms from city2 to city0 with fuel level fl1 to fl5, plane1 zooms from city3 to city0 with fuel level fl1 to fl2, plane1 flies from city3 to city1 with fuel level fl2 to fl6, plane1 zooms from city2 to city1 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl0 to fl2, plane1 zooms from city1 to city2 with fuel level fl2 to fl5, plane1 zooms from city3 to city0 with fuel level fl1 to fl0, plane1 zooms from city0 to city2 with fuel level fl3 to fl4, plane1 zooms from city2 to city3 with fuel level fl3 to fl0, plane1 zooms from city3 to city1 with fuel level fl2 to fl3, plane1 zooms from city2 to city0 with fuel level fl0 to fl5, plane1 zooms from city3 to city1 with fuel level fl4 to fl1, plane1 gets refueled at city2 with fuel level fl1 to fl4, plane1 zooms from city2 to city3 with fuel level fl6 to fl1, plane1 zooms from city2 to city0 with fuel level fl6 to fl3, plane1 zooms from city3 to city2 with fuel level fl6 to fl5, plane1 flies from city3 to city1 with fuel level fl3 to fl2, plane1 zooms from city2 to city1 with fuel level fl2 to fl5, plane1 flies from city1 to city3 with fuel level fl5 to fl3, plane1 zooms from city0 to city1 with fuel level fl2 to fl3, plane1 zooms from city3 to city2 with fuel level fl2 to fl0, plane1 flies from city2 to city3 with fuel level fl2 to fl3, person6 departs plane1 at city0, plane1 zooms from city3 to city2 with fuel level fl5 to fl3, plane1 zooms from city0 to city1 with fuel level fl1 to fl4, plane1 flies from city3 to city2 with fuel level fl3 to fl4, plane1 zooms from city3 to city1 with fuel level fl0 to fl1, plane1 gets refueled at city0 with fuel level fl6 to fl3, plane1 zooms from city2 to city1 with fuel level fl5 to fl1, plane1 zooms from city3 to city1 with fuel level fl6 to fl2, plane1 zooms from city3 to city0 with fuel level fl5 to fl3, plane1 zooms from city0 to city2 with fuel level fl5 to fl0, plane1 zooms from city2 to city1 with fuel level fl0 to fl1, plane1 zooms from city3 to city0 with fuel level fl2 to fl6, plane1 zooms from city1 to city3 with fuel level fl5 to fl6, plane1 gets refueled at city2 with fuel level fl4 to fl5, plane1 zooms from city2 to city0 with fuel level fl2 to fl3, plane1 zooms from city2 to city0 with fuel level fl4 to fl6, plane1 zooms from city0 to city3 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl4 to fl0, plane1 zooms from city2 to city1 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl4 to fl2, plane1 zooms from city3 to city0 with fuel level fl1 to fl5, plane1 flies from city2 to city1 with fuel level fl1 to fl3, plane1 zooms from city2 to city1 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl5 to fl2, plane1 zooms from city2 to city0 with fuel level fl4 to fl0, plane1 flies from city2 to city0 with fuel level fl0 to fl6, plane1 zooms from city0 to city3 with fuel level fl1 to fl3, plane1 zooms from city2 to city0 with fuel level fl0 to fl4, plane1 zooms from city2 to city3 with fuel level fl2 to fl0, plane1 gets refueled at city3 with fuel level fl4 to fl0, plane1 zooms from city1 to city0 with fuel level fl6 to fl2, plane1 zooms from city2 to city1 with fuel level fl3 to fl6, plane1 zooms from city1 to city0 with fuel level fl5 to fl0, plane1 zooms from city3 to city1 with fuel level fl1 to fl6, plane1 zooms from city0 to city2 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl1 to fl3, plane1 gets refueled at city0 with fuel level fl6 to fl5, plane1 zooms from city2 to city1 with fuel level fl5 to fl2, plane1 zooms from city3 to city2 with fuel level fl6 to fl1, plane1 zooms from city1 to city3 with fuel level fl6 to fl1, plane1 flies from city2 to city1 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl2 to fl0, plane1 zooms from city2 to city1 with fuel level fl4 to fl6, plane1 zooms from city2 to city0 with fuel level fl6 to fl3, plane1 zooms from city3 to city2 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl1 to fl4, plane1 zooms from city0 to city3 with fuel level fl0 to fl3, plane1 zooms from city0 to city1 with fuel level fl3 to fl0, plane1 zooms from city0 to city1 with fuel level fl3 to fl1, plane1 zooms from city1 to city0 with fuel level fl0 to fl5, plane1 zooms from city0 to city2 with fuel level fl3 to fl2, plane1 flies from city0 to city3 with fuel level fl1 to fl2, plane1 zooms from city2 to city1 with fuel level fl6 to fl2, plane1 flies from city3 to city0 with fuel level fl1 to fl0, plane1 zooms from city3 to city0 with fuel level fl1 to fl3, plane1 zooms from city3 to city0 with fuel level fl6 to fl0, plane1 zooms from city0 to city1 with fuel level fl5 to fl3, plane1 zooms from city2 to city3 with fuel level fl6 to fl4, plane1 flies from city2 to city3 with fuel level fl5 to fl0, plane1 zooms from city3 to city0 with fuel level fl2 to fl5, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 zooms from city0 to city3 with fuel level fl2 to fl5, plane1 zooms from city3 to city2 with fuel level fl5 to fl4, plane1 zooms from city0 to city3 with fuel level fl4 to fl2, plane1 zooms from city1 to city0 with fuel level fl2 to fl4, plane1 zooms from city3 to city1 with fuel level fl2 to fl1, plane1 zooms from city1 to city3 with fuel level fl3 to fl5, plane1 zooms from city1 to city2 with fuel level fl3 to fl5, plane1 zooms from city0 to city1 with fuel level fl6 to fl2, plane1 zooms from city0 to city2 with fuel level fl5 to fl4, plane1 zooms from city1 to city0 with fuel level fl1 to fl2, plane1 zooms from city2 to city0 with fuel level fl4 to fl3, plane1 zooms from city2 to city0 with fuel level fl0 to fl6, plane1 zooms from city3 to city0 with fuel level fl6 to fl1, plane1 flies from city1 to city0 with fuel level fl5 to fl2, plane1 zooms from city3 to city2 with fuel level fl5 to fl0, plane1 zooms from city0 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city3 with fuel level fl0 to fl4, plane1 zooms from city3 to city2 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl0 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl2, plane1 zooms from city2 to city1 with fuel level fl0 to fl6, plane1 zooms from city3 to city0 with fuel level fl2 to fl0, plane1 zooms from city0 to city2 with fuel level fl1 to fl3, plane1 zooms from city3 to city0 with fuel level fl5 to fl4, plane1 zooms from city1 to city0 with fuel level fl0 to fl5, plane1 zooms from city1 to city3 with fuel level fl3 to fl1, plane1 zooms from city1 to city2 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl6 to fl4, plane1 zooms from city1 to city2 with fuel level fl2 to fl0, plane1 gets refueled at city0 with fuel level fl5 to fl2, plane1 zooms from city2 to city3 with fuel level fl1 to fl2, plane1 zooms from city0 to city2 with fuel level fl1 to fl4, plane1 zooms from city0 to city1 with fuel level fl2 to fl4, plane1 zooms from city1 to city3 with fuel level fl2 to fl1, plane1 zooms from city0 to city2 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl5 to fl2, plane1 zooms from city2 to city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city0 with fuel level fl2 to fl1, plane1 gets refueled at city0 with fuel level fl6 to fl1, plane1 zooms from city0 to city3 with fuel level fl4 to fl3, plane1 flies from city0 to city1 with fuel level fl2 to fl1, plane1 zooms from city1 to city2 with fuel level fl0 to fl1, plane1 zooms from city1 to city0 with fuel level fl0 to fl3, plane1 zooms from city1 to city0 with fuel level fl1 to fl5, plane1 zooms from city2 to city1 with fuel level fl5 to fl6, plane1 zooms from city2 to city0 with fuel level fl5 to fl0, plane1 zooms from city3 to city1 with fuel level fl5 to fl0, plane1 zooms from city2 to city3 with fuel level fl1 to fl6, plane1 zooms from city1 to city2 with fuel level fl4 to fl1, plane1 zooms from city1 to city3 with fuel level fl6 to fl0, plane1 zooms from city2 to city1 with fuel level fl5 to fl3, plane1 zooms from city2 to city0 with fuel level fl1 to fl6, plane1 zooms from city0 to city1 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl5 to fl0, plane1 zooms from city3 to city0 with fuel level fl4 to fl0, plane1 flies from city2 to city3 with fuel level fl5 to fl6, plane1 zooms from city2 to city0 with fuel level fl3 to fl5, plane1 zooms from city3 to city1 with fuel level fl1 to fl0, plane1 zooms from city3 to city1 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl4 to fl1, plane1 zooms from city2 to city3 with fuel level fl5 to fl3, plane1 flies from city2 to city3 with fuel level fl0 to fl3, plane1 zooms from city0 to city2 with fuel level fl3 to fl1, plane1 zooms from city0 to city3 with fuel level fl4 to fl5, plane1 zooms from city1 to city3 with fuel level fl5 to fl4, plane1 zooms from city3 to city2 with fuel level fl5 to fl0, plane1 zooms from city3 to city1 with fuel level fl2 to fl0, plane1 flies from city3 to city1 with fuel level fl1 to fl2, plane1 zooms from city1 to city3 with fuel level fl3 to fl4, plane1 flies from city2 to city0 with fuel level fl2 to fl5, plane1 flies from city2 to city0 with fuel level fl0 to fl1, plane1 zooms from city3 to city1 with fuel level fl6 to fl2, plane1 zooms from city0 to city1 with fuel level fl1 to fl2, plane1 zooms from city3 to city2 with fuel level fl6 to fl3, plane1 zooms from city1 to city0 with fuel level fl6 to fl3, plane1 zooms from city1 to city0 with fuel level fl4 to fl3, plane1 zooms from city0 to city1 with fuel level fl5 to fl0, plane1 zooms from city1 to city0 with fuel level fl4 to fl6, plane1 flies from city2 to city0 with fuel level fl2 to fl3, plane1 zooms from city3 to city0 with fuel level fl3 to fl5, plane1 zooms from city3 to city1 with fuel level fl1 to fl6, plane1 zooms from city1 to city2 with fuel level fl3 to fl0, plane1 zooms from city2 to city0 with fuel level fl1 to fl3, plane1 zooms from city3 to city0 with fuel level fl1 to fl4, plane1 zooms from city3 to city2 with fuel level fl4 to fl1, plane1 zooms from city1 to city0 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl3 to fl4, plane1 zooms from city3 to city1 with fuel level fl1 to fl4, plane1 zooms from city1 to city3 with fuel level fl2 to fl5, plane1 zooms from city2 to city0 with fuel level fl1 to fl4, plane1 flies from city0 to city2 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl1 to fl5, plane1 zooms from city0 to city1 with fuel level fl5 to fl3, plane1 zooms from city2 to city3 with fuel level fl2 to fl6, plane1 flies from city3 to city0 with fuel level fl4 to fl1, plane1 flies from city2 to city3 with fuel level fl5 to fl1, plane1 zooms from city2 to city1 with fuel level fl2 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl2, plane1 zooms from city0 to city1 with fuel level fl4 to fl2, plane1 gets refueled at city2 with fuel level fl3 to fl1, plane1 zooms from city2 to city0 with fuel level fl1 to fl0, plane1 zooms from city2 to city1 with fuel level fl3 to fl1, plane1 zooms from city1 to city2 with fuel level fl5 to fl1, plane1 flies from city1 to city3 with fuel level fl5 to fl0, plane1 flies from city1 to city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl4 to fl6, plane1 zooms from city3 to city1 with fuel level fl4 to fl5, plane1 zooms from city2 to city1 with fuel level fl1 to fl6, plane1 flies from city3 to city0 with fuel level fl0 to fl3, plane1 zooms from city0 to city3 with fuel level fl4 to fl5, plane1 zooms from city0 to city2 with fuel level fl3 to fl6, plane1 zooms from city3 to city1 with fuel level fl5 to fl4, plane1 zooms from city1 to city2 with fuel level fl0 to fl2, plane1 zooms from city1 to city2 with fuel level fl0 to fl1, plane1 zooms from city0 to city2 with fuel level fl0 to fl4, plane1 zooms from city3 to city1 with fuel level fl4 to fl3, plane1 zooms from city0 to city1 with fuel level fl3 to fl2, plane1 zooms from city1 to city2 with fuel level fl6 to fl5, plane1 zooms from city1 to city3 with fuel level fl6 to fl5, plane1 gets refueled at city1 with fuel level fl4 to fl3, plane1 zooms from city0 to city1 with fuel level fl0 to fl3, plane1 zooms from city1 to city0 with fuel level fl5 to fl4, plane1 zooms from city0 to city3 with fuel level fl6 to fl3, plane1 zooms from city1 to city3 with fuel level fl3 to fl0, plane1 zooms from city0 to city2 with fuel level fl0 to fl6, plane1 zooms from city3 to city0 with fuel level fl5 to fl0, plane1 zooms from city0 to city1 with fuel level fl1 to fl5, plane1 zooms from city1 to city3 with fuel level fl1 to fl5, plane1 gets refueled at city0 with fuel level fl3 to fl6, plane1 zooms from city0 to city3 with fuel level fl1 to fl4, plane1 zooms from city3 to city2 with fuel level fl5 to fl6, plane1 gets refueled at city0 with fuel level fl0 to fl4, plane1 flies from city1 to city2 with fuel level fl3 to fl0, plane1 zooms from city1 to city2 with fuel level fl6 to fl2, plane1 zooms from city2 to city1 with fuel level fl2 to fl0, plane1 zooms from city0 to city2 with fuel level fl3 to fl0, plane1 zooms from city1 to city3 with fuel level fl5 to fl4, plane1 flies from city0 to city2 with fuel level fl6 to fl3, plane1 zooms from city3 to city2 with fuel level fl1 to fl0, plane1 flies from city0 to city2 with fuel level fl3 to fl0, plane1 flies from city1 to city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl2 to fl6, plane1 zooms from city2 to city3 with fuel level fl4 to fl5, plane1 zooms from city2 to city3 with fuel level fl5 to fl4, plane1 zooms from city0 to city3 with fuel level fl3 to fl0, plane1 gets refueled at city1 with fuel level fl4 to fl6, plane1 flies from city3 to city1 with fuel level fl2 to fl1, plane1 zooms from city1 to city2 with fuel level fl4 to fl6, plane1 flies from city0 to city2 with fuel level fl1 to fl2, plane1 zooms from city2 to city1 with fuel level fl3 to fl6, plane1 zooms from city0 to city1 with fuel level fl0 to fl3, plane1 zooms from city2 to city0 with fuel level fl6 to fl5, plane1 flies from city2 to city3 with fuel level fl4 to fl6, plane1 gets refueled at city0 with fuel level fl4 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl5, plane1 zooms from city1 to city3 with fuel level fl5 to fl2, plane1 zooms from city0 to city2 with fuel level fl5 to fl6, plane1 zooms from city3 to city2 with fuel level fl5 to fl2, plane1 gets refueled at city3 with fuel level fl5 to fl0, plane1 flies from city0 to city2 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl0 to fl2, plane1 zooms from city2 to city0 with fuel level fl0 to fl4, plane1 zooms from city3 to city1 with fuel level fl1 to fl0, plane1 zooms from city2 to city3 with fuel level fl5 to fl6, plane1 gets refueled at city0 with fuel level fl1 to fl0, plane1 zooms from city1 to city2 with fuel level fl2 to fl1, plane1 flies from city1 to city2 with fuel level fl1 to fl4, plane1 flies from city3 to city1 with fuel level fl4 to fl6, plane1 zooms from city3 to city1 with fuel level fl3 to fl6, plane1 zooms from city2 to city3 with fuel level fl4 to fl6, plane1 zooms from city0 to city2 with fuel level fl5 to fl3, plane1 flies from city1 to city3 with fuel level fl4 to fl6, plane1 zooms from city3 to city1 with fuel level fl2 to fl6, plane1 zooms from city2 to city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl0 to fl2, plane1 zooms from city2 to city3 with fuel level fl0 to fl3, plane1 zooms from city3 to city2 with fuel level fl3 to fl4, person8 departs plane1 at city2, plane1 flies from city1 to city2 with fuel level fl1 to fl0, plane1 zooms from city1 to city3 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl5 to fl4, plane1 zooms from city3 to city0 with fuel level fl4 to fl0, plane1 zooms from city0 to city1 with fuel level fl3 to fl5, plane1 zooms from city3 to city1 with fuel level fl5 to fl1, plane1 zooms from city0 to city1 with fuel level fl3 to fl0, plane1 flies from city3 to city1 with fuel level fl0 to fl2, plane1 flies from city1 to city3 with fuel level fl2 to fl1, plane1 zooms from city0 to city2 with fuel level fl5 to fl3, plane1 zooms from city1 to city2 with fuel level fl6 to fl0, plane1 zooms from city2 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city0 with fuel level fl5 to fl2, plane1 zooms from city1 to city2 with fuel level fl5 to fl2, plane1 zooms from city2 to city3 with fuel level fl5 to fl0, plane1 zooms from city2 to city3 with fuel level fl0 to fl1, plane1 zooms from city0 to city2 with fuel level fl3 to fl0, plane1 gets refueled at city0 with fuel level fl2 to fl5, plane1 zooms from city2 to city1 with fuel level fl6 to fl5, plane1 zooms from city3 to city1 with fuel level fl2 to fl5, plane1 zooms from city0 to city2 with fuel level fl1 to fl3, plane1 zooms from city0 to city1 with fuel level fl0 to fl3, plane1 flies from city1 to city3 with fuel level fl3 to fl4, plane1 zooms from city3 to city1 with fuel level fl5 to fl4, plane1 zooms from city0 to city1 with fuel level fl6 to fl2, plane1 zooms from city2 to city0 with fuel level fl4 to fl2, plane1 flies from city0 to city1 with fuel level fl4 to fl6, plane1 zooms from city0 to city2 with fuel level fl2 to fl4, plane1 zooms from city0 to city1 with fuel level fl1 to fl0, plane1 zooms from city3 to city1 with fuel level fl2 to fl4, plane1 flies from city3 to city0 with fuel level fl0 to fl4, plane1 zooms from city0 to city2 with fuel level fl6 to fl1, plane1 zooms from city2 to city1 with fuel level fl4 to fl3, plane1 zooms from city3 to city2 with fuel level fl3 to fl5, plane1 flies from city1 to city2 with fuel level fl0 to fl2, plane1 zooms from city2 to city3 with fuel level fl6 to fl0, plane1 zooms from city3 to city1 with fuel level fl1 to fl3, plane1 gets refueled at city2 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl2 to fl3, plane1 zooms from city1 to city2 with fuel level fl1 to fl6, plane1 gets refueled at city2 with fuel level fl2 to fl5, plane1 flies from city3 to city0 with fuel level fl6 to fl5, plane1 zooms from city3 to city0 with fuel level fl1 to fl0, plane1 flies from city1 to city3 with fuel level fl0 to fl2, plane1 zooms from city2 to city1 with fuel level fl0 to fl5, plane1 zooms from city3 to city1 with fuel level fl5 to fl3, plane1 flies from city0 to city2 with fuel level fl3 to fl4, plane1 zooms from city3 to city2 with fuel level fl6 to fl3, plane1 zooms from city0 to city3 with fuel level fl5 to fl6, plane1 zooms from city1 to city3 with fuel level fl4 to fl0, plane1 zooms from city1 to city2 with fuel level fl2 to fl6, plane1 zooms from city0 to city1 with fuel level fl6 to fl5, plane1 zooms from city0 to city1 with fuel level fl6 to fl5, plane1 zooms from city0 to city1 with fuel level fl4 to fl1, plane1 zooms from city3 to city1 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl2 to fl3, plane1 zooms from city2 to city1 with fuel level fl5 to fl0, plane1 gets refueled at city1 with fuel level fl1 to fl0, plane1 zooms from city0 to city1 with fuel level fl1 to fl6, plane1 flies from city2 to city1 with fuel level fl3 to fl4, plane1 zooms from city2 to city1 with fuel level fl5 to fl0, plane1 zooms from city0 to city3 with fuel level fl0 to fl6, plane1 zooms from city1 to city3 with fuel level fl6 to fl0, plane1 zooms from city1 to city3 with fuel level fl6 to fl4, plane1 zooms from city0 to city2 with fuel level fl1 to fl6, plane1 zooms from city1 to city0 with fuel level fl4 to fl3, plane1 zooms from city2 to city3 with fuel level fl0 to fl6, plane1 flies from city1 to city2 with fuel level fl2 to fl3, plane1 gets refueled at city3 with fuel level fl5 to fl3, plane1 zooms from city3 to city2 with fuel level fl3 to fl1, plane1 zooms from city1 to city0 with fuel level fl5 to fl4, plane1 zooms from city3 to city1 with fuel level fl3 to fl1, plane1 zooms from city3 to city1 with fuel level fl5 to fl6, plane1 zooms from city3 to city1 with fuel level fl1 to fl4, plane1 zooms from city0 to city3 with fuel level fl0 to fl5, plane1 flies from city1 to city2 with fuel level fl4 to fl3, plane1 zooms from city3 to city1 with fuel level fl6 to fl3, plane1 zooms from city1 to city0 with fuel level fl5 to fl6, plane1 zooms from city2 to city1 with fuel level fl5 to fl0, plane1 zooms from city0 to city3 with fuel level fl2 to fl1, plane1 zooms from city3 to city0 with fuel level fl6 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl2 to fl4, plane1 zooms from city3 to city2 with fuel level fl0 to fl6, plane1 zooms from city2 to city0 with fuel level fl0 to fl3, plane1 zooms from city1 to city3 with fuel level fl4 to fl3, plane1 zooms from city3 to city0 with fuel level fl0 to fl4, plane1 zooms from city3 to city2 with fuel level fl3 to fl4, plane1 flies from city3 to city0 with fuel level fl1 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl2, plane1 gets refueled at city2 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl3 to fl1, plane1 flies from city2 to city1 with fuel level fl2 to fl5, plane1 zooms from city0 to city1 with fuel level fl2 to fl0, plane1 zooms from city1 to city0 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl1 to fl0, plane1 zooms from city2 to city3 with fuel level fl3 to fl1, plane1 zooms from city2 to city1 with fuel level fl6 to fl0, plane1 zooms from city3 to city2 with fuel level fl5 to fl4, plane1 zooms from city0 to city2 with fuel level fl3 to fl5, plane1 zooms from city1 to city3 with fuel level fl1 to fl2, plane1 zooms from city2 to city1 with fuel level fl4 to fl5, plane1 zooms from city2 to city3 with fuel level fl1 to fl2, plane1 zooms from city2 to city3 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl2 to fl5, plane1 flies from city2 to city1 with fuel level fl1 to fl4, plane1 flies from city3 to city2 with fuel level fl0 to fl4, person4 boards plane1 at city2, plane1 zooms from city3 to city2 with fuel level fl4 to fl6, plane1 zooms from city1 to city3 with fuel level fl3 to fl5, plane1 zooms from city2 to city1 with fuel level fl0 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl4, plane1 zooms from city2 to city0 with fuel level fl1 to fl5, plane1 flies from city3 to city0 with fuel level fl3 to fl1, plane1 zooms from city3 to city0 with fuel level fl0 to fl4, plane1 zooms from city2 to city3 with fuel level fl1 to fl5, plane1 zooms from city0 to city1 with fuel level fl1 to fl4, plane1 zooms from city2 to city1 with fuel level fl1 to fl6, plane1 zooms from city0 to city2 with fuel level fl4 to fl5, plane1 zooms from city3 to city1 with fuel level fl3 to fl2, plane1 zooms from city1 to city2 with fuel level fl0 to fl2, plane1 flies from city2 to city1 with fuel level fl2 to fl6, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 flies from city3 to city0 with fuel level fl4 to fl6, plane1 zooms from city1 to city3 with fuel level fl5 to fl0, plane1 zooms from city1 to city3 with fuel level fl5 to fl6, plane1 zooms from city0 to city1 with fuel level fl6 to fl1, plane1 zooms from city3 to city1 with fuel level fl1 to fl3, plane1 zooms from city3 to city0 with fuel level fl6 to fl0, plane1 zooms from city2 to city0 with fuel level fl5 to fl1, plane1 zooms from city1 to city2 with fuel level fl6 to fl1, plane1 zooms from city0 to city1 with fuel level fl4 to fl2, plane1 zooms from city0 to city3 with fuel level fl3 to fl1, plane1 flies from city3 to city0 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl5 to fl1, plane1 zooms from city2 to city1 with fuel level fl4 to fl0, plane1 zooms from city0 to city1 with fuel level fl6 to fl4, plane1 zooms from city3 to city0 with fuel level fl3 to fl2, plane1 zooms from city0 to city2 with fuel level fl5 to fl1, plane1 flies from city3 to city2 with fuel level fl0 to fl6, plane1 flies from city3 to city0 with fuel level fl1 to fl2, plane1 zooms from city0 to city2 with fuel level fl4 to fl0, plane1 zooms from city3 to city2 with fuel level fl2 to fl6, plane1 zooms from city1 to city0 with fuel level fl0 to fl5, plane1 flies from city1 to city2 with fuel level fl3 to fl6, plane1 zooms from city0 to city2 with fuel level fl1 to fl5, person6 boards plane1 at city1, plane1 zooms from city2 to city0 with fuel level fl5 to fl4, plane1 zooms from city3 to city0 with fuel level fl6 to fl2, plane1 gets refueled at city0 with fuel level fl6 to fl2, plane1 zooms from city3 to city2 with fuel level fl4 to fl1, plane1 zooms from city1 to city0 with fuel level fl5 to fl1, plane1 zooms from city3 to city2 with fuel level fl1 to fl0, plane1 flies from city1 to city0 with fuel level fl3 to fl0, plane1 zooms from city2 to city3 with fuel level fl6 to fl0, plane1 flies from city0 to city1 with fuel level fl2 to fl5, plane1 zooms from city1 to city2 with fuel level fl3 to fl4, plane1 zooms from city3 to city0 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl6 to fl2, person7 departs plane1 at city0, plane1 flies from city3 to city2 with fuel level fl1 to fl6, plane1 zooms from city0 to city3 with fuel level fl6 to fl2, plane1 flies from city3 to city1 with fuel level fl2 to fl0, plane1 zooms from city1 to city2 with fuel level fl4 to fl6, plane1 zooms from city1 to city3 with fuel level fl3 to fl0, plane1 zooms from city3 to city2 with fuel level fl6 to fl5, plane1 zooms from city1 to city3 with fuel level fl6 to fl3, plane1 zooms from city1 to city0 with fuel level fl1 to fl2, plane1 zooms from city0 to city2 with fuel level fl6 to fl0, plane1 zooms from city2 to city3 with fuel level fl4 to fl1, plane1 gets refueled at city2 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl4 to fl5, plane1 flies from city2 to city3 with fuel level fl0 to fl6, plane1 flies from city0 to city3 with fuel level fl3 to fl0, plane1 zooms from city3 to city1 with fuel level fl4 to fl3, plane1 zooms from city0 to city1 with fuel level fl1 to fl6, plane1 zooms from city3 to city1 with fuel level fl4 to fl3, plane1 zooms from city2 to city1 with fuel level fl3 to fl6, person4 departs plane1 at city1, plane1 zooms from city0 to city1 with fuel level fl1 to fl4, plane1 zooms from city3 to city0 with fuel level fl6 to fl1, plane1 zooms from city0 to city3 with fuel level fl2 to fl0, plane1 zooms from city3 to city1 with fuel level fl2 to fl0, plane1 gets refueled at city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl6 to fl5, plane1 zooms from city3 to city0 with fuel level fl5 to fl1, plane1 zooms from city1 to city0 with fuel level fl4 to fl5, plane1 zooms from city3 to city2 with fuel level fl0 to fl5, plane1 zooms from city1 to city2 with fuel level fl6 to fl2, plane1 zooms from city0 to city1 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl0 to fl6, plane1 zooms from city0 to city2 with fuel level fl3 to fl0, plane1 zooms from city0 to city3 with fuel level fl5 to fl1, plane1 zooms from city2 to city1 with fuel level fl6 to fl1, plane1 zooms from city1 to city0 with fuel level fl6 to fl0, plane1 zooms from city1 to city0 with fuel level fl2 to fl5, plane1 gets refueled at city0 with fuel level fl4 to fl3, plane1 zooms from city0 to city3 with fuel level fl3 to fl2, plane1 zooms from city0 to city1 with fuel level fl2 to fl1, plane1 zooms from city2 to city1 with fuel level fl1 to fl3, plane1 zooms from city3 to city1 with fuel level fl2 to fl6, plane1 zooms from city0 to city3 with fuel level fl0 to fl5, plane1 zooms from city0 to city2 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl2 to fl1, plane1 zooms from city2 to city1 with fuel level fl6 to fl5, plane1 zooms from city0 to city3 with fuel level fl5 to fl0, plane1 zooms from city2 to city1 with fuel level fl5 to fl6, plane1 zooms from city1 to city2 with fuel level fl6 to fl5, plane1 flies from city0 to city3 with fuel level fl5 to fl3, plane1 flies from city1 to city0 with fuel level fl1 to fl0, plane1 zooms from city1 to city3 with fuel level fl3 to fl6, plane1 zooms from city3 to city1 with fuel level fl2 to fl1, plane1 zooms from city3 to city0 with fuel level fl1 to fl4, plane1 zooms from city2 to city1 with fuel level fl2 to fl4, plane1 flies from city0 to city2 with fuel level fl6 to fl1, plane1 zooms from city2 to city3 with fuel level fl4 to fl6, plane1 zooms from city1 to city0 with fuel level fl5 to fl0, plane1 zooms from city0 to city2 with fuel level fl6 to fl0, plane1 zooms from city2 to city1 with fuel level fl0 to fl3, plane1 gets refueled at city2 with fuel level fl2 to fl4, plane1 zooms from city3 to city2 with fuel level fl3 to fl0, plane1 zooms from city3 to city0 with fuel level fl1 to fl5, plane1 zooms from city0 to city3 with fuel level fl3 to fl6, plane1 flies from city2 to city3 with fuel level fl6 to fl1, plane1 zooms from city2 to city3 with fuel level fl6 to fl1, person2 departs plane1 at city2, plane1 zooms from city2 to city3 with fuel level fl6 to fl4, plane1 flies from city2 to city3 with fuel level fl6 to fl0, plane1 zooms from city1 to city3 with fuel level fl2 to fl0, plane1 zooms from city1 to city2 with fuel level fl4 to fl5, plane1 zooms from city3 to city1 with fuel level fl2 to fl5, plane1 flies from city3 to city2 with fuel level fl5 to fl1, plane1 flies from city1 to city3 with fuel level fl2 to fl6, plane1 zooms from city0 to city3 with fuel level fl1 to fl5, plane1 zooms from city2 to city1 with fuel level fl5 to fl1, plane1 zooms from city3 to city0 with fuel level fl2 to fl5, plane1 zooms from city0 to city2 with fuel level fl4 to fl2, plane1 zooms from city1 to city0 with fuel level fl5 to fl2, plane1 zooms from city0 to city3 with fuel level fl3 to fl1, plane1 flies from city1 to city0 with fuel level fl6 to fl3, plane1 zooms from city2 to city3 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl0 to fl4, plane1 zooms from city0 to city3 with fuel level fl2 to fl1, plane1 zooms from city2 to city1 with fuel level fl4 to fl2, plane1 zooms from city1 to city3 with fuel level fl4 to fl5, plane1 zooms from city2 to city0 with fuel level fl6 to fl0, plane1 flies from city1 to city2 with fuel level fl5 to fl0, plane1 zooms from city0 to city3 with fuel level fl5 to fl4, plane1 zooms from city3 to city2 with fuel level fl4 to fl0, plane1 zooms from city1 to city0 with fuel level fl2 to fl6, plane1 flies from city1 to city2 with fuel level fl4 to fl0, plane1 flies from city3 to city1 with fuel level fl6 to fl1, plane1 zooms from city1 to city2 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl1 to fl0, plane1 zooms from city0 to city3 with fuel level fl3 to fl2, plane1 zooms from city1 to city0 with fuel level fl6 to fl0, plane1 zooms from city2 to city1 with fuel level fl0 to fl1, plane1 zooms from city0 to city2 with fuel level fl0 to fl1, plane1 zooms from city3 to city1 with fuel level fl6 to fl5, plane1 zooms from city3 to city1 with fuel level fl1 to fl2, plane1 zooms from city3 to city2 with fuel level fl2 to fl1, plane1 zooms from city2 to city0 with fuel level fl2 to fl1, plane1 zooms from city1 to city0 with fuel level fl0 to fl5, plane1 zooms from city1 to city2 with fuel level fl5 to fl2, plane1 zooms from city3 to city1 with fuel level fl1 to fl5, plane1 zooms from city0 to city3 with fuel level fl2 to fl3, plane1 zooms from city2 to city1 with fuel level fl4 to fl1, plane1 gets refueled at city0 with fuel level fl0 to fl5, plane1 zooms from city0 to city1 with fuel level fl2 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl2, plane1 zooms from city1 to city2 with fuel level fl3 to fl0, plane1 gets refueled at city2 with fuel level fl4 to fl6, plane1 zooms from city2 to city1 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl2 to fl0, plane1 zooms from city1 to city3 with fuel level fl3 to fl0, plane1 flies from city2 to city1 with fuel level fl6 to fl5, plane1 gets refueled at city3 with fuel level fl2 to fl5, plane1 gets refueled at city1 with fuel level fl6 to fl1, plane1 zooms from city3 to city1 with fuel level fl2 to fl4, plane1 flies from city0 to city1 with fuel level fl1 to fl3, person5 boards plane1 at city1, plane1 zooms from city2 to city1 with fuel level fl5 to fl2, plane1 zooms from city0 to city2 with fuel level fl1 to fl6, plane1 zooms from city0 to city3 with fuel level fl6 to fl5, plane1 zooms from city1 to city3 with fuel level fl3 to fl6, plane1 zooms from city0 to city1 with fuel level fl2 to fl3, plane1 zooms from city2 to city0 with fuel level fl1 to fl5, plane1 flies from city2 to city3 with fuel level fl3 to fl5, plane1 zooms from city1 to city0 with fuel level fl4 to fl0, plane1 flies from city2 to city3 with fuel level fl6 to fl3, plane1 gets refueled at city3 with fuel level fl5 to fl4, plane1 zooms from city3 to city1 with fuel level fl6 to fl1, plane1 zooms from city1 to city3 with fuel level fl2 to fl6, plane1 flies from city2 to city3 with fuel level fl5 to fl3, plane1 zooms from city2 to city0 with fuel level fl3 to fl6, plane1 gets refueled at city1 with fuel level fl1 to fl3, plane1 zooms from city1 to city2 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl3 to fl4, plane1 zooms from city2 to city1 with fuel level fl2 to fl5, plane1 zooms from city3 to city0 with fuel level fl2 to fl5, plane1 zooms from city0 to city3 with fuel level fl1 to fl5, plane1 flies from city1 to city2 with fuel level fl0 to fl5, plane1 zooms from city0 to city3 with fuel level fl6 to fl4, plane1 flies from city1 to city2 with fuel level fl5 to fl2, plane1 zooms from city3 to city1 with fuel level fl5 to fl0, plane1 zooms from city3 to city1 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl1 to fl0, plane1 zooms from city3 to city1 with fuel level fl6 to fl1, plane1 zooms from city1 to city3 with fuel level fl0 to fl3, plane1 flies from city3 to city0 with fuel level fl5 to fl2, plane1 zooms from city1 to city0 with fuel level fl2 to fl3, plane1 zooms from city3 to city1 with fuel level fl4 to fl0, plane1 zooms from city0 to city3 with fuel level fl3 to fl5, plane1 zooms from city0 to city3 with fuel level fl1 to fl3, plane1 zooms from city2 to city0 with fuel level fl3 to fl1, plane1 flies from city2 to city1 with fuel level fl4 to fl3, plane1 zooms from city2 to city3 with fuel level fl4 to fl1, plane1 zooms from city1 to city2 with fuel level fl6 to fl2, plane1 zooms from city2 to city3 with fuel level fl4 to fl6, plane1 zooms from city2 to city0 with fuel level fl5 to fl3, plane1 zooms from city0 to city3 with fuel level fl0 to fl5, plane1 flies from city3 to city0 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl5 to fl1, plane1 zooms from city2 to city3 with fuel level fl4 to fl6, plane1 zooms from city3 to city0 with fuel level fl2 to fl4, plane1 zooms from city1 to city0 with fuel level fl3 to fl4, plane1 zooms from city0 to city3 with fuel level fl1 to fl2, plane1 zooms from city3 to city1 with fuel level fl5 to fl1, plane1 gets refueled at city3 with fuel level fl6 to fl0, plane1 flies from city3 to city1 with fuel level fl3 to fl4, plane1 zooms from city1 to city2 with fuel level fl1 to fl4, plane1 zooms from city2 to city1 with fuel level fl4 to fl3, plane1 zooms from city0 to city2 with fuel level fl5 to fl0, plane1 zooms from city1 to city3 with fuel level fl2 to fl3, plane1 flies from city2 to city0 with fuel level fl3 to fl6, plane1 zooms from city1 to city2 with fuel level fl5 to fl1, plane1 zooms from city3 to city1 with fuel level fl0 to fl5, plane1 flies from city1 to city3 with fuel level fl2 to fl3, plane1 flies from city2 to city1 with fuel level fl2 to fl4, plane1 zooms from city1 to city0 with fuel level fl5 to fl4, plane1 zooms from city0 to city1 with fuel level fl1 to fl3, plane1 zooms from city3 to city2 with fuel level fl3 to fl0, plane1 zooms from city2 to city1 with fuel level fl2 to fl3, plane1 zooms from city3 to city0 with fuel level fl1 to fl0, plane1 gets refueled at city3 with fuel level fl1 to fl0, plane1 zooms from city0 to city2 with fuel level fl6 to fl4, plane1 zooms from city1 to city2 with fuel level fl1 to fl6, plane1 zooms from city1 to city3 with fuel level fl0 to fl3, plane1 zooms from city0 to city3 with fuel level fl6 to fl3, plane1 flies from city1 to city0 with fuel level fl3 to fl2, plane1 zooms from city1 to city3 with fuel level fl5 to fl6, plane1 flies from city3 to city2 with fuel level fl1 to fl2, plane1 zooms from city0 to city2 with fuel level fl3 to fl6, plane1 gets refueled at city2 with fuel level fl3 to fl5, plane1 zooms from city0 to city2 with fuel level fl0 to fl2, plane1 flies from city0 to city2 with fuel level fl0 to fl4, plane1 flies from city2 to city1 with fuel level fl5 to fl0, plane1 zooms from city2 to city1 with fuel level fl2 to fl3, plane1 zooms from city2 to city1 with fuel level fl1 to fl0, plane1 zooms from city0 to city1 with fuel level fl2 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl1 to fl3, plane1 flies from city1 to city0 with fuel level fl6 to fl2, plane1 zooms from city0 to city3 with fuel level fl0 to fl6, plane1 flies from city0 to city2 with fuel level fl6 to fl5, plane1 zooms from city2 to city0 with fuel level fl4 to fl1, plane1 zooms from city0 to city3 with fuel level fl4 to fl3, plane1 flies from city3 to city0 with fuel level fl5 to fl1, plane1 flies from city1 to city2 with fuel level fl1 to fl6, plane1 zooms from city2 to city1 with fuel level fl0 to fl1, plane1 zooms from city2 to city0 with fuel level fl3 to fl2, plane1 zooms from city3 to city0 with fuel level fl6 to fl5, plane1 zooms from city0 to city3 with fuel level fl2 to fl6, plane1 zooms from city0 to city3 with fuel level fl5 to fl0, plane1 zooms from city1 to city0 with fuel level fl2 to fl0, plane1 flies from city0 to city3 with fuel level fl4 to fl6, plane1 zooms from city0 to city3 with fuel level fl5 to fl4, plane1 zooms from city1 to city0 with fuel level fl3 to fl0, plane1 flies from city2 to city3 with fuel level fl1 to fl4, plane1 zooms from city2 to city0 with fuel level fl6 to fl0, plane1 zooms from city2 to city3 with fuel level fl2 to fl3, plane1 zooms from city1 to city0 with fuel level fl0 to fl1, plane1 zooms from city0 to city3 with fuel level fl3 to fl6, plane1 zooms from city1 to city3 with fuel level fl0 to fl6, plane1 zooms from city2 to city0 with fuel level fl5 to fl2, plane1 gets refueled at city3 with fuel level fl1 to fl4, plane1 zooms from city2 to city3 with fuel level fl6 to fl1, plane1 zooms from city3 to city1 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl1 to fl5, plane1 zooms from city2 to city0 with fuel level fl1 to fl3, plane1 zooms from city0 to city2 with fuel level fl3 to fl4, plane1 zooms from city2 to city3 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl0, plane1 zooms from city2 to city1 with fuel level fl0 to fl3, plane1 zooms from city3 to city0 with fuel level fl2 to fl1, plane1 flies from city0 to city1 with fuel level fl2 to fl3, plane1 flies from city3 to city2 with fuel level fl3 to fl1, plane1 zooms from city3 to city0 with fuel level fl4 to fl3, plane1 zooms from city3 to city2 with fuel level fl2 to fl0, plane1 zooms from city0 to city3 with fuel level fl0 to fl6, plane1 zooms from city0 to city2 with fuel level fl1 to fl6, plane1 zooms from city3 to city2 with fuel level fl6 to fl2, plane1 flies from city0 to city3 with fuel level fl0 to fl3, plane1 zooms from city1 to city0 with fuel level fl3 to fl5, plane1 zooms from city0 to city1 with fuel level fl3 to fl2, plane1 zooms from city1 to city0 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl4 to fl5, plane1 zooms from city0 to city1 with fuel level fl6 to fl0, plane1 flies from city1 to city2 with fuel level fl5 to fl6, plane1 zooms from city3 to city1 with fuel level fl0 to fl2, plane1 flies from city0 to city3 with fuel level fl5 to fl1, plane1 zooms from city1 to city0 with fuel level fl0 to fl6, plane1 flies from city2 to city1 with fuel level fl0 to fl5, plane1 flies from city0 to city2 with fuel level fl5 to fl2, plane1 zooms from city1 to city0 with fuel level fl3 to fl5, plane1 flies from city1 to city0 with fuel level fl6 to fl0, plane1 flies from city0 to city1 with fuel level fl1 to fl5, plane1 zooms from city3 to city2 with fuel level fl2 to fl3, plane1 zooms from city0 to city2 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl1 to fl0, plane1 zooms from city3 to city2 with fuel level fl4 to fl5, plane1 flies from city3 to city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl5 to fl4, plane1 zooms from city1 to city3 with fuel level fl2 to fl1, plane1 zooms from city0 to city3 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl5 to fl0, plane1 zooms from city0 to city2 with fuel level fl0 to fl1, plane1 zooms from city3 to city1 with fuel level fl2 to fl3, plane1 zooms from city0 to city2 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl4 to fl3, plane1 zooms from city3 to city2 with fuel level fl5 to fl4, plane1 zooms from city0 to city3 with fuel level fl6 to fl3, plane1 zooms from city2 to city3 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl5 to fl2, plane1 zooms from city1 to city0 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl5 to fl2, plane1 flies from city3 to city0 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl3 to fl2, plane1 zooms from city0 to city2 with fuel level fl4 to fl3, plane1 zooms from city1 to city0 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl0 to fl5, plane1 zooms from city1 to city3 with fuel level fl5 to fl3, plane1 zooms from city1 to city2 with fuel level fl2 to fl3, plane1 zooms from city1 to city3 with fuel level fl6 to fl1, plane1 zooms from city1 to city0 with fuel level fl4 to fl1, plane1 zooms from city2 to city1 with fuel level fl0 to fl2, plane1 flies from city3 to city1 with fuel level fl1 to fl3, plane1 flies from city3 to city2 with fuel level fl5 to fl3, plane1 zooms from city1 to city0 with fuel level fl1 to fl0, plane1 zooms from city2 to city1 with fuel level fl3 to fl2, plane1 zooms from city0 to city1 with fuel level fl4 to fl1, plane1 zooms from city0 to city1 with fuel level fl2 to fl6, person8 boards plane1 at city1, plane1 zooms from city1 to city3 with fuel level fl2 to fl3, plane1 zooms from city1 to city3 with fuel level fl6 to fl1, plane1 zooms from city2 to city1 with fuel level fl6 to fl1, plane1 zooms from city0 to city3 with fuel level fl5 to fl2, plane1 flies from city1 to city2 with fuel level fl0 to fl1, plane1 zooms from city3 to city2 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl6 to fl3, plane1 zooms from city0 to city1 with fuel level fl4 to fl3, plane1 zooms from city1 to city0 with fuel level fl4 to fl1, plane1 zooms from city2 to city0 with fuel level fl4 to fl5, plane1 zooms from city3 to city0 with fuel level fl2 to fl3, plane1 zooms from city3 to city1 with fuel level fl6 to fl4, plane1 zooms from city1 to city0 with fuel level fl5 to fl1, plane1 gets refueled at city3 with fuel level fl2 to fl6, plane1 zooms from city0 to city1 with fuel level fl3 to fl1, plane1 zooms from city1 to city0 with fuel level fl3 to fl2, plane1 zooms from city2 to city1 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl3 to fl5, plane1 zooms from city1 to city0 with fuel level fl3 to fl5, plane1 zooms from city0 to city2 with fuel level fl3 to fl5, plane1 zooms from city3 to city0 with fuel level fl5 to fl4, plane1 gets refueled at city3 with fuel level fl1 to fl5, plane1 zooms from city2 to city0 with fuel level fl0 to fl5, plane1 zooms from city3 to city1 with fuel level fl6 to fl2, person1 departs plane1 at city3, plane1 zooms from city2 to city1 with fuel level fl1 to fl0, plane1 zooms from city3 to city1 with fuel level fl1 to fl5, plane1 flies from city1 to city2 with fuel level fl1 to fl2, plane1 zooms from city0 to city3 with fuel level fl4 to fl3, plane1 zooms from city1 to city0 with fuel level fl1 to fl6, plane1 zooms from city2 to city1 with fuel level fl0 to fl5, plane1 flies from city2 to city3 with fuel level fl6 to fl2, plane1 zooms from city1 to city0 with fuel level fl4 to fl5, plane1 zooms from city1 to city2 with fuel level fl6 to fl1, plane1 flies from city2 to city1 with fuel level fl4 to fl1, plane1 flies from city1 to city3 with fuel level fl1 to fl0, plane1 flies from city3 to city2 with fuel level fl5 to fl6, plane1 zooms from city1 to city3 with fuel level fl2 to fl1, plane1 zooms from city1 to city3 with fuel level fl1 to fl3, plane1 zooms from city3 to city1 with fuel level fl6 to fl1, plane1 zooms from city0 to city1 with fuel level fl5 to fl6, plane1 zooms from city0 to city2 with fuel level fl0 to fl5, plane1 zooms from city2 to city3 with fuel level fl1 to fl3, plane1 zooms from city1 to city2 with fuel level fl5 to fl0, plane1 zooms from city3 to city0 with fuel level fl6 to fl3, plane1 zooms from city0 to city2 with fuel level fl1 to fl5, plane1 zooms from city2 to city1 with fuel level fl1 to fl4, plane1 zooms from city1 to city2 with fuel level fl6 to fl2, plane1 zooms from city3 to city1 with fuel level fl3 to fl1, plane1 zooms from city2 to city3 with fuel level fl1 to fl2, plane1 gets refueled at city0 with fuel level fl1 to fl3, plane1 flies from city0 to city1 with fuel level fl3 to fl2, plane1 zooms from city0 to city2 with fuel level fl0 to fl3, plane1 zooms from city1 to city3 with fuel level fl1 to fl4, plane1 zooms from city3 to city2 with fuel level fl4 to fl0, plane1 zooms from city1 to city3 with fuel level fl0 to fl1, plane1 zooms from city3 to city1 with fuel level fl4 to fl0, plane1 zooms from city3 to city0 with fuel level fl2 to fl6, plane1 flies from city0 to city2 with fuel level fl0 to fl3, plane1 flies from city1 to city3 with fuel level fl4 to fl0, plane1 flies from city2 to city3 with fuel level fl1 to fl2, person1 departs plane1 at city0, plane1 zooms from city2 to city0 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl5 to fl6, plane1 flies from city0 to city1 with fuel level fl4 to fl2, person6 departs plane1 at city3, plane1 zooms from city2 to city3 with fuel level fl6 to fl1, plane1 zooms from city2 to city1 with fuel level fl4 to fl1, plane1 flies from city3 to city1 with fuel level fl4 to fl3, plane1 zooms from city0 to city2 with fuel level fl6 to fl3, plane1 zooms from city1 to city2 with fuel level fl6 to fl3, plane1 zooms from city2 to city1 with fuel level fl5 to fl2, plane1 flies from city0 to city1 with fuel level fl4 to fl1, plane1 zooms from city0 to city3 with fuel level fl2 to fl0, plane1 zooms from city0 to city1 with fuel level fl3 to fl4, plane1 zooms from city0 to city2 with fuel level fl1 to fl5, plane1 zooms from city0 to city1 with fuel level fl0 to fl1, plane1 zooms from city2 to city1 with fuel level fl1 to fl0, plane1 zooms from city0 to city1 with fuel level fl6 to fl3, plane1 zooms from city2 to city0 with fuel level fl2 to fl1, plane1 zooms from city0 to city3 with fuel level fl0 to fl4, plane1 zooms from city2 to city0 with fuel level fl1 to fl2, plane1 zooms from city1 to city2 with fuel level fl1 to fl0, plane1 flies from city1 to city2 with fuel level fl3 to fl1, plane1 zooms from city3 to city1 with fuel level fl1 to fl3, plane1 flies from city1 to city3 with fuel level fl2 to fl0, plane1 zooms from city0 to city3 with fuel level fl4 to fl6, plane1 flies from city1 to city0 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl5 to fl2, plane1 zooms from city2 to city3 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl1 to fl2, plane1 zooms from city3 to city1 with fuel level fl4 to fl0, plane1 zooms from city2 to city3 with fuel level fl1 to fl6, plane1 zooms from city1 to city0 with fuel level fl0 to fl4, plane1 zooms from city3 to city0 with fuel level fl0 to fl1, plane1 zooms from city3 to city1 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl5 to fl4, plane1 gets refueled at city1 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl4 to fl1, plane1 zooms from city1 to city3 with fuel level fl2 to fl5, plane1 zooms from city3 to city2 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl5 to fl2, plane1 zooms from city0 to city3 with fuel level fl2 to fl0, plane1 zooms from city2 to city0 with fuel level fl5 to fl3, plane1 zooms from city1 to city3 with fuel level fl0 to fl1, plane1 zooms from city2 to city3 with fuel level fl6 to fl5, plane1 zooms from city2 to city3 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl4 to fl5, plane1 gets refueled at city3 with fuel level fl4 to fl5, plane1 zooms from city2 to city3 with fuel level fl0 to fl6, plane1 zooms from city1 to city0 with fuel level fl6 to fl3, plane1 zooms from city1 to city3 with fuel level fl5 to fl1, plane1 flies from city0 to city2 with fuel level fl5 to fl0, plane1 zooms from city1 to city0 with fuel level fl1 to fl2, plane1 zooms from city2 to city3 with fuel level fl6 to fl0, plane1 zooms from city2 to city0 with fuel level fl6 to fl1, plane1 zooms from city3 to city0 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl1 to fl2, plane1 flies from city1 to city0 with fuel level fl5 to fl1, plane1 zooms from city2 to city0 with fuel level fl1 to fl0, plane1 flies from city2 to city1 with fuel level fl5 to fl3, plane1 zooms from city2 to city1 with fuel level fl0 to fl6, plane1 flies from city3 to city1 with fuel level fl3 to fl1, plane1 zooms from city2 to city3 with fuel level fl4 to fl5, plane1 zooms from city3 to city0 with fuel level fl4 to fl0, plane1 zooms from city1 to city0 with fuel level fl1 to fl0, plane1 zooms from city2 to city1 with fuel level fl4 to fl5, plane1 zooms from city0 to city1 with fuel level fl2 to fl5, plane1 zooms from city3 to city1 with fuel level fl6 to fl3, plane1 zooms from city1 to city3 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl3 to fl2, plane1 zooms from city1 to city2 with fuel level fl3 to fl4, plane1 zooms from city3 to city1 with fuel level fl1 to fl2, plane1 zooms from city3 to city2 with fuel level fl1 to fl6, plane1 zooms from city0 to city1 with fuel level fl6 to fl5, plane1 zooms from city0 to city3 with fuel level fl5 to fl2, plane1 zooms from city2 to city0 with fuel level fl1 to fl2, plane1 zooms from city3 to city0 with fuel level fl5 to fl0, plane1 zooms from city3 to city2 with fuel level fl0 to fl2, plane1 zooms from city0 to city1 with fuel level fl5 to fl2, plane1 flies from city3 to city1 with fuel level fl6 to fl3, plane1 zooms from city0 to city1 with fuel level fl1 to fl0, plane1 zooms from city1 to city2 with fuel level fl5 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl3, plane1 zooms from city0 to city3 with fuel level fl2 to fl6, plane1 zooms from city3 to city0 with fuel level fl6 to fl4, plane1 zooms from city2 to city1 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl6 to fl4, plane1 flies from city0 to city2 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl5 to fl3, plane1 zooms from city2 to city1 with fuel level fl3 to fl4, plane1 zooms from city0 to city2 with fuel level fl4 to fl5, plane1 zooms from city1 to city2 with fuel level fl0 to fl3, plane1 zooms from city1 to city0 with fuel level fl5 to fl0, plane1 zooms from city0 to city1 with fuel level fl6 to fl4, plane1 zooms from city0 to city3 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl0 to fl6, plane1 zooms from city3 to city2 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl3 to fl2, plane1 zooms from city0 to city3 with fuel level fl0 to fl2, plane1 zooms from city1 to city0 with fuel level fl2 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl5, plane1 gets refueled at city0 with fuel level fl2 to fl0, plane1 flies from city0 to city3 with fuel level fl2 to fl6, plane1 flies from city3 to city2 with fuel level fl4 to fl2, plane1 gets refueled at city3 with fuel level fl5 to fl1, plane1 zooms from city1 to city2 with fuel level fl5 to fl6, plane1 zooms from city3 to city1 with fuel level fl3 to fl6, plane1 zooms from city0 to city2 with fuel level fl2 to fl6, person4 boards plane1 at city0, plane1 zooms from city3 to city2 with fuel level fl1 to fl4, plane1 zooms from city1 to city3 with fuel level fl3 to fl2, plane1 gets refueled at city3 with fuel level fl6 to fl5, plane1 zooms from city2 to city0 with fuel level fl6 to fl0, plane1 zooms from city2 to city3 with fuel level fl3 to fl1, plane1 zooms from city1 to city2 with fuel level fl5 to fl1, plane1 zooms from city0 to city3 with fuel level fl2 to fl3, plane1 flies from city3 to city0 with fuel level fl4 to fl5, plane1 flies from city0 to city3 with fuel level fl0 to fl6, plane1 zooms from city1 to city2 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl0 to fl3, plane1 flies from city3 to city0 with fuel level fl3 to fl5, plane1 zooms from city1 to city0 with fuel level fl3 to fl2, plane1 zooms from city1 to city2 with fuel level fl1 to fl6, plane1 zooms from city2 to city3 with fuel level fl1 to fl3, plane1 zooms from city1 to city2 with fuel level fl1 to fl2, plane1 flies from city2 to city1 with fuel level fl4 to fl6, plane1 zooms from city0 to city1 with fuel level fl1 to fl2, plane1 flies from city3 to city2 with fuel level fl2 to fl6, plane1 zooms from city3 to city1 with fuel level fl3 to fl0, plane1 flies from city0 to city2 with fuel level fl1 to fl3, plane1 gets refueled at city3 with fuel level fl2 to fl0, plane1 zooms from city0 to city1 with fuel level fl5 to fl6, plane1 zooms from city0 to city2 with fuel level fl6 to fl1, plane1 zooms from city0 to city1 with fuel level fl2 to fl4, plane1 zooms from city0 to city2 with fuel level fl5 to fl3, plane1 flies from city3 to city1 with fuel level fl3 to fl0, plane1 zooms from city2 to city0 with fuel level fl4 to fl0, plane1 flies from city2 to city3 with fuel level fl3 to fl1, plane1 flies from city3 to city0 with fuel level fl5 to fl4, plane1 zooms from city3 to city0 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl2 to fl3, plane1 zooms from city1 to city0 with fuel level fl2 to fl0, plane1 zooms from city0 to city2 with fuel level fl3 to fl1, plane1 gets refueled at city2 with fuel level fl1 to fl6, plane1 flies from city0 to city1 with fuel level fl6 to fl5, plane1 zooms from city3 to city0 with fuel level fl1 to fl6, plane1 zooms from city1 to city3 with fuel level fl0 to fl6, plane1 zooms from city0 to city1 with fuel level fl3 to fl5, plane1 zooms from city1 to city0 with fuel level fl1 to fl6, plane1 zooms from city0 to city1 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl2 to fl1, plane1 zooms from city3 to city1 with fuel level fl1 to fl6, plane1 zooms from city3 to city1 with fuel level fl5 to fl4, plane1 flies from city1 to city2 with fuel level fl2 to fl0, plane1 zooms from city0 to city3 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl1 to fl3, plane1 flies from city1 to city0 with fuel level fl5 to fl0, plane1 flies from city2 to city0 with fuel level fl5 to fl0, plane1 zooms from city1 to city3 with fuel level fl3 to fl4, plane1 zooms from city1 to city2 with fuel level fl6 to fl0, plane1 flies from city3 to city0 with fuel level fl4 to fl2, plane1 zooms from city1 to city3 with fuel level fl6 to fl5, plane1 zooms from city3 to city0 with fuel level fl2 to fl0, plane1 zooms from city2 to city0 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl3 to fl5, plane1 flies from city3 to city0 with fuel level fl2 to fl6, plane1 zooms from city2 to city3 with fuel level fl5 to fl1, plane1 zooms from city2 to city0 with fuel level fl3 to fl1, plane1 zooms from city0 to city1 with fuel level fl0 to fl6, plane1 zooms from city1 to city3 with fuel level fl3 to fl1, plane1 zooms from city1 to city0 with fuel level fl0 to fl3, plane1 zooms from city3 to city2 with fuel level fl0 to fl1, plane1 zooms from city2 to city1 with fuel level fl4 to fl6, plane1 zooms from city0 to city3 with fuel level fl5 to fl2, plane1 zooms from city1 to city0 with fuel level fl0 to fl1, plane1 flies from city1 to city3 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl5 to fl4, plane1 zooms from city1 to city3 with fuel level fl4 to fl5, plane1 flies from city0 to city2 with fuel level fl6 to fl0, plane1 flies from city1 to city3 with fuel level fl0 to fl6, plane1 flies from city1 to city0 with fuel level fl1 to fl2, plane1 zooms from city0 to city1 with fuel level fl3 to fl2, plane1 zooms from city1 to city0 with fuel level fl6 to fl4, plane1 zooms from city1 to city0 with fuel level fl4 to fl1, plane1 zooms from city1 to city2 with fuel level fl4 to fl5, plane1 flies from city0 to city1 with fuel level fl4 to fl0, plane1 zooms from city0 to city3 with fuel level fl4 to fl0, plane1 zooms from city1 to city0 with fuel level fl6 to fl1, plane1 gets refueled at city3 with fuel level fl6 to fl4, plane1 flies from city1 to city2 with fuel level fl4 to fl6, plane1 zooms from city0 to city3 with fuel level fl2 to fl5, plane1 zooms from city2 to city0 with fuel level fl0 to fl6, plane1 zooms from city0 to city3 with fuel level fl4 to fl1, plane1 zooms from city1 to city0 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl4 to fl1, plane1 zooms from city0 to city3 with fuel level fl6 to fl3, plane1 zooms from city1 to city2 with fuel level fl4 to fl0, plane1 zooms from city0 to city1 with fuel level fl2 to fl3, plane1 zooms from city2 to city1 with fuel level fl2 to fl0, plane1 flies from city3 to city0 with fuel level fl6 to fl1, plane1 zooms from city1 to city0 with fuel level fl4 to fl3, plane1 zooms from city3 to city1 with fuel level fl3 to fl5, plane1 zooms from city3 to city2 with fuel level fl1 to fl6, plane1 zooms from city0 to city1 with fuel level fl2 to fl3, plane1 zooms from city1 to city2 with fuel level fl3 to fl5, plane1 zooms from city3 to city0 with fuel level fl1 to fl6, plane1 zooms from city1 to city2 with fuel level fl5 to fl4, plane1 flies from city0 to city3 with fuel level fl3 to fl4, plane1 flies from city0 to city1 with fuel level fl6 to fl3, plane1 zooms from city1 to city2 with fuel level fl2 to fl0, plane1 zooms from city0 to city1 with fuel level fl3 to fl4, plane1 zooms from city1 to city0 with fuel level fl1 to fl0, person5 boards plane1 at city2, plane1 zooms from city0 to city2 with fuel level fl3 to fl0, plane1 zooms from city2 to city3 with fuel level fl0 to fl4, plane1 zooms from city1 to city0 with fuel level fl6 to fl2, plane1 zooms from city0 to city3 with fuel level fl4 to fl5, plane1 zooms from city0 to city3 with fuel level fl0 to fl4, plane1 zooms from city1 to city3 with fuel level fl3 to fl2, plane1 zooms from city2 to city0 with fuel level fl6 to fl2, plane1 flies from city0 to city2 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl6 to fl3, plane1 zooms from city0 to city1 with fuel level fl4 to fl5, plane1 zooms from city2 to city0 with fuel level fl5 to fl4, plane1 flies from city1 to city2 with fuel level fl3 to fl2, plane1 zooms from city0 to city3 with fuel level fl4 to fl0, plane1 zooms from city3 to city2 with fuel level fl4 to fl3, plane1 zooms from city1 to city0 with fuel level fl2 to fl5, plane1 zooms from city2 to city3 with fuel level fl4 to fl3, plane1 zooms from city0 to city2 with fuel level fl2 to fl1, plane1 zooms from city2 to city0 with fuel level fl5 to fl2, plane1 zooms from city2 to city3 with fuel level fl1 to fl2, plane1 gets refueled at city2 with fuel level fl0 to fl2, plane1 zooms from city1 to city0 with fuel level fl4 to fl0, plane1 flies from city1 to city0 with fuel level fl1 to fl5, plane1 zooms from city3 to city0 with fuel level fl4 to fl5, plane1 zooms from city2 to city0 with fuel level fl3 to fl2, plane1 flies from city0 to city1 with fuel level fl1 to fl4, plane1 zooms from city0 to city3 with fuel level fl4 to fl6, plane1 zooms from city0 to city3 with fuel level fl1 to fl4, plane1 zooms from city1 to city0 with fuel level fl2 to fl4, plane1 zooms from city2 to city1 with fuel level fl2 to fl0, plane1 zooms from city1 to city0 with fuel level fl5 to fl1, plane1 zooms from city1 to city0 with fuel level fl5 to fl2, plane1 zooms from city2 to city3 with fuel level fl6 to fl0, plane1 flies from city1 to city3 with fuel level fl6 to fl0, plane1 zooms from city3 to city1 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl6 to fl5, plane1 gets refueled at city0 with fuel level fl4 to fl6, plane1 gets refueled at city1 with fuel level fl5 to fl4, person5 departs plane1 at city2, plane1 zooms from city2 to city0 with fuel level fl2 to fl4, plane1 zooms from city2 to city3 with fuel level fl3 to fl4, plane1 zooms from city0 to city1 with fuel level fl4 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl0, plane1 zooms from city3 to city2 with fuel level fl2 to fl0, plane1 zooms from city1 to city0 with fuel level fl6 to fl5, plane1 zooms from city3 to city1 with fuel level fl4 to fl3, plane1 zooms from city3 to city0 with fuel level fl3 to fl6, plane1 zooms from city0 to city3 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl3 to fl5, plane1 gets refueled at city3 with fuel level fl4 to fl3, plane1 zooms from city1 to city0 with fuel level fl6 to fl4, plane1 zooms from city2 to city3 with fuel level fl2 to fl3, person2 boards plane1 at city0, plane1 zooms from city1 to city2 with fuel level fl6 to fl4, plane1 gets refueled at city0 with fuel level fl5 to fl1, plane1 gets refueled at city2 with fuel level fl3 to fl0, plane1 zooms from city0 to city2 with fuel level fl0 to fl6, plane1 zooms from city2 to city1 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl4 to fl1, plane1 zooms from city0 to city3 with fuel level fl1 to fl0, plane1 zooms from city1 to city2 with fuel level fl1 to fl2, plane1 zooms from city2 to city1 with fuel level fl1 to fl6, plane1 gets refueled at city1 with fuel level fl6 to fl4, plane1 flies from city2 to city1 with fuel level fl1 to fl6, plane1 zooms from city0 to city3 with fuel level fl3 to fl0, plane1 zooms from city0 to city1 with fuel level fl0 to fl5, plane1 zooms from city1 to city0 with fuel level fl4 to fl0, plane1 zooms from city2 to city1 with fuel level fl1 to fl3, plane1 zooms from city3 to city2 with fuel level fl3 to fl0, plane1 zooms from city1 to city2 with fuel level fl2 to fl4, plane1 zooms from city0 to city3 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl0 to fl5, plane1 zooms from city2 to city1 with fuel level fl5 to fl3, plane1 zooms from city0 to city2 with fuel level fl0 to fl2, plane1 zooms from city2 to city0 with fuel level fl1 to fl6, plane1 zooms from city1 to city0 with fuel level fl3 to fl0, plane1 zooms from city3 to city2 with fuel level fl0 to fl2, plane1 zooms from city1 to city2 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl6 to fl5, plane1 zooms from city3 to city2 with fuel level fl3 to fl2, plane1 zooms from city0 to city1 with fuel level fl3 to fl0, plane1 zooms from city1 to city0 with fuel level fl1 to fl3, plane1 zooms from city0 to city2 with fuel level fl4 to fl6, plane1 zooms from city3 to city0 with fuel level fl0 to fl4, plane1 zooms from city3 to city0 with fuel level fl1 to fl6, plane1 zooms from city3 to city1 with fuel level fl5 to fl6, plane1 zooms from city1 to city3 with fuel level fl1 to fl3, plane1 flies from city1 to city2 with fuel level fl4 to fl1, plane1 zooms from city3 to city2 with fuel level fl1 to fl5, plane1 zooms from city2 to city1 with fuel level fl4 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl1, plane1 zooms from city0 to city3 with fuel level fl0 to fl2, plane1 flies from city3 to city1 with fuel level fl3 to fl6, plane1 zooms from city0 to city3 with fuel level fl3 to fl1, plane1 zooms from city3 to city1 with fuel level fl3 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl3, plane1 flies from city2 to city1 with fuel level fl4 to fl5, plane1 zooms from city3 to city0 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city2 with fuel level fl3 to fl5, plane1 zooms from city2 to city1 with fuel level fl0 to fl5, plane1 zooms from city0 to city1 with fuel level fl0 to fl6, plane1 zooms from city1 to city3 with fuel level fl2 to fl0, plane1 zooms from city2 to city1 with fuel level fl0 to fl6, plane1 flies from city0 to city2 with fuel level fl4 to fl5, plane1 zooms from city1 to city0 with fuel level fl4 to fl1, plane1 gets refueled at city1 with fuel level fl6 to fl2, plane1 gets refueled at city3 with fuel level fl2 to fl3, plane1 zooms from city0 to city2 with fuel level fl0 to fl5, plane1 gets refueled at city2 with fuel level fl1 to fl0, plane1 zooms from city0 to city1 with fuel level fl6 to fl5, plane1 zooms from city2 to city1 with fuel level fl2 to fl3, plane1 flies from city2 to city3 with fuel level fl0 to fl4, plane1 zooms from city2 to city3 with fuel level fl0 to fl5, person4 boards plane1 at city3, plane1 zooms from city2 to city0 with fuel level fl4 to fl6, plane1 zooms from city2 to city0 with fuel level fl3 to fl5, plane1 gets refueled at city2 with fuel level fl5 to fl3, plane1 zooms from city0 to city1 with fuel level fl2 to fl6, plane1 gets refueled at city0 with fuel level fl1 to fl4, plane1 zooms from city0 to city1 with fuel level fl5 to fl6, plane1 zooms from city3 to city2 with fuel level fl0 to fl4, plane1 flies from city0 to city1 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl4 to fl3, plane1 zooms from city1 to city2 with fuel level fl0 to fl4, plane1 flies from city2 to city0 with fuel level fl2 to fl0, plane1 zooms from city3 to city1 with fuel level fl0 to fl5, plane1 zooms from city2 to city3 with fuel level fl2 to fl6, plane1 zooms from city1 to city2 with fuel level fl1 to fl5, plane1 gets refueled at city1 with fuel level fl0 to fl3, plane1 zooms from city1 to city3 with fuel level fl4 to fl0, plane1 zooms from city3 to city0 with fuel level fl1 to fl6, plane1 zooms from city3 to city0 with fuel level fl3 to fl5, plane1 zooms from city1 to city3 with fuel level fl4 to fl2, plane1 flies from city3 to city2 with fuel level fl6 to fl1, plane1 zooms from city2 to city1 with fuel level fl2 to fl6, plane1 zooms from city0 to city1 with fuel level fl3 to fl4, plane1 flies from city0 to city3 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl5 to fl1, plane1 zooms from city0 to city2 with fuel level fl1 to fl2, plane1 zooms from city0 to city1 with fuel level fl1 to fl3, plane1 flies from city2 to city3 with fuel level fl2 to fl5, plane1 zooms from city1 to city3 with fuel level fl5 to fl2, plane1 gets refueled at city0 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl6 to fl2, plane1 zooms from city0 to city3 with fuel level fl2 to fl3, plane1 zooms from city0 to city2 with fuel level fl5 to fl3, plane1 zooms from city3 to city1 with fuel level fl4 to fl0, plane1 zooms from city1 to city0 with fuel level fl4 to fl6, plane1 flies from city3 to city1 with fuel level fl1 to fl4, plane1 zooms from city1 to city3 with fuel level fl0 to fl6, plane1 zooms from city1 to city0 with fuel level fl6 to fl1, plane1 zooms from city2 to city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl5 to fl0, plane1 flies from city3 to city2 with fuel level fl4 to fl5, plane1 zooms from city3 to city0 with fuel level fl4 to fl2, plane1 zooms from city1 to city0 with fuel level fl0 to fl1, plane1 flies from city2 to city0 with fuel level fl6 to fl3, plane1 zooms from city2 to city1 with fuel level fl2 to fl3, plane1 zooms from city3 to city0 with fuel level fl6 to fl1, plane1 zooms from city1 to city3 with fuel level fl0 to fl3, plane1 zooms from city3 to city1 with fuel level fl0 to fl3, plane1 flies from city2 to city0 with fuel level fl1 to fl6, plane1 zooms from city1 to city2 with fuel level fl5 to fl0, plane1 gets refueled at city3 with fuel level fl5 to fl2, plane1 flies from city2 to city3 with fuel level fl3 to fl0, plane1 flies from city3 to city1 with fuel level fl2 to fl3, plane1 zooms from city3 to city2 with fuel level fl5 to fl3, plane1 flies from city0 to city3 with fuel level fl1 to fl3, plane1 zooms from city1 to city0 with fuel level fl4 to fl5, person2 departs plane1 at city0, plane1 zooms from city0 to city1 with fuel level fl2 to fl0, plane1 gets refueled at city0 with fuel level fl3 to fl0, plane1 flies from city0 to city3 with fuel level fl0 to fl5, plane1 flies from city1 to city2 with fuel level fl6 to fl2, plane1 zooms from city1 to city2 with fuel level fl5 to fl3, plane1 zooms from city2 to city0 with fuel level fl6 to fl5, plane1 flies from city1 to city2 with fuel level fl6 to fl0, plane1 zooms from city1 to city3 with fuel level fl1 to fl0, plane1 flies from city0 to city2 with fuel level fl3 to fl5, plane1 zooms from city0 to city3 with fuel level fl6 to fl2, plane1 zooms from city0 to city3 with fuel level fl3 to fl1, plane1 zooms from city3 to city1 with fuel level fl3 to fl4, plane1 zooms from city0 to city3 with fuel level fl5 to fl2, plane1 zooms from city3 to city1 with fuel level fl6 to fl0, plane1 zooms from city0 to city1 with fuel level fl2 to fl0, plane1 gets refueled at city3 with fuel level fl6 to fl2, plane1 zooms from city3 to city2 with fuel level fl2 to fl5, plane1 flies from city3 to city2 with fuel level fl0 to fl3, plane1 flies from city3 to city0 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl0 to fl6, plane1 zooms from city3 to city2 with fuel level fl1 to fl3, plane1 zooms from city0 to city1 with fuel level fl3 to fl0, plane1 zooms from city3 to city2 with fuel level fl0 to fl5, person5 boards plane1 at city0, plane1 gets refueled at city1 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl1 to fl3, plane1 zooms from city2 to city0 with fuel level fl2 to fl0, plane1 zooms from city2 to city1 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl6 to fl2, plane1 zooms from city1 to city0 with fuel level fl6 to fl5, plane1 zooms from city0 to city1 with fuel level fl4 to fl0, plane1 zooms from city1 to city0 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl5 to fl6, plane1 flies from city2 to city1 with fuel level fl0 to fl2, plane1 zooms from city2 to city1 with fuel level fl6 to fl2, plane1 zooms from city1 to city3 with fuel level fl1 to fl0, plane1 zooms from city0 to city2 with fuel level fl2 to fl5, plane1 zooms from city3 to city1 with fuel level fl2 to fl5, plane1 zooms from city1 to city0 with fuel level fl4 to fl2, plane1 zooms from city1 to city0 with fuel level fl1 to fl2, plane1 flies from city3 to city1 with fuel level fl1 to fl6, plane1 zooms from city2 to city3 with fuel level fl5 to fl0, plane1 zooms from city2 to city0 with fuel level fl3 to fl4, plane1 zooms from city2 to city1 with fuel level fl3 to fl1, plane1 zooms from city2 to city0 with fuel level fl4 to fl2, plane1 zooms from city0 to city2 with fuel level fl5 to fl2, plane1 zooms from city2 to city0 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl2 to fl3, plane1 flies from city1 to city0 with fuel level fl3 to fl1, plane1 zooms from city0 to city3 with fuel level fl5 to fl3, plane1 zooms from city1 to city3 with fuel level fl2 to fl3, plane1 gets refueled at city2 with fuel level fl0 to fl4, plane1 flies from city1 to city2 with fuel level fl6 to fl3, plane1 zooms from city0 to city2 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl6 to fl5, plane1 zooms from city2 to city0 with fuel level fl0 to fl1, person5 boards plane1 at city3, plane1 zooms from city3 to city2 with fuel level fl2 to fl0, plane1 zooms from city1 to city3 with fuel level fl6 to fl4, plane1 gets refueled at city0 with fuel level fl4 to fl5, plane1 flies from city2 to city3 with fuel level fl6 to fl5, plane1 zooms from city0 to city2 with fuel level fl3 to fl6, plane1 zooms from city0 to city2 with fuel level fl4 to fl1, plane1 zooms from city3 to city0 with fuel level fl6 to fl5, plane1 zooms from city0 to city3 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl3 to fl4, plane1 zooms from city3 to city1 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl4 to fl0, plane1 flies from city0 to city3 with fuel level fl1 to fl4, plane1 zooms from city2 to city3 with fuel level fl6 to fl4, plane1 zooms from city3 to city0 with fuel level fl2 to fl0, plane1 zooms from city0 to city1 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl3 to fl2, plane1 zooms from city0 to city3 with fuel level fl2 to fl4, plane1 flies from city1 to city3 with fuel level fl6 to fl1, plane1 zooms from city1 to city0 with fuel level fl0 to fl3, plane1 flies from city0 to city2 with fuel level fl1 to fl6, plane1 zooms from city1 to city0 with fuel level fl2 to fl1, plane1 flies from city2 to city1 with fuel level fl3 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl2, plane1 zooms from city3 to city0 with fuel level fl5 to fl6, plane1 zooms from city3 to city2 with fuel level fl3 to fl6, plane1 zooms from city3 to city1 with fuel level fl0 to fl5, plane1 flies from city3 to city1 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl6 to fl5, plane1 zooms from city3 to city1 with fuel level fl4 to fl3, plane1 zooms from city2 to city0 with fuel level fl2 to fl0, plane1 zooms from city0 to city3 with fuel level fl0 to fl1, plane1 zooms from city2 to city1 with fuel level fl6 to fl3, plane1 zooms from city2 to city0 with fuel level fl1 to fl0, plane1 zooms from city0 to city3 with fuel level fl1 to fl6, plane1 zooms from city0 to city1 with fuel level fl6 to fl2, plane1 zooms from city2 to city0 with fuel level fl3 to fl6, plane1 zooms from city0 to city1 with fuel level fl2 to fl4, plane1 gets refueled at city2 with fuel level fl2 to fl0, plane1 zooms from city0 to city1 with fuel level fl3 to fl1, plane1 flies from city3 to city0 with fuel level fl3 to fl0, plane1 zooms from city3 to city1 with fuel level fl1 to fl5, plane1 flies from city2 to city1 with fuel level fl3 to fl6, plane1 zooms from city1 to city0 with fuel level fl1 to fl6, plane1 zooms from city3 to city1 with fuel level fl5 to fl2, plane1 zooms from city2 to city0 with fuel level fl0 to fl4, plane1 gets refueled at city2 with fuel level fl4 to fl2, plane1 zooms from city1 to city0 with fuel level fl3 to fl0, plane1 zooms from city0 to city2 with fuel level fl1 to fl3, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 zooms from city3 to city0 with fuel level fl1 to fl5, plane1 zooms from city3 to city1 with fuel level fl6 to fl5, plane1 zooms from city0 to city1 with fuel level fl2 to fl5, plane1 flies from city2 to city0 with fuel level fl0 to fl3, plane1 zooms from city0 to city2 with fuel level fl2 to fl3, plane1 zooms from city0 to city2 with fuel level fl6 to fl4, plane1 zooms from city1 to city2 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl4 to fl3, plane1 zooms from city3 to city2 with fuel level fl2 to fl6, plane1 zooms from city3 to city1 with fuel level fl3 to fl1, plane1 gets refueled at city3 with fuel level fl6 to fl1, plane1 zooms from city0 to city3 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl5 to fl6, plane1 zooms from city0 to city3 with fuel level fl0 to fl3, plane1 flies from city1 to city0 with fuel level fl6 to fl4, plane1 zooms from city2 to city3 with fuel level fl0 to fl4, plane1 zooms from city0 to city1 with fuel level fl5 to fl0, plane1 zooms from city3 to city0 with fuel level fl4 to fl6, plane1 zooms from city3 to city1 with fuel level fl1 to fl2, plane1 zooms from city2 to city0 with fuel level fl2 to fl1, plane1 flies from city3 to city1 with fuel level fl4 to fl1, plane1 zooms from city0 to city3 with fuel level fl0 to fl1, plane1 zooms from city0 to city1 with fuel level fl0 to fl4, plane1 zooms from city0 to city2 with fuel level fl3 to fl1, plane1 zooms from city0 to city1 with fuel level fl3 to fl6, plane1 zooms from city3 to city2 with fuel level fl0 to fl3, plane1 zooms from city3 to city0 with fuel level fl1 to fl4, plane1 zooms from city2 to city3 with fuel level fl2 to fl1, plane1 flies from city0 to city1 with fuel level fl3 to fl5, plane1 zooms from city1 to city2 with fuel level fl1 to fl5, plane1 flies from city1 to city3 with fuel level fl0 to fl1, plane1 zooms from city2 to city0 with fuel level fl3 to fl1, plane1 zooms from city0 to city1 with fuel level fl5 to fl1, plane1 zooms from city1 to city0 with fuel level fl6 to fl1, plane1 zooms from city1 to city2 with fuel level fl0 to fl4, plane1 zooms from city0 to city1 with fuel level fl4 to fl5, plane1 zooms from city1 to city3 with fuel level fl1 to fl5, plane1 zooms from city1 to city0 with fuel level fl3 to fl2, plane1 zooms from city2 to city3 with fuel level fl6 to fl3, plane1 gets refueled at city1 with fuel level fl5 to fl3, plane1 zooms from city3 to city0 with fuel level fl6 to fl4, plane1 zooms from city3 to city2 with fuel level fl2 to fl5, plane1 zooms from city2 to city1 with fuel level fl1 to fl5, plane1 flies from city1 to city3 with fuel level fl6 to fl5, plane1 zooms from city1 to city0 with fuel level fl5 to fl1, plane1 gets refueled at city2 with fuel level fl4 to fl0, plane1 zooms from city3 to city2 with fuel level fl5 to fl4, plane1 flies from city0 to city1 with fuel level fl5 to fl3, plane1 zooms from city2 to city0 with fuel level fl1 to fl2, plane1 flies from city0 to city3 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl5 to fl6, plane1 zooms from city1 to city2 with fuel level fl3 to fl1, plane1 zooms from city1 to city2 with fuel level fl4 to fl0, plane1 zooms from city2 to city3 with fuel level fl5 to fl4, plane1 zooms from city0 to city3 with fuel level fl0 to fl3, plane1 zooms from city2 to city1 with fuel level fl4 to fl0, plane1 zooms from city0 to city2 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl2 to fl0, plane1 flies from city3 to city1 with fuel level fl3 to fl5, plane1 zooms from city0 to city2 with fuel level fl5 to fl1, plane1 zooms from city3 to city1 with fuel level fl5 to fl6, plane1 zooms from city1 to city2 with fuel level fl4 to fl2, plane1 zooms from city0 to city2 with fuel level fl1 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl4, plane1 flies from city2 to city1 with fuel level fl5 to fl4, plane1 zooms from city3 to city0 with fuel level fl2 to fl4, plane1 zooms from city0 to city2 with fuel level fl0 to fl2, plane1 zooms from city2 to city1 with fuel level fl2 to fl6, plane1 zooms from city1 to city0 with fuel level fl3 to fl1, plane1 zooms from city0 to city3 with fuel level fl4 to fl5, plane1 zooms from city1 to city0 with fuel level fl1 to fl3, plane1 zooms from city1 to city0 with fuel level fl2 to fl0, plane1 flies from city2 to city0 with fuel level fl3 to fl5, plane1 zooms from city2 to city1 with fuel level fl3 to fl4, plane1 zooms from city3 to city2 with fuel level fl1 to fl5, plane1 zooms from city1 to city0 with fuel level fl4 to fl2, plane1 zooms from city1 to city3 with fuel level fl4 to fl0, plane1 zooms from city0 to city1 with fuel level fl4 to fl1, plane1 zooms from city2 to city3 with fuel level fl5 to fl0, plane1 flies from city2 to city3 with fuel level fl2 to fl0, plane1 zooms from city2 to city1 with fuel level fl5 to fl2, plane1 zooms from city2 to city1 with fuel level fl0 to fl3, plane1 zooms from city2 to city1 with fuel level fl2 to fl6, plane1 zooms from city0 to city1 with fuel level fl5 to fl3, plane1 zooms from city3 to city0 with fuel level fl0 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl2, plane1 gets refueled at city3 with fuel level fl3 to fl4, plane1 zooms from city0 to city2 with fuel level fl2 to fl0, plane1 flies from city0 to city3 with fuel level fl2 to fl4, plane1 zooms from city2 to city1 with fuel level fl3 to fl0, plane1 zooms from city1 to city3 with fuel level fl0 to fl4, plane1 gets refueled at city1 with fuel level fl6 to fl3, plane1 zooms from city1 to city2 with fuel level fl6 to fl5, plane1 zooms from city1 to city3 with fuel level fl4 to fl5, plane1 gets refueled at city3 with fuel level fl4 to fl6, plane1 zooms from city2 to city0 with fuel level fl6 to fl2, plane1 zooms from city3 to city0 with fuel level fl0 to fl2, plane1 zooms from city0 to city1 with fuel level fl6 to fl2, plane1 flies from city1 to city3 with fuel level fl1 to fl2, plane1 zooms from city3 to city2 with fuel level fl0 to fl1, plane1 zooms from city1 to city0 with fuel level fl3 to fl5, plane1 zooms from city2 to city1 with fuel level fl3 to fl5, plane1 zooms from city0 to city3 with fuel level fl3 to fl4, plane1 zooms from city1 to city0 with fuel level fl6 to fl3, plane1 zooms from city3 to city0 with fuel level fl2 to fl4, plane1 flies from city3 to city2 with fuel level fl4 to fl0, plane1 zooms from city1 to city2 with fuel level fl4 to fl1, plane1 zooms from city2 to city0 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl0 to fl6, plane1 zooms from city0 to city1 with fuel level fl0 to fl1, plane1 zooms from city3 to city2 with fuel level fl4 to fl5, plane1 zooms from city1 to city3 with fuel level fl5 to fl2, plane1 zooms from city3 to city1 with fuel level fl3 to fl2, plane1 zooms from city2 to city1 with fuel level fl5 to fl1, plane1 zooms from city2 to city3 with fuel level fl1 to fl0, plane1 flies from city1 to city3 with fuel level fl4 to fl5, plane1 zooms from city0 to city1 with fuel level fl3 to fl6, plane1 zooms from city0 to city3 with fuel level fl4 to fl6, plane1 flies from city0 to city1 with fuel level fl5 to fl6, plane1 zooms from city0 to city3 with fuel level fl0 to fl1, plane1 zooms from city3 to city0 with fuel level fl6 to fl3, plane1 zooms from city0 to city3 with fuel level fl0 to fl1, plane1 zooms from city2 to city0 with fuel level fl0 to fl1, plane1 zooms from city2 to city1 with fuel level fl0 to fl3, person1 boards plane1 at city1, plane1 zooms from city3 to city2 with fuel level fl1 to fl6, plane1 zooms from city3 to city0 with fuel level fl6 to fl4, plane1 zooms from city1 to city2 with fuel level fl0 to fl6, plane1 flies from city3 to city2 with fuel level fl2 to fl4, plane1 zooms from city0 to city3 with fuel level fl6 to fl2, plane1 flies from city1 to city3 with fuel level fl5 to fl2, plane1 gets refueled at city2 with fuel level fl6 to fl1, plane1 flies from city2 to city0 with fuel level fl5 to fl1, plane1 zooms from city3 to city0 with fuel level fl2 to fl4, plane1 zooms from city2 to city3 with fuel level fl4 to fl2, plane1 zooms from city1 to city3 with fuel level fl2 to fl5, plane1 zooms from city3 to city1 with fuel level fl1 to fl4, plane1 zooms from city0 to city1 with fuel level fl4 to fl3, plane1 zooms from city0 to city3 with fuel level fl4 to fl1, plane1 zooms from city0 to city2 with fuel level fl6 to fl5, plane1 zooms from city1 to city2 with fuel level fl3 to fl4, plane1 zooms from city3 to city1 with fuel level fl4 to fl2, plane1 zooms from city1 to city3 with fuel level fl6 to fl1, plane1 zooms from city3 to city0 with fuel level fl4 to fl6, plane1 zooms from city3 to city1 with fuel level fl6 to fl5, plane1 zooms from city0 to city3 with fuel level fl5 to fl3, plane1 zooms from city0 to city1 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl1 to fl4, plane1 flies from city2 to city1 with fuel level fl6 to fl0, plane1 gets refueled at city2 with fuel level fl5 to fl1, plane1 zooms from city0 to city1 with fuel level fl2 to fl5, plane1 flies from city1 to city3 with fuel level fl1 to fl4, plane1 zooms from city2 to city0 with fuel level fl6 to fl4, plane1 zooms from city3 to city1 with fuel level fl6 to fl2, plane1 zooms from city0 to city1 with fuel level fl4 to fl1, plane1 zooms from city2 to city0 with fuel level fl2 to fl3, plane1 flies from city1 to city3 with fuel level fl2 to fl5, plane1 zooms from city2 to city0 with fuel level fl5 to fl1, plane1 gets refueled at city2 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl4 to fl6, plane1 gets refueled at city2 with fuel level fl1 to fl2, plane1 flies from city0 to city2 with fuel level fl3 to fl2, plane1 zooms from city3 to city0 with fuel level fl3 to fl4, plane1 zooms from city3 to city1 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl1 to fl3, plane1 zooms from city0 to city2 with fuel level fl4 to fl5, plane1 flies from city3 to city2 with fuel level fl6 to fl0, plane1 zooms from city3 to city1 with fuel level fl3 to fl2, plane1 flies from city3 to city2 with fuel level fl5 to fl0, plane1 zooms from city1 to city0 with fuel level fl1 to fl6, plane1 zooms from city3 to city1 with fuel level fl4 to fl6, plane1 zooms from city2 to city1 with fuel level fl4 to fl1, plane1 zooms from city0 to city1 with fuel level fl0 to fl2, plane1 zooms from city3 to city0 with fuel level fl5 to fl6, plane1 zooms from city0 to city3 with fuel level fl4 to fl0, plane1 zooms from city3 to city0 with fuel level fl5 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl3, plane1 zooms from city0 to city2 with fuel level fl3 to fl1, plane1 flies from city2 to city1 with fuel level fl6 to fl1, plane1 zooms from city2 to city1 with fuel level fl5 to fl0, plane1 zooms from city2 to city3 with fuel level fl2 to fl3, plane1 zooms from city3 to city1 with fuel level fl2 to fl0, plane1 zooms from city3 to city1 with fuel level fl3 to fl6, plane1 zooms from city3 to city2 with fuel level fl4 to fl0, person6 departs plane1 at city2, plane1 zooms from city2 to city1 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl0 to fl4, plane1 zooms from city2 to city0 with fuel level fl4 to fl0, plane1 zooms from city3 to city0 with fuel level fl5 to fl6, plane1 zooms from city2 to city0 with fuel level fl3 to fl4, plane1 zooms from city3 to city2 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl2 to fl4, plane1 flies from city1 to city2 with fuel level fl2 to fl1, plane1 zooms from city1 to city2 with fuel level fl6 to fl1, plane1 zooms from city3 to city1 with fuel level fl2 to fl1, plane1 zooms from city0 to city2 with fuel level fl4 to fl0, plane1 zooms from city3 to city2 with fuel level fl1 to fl6, plane1 flies from city2 to city3 with fuel level fl1 to fl5, plane1 zooms from city3 to city2 with fuel level fl0 to fl6, plane1 zooms from city0 to city2 with fuel level fl0 to fl5, person3 departs plane1 at city0, plane1 zooms from city2 to city3 with fuel level fl3 to fl4, plane1 flies from city2 to city0 with fuel level fl1 to fl2, plane1 zooms from city1 to city3 with fuel level fl3 to fl6, plane1 zooms from city1 to city0 with fuel level fl2 to fl4, plane1 flies from city0 to city1 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl3 to fl4, plane1 zooms from city2 to city3 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl0 to fl2, plane1 zooms from city2 to city3 with fuel level fl3 to fl4, plane1 zooms from city3 to city2 with fuel level fl2 to fl1, plane1 zooms from city0 to city3 with fuel level fl5 to fl4, plane1 zooms from city0 to city1 with fuel level fl5 to fl0, plane1 zooms from city3 to city1 with fuel level fl3 to fl5, plane1 gets refueled at city3 with fuel level fl1 to fl2, plane1 zooms from city3 to city2 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl4 to fl5, plane1 zooms from city2 to city1 with fuel level fl1 to fl2, plane1 zooms from city1 to city3 with fuel level fl2 to fl4, plane1 zooms from city3 to city0 with fuel level fl0 to fl2, plane1 zooms from city3 to city2 with fuel level fl1 to fl2, plane1 zooms from city2 to city1 with fuel level fl4 to fl3, plane1 zooms from city0 to city3 with fuel level fl6 to fl1, plane1 zooms from city3 to city2 with fuel level fl1 to fl4, plane1 zooms from city0 to city1 with fuel level fl2 to fl0, person7 departs plane1 at city1, plane1 zooms from city1 to city0 with fuel level fl0 to fl2, plane1 flies from city0 to city2 with fuel level fl6 to fl4, plane1 gets refueled at city0 with fuel level fl5 to fl4, plane1 flies from city1 to city0 with fuel level fl1 to fl4, plane1 gets refueled at city1 with fuel level fl4 to fl0, plane1 zooms from city3 to city1 with fuel level fl2 to fl5, plane1 flies from city2 to city0 with fuel level fl5 to fl4, plane1 zooms from city2 to city0 with fuel level fl5 to fl4, plane1 zooms from city3 to city1 with fuel level fl6 to fl3, plane1 zooms from city3 to city1 with fuel level fl5 to fl1, plane1 zooms from city2 to city3 with fuel level fl3 to fl6, plane1 zooms from city3 to city2 with fuel level fl0 to fl5, plane1 zooms from city0 to city1 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl1 to fl4, plane1 zooms from city2 to city1 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl4 to fl6, plane1 zooms from city3 to city0 with fuel level fl1 to fl3, plane1 zooms from city2 to city0 with fuel level fl2 to fl5, plane1 zooms from city1 to city0 with fuel level fl1 to fl3, plane1 zooms from city1 to city3 with fuel level fl0 to fl3, person4 departs plane1 at city2, plane1 zooms from city3 to city0 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl2 to fl4, plane1 zooms from city1 to city3 with fuel level fl6 to fl0, plane1 zooms from city3 to city1 with fuel level fl0 to fl3, plane1 zooms from city1 to city2 with fuel level fl5 to fl3, plane1 flies from city0 to city3 with fuel level fl5 to fl6, plane1 gets refueled at city3 with fuel level fl3 to fl5, plane1 zooms from city0 to city3 with fuel level fl6 to fl5, plane1 gets refueled at city0 with fuel level fl5 to fl3, plane1 zooms from city2 to city1 with fuel level fl5 to fl4, plane1 zooms from city2 to city3 with fuel level fl3 to fl6, plane1 zooms from city3 to city1 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl5 to fl4, plane1 zooms from city2 to city3 with fuel level fl1 to fl3, plane1 zooms from city1 to city2 with fuel level fl3 to fl6, plane1 zooms from city1 to city0 with fuel level fl3 to fl2, plane1 zooms from city1 to city2 with fuel level fl2 to fl0, plane1 zooms from city3 to city0 with fuel level fl5 to fl0, plane1 zooms from city3 to city1 with fuel level fl0 to fl6, plane1 zooms from city3 to city2 with fuel level fl6 to fl0, plane1 gets refueled at city1 with fuel level fl3 to fl6, plane1 zooms from city2 to city1 with fuel level fl3 to fl0, plane1 zooms from city3 to city1 with fuel level fl3 to fl2, plane1 flies from city2 to city0 with fuel level fl0 to fl5, plane1 zooms from city0 to city2 with fuel level fl0 to fl5, person4 departs plane1 at city3, plane1 zooms from city3 to city2 with fuel level fl4 to fl3, plane1 zooms from city3 to city0 with fuel level fl5 to fl6, plane1 zooms from city2 to city1 with fuel level fl3 to fl1, plane1 zooms from city1 to city3 with fuel level fl4 to fl0, plane1 gets refueled at city3 with fuel level fl0 to fl3, plane1 flies from city1 to city3 with fuel level fl5 to fl4, plane1 zooms from city3 to city0 with fuel level fl5 to fl3, plane1 gets refueled at city3 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl6 to fl4, plane1 zooms from city1 to city3 with fuel level fl4 to fl1, plane1 zooms from city3 to city2 with fuel level fl3 to fl6, plane1 zooms from city3 to city2 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl1 to fl0, plane1 zooms from city3 to city0 with fuel level fl4 to fl2, plane1 zooms from city1 to city0 with fuel level fl0 to fl6, plane1 zooms from city0 to city3 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl0 to fl4, plane1 zooms from city0 to city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl4 to fl1, plane1 zooms from city2 to city3 with fuel level fl3 to fl5, plane1 gets refueled at city1 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl6 to fl4, plane1 zooms from city3 to city1 with fuel level fl2 to fl4, plane1 zooms from city3 to city0 with fuel level fl4 to fl1, plane1 zooms from city1 to city2 with fuel level fl3 to fl0, plane1 zooms from city0 to city1 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl0 to fl3, plane1 flies from city0 to city3 with fuel level fl6 to fl2, plane1 flies from city2 to city0 with fuel level fl1 to fl0, plane1 zooms from city3 to city1 with fuel level fl6 to fl3, plane1 zooms from city0 to city3 with fuel level fl2 to fl1, plane1 zooms from city1 to city0 with fuel level fl6 to fl2, plane1 zooms from city1 to city0 with fuel level fl3 to fl2, plane1 zooms from city1 to city0 with fuel level fl4 to fl3, plane1 zooms from city3 to city1 with fuel level fl1 to fl0, plane1 zooms from city3 to city1 with fuel level fl0 to fl4, plane1 zooms from city2 to city3 with fuel level fl6 to fl2, plane1 zooms from city0 to city2 with fuel level fl4 to fl6, plane1 zooms from city3 to city1 with fuel level fl1 to fl6, plane1 zooms from city3 to city2 with fuel level fl2 to fl3, plane1 zooms from city1 to city3 with fuel level fl0 to fl3, plane1 zooms from city2 to city0 with fuel level fl1 to fl4, plane1 zooms from city1 to city3 with fuel level fl3 to fl1, plane1 flies from city2 to city3 with fuel level fl0 to fl5, plane1 gets refueled at city2 with fuel level fl4 to fl1, plane1 zooms from city3 to city1 with fuel level fl0 to fl1, plane1 zooms from city3 to city0 with fuel level fl2 to fl6, plane1 flies from city0 to city2 with fuel level fl4 to fl0, plane1 zooms from city3 to city0 with fuel level fl6 to fl3, plane1 zooms from city0 to city2 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl6 to fl2, person5 departs plane1 at city3, plane1 zooms from city1 to city3 with fuel level fl4 to fl6, plane1 gets refueled at city3 with fuel level fl0 to fl6, plane1 zooms from city0 to city3 with fuel level fl4 to fl1, plane1 flies from city0 to city1 with fuel level fl0 to fl2, plane1 zooms from city3 to city0 with fuel level fl2 to fl3, plane1 flies from city0 to city2 with fuel level fl0 to fl5, plane1 flies from city2 to city3 with fuel level fl3 to fl2, plane1 flies from city1 to city2 with fuel level fl5 to fl3, plane1 zooms from city3 to city2 with fuel level fl5 to fl6, plane1 zooms from city3 to city2 with fuel level fl6 to fl4, plane1 zooms from city2 to city1 with fuel level fl5 to fl4, plane1 zooms from city3 to city1 with fuel level fl5 to fl3, plane1 zooms from city0 to city2 with fuel level fl4 to fl0, plane1 zooms from city0 to city2 with fuel level fl3 to fl6, plane1 zooms from city0 to city2 with fuel level fl6 to fl5, plane1 zooms from city3 to city1 with fuel level fl1 to fl2, plane1 flies from city0 to city3 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl3 to fl0, plane1 zooms from city3 to city2 with fuel level fl4 to fl2, plane1 zooms from city2 to city1 with fuel level fl1 to fl5, plane1 flies from city0 to city3 with fuel level fl4 to fl2, plane1 zooms from city2 to city1 with fuel level fl4 to fl3, plane1 zooms from city0 to city1 with fuel level fl0 to fl6, plane1 zooms from city0 to city1 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl5 to fl4, plane1 zooms from city1 to city2 with fuel level fl4 to fl5, plane1 flies from city3 to city0 with fuel level fl1 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl4, plane1 flies from city0 to city3 with fuel level fl6 to fl3, plane1 flies from city3 to city2 with fuel level fl4 to fl1, plane1 zooms from city1 to city2 with fuel level fl6 to fl3, plane1 zooms from city2 to city3 with fuel level fl5 to fl0, plane1 gets refueled at city1 with fuel level fl1 to fl4, plane1 zooms from city1 to city3 with fuel level fl3 to fl4, plane1 zooms from city1 to city0 with fuel level fl3 to fl0, plane1 zooms from city1 to city2 with fuel level fl0 to fl4, plane1 zooms from city2 to city3 with fuel level fl5 to fl2, plane1 zooms from city3 to city0 with fuel level fl0 to fl6, plane1 flies from city0 to city3 with fuel level fl6 to fl1, person3 departs plane1 at city2, plane1 zooms from city1 to city3 with fuel level fl6 to fl5, plane1 flies from city1 to city0 with fuel level fl6 to fl1, plane1 zooms from city0 to city3 with fuel level fl3 to fl5, plane1 zooms from city0 to city3 with fuel level fl6 to fl5, plane1 zooms from city1 to city0 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl6 to fl0, plane1 zooms from city3 to city2 with fuel level fl6 to fl2, plane1 zooms from city2 to city1 with fuel level fl1 to fl0, plane1 zooms from city0 to city2 with fuel level fl5 to fl6, plane1 gets refueled at city2 with fuel level fl6 to fl3, plane1 zooms from city2 to city0 with fuel level fl1 to fl5, plane1 zooms from city0 to city2 with fuel level fl0 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl5, plane1 zooms from city2 to city3 with fuel level fl5 to fl3, plane1 flies from city3 to city0 with fuel level fl2 to fl0, plane1 zooms from city3 to city2 with fuel level fl0 to fl5, plane1 zooms from city1 to city2 with fuel level fl4 to fl3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, plane1 zooms from city2 to city0 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl1 to fl0, plane1 gets refueled at city2 with fuel level fl0 to fl1, plane1 zooms from city3 to city0 with fuel level fl1 to fl2, plane1 zooms from city0 to city1 with fuel level fl6 to fl0, plane1 zooms from city2 to city0 with fuel level fl0 to fl3, plane1 zooms from city0 to city2 with fuel level fl2 to fl6, plane1 zooms from city3 to city1 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl0 to fl3, plane1 zooms from city0 to city1 with fuel level fl3 to fl5, plane1 zooms from city3 to city1 with fuel level fl5 to fl6, plane1 zooms from city0 to city3 with fuel level fl1 to fl6, plane1 zooms from city1 to city2 with fuel level fl2 to fl5, plane1 gets refueled at city1 with fuel level fl5 to fl6, plane1 zooms from city0 to city3 with fuel level fl5 to fl3, plane1 zooms from city0 to city1 with fuel level fl6 to fl4, plane1 zooms from city0 to city1 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl6 to fl4, plane1 flies from city2 to city3 with fuel level fl4 to fl1, plane1 zooms from city0 to city2 with fuel level fl2 to fl4, plane1 zooms from city2 to city3 with fuel level fl0 to fl1, person3 departs plane1 at city1, plane1 zooms from city0 to city3 with fuel level fl2 to fl5, plane1 zooms from city0 to city1 with fuel level fl4 to fl2, plane1 zooms from city3 to city1 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl5 to fl6, plane1 zooms from city1 to city0 with fuel level fl5 to fl6, plane1 zooms from city0 to city3 with fuel level fl5 to fl3, plane1 zooms from city0 to city3 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city3 with fuel level fl5 to fl3, plane1 zooms from city3 to city2 with fuel level fl5 to fl1, plane1 gets refueled at city1 with fuel level fl2 to fl1, plane1 zooms from city1 to city3 with fuel level fl6 to fl4, plane1 zooms from city1 to city0 with fuel level fl1 to fl4, plane1 zooms from city0 to city3 with fuel level fl2 to fl3, plane1 zooms from city1 to city0 with fuel level fl6 to fl2, plane1 zooms from city3 to city0 with fuel level fl5 to fl2, plane1 flies from city2 to city0 with fuel level fl5 to fl6, plane1 zooms from city1 to city3 with fuel level fl2 to fl0, plane1 zooms from city1 to city2 with fuel level fl2 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl2, plane1 zooms from city2 to city1 with fuel level fl0 to fl2, plane1 zooms from city3 to city2 with fuel level fl1 to fl5, plane1 zooms from city1 to city0 with fuel level fl6 to fl4, plane1 zooms from city0 to city3 with fuel level fl4 to fl1, plane1 flies from city2 to city3 with fuel level fl2 to fl4, plane1 gets refueled at city2 with fuel level fl5 to fl4, person2 departs plane1 at city1, plane1 zooms from city2 to city1 with fuel level fl2 to fl3, plane1 zooms from city1 to city2 with fuel level fl3 to fl6, plane1 zooms from city3 to city1 with fuel level fl6 to fl4, plane1 flies from city0 to city1 with fuel level fl4 to fl3, plane1 zooms from city3 to city0 with fuel level fl6 to fl2, plane1 flies from city2 to city3 with fuel level fl3 to fl4, plane1 zooms from city0 to city1 with fuel level fl6 to fl0, plane1 zooms from city0 to city3 with fuel level fl4 to fl2, plane1 zooms from city2 to city0 with fuel level fl1 to fl6, plane1 zooms from city0 to city3 with fuel level fl3 to fl0, plane1 zooms from city0 to city2 with fuel level fl0 to fl2, person3 boards plane1 at city2, plane1 zooms from city3 to city2 with fuel level fl4 to fl1, plane1 zooms from city2 to city3 with fuel level fl0 to fl4, plane1 zooms from city0 to city2 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl5 to fl1, plane1 zooms from city3 to city2 with fuel level fl0 to fl4, plane1 zooms from city3 to city0 with fuel level fl0 to fl3, plane1 zooms from city1 to city0 with fuel level fl2 to fl6, plane1 zooms from city1 to city0 with fuel level fl1 to fl6, plane1 zooms from city2 to city3 with fuel level fl4 to fl0, plane1 zooms from city3 to city2 with fuel level fl6 to fl1, plane1 zooms from city3 to city1 with fuel level fl6 to fl2, plane1 zooms from city0 to city3 with fuel level fl2 to fl1, plane1 flies from city0 to city1 with fuel level fl5 to fl1, plane1 gets refueled at city0 with fuel level fl2 to fl3, plane1 zooms from city1 to city3 with fuel level fl6 to fl4, plane1 zooms from city1 to city3 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl4 to fl0, plane1 zooms from city1 to city2 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl0 to fl6, plane1 flies from city3 to city2 with fuel level fl1 to fl3, person6 boards plane1 at city2, plane1 zooms from city1 to city0 with fuel level fl2 to fl6, plane1 flies from city0 to city1 with fuel level fl5 to fl4, plane1 zooms from city2 to city1 with fuel level fl0 to fl4, plane1 zooms from city3 to city1 with fuel level fl4 to fl0, plane1 zooms from city3 to city1 with fuel level fl5 to fl4, plane1 zooms from city1 to city2 with fuel level fl1 to fl0, plane1 flies from city3 to city2 with fuel level fl4 to fl6, plane1 zooms from city3 to city2 with fuel level fl2 to fl1, plane1 zooms from city2 to city0 with fuel level fl0 to fl5, plane1 flies from city2 to city1 with fuel level fl0 to fl3, plane1 zooms from city0 to city3 with fuel level fl6 to fl2, plane1 zooms from city2 to city1 with fuel level fl3 to fl0, plane1 zooms from city1 to city0 with fuel level fl4 to fl2, plane1 flies from city3 to city0 with fuel level fl4 to fl3, plane1 zooms from city0 to city1 with fuel level fl1 to fl0, plane1 zooms from city1 to city2 with fuel level fl3 to fl0, plane1 zooms from city2 to city3 with fuel level fl4 to fl0, plane1 zooms from city3 to city2 with fuel level fl6 to fl2, plane1 zooms from city3 to city2 with fuel level fl1 to fl3, plane1 zooms from city3 to city0 with fuel level fl1 to fl3, plane1 zooms from city2 to city1 with fuel level fl6 to fl1, plane1 zooms from city1 to city2 with fuel level fl5 to fl4, plane1 zooms from city0 to city3 with fuel level fl5 to fl0, plane1 zooms from city3 to city0 with fuel level fl4 to fl2, plane1 zooms from city0 to city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl1 to fl5, plane1 zooms from city3 to city2 with fuel level fl4 to fl1, plane1 flies from city1 to city0 with fuel level fl0 to fl6, plane1 zooms from city0 to city3 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl4 to fl6, plane1 zooms from city2 to city1 with fuel level fl1 to fl3, plane1 flies from city2 to city3 with fuel level fl1 to fl6, plane1 zooms from city2 to city0 with fuel level fl5 to fl1, plane1 zooms from city3 to city1 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl6 to fl3, plane1 flies from city1 to city0 with fuel level fl3 to fl4, plane1 flies from city0 to city1 with fuel level fl3 to fl6, plane1 zooms from city2 to city1 with fuel level fl3 to fl5, plane1 zooms from city3 to city2 with fuel level fl3 to fl6, plane1 zooms from city1 to city0 with fuel level fl0 to fl4, plane1 zooms from city0 to city3 with fuel level fl3 to fl0, plane1 zooms from city0 to city1 with fuel level fl1 to fl5, plane1 gets refueled at city1 with fuel level fl2 to fl5, plane1 flies from city3 to city1 with fuel level fl4 to fl5, plane1 zooms from city1 to city3 with fuel level fl1 to fl0, plane1 zooms from city1 to city0 with fuel level fl3 to fl6, plane1 zooms from city2 to city1 with fuel level fl6 to fl4, plane1 zooms from city2 to city3 with fuel level fl2 to fl4, plane1 flies from city2 to city0 with fuel level fl5 to fl3, plane1 zooms from city1 to city3 with fuel level fl2 to fl0, plane1 zooms from city3 to city0 with fuel level fl5 to fl3, plane1 zooms from city3 to city2 with fuel level fl3 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl5, plane1 zooms from city1 to city2 with fuel level fl4 to fl1, plane1 flies from city1 to city3 with fuel level fl6 to fl2, plane1 zooms from city2 to city3 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl0 to fl1, plane1 gets refueled at city0 with fuel level fl0 to fl2, plane1 gets refueled at city0 with fuel level fl5 to fl0, plane1 zooms from city0 to city3 with fuel level fl5 to fl4, plane1 zooms from city1 to city0 with fuel level fl5 to fl6, plane1 zooms from city1 to city0 with fuel level fl5 to fl3, person3 departs plane1 at city3, plane1 zooms from city3 to city2 with fuel level fl2 to fl4, plane1 zooms from city1 to city3 with fuel level fl4 to fl1, plane1 zooms from city1 to city0 with fuel level fl3 to fl6, person1 departs plane1 at city1, plane1 zooms from city0 to city3 with fuel level fl1 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl3, plane1 zooms from city2 to city0 with fuel level fl2 to fl4, plane1 zooms from city3 to city0 with fuel level fl5 to fl1, plane1 zooms from city1 to city2 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl5 to fl6, person5 departs plane1 at city1, plane1 zooms from city0 to city3 with fuel level fl1 to fl3, plane1 zooms from city0 to city1 with fuel level fl4 to fl3, plane1 flies from city2 to city3 with fuel level fl6 to fl4, plane1 zooms from city3 to city1 with fuel level fl2 to fl3, plane1 zooms from city2 to city0 with fuel level fl5 to fl6, plane1 flies from city3 to city2 with fuel level fl1 to fl0, plane1 zooms from city1 to city0 with fuel level fl0 to fl2, plane1 zooms from city3 to city2 with fuel level fl1 to fl3, plane1 zooms from city1 to city0 with fuel level fl5 to fl1, plane1 zooms from city1 to city2 with fuel level fl0 to fl5, plane1 zooms from city0 to city1 with fuel level fl0 to fl3, plane1 gets refueled at city1 with fuel level fl0 to fl5, plane1 zooms from city3 to city1 with fuel level fl6 to fl4, plane1 zooms from city1 to city0 with fuel level fl5 to fl2, plane1 zooms from city0 to city2 with fuel level fl6 to fl5, plane1 zooms from city0 to city2 with fuel level fl3 to fl2, plane1 gets refueled at city1 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl1 to fl4, plane1 flies from city1 to city0 with fuel level fl5 to fl4, plane1 zooms from city0 to city1 with fuel level fl0 to fl6, plane1 zooms from city0 to city3 with fuel level fl2 to fl4, plane1 zooms from city2 to city1 with fuel level fl3 to fl0, plane1 zooms from city1 to city2 with fuel level fl4 to fl0, plane1 zooms from city3 to city1 with fuel level fl5 to fl6, plane1 zooms from city1 to city0 with fuel level fl2 to fl5, plane1 zooms from city2 to city0 with fuel level fl5 to fl4, plane1 zooms from city2 to city1 with fuel level fl0 to fl4, plane1 zooms from city2 to city3 with fuel level fl0 to fl6, plane1 zooms from city2 to city1 with fuel level fl1 to fl6, plane1 zooms from city1 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city0 with fuel level fl2 to fl5, plane1 zooms from city3 to city1 with fuel level fl4 to fl5 and plane1 zooms from city2 to city1 with fuel level fl2 to fl0", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "f80efbd2-896c-47e8-be04-2e6e81be0ccc", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "7d0525b3-b7ba-4ad2-aeeb-d05ba60f790f", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl6 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "plane1 zooms from city1 to city2 with fuel level fl6 to fl2", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "95cd16a4-8e6d-483b-91e9-c6006885bb83", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 zooms from city2 to city1 with fuel level fl1 to fl3, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "plane1 zooms from city2 to city1 with fuel level fl1 to fl3", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "759858f2-56ce-4ec4-ab27-0120252a3882", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 zooms from city1 to city3 with fuel level fl4 to fl6, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "plane1 zooms from city1 to city3 with fuel level fl4 to fl6", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "469c1512-5bff-4e13-a1ed-da99c632ab9a", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "c79ad447-16d0-4cc0-a7ad-b6560e4cf0ef", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, plane1 zooms from city1 to city0 with fuel level fl5 to fl6, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "5978a3dc-608a-4a07-8cc6-aab4f500faf7", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 zooms from city3 to city0 with fuel level fl0 to fl6, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "e733d986-d52b-4caf-840d-a5d9f22236b5", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, plane1 flies from city1 to city2 with fuel level fl1 to fl0, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "f6675564-a486-4ca8-8f6a-d2df9985b2b1", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 19 the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, plane1 zooms from city2 to city3 with fuel level fl3 to fl1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0. Is the action: plane1 zooms from city2 to city3 with fuel level fl3 to fl1 executable at step 6, True or False?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "b16e0481-6070-4343-99f1-6f4f21f86249", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 19 the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, plane1 zooms from city1 to city2 with fuel level fl3 to fl6, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0. Is the action: plane1 zooms from city1 to city2 with fuel level fl3 to fl6 executable at step 13, True or False?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "318e5350-4c24-4f84-92aa-bc7cd10a71a4", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 19 the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, plane1 zooms from city3 to city1 with fuel level fl2 to fl3, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0. Is the action: plane1 zooms from city3 to city1 with fuel level fl2 to fl3 executable at step 16, True or False?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "617d8451-b61d-4989-9608-9f07519f24e5", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 19 the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0. Is the action: plane1 gets refueled at city1 with fuel level fl0 to fl1 executable at step 2, True or False?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "6ba2099d-4e0d-41df-8198-383fb3bb1151", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "plane1 gets refueled at city1 with fuel level fl0 to fl1, person4 departs plane1 at city1, person1 boards plane1 at city1 and person3 departs plane1 at city1", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "0947b594-9c92-4850-bb38-74413a2591f4", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "plane1 zooms from city2 to city1 with fuel level fl2 to fl4, plane1 zooms from city2 to city0 with fuel level fl1 to fl3, plane1 zooms from city3 to city0 with fuel level fl0 to fl3, plane1 zooms from city1 to city3 with fuel level fl6 to fl0, plane1 zooms from city2 to city3 with fuel level fl1 to fl3, plane1 zooms from city1 to city2 with fuel level fl1 to fl5, plane1 zooms from city1 to city0 with fuel level fl4 to fl1, plane1 zooms from city3 to city0 with fuel level fl2 to fl4, plane1 flies from city0 to city2 with fuel level fl3 to fl6, plane1 flies from city0 to city1 with fuel level fl0 to fl3, plane1 zooms from city1 to city0 with fuel level fl6 to fl5, plane1 flies from city2 to city0 with fuel level fl1 to fl4, plane1 flies from city0 to city2 with fuel level fl0 to fl1, plane1 zooms from city2 to city3 with fuel level fl1 to fl5, plane1 zooms from city1 to city3 with fuel level fl2 to fl6, plane1 zooms from city3 to city0 with fuel level fl3 to fl1, plane1 zooms from city0 to city3 with fuel level fl2 to fl6, plane1 zooms from city3 to city1 with fuel level fl4 to fl5, plane1 zooms from city2 to city0 with fuel level fl5 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl0, plane1 zooms from city0 to city1 with fuel level fl0 to fl5, plane1 flies from city0 to city2 with fuel level fl1 to fl4, plane1 flies from city3 to city1 with fuel level fl6 to fl2, plane1 zooms from city3 to city1 with fuel level fl6 to fl4, plane1 zooms from city1 to city3 with fuel level fl6 to fl2, plane1 zooms from city0 to city1 with fuel level fl5 to fl4, plane1 zooms from city0 to city2 with fuel level fl1 to fl4, plane1 zooms from city0 to city1 with fuel level fl6 to fl4, plane1 zooms from city3 to city0 with fuel level fl5 to fl3, plane1 zooms from city2 to city1 with fuel level fl6 to fl3, plane1 zooms from city1 to city2 with fuel level fl3 to fl2, plane1 zooms from city1 to city3 with fuel level fl2 to fl5, plane1 zooms from city0 to city3 with fuel level fl2 to fl0, plane1 zooms from city1 to city3 with fuel level fl0 to fl5, plane1 flies from city0 to city3 with fuel level fl2 to fl3, plane1 zooms from city1 to city0 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl2 to fl0, plane1 zooms from city1 to city0 with fuel level fl0 to fl2, plane1 flies from city0 to city3 with fuel level fl1 to fl6, plane1 zooms from city1 to city2 with fuel level fl0 to fl5, plane1 flies from city1 to city0 with fuel level fl1 to fl3, plane1 zooms from city2 to city1 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl4 to fl2, plane1 zooms from city1 to city2 with fuel level fl1 to fl4, person3 boards plane1 at city1, plane1 zooms from city0 to city2 with fuel level fl6 to fl1, plane1 zooms from city0 to city1 with fuel level fl0 to fl1, plane1 zooms from city3 to city1 with fuel level fl4 to fl2, plane1 zooms from city0 to city3 with fuel level fl4 to fl1, plane1 zooms from city3 to city1 with fuel level fl1 to fl6, plane1 flies from city0 to city3 with fuel level fl1 to fl0, plane1 zooms from city2 to city1 with fuel level fl2 to fl4, plane1 zooms from city3 to city0 with fuel level fl4 to fl1, plane1 zooms from city0 to city2 with fuel level fl6 to fl2, plane1 zooms from city3 to city1 with fuel level fl4 to fl1, plane1 zooms from city2 to city0 with fuel level fl3 to fl5, plane1 zooms from city0 to city2 with fuel level fl4 to fl1, plane1 gets refueled at city1 with fuel level fl3 to fl0, plane1 zooms from city0 to city2 with fuel level fl0 to fl2, plane1 flies from city3 to city2 with fuel level fl1 to fl5, plane1 zooms from city2 to city3 with fuel level fl6 to fl4, plane1 zooms from city3 to city2 with fuel level fl0 to fl1, plane1 zooms from city2 to city3 with fuel level fl1 to fl4, plane1 zooms from city2 to city0 with fuel level fl4 to fl5, plane1 zooms from city2 to city1 with fuel level fl1 to fl2, plane1 zooms from city0 to city3 with fuel level fl3 to fl4, plane1 flies from city3 to city1 with fuel level fl0 to fl4, plane1 zooms from city2 to city1 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl5 to fl4, plane1 zooms from city1 to city3 with fuel level fl2 to fl5, plane1 flies from city0 to city2 with fuel level fl5 to fl1, plane1 zooms from city1 to city2 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl5 to fl2, plane1 zooms from city1 to city2 with fuel level fl1 to fl6, plane1 zooms from city2 to city1 with fuel level fl1 to fl5, plane1 gets refueled at city3 with fuel level fl0 to fl4, plane1 zooms from city0 to city1 with fuel level fl5 to fl1, plane1 flies from city0 to city2 with fuel level fl4 to fl1, plane1 flies from city2 to city3 with fuel level fl1 to fl0, plane1 flies from city0 to city1 with fuel level fl1 to fl0, plane1 flies from city2 to city1 with fuel level fl3 to fl1, plane1 zooms from city1 to city0 with fuel level fl3 to fl1, plane1 zooms from city2 to city1 with fuel level fl6 to fl2, plane1 zooms from city3 to city1 with fuel level fl3 to fl2, plane1 zooms from city0 to city1 with fuel level fl5 to fl4, plane1 flies from city2 to city0 with fuel level fl6 to fl5, plane1 zooms from city2 to city0 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl3 to fl1, plane1 zooms from city3 to city1 with fuel level fl2 to fl0, plane1 zooms from city0 to city1 with fuel level fl4 to fl0, plane1 zooms from city1 to city3 with fuel level fl2 to fl4, plane1 zooms from city2 to city3 with fuel level fl3 to fl0, plane1 zooms from city1 to city2 with fuel level fl2 to fl6, plane1 flies from city3 to city2 with fuel level fl0 to fl5, plane1 zooms from city1 to city2 with fuel level fl4 to fl2, plane1 zooms from city0 to city3 with fuel level fl0 to fl2, plane1 zooms from city1 to city0 with fuel level fl4 to fl2, plane1 zooms from city0 to city3 with fuel level fl2 to fl1, plane1 zooms from city1 to city2 with fuel level fl3 to fl2, plane1 zooms from city2 to city3 with fuel level fl0 to fl1, plane1 zooms from city2 to city0 with fuel level fl3 to fl0, plane1 zooms from city1 to city0 with fuel level fl2 to fl0, plane1 zooms from city1 to city3 with fuel level fl5 to fl0, plane1 zooms from city0 to city2 with fuel level fl6 to fl1, plane1 zooms from city2 to city3 with fuel level fl1 to fl0, plane1 zooms from city1 to city0 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl5 to fl0, plane1 zooms from city3 to city0 with fuel level fl5 to fl0, plane1 flies from city1 to city2 with fuel level fl0 to fl4, plane1 zooms from city0 to city2 with fuel level fl6 to fl3, plane1 zooms from city3 to city0 with fuel level fl4 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl2, plane1 zooms from city3 to city0 with fuel level fl4 to fl3, plane1 gets refueled at city2 with fuel level fl6 to fl2, plane1 zooms from city2 to city3 with fuel level fl2 to fl0, plane1 zooms from city1 to city2 with fuel level fl2 to fl5, plane1 zooms from city1 to city2 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl5 to fl4, plane1 flies from city0 to city1 with fuel level fl1 to fl2, plane1 flies from city3 to city2 with fuel level fl2 to fl0, plane1 zooms from city2 to city1 with fuel level fl3 to fl1, plane1 zooms from city0 to city1 with fuel level fl1 to fl5, plane1 zooms from city3 to city2 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl2 to fl3, plane1 zooms from city2 to city1 with fuel level fl1 to fl4, plane1 flies from city0 to city3 with fuel level fl5 to fl2, plane1 flies from city2 to city3 with fuel level fl0 to fl1, plane1 gets refueled at city2 with fuel level fl5 to fl0, plane1 zooms from city3 to city1 with fuel level fl3 to fl4, plane1 zooms from city3 to city2 with fuel level fl5 to fl0, plane1 zooms from city0 to city1 with fuel level fl2 to fl1, plane1 flies from city1 to city2 with fuel level fl0 to fl6, plane1 zooms from city0 to city1 with fuel level fl0 to fl2, plane1 flies from city3 to city2 with fuel level fl3 to fl0, plane1 gets refueled at city2 with fuel level fl2 to fl3, plane1 zooms from city2 to city0 with fuel level fl6 to fl4, plane1 zooms from city0 to city2 with fuel level fl2 to fl4, plane1 zooms from city3 to city0 with fuel level fl0 to fl5, plane1 zooms from city3 to city1 with fuel level fl1 to fl2, plane1 zooms from city3 to city2 with fuel level fl2 to fl5, plane1 zooms from city1 to city2 with fuel level fl6 to fl4, plane1 zooms from city0 to city1 with fuel level fl3 to fl6, plane1 zooms from city0 to city2 with fuel level fl2 to fl3, plane1 zooms from city3 to city1 with fuel level fl0 to fl4, plane1 zooms from city3 to city0 with fuel level fl1 to fl3, plane1 zooms from city1 to city3 with fuel level fl3 to fl2, plane1 flies from city1 to city3 with fuel level fl3 to fl6, plane1 zooms from city1 to city3 with fuel level fl6 to fl2, plane1 zooms from city0 to city2 with fuel level fl4 to fl3, plane1 zooms from city1 to city3 with fuel level fl1 to fl6, plane1 zooms from city1 to city2 with fuel level fl5 to fl1, plane1 zooms from city0 to city2 with fuel level fl5 to fl0, plane1 gets refueled at city3 with fuel level fl6 to fl3, plane1 zooms from city2 to city3 with fuel level fl4 to fl3, plane1 zooms from city2 to city1 with fuel level fl3 to fl6, plane1 zooms from city3 to city2 with fuel level fl5 to fl3, plane1 zooms from city2 to city1 with fuel level fl0 to fl4, plane1 flies from city1 to city2 with fuel level fl6 to fl1, plane1 flies from city0 to city2 with fuel level fl4 to fl2, plane1 zooms from city1 to city3 with fuel level fl0 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl0, plane1 zooms from city2 to city0 with fuel level fl3 to fl0, plane1 zooms from city3 to city1 with fuel level fl6 to fl1, plane1 zooms from city2 to city0 with fuel level fl4 to fl3, plane1 flies from city0 to city1 with fuel level fl0 to fl4, plane1 flies from city0 to city2 with fuel level fl5 to fl3, plane1 zooms from city3 to city2 with fuel level fl1 to fl0, plane1 zooms from city2 to city1 with fuel level fl2 to fl1, plane1 gets refueled at city0 with fuel level fl4 to fl2, plane1 zooms from city1 to city3 with fuel level fl6 to fl3, plane1 zooms from city0 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city3 with fuel level fl6 to fl3, plane1 flies from city1 to city3 with fuel level fl0 to fl4, plane1 zooms from city1 to city3 with fuel level fl1 to fl2, plane1 zooms from city0 to city1 with fuel level fl6 to fl3, plane1 zooms from city0 to city2 with fuel level fl5 to fl4, plane1 zooms from city3 to city1 with fuel level fl2 to fl5, plane1 zooms from city0 to city2 with fuel level fl5 to fl3, plane1 zooms from city1 to city3 with fuel level fl6 to fl2, plane1 flies from city1 to city0 with fuel level fl4 to fl2, plane1 zooms from city0 to city2 with fuel level fl0 to fl4, plane1 zooms from city3 to city2 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl4 to fl2, plane1 zooms from city3 to city0 with fuel level fl4 to fl6, plane1 flies from city1 to city2 with fuel level fl6 to fl5, plane1 zooms from city3 to city0 with fuel level fl0 to fl6, plane1 flies from city2 to city0 with fuel level fl0 to fl2, plane1 flies from city1 to city0 with fuel level fl4 to fl5, plane1 zooms from city3 to city0 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl6 to fl4, plane1 zooms from city2 to city3 with fuel level fl4 to fl0, plane1 zooms from city2 to city0 with fuel level fl2 to fl0, plane1 zooms from city3 to city0 with fuel level fl4 to fl3, plane1 zooms from city1 to city0 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl5 to fl1, plane1 zooms from city2 to city1 with fuel level fl3 to fl5, plane1 zooms from city2 to city0 with fuel level fl5 to fl2, plane1 zooms from city2 to city1 with fuel level fl5 to fl4, plane1 zooms from city0 to city1 with fuel level fl6 to fl5, plane1 zooms from city3 to city2 with fuel level fl4 to fl3, plane1 zooms from city3 to city0 with fuel level fl0 to fl5, plane1 zooms from city3 to city2 with fuel level fl5 to fl2, plane1 zooms from city2 to city3 with fuel level fl3 to fl0, plane1 zooms from city0 to city1 with fuel level fl4 to fl5, plane1 zooms from city2 to city1 with fuel level fl0 to fl5, plane1 zooms from city3 to city1 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl1 to fl0, plane1 zooms from city0 to city2 with fuel level fl4 to fl3, plane1 zooms from city1 to city3 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl1 to fl3, plane1 zooms from city1 to city2 with fuel level fl3 to fl1, person1 boards plane1 at city0, plane1 zooms from city0 to city3 with fuel level fl4 to fl2, plane1 flies from city3 to city0 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl1 to fl6, plane1 flies from city1 to city2 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl4 to fl1, plane1 zooms from city1 to city0 with fuel level fl6 to fl0, plane1 zooms from city0 to city2 with fuel level fl5 to fl2, plane1 flies from city0 to city2 with fuel level fl5 to fl4, plane1 flies from city2 to city0 with fuel level fl4 to fl3, plane1 zooms from city1 to city3 with fuel level fl2 to fl4, plane1 gets refueled at city0 with fuel level fl2 to fl1, plane1 flies from city2 to city3 with fuel level fl5 to fl4, plane1 zooms from city0 to city2 with fuel level fl6 to fl2, plane1 zooms from city0 to city1 with fuel level fl4 to fl5, plane1 zooms from city0 to city3 with fuel level fl1 to fl2, plane1 zooms from city0 to city1 with fuel level fl4 to fl3, plane1 zooms from city3 to city2 with fuel level fl4 to fl3, plane1 zooms from city0 to city3 with fuel level fl6 to fl2, plane1 zooms from city1 to city0 with fuel level fl6 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl3, plane1 zooms from city2 to city0 with fuel level fl2 to fl5, plane1 zooms from city2 to city3 with fuel level fl4 to fl0, plane1 zooms from city0 to city3 with fuel level fl5 to fl1, plane1 flies from city2 to city1 with fuel level fl6 to fl4, plane1 zooms from city2 to city3 with fuel level fl5 to fl4, plane1 zooms from city1 to city0 with fuel level fl6 to fl3, plane1 flies from city1 to city0 with fuel level fl4 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl0, plane1 zooms from city0 to city1 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl0 to fl4, plane1 zooms from city0 to city2 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl0 to fl3, plane1 flies from city3 to city0 with fuel level fl2 to fl3, plane1 flies from city3 to city0 with fuel level fl6 to fl3, plane1 zooms from city3 to city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl6 to fl0, plane1 flies from city0 to city1 with fuel level fl3 to fl1, plane1 zooms from city0 to city1 with fuel level fl3 to fl1, plane1 zooms from city2 to city1 with fuel level fl0 to fl4, plane1 flies from city1 to city3 with fuel level fl3 to fl1, plane1 zooms from city2 to city0 with fuel level fl5 to fl0, plane1 zooms from city2 to city3 with fuel level fl6 to fl3, plane1 zooms from city2 to city1 with fuel level fl4 to fl0, plane1 gets refueled at city2 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl2 to fl6, plane1 zooms from city3 to city2 with fuel level fl5 to fl6, plane1 zooms from city1 to city0 with fuel level fl2 to fl3, plane1 zooms from city0 to city3 with fuel level fl5 to fl0, plane1 zooms from city2 to city3 with fuel level fl2 to fl5, plane1 zooms from city0 to city3 with fuel level fl6 to fl1, plane1 zooms from city1 to city2 with fuel level fl2 to fl3, plane1 zooms from city0 to city1 with fuel level fl5 to fl4, plane1 flies from city2 to city0 with fuel level fl1 to fl5, plane1 flies from city0 to city1 with fuel level fl2 to fl6, plane1 zooms from city2 to city1 with fuel level fl1 to fl5, plane1 flies from city0 to city1 with fuel level fl6 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl0, plane1 flies from city1 to city3 with fuel level fl4 to fl1, plane1 zooms from city1 to city0 with fuel level fl2 to fl6, plane1 zooms from city2 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city0 with fuel level fl1 to fl5, plane1 zooms from city3 to city2 with fuel level fl1 to fl3, plane1 zooms from city2 to city0 with fuel level fl0 to fl5, plane1 zooms from city1 to city0 with fuel level fl1 to fl4, plane1 zooms from city1 to city2 with fuel level fl5 to fl2, person8 departs plane1 at city3, plane1 flies from city3 to city0 with fuel level fl2 to fl5, plane1 zooms from city2 to city1 with fuel level fl2 to fl0, plane1 zooms from city1 to city2 with fuel level fl0 to fl3, plane1 zooms from city2 to city0 with fuel level fl2 to fl6, plane1 zooms from city2 to city1 with fuel level fl2 to fl6, plane1 zooms from city3 to city1 with fuel level fl5 to fl3, plane1 flies from city1 to city3 with fuel level fl1 to fl5, plane1 zooms from city0 to city1 with fuel level fl1 to fl4, plane1 zooms from city2 to city3 with fuel level fl2 to fl4, plane1 zooms from city1 to city3 with fuel level fl0 to fl6, plane1 zooms from city0 to city3 with fuel level fl2 to fl3, plane1 zooms from city0 to city2 with fuel level fl2 to fl1, plane1 zooms from city0 to city3 with fuel level fl5 to fl6, plane1 zooms from city0 to city3 with fuel level fl6 to fl3, plane1 zooms from city2 to city3 with fuel level fl2 to fl1, plane1 zooms from city2 to city0 with fuel level fl1 to fl2, plane1 zooms from city1 to city3 with fuel level fl4 to fl3, plane1 zooms from city2 to city1 with fuel level fl1 to fl2, plane1 flies from city3 to city2 with fuel level fl0 to fl1, plane1 zooms from city3 to city0 with fuel level fl6 to fl1, plane1 flies from city3 to city1 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl0 to fl3, plane1 flies from city1 to city0 with fuel level fl2 to fl4, plane1 zooms from city3 to city1 with fuel level fl4 to fl1, plane1 zooms from city1 to city0 with fuel level fl6 to fl4, plane1 zooms from city0 to city3 with fuel level fl2 to fl5, plane1 zooms from city1 to city2 with fuel level fl1 to fl3, plane1 zooms from city0 to city2 with fuel level fl1 to fl0, plane1 flies from city3 to city2 with fuel level fl6 to fl5, plane1 flies from city2 to city0 with fuel level fl6 to fl4, plane1 zooms from city2 to city1 with fuel level fl1 to fl3, plane1 zooms from city0 to city1 with fuel level fl0 to fl4, plane1 zooms from city3 to city2 with fuel level fl4 to fl5, person7 boards plane1 at city2, plane1 zooms from city1 to city2 with fuel level fl1 to fl2, plane1 zooms from city0 to city2 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl0 to fl6, plane1 zooms from city1 to city0 with fuel level fl5 to fl3, plane1 zooms from city3 to city2 with fuel level fl6 to fl2, plane1 flies from city3 to city1 with fuel level fl0 to fl6, plane1 flies from city2 to city1 with fuel level fl4 to fl2, plane1 gets refueled at city3 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl1 to fl2, plane1 zooms from city3 to city2 with fuel level fl6 to fl1, plane1 zooms from city1 to city2 with fuel level fl4 to fl3, plane1 zooms from city0 to city1 with fuel level fl5 to fl3, plane1 zooms from city0 to city3 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl6 to fl3, plane1 zooms from city2 to city0 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl2 to fl5, plane1 gets refueled at city3 with fuel level fl4 to fl1, plane1 flies from city3 to city2 with fuel level fl3 to fl5, plane1 zooms from city0 to city1 with fuel level fl4 to fl0, plane1 flies from city0 to city1 with fuel level fl5 to fl2, plane1 gets refueled at city0 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl6 to fl0, plane1 zooms from city2 to city0 with fuel level fl2 to fl3, plane1 zooms from city1 to city0 with fuel level fl3 to fl4, plane1 zooms from city2 to city3 with fuel level fl1 to fl0, plane1 zooms from city3 to city0 with fuel level fl3 to fl0, plane1 zooms from city2 to city3 with fuel level fl2 to fl5, plane1 zooms from city1 to city2 with fuel level fl4 to fl6, plane1 zooms from city2 to city0 with fuel level fl3 to fl1, plane1 zooms from city3 to city0 with fuel level fl5 to fl4, plane1 zooms from city2 to city1 with fuel level fl5 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl4, plane1 zooms from city0 to city1 with fuel level fl0 to fl4, plane1 gets refueled at city0 with fuel level fl3 to fl1, plane1 zooms from city3 to city1 with fuel level fl0 to fl6, plane1 zooms from city1 to city0 with fuel level fl2 to fl4, plane1 zooms from city1 to city0 with fuel level fl6 to fl3, plane1 zooms from city2 to city0 with fuel level fl0 to fl1, plane1 flies from city1 to city0 with fuel level fl4 to fl1, plane1 flies from city0 to city1 with fuel level fl2 to fl0, plane1 zooms from city0 to city3 with fuel level fl6 to fl4, plane1 zooms from city3 to city2 with fuel level fl6 to fl0, plane1 zooms from city2 to city3 with fuel level fl6 to fl5, plane1 zooms from city1 to city0 with fuel level fl5 to fl4, plane1 zooms from city2 to city0 with fuel level fl5 to fl6, plane1 flies from city3 to city0 with fuel level fl5 to fl0, plane1 zooms from city0 to city3 with fuel level fl6 to fl0, plane1 zooms from city2 to city0 with fuel level fl6 to fl0, person2 boards plane1 at city2, plane1 zooms from city1 to city2 with fuel level fl1 to fl3, plane1 zooms from city0 to city2 with fuel level fl3 to fl2, plane1 zooms from city1 to city2 with fuel level fl0 to fl6, plane1 zooms from city2 to city0 with fuel level fl0 to fl2, plane1 flies from city0 to city1 with fuel level fl3 to fl0, plane1 flies from city2 to city1 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl5 to fl3, plane1 zooms from city2 to city0 with fuel level fl2 to fl6, plane1 zooms from city1 to city2 with fuel level fl5 to fl0, plane1 zooms from city0 to city2 with fuel level fl0 to fl1, plane1 flies from city0 to city3 with fuel level fl0 to fl2, plane1 gets refueled at city1 with fuel level fl0 to fl4, plane1 zooms from city1 to city0 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl0 to fl4, plane1 zooms from city1 to city3 with fuel level fl5 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl5, plane1 gets refueled at city1 with fuel level fl5 to fl1, plane1 zooms from city0 to city2 with fuel level fl4 to fl2, plane1 zooms from city0 to city2 with fuel level fl4 to fl1, plane1 zooms from city0 to city1 with fuel level fl4 to fl5, plane1 zooms from city2 to city1 with fuel level fl3 to fl2, plane1 flies from city3 to city0 with fuel level fl6 to fl2, plane1 zooms from city3 to city1 with fuel level fl3 to fl1, plane1 zooms from city2 to city3 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl2 to fl3, plane1 zooms from city1 to city0 with fuel level fl3 to fl5, plane1 zooms from city1 to city0 with fuel level fl2 to fl3, plane1 zooms from city2 to city3 with fuel level fl3 to fl5, plane1 flies from city0 to city2 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl0 to fl5, plane1 gets refueled at city3 with fuel level fl2 to fl1, plane1 zooms from city3 to city1 with fuel level fl2 to fl4, plane1 zooms from city0 to city3 with fuel level fl6 to fl5, plane1 flies from city2 to city1 with fuel level fl1 to fl2, plane1 zooms from city1 to city3 with fuel level fl0 to fl2, plane1 zooms from city2 to city1 with fuel level fl6 to fl0, plane1 zooms from city2 to city0 with fuel level fl3 to fl5, plane1 zooms from city2 to city1 with fuel level fl6 to fl1, plane1 zooms from city3 to city2 with fuel level fl3 to fl5, plane1 zooms from city1 to city2 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl0, plane1 zooms from city3 to city1 with fuel level fl5 to fl2, plane1 flies from city3 to city2 with fuel level fl2 to fl1, plane1 zooms from city0 to city2 with fuel level fl1 to fl0, plane1 zooms from city1 to city3 with fuel level fl5 to fl1, plane1 zooms from city0 to city1 with fuel level fl5 to fl1, plane1 zooms from city3 to city1 with fuel level fl0 to fl6, plane1 zooms from city1 to city2 with fuel level fl1 to fl2, plane1 zooms from city3 to city1 with fuel level fl1 to fl5, plane1 flies from city3 to city2 with fuel level fl5 to fl4, plane1 zooms from city3 to city1 with fuel level fl6 to fl0, plane1 zooms from city0 to city1 with fuel level fl1 to fl2, plane1 flies from city2 to city0 with fuel level fl6 to fl0, plane1 zooms from city1 to city2 with fuel level fl6 to fl4, plane1 flies from city2 to city3 with fuel level fl1 to fl3, plane1 flies from city0 to city3 with fuel level fl3 to fl1, plane1 zooms from city1 to city0 with fuel level fl3 to fl1, person2 boards plane1 at city1, plane1 zooms from city3 to city1 with fuel level fl2 to fl6, plane1 zooms from city0 to city1 with fuel level fl4 to fl6, plane1 zooms from city3 to city2 with fuel level fl4 to fl2, plane1 flies from city0 to city3 with fuel level fl5 to fl4, plane1 zooms from city2 to city0 with fuel level fl4 to fl2, plane1 flies from city0 to city3 with fuel level fl1 to fl5, plane1 zooms from city0 to city2 with fuel level fl4 to fl6, plane1 zooms from city3 to city1 with fuel level fl3 to fl4, plane1 zooms from city2 to city1 with fuel level fl4 to fl5, plane1 zooms from city3 to city2 with fuel level fl0 to fl1, plane1 zooms from city2 to city0 with fuel level fl4 to fl1, plane1 gets refueled at city1 with fuel level fl2 to fl4, plane1 zooms from city3 to city1 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl1 to fl4, plane1 zooms from city3 to city0 with fuel level fl4 to fl1, plane1 zooms from city1 to city2 with fuel level fl2 to fl6, plane1 flies from city2 to city1 with fuel level fl4 to fl0, plane1 zooms from city1 to city2 with fuel level fl2 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl5, person8 departs plane1 at city1, plane1 flies from city3 to city1 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl2 to fl3, plane1 zooms from city3 to city2 with fuel level fl6 to fl5, plane1 zooms from city1 to city0 with fuel level fl1 to fl4, plane1 zooms from city2 to city1 with fuel level fl1 to fl6, plane1 zooms from city0 to city1 with fuel level fl2 to fl5, plane1 zooms from city3 to city1 with fuel level fl0 to fl2, plane1 zooms from city3 to city1 with fuel level fl2 to fl3, plane1 zooms from city2 to city3 with fuel level fl2 to fl6, plane1 zooms from city0 to city3 with fuel level fl6 to fl0, plane1 zooms from city0 to city1 with fuel level fl4 to fl1, plane1 zooms from city2 to city1 with fuel level fl5 to fl1, plane1 zooms from city0 to city3 with fuel level fl6 to fl0, plane1 flies from city3 to city2 with fuel level fl4 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl5, plane1 zooms from city3 to city1 with fuel level fl3 to fl5, plane1 zooms from city2 to city1 with fuel level fl4 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl3, plane1 zooms from city2 to city1 with fuel level fl2 to fl1, plane1 zooms from city1 to city0 with fuel level fl2 to fl3, plane1 flies from city2 to city1 with fuel level fl3 to fl0, plane1 zooms from city0 to city2 with fuel level fl1 to fl6, plane1 zooms from city0 to city2 with fuel level fl1 to fl0, plane1 gets refueled at city2 with fuel level fl0 to fl5, plane1 zooms from city2 to city0 with fuel level fl3 to fl4, plane1 zooms from city2 to city0 with fuel level fl3 to fl0, plane1 zooms from city0 to city1 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl5 to fl3, plane1 zooms from city3 to city2 with fuel level fl1 to fl2, plane1 zooms from city1 to city3 with fuel level fl1 to fl6, plane1 zooms from city2 to city3 with fuel level fl5 to fl6, plane1 zooms from city0 to city2 with fuel level fl4 to fl5, plane1 flies from city0 to city1 with fuel level fl2 to fl4, plane1 zooms from city1 to city3 with fuel level fl4 to fl1, plane1 zooms from city0 to city2 with fuel level fl3 to fl2, plane1 zooms from city1 to city3 with fuel level fl0 to fl4, plane1 zooms from city1 to city0 with fuel level fl6 to fl1, plane1 zooms from city3 to city0 with fuel level fl3 to fl0, plane1 zooms from city3 to city2 with fuel level fl6 to fl2, plane1 zooms from city2 to city3 with fuel level fl0 to fl3, plane1 flies from city2 to city3 with fuel level fl4 to fl3, plane1 gets refueled at city0 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl2 to fl4, plane1 zooms from city2 to city0 with fuel level fl6 to fl3, plane1 zooms from city0 to city1 with fuel level fl3 to fl2, plane1 zooms from city2 to city3 with fuel level fl2 to fl5, plane1 zooms from city1 to city2 with fuel level fl5 to fl3, plane1 zooms from city2 to city3 with fuel level fl0 to fl1, plane1 zooms from city3 to city2 with fuel level fl1 to fl6, plane1 zooms from city1 to city2 with fuel level fl1 to fl3, plane1 flies from city3 to city0 with fuel level fl0 to fl6, plane1 gets refueled at city2 with fuel level fl6 to fl4, plane1 zooms from city0 to city1 with fuel level fl2 to fl5, plane1 flies from city1 to city2 with fuel level fl3 to fl5, plane1 zooms from city2 to city1 with fuel level fl1 to fl2, person2 boards plane1 at city3, plane1 zooms from city2 to city0 with fuel level fl5 to fl0, plane1 zooms from city3 to city2 with fuel level fl3 to fl2, plane1 zooms from city2 to city0 with fuel level fl1 to fl0, plane1 zooms from city2 to city0 with fuel level fl3 to fl0, plane1 zooms from city2 to city0 with fuel level fl6 to fl2, plane1 zooms from city0 to city3 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl2 to fl3, plane1 zooms from city2 to city0 with fuel level fl6 to fl0, plane1 zooms from city3 to city2 with fuel level fl3 to fl0, plane1 zooms from city3 to city0 with fuel level fl3 to fl2, plane1 flies from city3 to city0 with fuel level fl0 to fl2, plane1 zooms from city2 to city1 with fuel level fl1 to fl0, plane1 flies from city3 to city0 with fuel level fl4 to fl0, plane1 zooms from city2 to city1 with fuel level fl0 to fl4, plane1 zooms from city3 to city1 with fuel level fl6 to fl5, plane1 flies from city1 to city0 with fuel level fl2 to fl6, plane1 zooms from city1 to city2 with fuel level fl5 to fl6, plane1 flies from city1 to city0 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl6 to fl2, plane1 zooms from city2 to city1 with fuel level fl2 to fl5, plane1 flies from city2 to city0 with fuel level fl6 to fl2, person7 boards plane1 at city1, plane1 zooms from city3 to city1 with fuel level fl3 to fl1, plane1 gets refueled at city2 with fuel level fl6 to fl5, plane1 zooms from city1 to city2 with fuel level fl0 to fl1, plane1 zooms from city0 to city2 with fuel level fl3 to fl0, plane1 zooms from city0 to city3 with fuel level fl5 to fl1, plane1 zooms from city2 to city3 with fuel level fl2 to fl5, plane1 zooms from city0 to city2 with fuel level fl2 to fl5, plane1 zooms from city0 to city1 with fuel level fl6 to fl3, plane1 zooms from city0 to city2 with fuel level fl4 to fl3, plane1 flies from city2 to city1 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl4 to fl6, plane1 flies from city2 to city1 with fuel level fl0 to fl6, plane1 zooms from city3 to city2 with fuel level fl0 to fl2, plane1 zooms from city2 to city3 with fuel level fl0 to fl2, plane1 zooms from city2 to city0 with fuel level fl2 to fl5, plane1 zooms from city1 to city0 with fuel level fl6 to fl4, plane1 zooms from city3 to city2 with fuel level fl1 to fl3, plane1 zooms from city3 to city1 with fuel level fl0 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl5, plane1 zooms from city2 to city1 with fuel level fl0 to fl5, plane1 zooms from city2 to city3 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl1 to fl6, plane1 zooms from city3 to city0 with fuel level fl3 to fl1, plane1 zooms from city3 to city0 with fuel level fl1 to fl3, plane1 flies from city2 to city0 with fuel level fl4 to fl6, plane1 gets refueled at city3 with fuel level fl0 to fl2, plane1 zooms from city0 to city1 with fuel level fl5 to fl1, plane1 zooms from city3 to city0 with fuel level fl2 to fl6, plane1 zooms from city3 to city2 with fuel level fl6 to fl4, plane1 zooms from city1 to city2 with fuel level fl6 to fl3, plane1 flies from city2 to city0 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl6 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl3, plane1 zooms from city2 to city1 with fuel level fl4 to fl1, plane1 zooms from city0 to city3 with fuel level fl1 to fl6, plane1 zooms from city2 to city3 with fuel level fl1 to fl5, plane1 zooms from city0 to city3 with fuel level fl6 to fl0, plane1 flies from city3 to city1 with fuel level fl2 to fl5, plane1 flies from city1 to city3 with fuel level fl5 to fl6, plane1 flies from city2 to city1 with fuel level fl0 to fl4, plane1 zooms from city2 to city1 with fuel level fl1 to fl5, plane1 zooms from city3 to city2 with fuel level fl5 to fl2, plane1 zooms from city0 to city3 with fuel level fl0 to fl6, plane1 zooms from city0 to city3 with fuel level fl6 to fl1, plane1 flies from city3 to city1 with fuel level fl2 to fl4, plane1 zooms from city3 to city1 with fuel level fl5 to fl2, plane1 flies from city0 to city2 with fuel level fl3 to fl1, plane1 zooms from city0 to city1 with fuel level fl6 to fl2, plane1 zooms from city3 to city1 with fuel level fl4 to fl2, plane1 zooms from city2 to city0 with fuel level fl2 to fl0, plane1 zooms from city2 to city0 with fuel level fl2 to fl6, plane1 zooms from city0 to city3 with fuel level fl1 to fl0, plane1 zooms from city3 to city2 with fuel level fl3 to fl4, plane1 zooms from city0 to city1 with fuel level fl6 to fl1, plane1 zooms from city2 to city0 with fuel level fl1 to fl3, plane1 flies from city0 to city1 with fuel level fl0 to fl1, plane1 zooms from city0 to city1 with fuel level fl1 to fl3, plane1 flies from city1 to city2 with fuel level fl0 to fl3, plane1 zooms from city3 to city0 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl5 to fl6, plane1 zooms from city1 to city2 with fuel level fl0 to fl5, plane1 zooms from city1 to city3 with fuel level fl1 to fl4, plane1 zooms from city1 to city3 with fuel level fl0 to fl4, plane1 gets refueled at city1 with fuel level fl2 to fl6, plane1 zooms from city0 to city2 with fuel level fl3 to fl5, plane1 zooms from city3 to city0 with fuel level fl4 to fl0, plane1 flies from city1 to city0 with fuel level fl6 to fl5, plane1 zooms from city1 to city2 with fuel level fl5 to fl2, plane1 zooms from city1 to city0 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl2 to fl4, plane1 zooms from city2 to city3 with fuel level fl0 to fl6, plane1 zooms from city1 to city0 with fuel level fl4 to fl6, plane1 gets refueled at city1 with fuel level fl5 to fl0, plane1 zooms from city2 to city3 with fuel level fl6 to fl4, plane1 zooms from city2 to city0 with fuel level fl3 to fl0, plane1 zooms from city2 to city3 with fuel level fl0 to fl4, plane1 zooms from city1 to city3 with fuel level fl0 to fl2, plane1 zooms from city1 to city0 with fuel level fl2 to fl5, plane1 zooms from city1 to city3 with fuel level fl5 to fl4, plane1 zooms from city3 to city2 with fuel level fl3 to fl1, plane1 flies from city0 to city1 with fuel level fl0 to fl5, plane1 zooms from city1 to city2 with fuel level fl0 to fl2, plane1 zooms from city1 to city3 with fuel level fl6 to fl1, plane1 flies from city2 to city0 with fuel level fl1 to fl3, plane1 flies from city1 to city2 with fuel level fl1 to fl5, plane1 zooms from city3 to city2 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl2 to fl5, plane1 flies from city1 to city2 with fuel level fl6 to fl4, plane1 flies from city0 to city3 with fuel level fl2 to fl5, plane1 flies from city0 to city1 with fuel level fl6 to fl0, plane1 zooms from city3 to city2 with fuel level fl3 to fl0, plane1 zooms from city2 to city3 with fuel level fl3 to fl5, plane1 zooms from city3 to city0 with fuel level fl0 to fl2, plane1 zooms from city0 to city1 with fuel level fl5 to fl3, plane1 zooms from city1 to city0 with fuel level fl5 to fl0, plane1 zooms from city1 to city3 with fuel level fl6 to fl5, plane1 zooms from city1 to city2 with fuel level fl1 to fl0, plane1 zooms from city1 to city3 with fuel level fl1 to fl5, plane1 zooms from city3 to city0 with fuel level fl2 to fl5, plane1 gets refueled at city2 with fuel level fl4 to fl3, plane1 zooms from city3 to city2 with fuel level fl0 to fl3, plane1 zooms from city0 to city3 with fuel level fl4 to fl3, plane1 zooms from city2 to city3 with fuel level fl0 to fl2, plane1 zooms from city3 to city0 with fuel level fl2 to fl6, plane1 zooms from city1 to city0 with fuel level fl5 to fl6, plane1 zooms from city0 to city1 with fuel level fl1 to fl6, plane1 zooms from city0 to city3 with fuel level fl6 to fl1, plane1 flies from city2 to city0 with fuel level fl2 to fl6, plane1 zooms from city2 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city0 with fuel level fl4 to fl5, plane1 zooms from city1 to city3 with fuel level fl5 to fl0, person1 boards plane1 at city3, plane1 flies from city0 to city2 with fuel level fl0 to fl6, plane1 flies from city2 to city1 with fuel level fl1 to fl0, plane1 flies from city0 to city3 with fuel level fl6 to fl4, plane1 zooms from city2 to city3 with fuel level fl1 to fl6, person6 boards plane1 at city3, plane1 zooms from city1 to city0 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl1, plane1 zooms from city2 to city3 with fuel level fl4 to fl1, plane1 zooms from city1 to city2 with fuel level fl6 to fl3, plane1 zooms from city1 to city3 with fuel level fl0 to fl2, plane1 zooms from city0 to city1 with fuel level fl0 to fl5, plane1 gets refueled at city0 with fuel level fl1 to fl6, plane1 flies from city1 to city2 with fuel level fl1 to fl3, plane1 zooms from city1 to city2 with fuel level fl1 to fl6, plane1 zooms from city3 to city1 with fuel level fl3 to fl0, plane1 zooms from city3 to city1 with fuel level fl0 to fl2, plane1 zooms from city2 to city3 with fuel level fl1 to fl5, plane1 zooms from city2 to city1 with fuel level fl2 to fl5, plane1 zooms from city3 to city0 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl2 to fl1, plane1 flies from city3 to city0 with fuel level fl2 to fl4, plane1 zooms from city1 to city3 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl1 to fl2, person5 departs plane1 at city0, plane1 flies from city1 to city2 with fuel level fl4 to fl5, plane1 zooms from city0 to city3 with fuel level fl5 to fl1, plane1 zooms from city3 to city0 with fuel level fl0 to fl2, plane1 zooms from city1 to city2 with fuel level fl0 to fl2, plane1 zooms from city1 to city0 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl6 to fl2, plane1 zooms from city3 to city1 with fuel level fl5 to fl3, plane1 zooms from city1 to city2 with fuel level fl2 to fl0, plane1 zooms from city1 to city2 with fuel level fl3 to fl0, plane1 zooms from city3 to city0 with fuel level fl6 to fl2, plane1 flies from city0 to city2 with fuel level fl2 to fl5, plane1 zooms from city2 to city0 with fuel level fl2 to fl3, plane1 zooms from city1 to city2 with fuel level fl5 to fl6, plane1 flies from city0 to city1 with fuel level fl4 to fl5, plane1 zooms from city1 to city2 with fuel level fl2 to fl6, plane1 zooms from city2 to city1 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl3 to fl4, plane1 zooms from city2 to city1 with fuel level fl0 to fl1, plane1 zooms from city0 to city1 with fuel level fl3 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl3, plane1 zooms from city3 to city1 with fuel level fl3 to fl4, plane1 zooms from city1 to city0 with fuel level fl3 to fl4, plane1 zooms from city0 to city2 with fuel level fl2 to fl5, plane1 zooms from city0 to city1 with fuel level fl4 to fl0, plane1 zooms from city3 to city0 with fuel level fl1 to fl2, plane1 zooms from city3 to city0 with fuel level fl6 to fl1, plane1 flies from city1 to city3 with fuel level fl3 to fl0, plane1 zooms from city2 to city1 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl4 to fl5, plane1 zooms from city2 to city1 with fuel level fl3 to fl2, plane1 zooms from city0 to city2 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl5 to fl2, plane1 flies from city1 to city3 with fuel level fl6 to fl3, plane1 zooms from city3 to city0 with fuel level fl4 to fl1, plane1 zooms from city3 to city2 with fuel level fl6 to fl5, plane1 zooms from city3 to city0 with fuel level fl3 to fl6, plane1 zooms from city3 to city1 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl3 to fl4, plane1 zooms from city0 to city3 with fuel level fl5 to fl6, plane1 flies from city0 to city2 with fuel level fl4 to fl3, plane1 zooms from city2 to city3 with fuel level fl0 to fl6, plane1 zooms from city0 to city2 with fuel level fl0 to fl4, plane1 zooms from city0 to city2 with fuel level fl0 to fl6, plane1 zooms from city0 to city2 with fuel level fl2 to fl6, plane1 zooms from city0 to city1 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl1 to fl0, plane1 flies from city2 to city0 with fuel level fl2 to fl1, plane1 flies from city2 to city3 with fuel level fl4 to fl2, plane1 zooms from city2 to city1 with fuel level fl4 to fl2, plane1 zooms from city1 to city2 with fuel level fl0 to fl2, plane1 zooms from city0 to city1 with fuel level fl4 to fl2, plane1 zooms from city3 to city0 with fuel level fl3 to fl1, plane1 zooms from city1 to city0 with fuel level fl3 to fl1, plane1 zooms from city1 to city3 with fuel level fl1 to fl2, plane1 gets refueled at city3 with fuel level fl0 to fl5, plane1 zooms from city0 to city2 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl6 to fl0, plane1 zooms from city3 to city2 with fuel level fl2 to fl6, plane1 zooms from city0 to city2 with fuel level fl2 to fl5, person7 boards plane1 at city0, plane1 zooms from city0 to city2 with fuel level fl6 to fl5, plane1 zooms from city3 to city2 with fuel level fl5 to fl4, plane1 zooms from city3 to city0 with fuel level fl3 to fl5, plane1 zooms from city3 to city2 with fuel level fl5 to fl3, plane1 zooms from city3 to city0 with fuel level fl0 to fl3, plane1 zooms from city0 to city2 with fuel level fl2 to fl0, plane1 zooms from city2 to city1 with fuel level fl5 to fl2, plane1 gets refueled at city0 with fuel level fl6 to fl4, plane1 flies from city0 to city3 with fuel level fl4 to fl3, plane1 zooms from city3 to city0 with fuel level fl4 to fl2, plane1 flies from city3 to city1 with fuel level fl0 to fl5, plane1 gets refueled at city2 with fuel level fl2 to fl6, plane1 flies from city3 to city2 with fuel level fl3 to fl6, plane1 zooms from city0 to city2 with fuel level fl3 to fl4, plane1 zooms from city2 to city0 with fuel level fl2 to fl4, plane1 flies from city2 to city1 with fuel level fl5 to fl1, plane1 zooms from city1 to city0 with fuel level fl4 to fl0, plane1 zooms from city3 to city1 with fuel level fl5 to fl3, plane1 zooms from city3 to city2 with fuel level fl6 to fl5, plane1 zooms from city3 to city0 with fuel level fl3 to fl4, plane1 zooms from city0 to city2 with fuel level fl5 to fl4, plane1 gets refueled at city1 with fuel level fl1 to fl6, plane1 zooms from city2 to city0 with fuel level fl3 to fl6, plane1 zooms from city0 to city1 with fuel level fl1 to fl6, plane1 zooms from city2 to city1 with fuel level fl4 to fl2, plane1 zooms from city3 to city1 with fuel level fl6 to fl1, plane1 zooms from city2 to city0 with fuel level fl6 to fl3, plane1 zooms from city3 to city1 with fuel level fl0 to fl4, plane1 zooms from city1 to city2 with fuel level fl1 to fl0, plane1 zooms from city0 to city2 with fuel level fl2 to fl0, plane1 flies from city3 to city0 with fuel level fl0 to fl5, plane1 gets refueled at city3 with fuel level fl3 to fl1, plane1 zooms from city1 to city3 with fuel level fl2 to fl1, plane1 flies from city3 to city0 with fuel level fl6 to fl4, plane1 zooms from city3 to city0 with fuel level fl6 to fl3, plane1 zooms from city3 to city1 with fuel level fl4 to fl5, plane1 zooms from city3 to city0 with fuel level fl0 to fl5, plane1 zooms from city1 to city2 with fuel level fl1 to fl2, plane1 zooms from city2 to city0 with fuel level fl3 to fl5, plane1 zooms from city2 to city0 with fuel level fl4 to fl6, person6 departs plane1 at city1, plane1 zooms from city3 to city0 with fuel level fl3 to fl1, plane1 flies from city1 to city0 with fuel level fl0 to fl3, plane1 flies from city3 to city2 with fuel level fl2 to fl3, plane1 zooms from city1 to city3 with fuel level fl3 to fl2, plane1 gets refueled at city1 with fuel level fl0 to fl6, plane1 zooms from city3 to city0 with fuel level fl5 to fl6, plane1 zooms from city3 to city2 with fuel level fl6 to fl4, plane1 gets refueled at city3 with fuel level fl4 to fl2, plane1 zooms from city3 to city0 with fuel level fl4 to fl0, plane1 zooms from city1 to city2 with fuel level fl6 to fl1, plane1 zooms from city3 to city2 with fuel level fl1 to fl0, plane1 flies from city2 to city1 with fuel level fl5 to fl2, plane1 zooms from city3 to city2 with fuel level fl2 to fl3, plane1 zooms from city0 to city1 with fuel level fl5 to fl0, plane1 zooms from city1 to city3 with fuel level fl1 to fl3, plane1 zooms from city1 to city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl5 to fl0, plane1 zooms from city3 to city2 with fuel level fl2 to fl5, plane1 gets refueled at city0 with fuel level fl0 to fl3, plane1 zooms from city2 to city1 with fuel level fl5 to fl1, plane1 zooms from city1 to city0 with fuel level fl0 to fl4, plane1 zooms from city3 to city1 with fuel level fl0 to fl5, plane1 flies from city0 to city3 with fuel level fl4 to fl5, plane1 zooms from city1 to city2 with fuel level fl1 to fl3, plane1 zooms from city1 to city0 with fuel level fl6 to fl2, plane1 gets refueled at city0 with fuel level fl1 to fl5, plane1 zooms from city3 to city1 with fuel level fl1 to fl4, plane1 flies from city3 to city0 with fuel level fl2 to fl1, plane1 zooms from city1 to city3 with fuel level fl3 to fl0, plane1 zooms from city0 to city3 with fuel level fl3 to fl5, plane1 zooms from city3 to city1 with fuel level fl0 to fl5, plane1 zooms from city0 to city2 with fuel level fl4 to fl5, plane1 zooms from city3 to city1 with fuel level fl0 to fl4, plane1 zooms from city3 to city1 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl0 to fl3, plane1 zooms from city2 to city0 with fuel level fl5 to fl1, plane1 flies from city1 to city2 with fuel level fl3 to fl4, plane1 zooms from city2 to city3 with fuel level fl1 to fl6, plane1 zooms from city0 to city1 with fuel level fl3 to fl1, plane1 flies from city1 to city0 with fuel level fl1 to fl6, plane1 zooms from city0 to city3 with fuel level fl1 to fl0, plane1 flies from city1 to city0 with fuel level fl4 to fl6, plane1 zooms from city2 to city0 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl2 to fl4, plane1 zooms from city2 to city1 with fuel level fl0 to fl2, plane1 flies from city0 to city1 with fuel level fl6 to fl4, plane1 zooms from city0 to city2 with fuel level fl4 to fl3, plane1 zooms from city3 to city2 with fuel level fl4 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl1, plane1 zooms from city3 to city2 with fuel level fl6 to fl3, plane1 zooms from city1 to city0 with fuel level fl0 to fl1, plane1 flies from city1 to city0 with fuel level fl0 to fl4, plane1 zooms from city2 to city0 with fuel level fl5 to fl0, plane1 zooms from city2 to city1 with fuel level fl2 to fl1, plane1 flies from city2 to city3 with fuel level fl0 to fl2, plane1 zooms from city2 to city0 with fuel level fl2 to fl1, plane1 zooms from city0 to city2 with fuel level fl1 to fl0, plane1 zooms from city1 to city2 with fuel level fl4 to fl3, plane1 zooms from city0 to city1 with fuel level fl4 to fl3, plane1 flies from city3 to city2 with fuel level fl6 to fl3, plane1 zooms from city1 to city2 with fuel level fl4 to fl2, plane1 zooms from city0 to city3 with fuel level fl1 to fl0, plane1 gets refueled at city2 with fuel level fl5 to fl6, plane1 zooms from city1 to city0 with fuel level fl0 to fl4, plane1 zooms from city0 to city3 with fuel level fl0 to fl3, plane1 zooms from city0 to city1 with fuel level fl3 to fl4, plane1 zooms from city1 to city0 with fuel level fl5 to fl6, plane1 zooms from city0 to city3 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl2 to fl0, plane1 gets refueled at city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl6 to fl1, plane1 zooms from city1 to city3 with fuel level fl4 to fl1, plane1 zooms from city2 to city3 with fuel level fl6 to fl5, plane1 zooms from city1 to city3 with fuel level fl2 to fl4, plane1 zooms from city2 to city1 with fuel level fl1 to fl4, plane1 zooms from city2 to city1 with fuel level fl4 to fl0, plane1 gets refueled at city2 with fuel level fl1 to fl5, plane1 zooms from city3 to city2 with fuel level fl0 to fl2, plane1 flies from city3 to city0 with fuel level fl1 to fl6, plane1 zooms from city2 to city0 with fuel level fl5 to fl6, plane1 zooms from city2 to city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl0 to fl5, plane1 zooms from city3 to city2 with fuel level fl2 to fl3, plane1 zooms from city1 to city0 with fuel level fl6 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl4, plane1 zooms from city2 to city1 with fuel level fl3 to fl4, plane1 flies from city2 to city1 with fuel level fl5 to fl6, person8 boards plane1 at city3, plane1 flies from city1 to city0 with fuel level fl5 to fl3, person3 boards plane1 at city0, plane1 zooms from city1 to city3 with fuel level fl3 to fl1, plane1 zooms from city1 to city0 with fuel level fl1 to fl0, plane1 zooms from city1 to city2 with fuel level fl3 to fl6, plane1 zooms from city1 to city0 with fuel level fl3 to fl4, plane1 flies from city3 to city1 with fuel level fl5 to fl1, plane1 zooms from city0 to city1 with fuel level fl6 to fl3, plane1 flies from city3 to city1 with fuel level fl5 to fl3, plane1 zooms from city0 to city2 with fuel level fl1 to fl4, plane1 zooms from city2 to city3 with fuel level fl5 to fl3, plane1 zooms from city0 to city2 with fuel level fl0 to fl4, plane1 flies from city2 to city0 with fuel level fl4 to fl5, plane1 zooms from city1 to city0 with fuel level fl1 to fl5, plane1 zooms from city2 to city3 with fuel level fl0 to fl2, person6 boards plane1 at city0, plane1 zooms from city2 to city0 with fuel level fl6 to fl4, plane1 zooms from city1 to city3 with fuel level fl2 to fl3, plane1 zooms from city0 to city2 with fuel level fl5 to fl2, plane1 zooms from city3 to city1 with fuel level fl4 to fl5, plane1 zooms from city2 to city0 with fuel level fl5 to fl3, plane1 zooms from city2 to city3 with fuel level fl4 to fl3, plane1 zooms from city0 to city2 with fuel level fl2 to fl3, plane1 flies from city2 to city1 with fuel level fl6 to fl2, plane1 flies from city3 to city1 with fuel level fl6 to fl4, plane1 flies from city0 to city1 with fuel level fl6 to fl1, plane1 zooms from city2 to city3 with fuel level fl4 to fl2, plane1 zooms from city0 to city3 with fuel level fl1 to fl6, plane1 zooms from city0 to city1 with fuel level fl5 to fl2, plane1 zooms from city0 to city1 with fuel level fl6 to fl1, plane1 zooms from city3 to city1 with fuel level fl3 to fl0, plane1 zooms from city3 to city1 with fuel level fl5 to fl2, plane1 zooms from city2 to city1 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl1 to fl5, plane1 zooms from city2 to city3 with fuel level fl0 to fl2, plane1 zooms from city1 to city3 with fuel level fl1 to fl5, plane1 zooms from city0 to city1 with fuel level fl1 to fl0, plane1 zooms from city0 to city3 with fuel level fl5 to fl4, person8 boards plane1 at city2, plane1 zooms from city0 to city2 with fuel level fl5 to fl0, plane1 zooms from city2 to city1 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl1 to fl4, plane1 zooms from city0 to city3 with fuel level fl4 to fl0, plane1 flies from city0 to city1 with fuel level fl5 to fl0, plane1 zooms from city1 to city2 with fuel level fl3 to fl4, plane1 gets refueled at city0 with fuel level fl1 to fl2, plane1 zooms from city0 to city3 with fuel level fl6 to fl1, plane1 zooms from city1 to city0 with fuel level fl3 to fl4, plane1 zooms from city3 to city2 with fuel level fl3 to fl2, plane1 zooms from city2 to city0 with fuel level fl4 to fl3, plane1 zooms from city3 to city0 with fuel level fl3 to fl2, plane1 zooms from city1 to city2 with fuel level fl0 to fl6, plane1 zooms from city0 to city2 with fuel level fl3 to fl5, plane1 zooms from city3 to city2 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl1 to fl6, plane1 zooms from city0 to city3 with fuel level fl3 to fl6, plane1 zooms from city1 to city0 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl5 to fl2, plane1 zooms from city0 to city3 with fuel level fl5 to fl6, plane1 zooms from city0 to city1 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl0 to fl4, plane1 zooms from city2 to city3 with fuel level fl5 to fl4, plane1 zooms from city2 to city1 with fuel level fl1 to fl4, plane1 flies from city2 to city3 with fuel level fl5 to fl2, plane1 zooms from city0 to city1 with fuel level fl0 to fl5, plane1 zooms from city2 to city3 with fuel level fl6 to fl3, plane1 zooms from city2 to city0 with fuel level fl1 to fl6, plane1 zooms from city0 to city2 with fuel level fl2 to fl6, plane1 flies from city2 to city0 with fuel level fl6 to fl1, plane1 zooms from city3 to city2 with fuel level fl3 to fl1, plane1 zooms from city3 to city2 with fuel level fl4 to fl0, plane1 zooms from city1 to city0 with fuel level fl0 to fl4, plane1 gets refueled at city1 with fuel level fl4 to fl2, plane1 zooms from city2 to city1 with fuel level fl5 to fl6, plane1 flies from city3 to city1 with fuel level fl6 to fl5, plane1 zooms from city0 to city2 with fuel level fl0 to fl1, plane1 zooms from city2 to city3 with fuel level fl6 to fl2, plane1 zooms from city3 to city2 with fuel level fl2 to fl5, plane1 flies from city2 to city0 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl3 to fl1, plane1 zooms from city3 to city2 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl3 to fl1, plane1 zooms from city3 to city2 with fuel level fl4 to fl3, plane1 zooms from city1 to city2 with fuel level fl3 to fl6, plane1 zooms from city0 to city2 with fuel level fl5 to fl4, plane1 flies from city2 to city0 with fuel level fl3 to fl2, plane1 zooms from city1 to city3 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl2 to fl6, plane1 zooms from city2 to city3 with fuel level fl6 to fl3, plane1 zooms from city2 to city0 with fuel level fl3 to fl4, plane1 zooms from city0 to city3 with fuel level fl2 to fl5, plane1 flies from city1 to city3 with fuel level fl0 to fl3, plane1 zooms from city1 to city3 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl1 to fl3, plane1 zooms from city1 to city2 with fuel level fl4 to fl1, plane1 zooms from city2 to city3 with fuel level fl3 to fl5, plane1 flies from city3 to city2 with fuel level fl6 to fl2, plane1 zooms from city1 to city3 with fuel level fl1 to fl6, plane1 zooms from city1 to city0 with fuel level fl4 to fl5, plane1 zooms from city0 to city1 with fuel level fl0 to fl1, plane1 zooms from city3 to city1 with fuel level fl6 to fl0, plane1 zooms from city1 to city2 with fuel level fl0 to fl1, plane1 zooms from city0 to city2 with fuel level fl6 to fl4, plane1 flies from city3 to city1 with fuel level fl1 to fl5, plane1 zooms from city0 to city3 with fuel level fl3 to fl1, plane1 zooms from city0 to city3 with fuel level fl2 to fl0, plane1 zooms from city3 to city1 with fuel level fl2 to fl6, plane1 zooms from city2 to city3 with fuel level fl3 to fl1, plane1 zooms from city2 to city3 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl5 to fl4, plane1 zooms from city0 to city2 with fuel level fl1 to fl2, plane1 zooms from city3 to city0 with fuel level fl3 to fl1, plane1 flies from city1 to city0 with fuel level fl2 to fl3, plane1 zooms from city0 to city3 with fuel level fl6 to fl5, plane1 gets refueled at city1 with fuel level fl6 to fl5, plane1 zooms from city2 to city1 with fuel level fl4 to fl1, plane1 flies from city1 to city0 with fuel level fl5 to fl6, plane1 zooms from city3 to city1 with fuel level fl3 to fl0, plane1 zooms from city2 to city0 with fuel level fl4 to fl3, plane1 flies from city2 to city0 with fuel level fl0 to fl4, plane1 zooms from city3 to city0 with fuel level fl3 to fl5, plane1 zooms from city0 to city3 with fuel level fl2 to fl4, plane1 zooms from city3 to city2 with fuel level fl1 to fl4, plane1 zooms from city3 to city2 with fuel level fl3 to fl4, plane1 zooms from city2 to city1 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl1 to fl6, person3 boards plane1 at city3, plane1 zooms from city1 to city2 with fuel level fl3 to fl1, plane1 zooms from city3 to city2 with fuel level fl6 to fl1, plane1 zooms from city3 to city0 with fuel level fl0 to fl4, plane1 zooms from city0 to city3 with fuel level fl3 to fl5, plane1 flies from city1 to city0 with fuel level fl3 to fl5, plane1 zooms from city2 to city1 with fuel level fl5 to fl3, plane1 zooms from city0 to city3 with fuel level fl2 to fl6, plane1 zooms from city3 to city2 with fuel level fl3 to fl2, plane1 zooms from city2 to city3 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl6 to fl2, plane1 zooms from city0 to city1 with fuel level fl1 to fl2, plane1 flies from city0 to city3 with fuel level fl4 to fl0, plane1 zooms from city3 to city2 with fuel level fl5 to fl1, plane1 zooms from city0 to city3 with fuel level fl5 to fl0, plane1 zooms from city2 to city3 with fuel level fl6 to fl1, plane1 flies from city1 to city2 with fuel level fl2 to fl6, plane1 zooms from city0 to city3 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl0 to fl1, plane1 flies from city0 to city3 with fuel level fl3 to fl2, plane1 zooms from city2 to city1 with fuel level fl6 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl4 to fl5, plane1 zooms from city0 to city2 with fuel level fl1 to fl4, plane1 zooms from city1 to city0 with fuel level fl1 to fl5, plane1 zooms from city0 to city2 with fuel level fl4 to fl0, plane1 zooms from city2 to city1 with fuel level fl5 to fl3, plane1 zooms from city2 to city0 with fuel level fl6 to fl3, plane1 flies from city2 to city0 with fuel level fl3 to fl0, plane1 zooms from city2 to city3 with fuel level fl5 to fl0, plane1 zooms from city3 to city0 with fuel level fl6 to fl2, plane1 zooms from city1 to city0 with fuel level fl6 to fl5, plane1 flies from city1 to city3 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl2 to fl4, plane1 zooms from city0 to city1 with fuel level fl5 to fl0, plane1 zooms from city2 to city0 with fuel level fl3 to fl1, plane1 flies from city2 to city3 with fuel level fl2 to fl1, person8 departs plane1 at city0, plane1 zooms from city0 to city1 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl1 to fl2, plane1 zooms from city0 to city1 with fuel level fl4 to fl2, plane1 zooms from city2 to city3 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl0 to fl3, plane1 flies from city1 to city2 with fuel level fl4 to fl2, plane1 zooms from city3 to city1 with fuel level fl0 to fl1, plane1 zooms from city3 to city1 with fuel level fl4 to fl2, plane1 flies from city0 to city3 with fuel level fl6 to fl5, plane1 zooms from city2 to city0 with fuel level fl6 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl0, plane1 zooms from city0 to city3 with fuel level fl6 to fl4, plane1 zooms from city3 to city1 with fuel level fl3 to fl6, plane1 zooms from city1 to city3 with fuel level fl6 to fl3, plane1 zooms from city3 to city2 with fuel level fl2 to fl1, plane1 zooms from city3 to city1 with fuel level fl5 to fl0, plane1 zooms from city1 to city0 with fuel level fl4 to fl0, plane1 zooms from city3 to city0 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl3 to fl0, plane1 zooms from city1 to city3 with fuel level fl0 to fl6, plane1 zooms from city3 to city0 with fuel level fl3 to fl4, plane1 zooms from city2 to city1 with fuel level fl0 to fl1, plane1 zooms from city2 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city2 with fuel level fl4 to fl3, plane1 zooms from city3 to city1 with fuel level fl2 to fl3, plane1 zooms from city2 to city3 with fuel level fl0 to fl4, plane1 flies from city2 to city3 with fuel level fl4 to fl5, plane1 zooms from city0 to city3 with fuel level fl6 to fl4, plane1 zooms from city1 to city0 with fuel level fl0 to fl6, plane1 zooms from city1 to city0 with fuel level fl3 to fl1, plane1 zooms from city2 to city0 with fuel level fl2 to fl4, plane1 zooms from city0 to city2 with fuel level fl4 to fl6, plane1 zooms from city0 to city2 with fuel level fl0 to fl1, plane1 flies from city2 to city0 with fuel level fl5 to fl2, plane1 zooms from city0 to city2 with fuel level fl2 to fl0, plane1 zooms from city3 to city0 with fuel level fl1 to fl4, plane1 zooms from city2 to city0 with fuel level fl5 to fl3, plane1 zooms from city0 to city2 with fuel level fl5 to fl1, plane1 gets refueled at city3 with fuel level fl3 to fl0, plane1 zooms from city3 to city1 with fuel level fl0 to fl1, plane1 zooms from city3 to city0 with fuel level fl4 to fl5, plane1 zooms from city1 to city3 with fuel level fl5 to fl3, plane1 zooms from city3 to city0 with fuel level fl0 to fl3, plane1 zooms from city3 to city1 with fuel level fl4 to fl1, plane1 zooms from city0 to city2 with fuel level fl5 to fl4, plane1 zooms from city1 to city3 with fuel level fl3 to fl6, plane1 zooms from city1 to city2 with fuel level fl3 to fl2, plane1 zooms from city1 to city3 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city3 with fuel level fl0 to fl4, plane1 zooms from city0 to city1 with fuel level fl2 to fl6, plane1 zooms from city3 to city1 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl5 to fl1, plane1 gets refueled at city1 with fuel level fl3 to fl4, plane1 flies from city1 to city0 with fuel level fl0 to fl2, plane1 flies from city0 to city3 with fuel level fl3 to fl6, plane1 flies from city0 to city3 with fuel level fl6 to fl0, person1 departs plane1 at city2, plane1 zooms from city2 to city3 with fuel level fl1 to fl2, plane1 zooms from city3 to city0 with fuel level fl6 to fl4, plane1 zooms from city1 to city3 with fuel level fl5 to fl1, plane1 zooms from city3 to city2 with fuel level fl0 to fl4, plane1 zooms from city3 to city2 with fuel level fl6 to fl3, plane1 zooms from city3 to city1 with fuel level fl6 to fl4, plane1 zooms from city3 to city1 with fuel level fl3 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl6, plane1 zooms from city1 to city0 with fuel level fl0 to fl3, plane1 zooms from city1 to city3 with fuel level fl3 to fl5, plane1 zooms from city3 to city2 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl6 to fl1, plane1 zooms from city1 to city3 with fuel level fl3 to fl5, plane1 zooms from city3 to city0 with fuel level fl0 to fl6, plane1 zooms from city3 to city1 with fuel level fl4 to fl6, plane1 zooms from city3 to city0 with fuel level fl2 to fl1, plane1 zooms from city1 to city0 with fuel level fl2 to fl3, plane1 zooms from city0 to city1 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl1 to fl5, plane1 zooms from city3 to city0 with fuel level fl4 to fl5, plane1 zooms from city2 to city3 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl2 to fl3, plane1 zooms from city3 to city1 with fuel level fl3 to fl5, plane1 zooms from city2 to city0 with fuel level fl6 to fl1, plane1 zooms from city1 to city2 with fuel level fl0 to fl3, plane1 flies from city1 to city2 with fuel level fl5 to fl1, plane1 zooms from city0 to city2 with fuel level fl5 to fl6, plane1 zooms from city0 to city1 with fuel level fl5 to fl6, plane1 zooms from city0 to city1 with fuel level fl5 to fl4, plane1 flies from city0 to city2 with fuel level fl5 to fl6, plane1 zooms from city0 to city1 with fuel level fl0 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl4, plane1 zooms from city0 to city3 with fuel level fl3 to fl4, plane1 zooms from city0 to city1 with fuel level fl0 to fl1, plane1 zooms from city3 to city2 with fuel level fl2 to fl4, plane1 flies from city0 to city3 with fuel level fl4 to fl1, plane1 zooms from city3 to city0 with fuel level fl4 to fl3, plane1 flies from city2 to city1 with fuel level fl2 to fl3, plane1 zooms from city2 to city1 with fuel level fl4 to fl6, plane1 zooms from city3 to city0 with fuel level fl6 to fl2, plane1 zooms from city3 to city0 with fuel level fl1 to fl6, plane1 zooms from city2 to city1 with fuel level fl5 to fl4, plane1 zooms from city0 to city1 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl2 to fl5, plane1 zooms from city1 to city3 with fuel level fl6 to fl2, plane1 zooms from city2 to city0 with fuel level fl6 to fl2, plane1 gets refueled at city1 with fuel level fl3 to fl1, plane1 zooms from city1 to city0 with fuel level fl5 to fl3, plane1 zooms from city1 to city3 with fuel level fl0 to fl1, plane1 zooms from city1 to city0 with fuel level fl4 to fl3, plane1 zooms from city1 to city2 with fuel level fl5 to fl4, plane1 zooms from city0 to city2 with fuel level fl6 to fl0, plane1 flies from city3 to city1 with fuel level fl0 to fl1, plane1 gets refueled at city3 with fuel level fl0 to fl1, plane1 zooms from city1 to city3 with fuel level fl5 to fl3, plane1 zooms from city0 to city3 with fuel level fl4 to fl0, plane1 flies from city0 to city3 with fuel level fl2 to fl0, plane1 zooms from city1 to city2 with fuel level fl2 to fl3, plane1 zooms from city0 to city2 with fuel level fl3 to fl1, plane1 zooms from city0 to city1 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl1 to fl6, plane1 zooms from city3 to city1 with fuel level fl1 to fl0, plane1 zooms from city1 to city3 with fuel level fl3 to fl0, plane1 flies from city1 to city0 with fuel level fl4 to fl3, plane1 zooms from city0 to city2 with fuel level fl4 to fl1, plane1 gets refueled at city3 with fuel level fl1 to fl6, plane1 zooms from city2 to city0 with fuel level fl6 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl3, plane1 zooms from city1 to city2 with fuel level fl3 to fl2, plane1 zooms from city2 to city0 with fuel level fl2 to fl5, plane1 gets refueled at city0 with fuel level fl3 to fl4, plane1 zooms from city2 to city3 with fuel level fl3 to fl2, plane1 zooms from city2 to city0 with fuel level fl6 to fl5, plane1 zooms from city0 to city1 with fuel level fl3 to fl6, plane1 zooms from city0 to city2 with fuel level fl6 to fl1, plane1 zooms from city2 to city0 with fuel level fl0 to fl4, plane1 zooms from city2 to city1 with fuel level fl6 to fl2, plane1 zooms from city3 to city2 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl2 to fl0, plane1 zooms from city1 to city2 with fuel level fl0 to fl4, plane1 zooms from city2 to city3 with fuel level fl4 to fl5, plane1 zooms from city0 to city2 with fuel level fl2 to fl0, plane1 zooms from city3 to city1 with fuel level fl2 to fl6, plane1 zooms from city0 to city2 with fuel level fl0 to fl3, plane1 zooms from city0 to city1 with fuel level fl6 to fl4, plane1 zooms from city2 to city3 with fuel level fl5 to fl6, plane1 zooms from city2 to city1 with fuel level fl5 to fl4, plane1 zooms from city1 to city0 with fuel level fl2 to fl1, plane1 zooms from city1 to city2 with fuel level fl2 to fl1, plane1 zooms from city1 to city0 with fuel level fl5 to fl2, plane1 zooms from city0 to city2 with fuel level fl2 to fl3, plane1 zooms from city3 to city0 with fuel level fl3 to fl6, plane1 zooms from city3 to city2 with fuel level fl6 to fl3, plane1 zooms from city2 to city1 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl5, plane1 flies from city0 to city2 with fuel level fl2 to fl0, plane1 zooms from city0 to city2 with fuel level fl5 to fl0, plane1 zooms from city3 to city2 with fuel level fl0 to fl4, plane1 zooms from city1 to city3 with fuel level fl4 to fl2, plane1 zooms from city2 to city1 with fuel level fl4 to fl5, plane1 zooms from city0 to city2 with fuel level fl0 to fl6, plane1 zooms from city1 to city3 with fuel level fl5 to fl3, plane1 gets refueled at city0 with fuel level fl0 to fl6, plane1 zooms from city3 to city0 with fuel level fl1 to fl2, plane1 gets refueled at city2 with fuel level fl2 to fl1, plane1 zooms from city1 to city0 with fuel level fl1 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl4, plane1 flies from city1 to city0 with fuel level fl2 to fl5, plane1 zooms from city1 to city0 with fuel level fl2 to fl0, plane1 zooms from city1 to city0 with fuel level fl0 to fl1, plane1 flies from city2 to city1 with fuel level fl2 to fl0, plane1 zooms from city2 to city3 with fuel level fl4 to fl1, plane1 zooms from city0 to city1 with fuel level fl0 to fl6, plane1 zooms from city2 to city1 with fuel level fl1 to fl2, plane1 zooms from city0 to city1 with fuel level fl6 to fl1, plane1 zooms from city0 to city3 with fuel level fl5 to fl3, plane1 flies from city2 to city3 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl2 to fl0, plane1 zooms from city0 to city2 with fuel level fl0 to fl5, plane1 zooms from city3 to city0 with fuel level fl3 to fl6, plane1 flies from city1 to city3 with fuel level fl1 to fl6, plane1 zooms from city2 to city1 with fuel level fl3 to fl6, plane1 zooms from city3 to city1 with fuel level fl2 to fl0, plane1 zooms from city3 to city2 with fuel level fl5 to fl1, plane1 zooms from city2 to city0 with fuel level fl4 to fl1, plane1 zooms from city1 to city3 with fuel level fl2 to fl6, plane1 flies from city0 to city3 with fuel level fl0 to fl4, plane1 zooms from city1 to city2 with fuel level fl1 to fl4, plane1 zooms from city0 to city3 with fuel level fl5 to fl1, plane1 gets refueled at city3 with fuel level fl5 to fl6, person8 boards plane1 at city0, plane1 flies from city3 to city1 with fuel level fl6 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl4, plane1 zooms from city3 to city0 with fuel level fl4 to fl3, plane1 zooms from city2 to city1 with fuel level fl5 to fl0, plane1 zooms from city0 to city2 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl3 to fl6, plane1 flies from city3 to city1 with fuel level fl5 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl6, plane1 zooms from city0 to city2 with fuel level fl2 to fl1, plane1 flies from city1 to city3 with fuel level fl0 to fl5, plane1 flies from city3 to city1 with fuel level fl5 to fl4, plane1 zooms from city1 to city0 with fuel level fl5 to fl0, plane1 zooms from city3 to city0 with fuel level fl2 to fl5, plane1 zooms from city1 to city0 with fuel level fl5 to fl3, person4 boards plane1 at city1, plane1 zooms from city2 to city1 with fuel level fl2 to fl4, plane1 zooms from city3 to city0 with fuel level fl3 to fl0, plane1 zooms from city2 to city0 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl1 to fl4, plane1 zooms from city3 to city0 with fuel level fl6 to fl3, plane1 zooms from city2 to city3 with fuel level fl0 to fl1, plane1 zooms from city2 to city1 with fuel level fl6 to fl3, plane1 zooms from city1 to city0 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl5 to fl2, plane1 flies from city1 to city3 with fuel level fl2 to fl4, plane1 zooms from city1 to city3 with fuel level fl1 to fl6, plane1 zooms from city3 to city2 with fuel level fl4 to fl0, plane1 zooms from city2 to city0 with fuel level fl5 to fl1, plane1 zooms from city0 to city3 with fuel level fl4 to fl3, plane1 zooms from city1 to city2 with fuel level fl6 to fl5, plane1 zooms from city1 to city3 with fuel level fl3 to fl5, plane1 zooms from city2 to city0 with fuel level fl6 to fl1, plane1 zooms from city0 to city2 with fuel level fl2 to fl1, plane1 zooms from city3 to city0 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl6 to fl0, plane1 zooms from city1 to city3 with fuel level fl6 to fl5, plane1 zooms from city2 to city1 with fuel level fl0 to fl6, plane1 zooms from city0 to city2 with fuel level fl2 to fl4, plane1 zooms from city2 to city1 with fuel level fl1 to fl4, plane1 zooms from city2 to city1 with fuel level fl2 to fl4, plane1 zooms from city3 to city1 with fuel level fl6 to fl5, plane1 zooms from city1 to city2 with fuel level fl4 to fl5, plane1 zooms from city2 to city0 with fuel level fl0 to fl6, plane1 zooms from city2 to city0 with fuel level fl1 to fl0, plane1 flies from city3 to city0 with fuel level fl3 to fl4, plane1 zooms from city3 to city0 with fuel level fl6 to fl5, plane1 zooms from city3 to city0 with fuel level fl4 to fl5, plane1 zooms from city3 to city2 with fuel level fl5 to fl6, plane1 zooms from city3 to city2 with fuel level fl3 to fl6, plane1 zooms from city0 to city1 with fuel level fl0 to fl2, plane1 zooms from city2 to city3 with fuel level fl0 to fl3, plane1 zooms from city2 to city1 with fuel level fl3 to fl5, plane1 zooms from city0 to city3 with fuel level fl4 to fl5, plane1 flies from city1 to city0 with fuel level fl2 to fl0, plane1 zooms from city1 to city0 with fuel level fl4 to fl6, plane1 gets refueled at city2 with fuel level fl3 to fl2, plane1 zooms from city2 to city0 with fuel level fl5 to fl0, plane1 zooms from city3 to city2 with fuel level fl0 to fl1, plane1 flies from city0 to city2 with fuel level fl6 to fl2, plane1 flies from city3 to city0 with fuel level fl5 to fl3, plane1 zooms from city0 to city2 with fuel level fl4 to fl1, plane1 flies from city1 to city0 with fuel level fl0 to fl5, plane1 zooms from city0 to city3 with fuel level fl6 to fl4, plane1 zooms from city1 to city3 with fuel level fl1 to fl2, plane1 zooms from city1 to city0 with fuel level fl2 to fl1, plane1 zooms from city0 to city3 with fuel level fl3 to fl0, plane1 zooms from city3 to city2 with fuel level fl3 to fl2, plane1 zooms from city0 to city1 with fuel level fl1 to fl2, plane1 flies from city2 to city0 with fuel level fl3 to fl1, plane1 flies from city1 to city3 with fuel level fl1 to fl3, plane1 zooms from city1 to city3 with fuel level fl1 to fl4, plane1 zooms from city0 to city1 with fuel level fl1 to fl4, plane1 zooms from city0 to city3 with fuel level fl1 to fl2, plane1 zooms from city1 to city2 with fuel level fl5 to fl1, plane1 zooms from city1 to city0 with fuel level fl0 to fl5, plane1 zooms from city2 to city0 with fuel level fl2 to fl1, person7 departs plane1 at city2, plane1 gets refueled at city0 with fuel level fl2 to fl6, plane1 zooms from city3 to city0 with fuel level fl5 to fl2, plane1 zooms from city0 to city2 with fuel level fl4 to fl0, plane1 zooms from city2 to city0 with fuel level fl1 to fl4, plane1 zooms from city2 to city1 with fuel level fl6 to fl4, plane1 zooms from city2 to city1 with fuel level fl0 to fl2, plane1 zooms from city2 to city0 with fuel level fl2 to fl3, plane1 flies from city3 to city2 with fuel level fl6 to fl4, plane1 zooms from city3 to city2 with fuel level fl5 to fl0, plane1 zooms from city2 to city1 with fuel level fl4 to fl3, person2 departs plane1 at city3, plane1 zooms from city3 to city0 with fuel level fl3 to fl6, plane1 flies from city0 to city2 with fuel level fl2 to fl6, plane1 flies from city2 to city3 with fuel level fl2 to fl6, person7 departs plane1 at city3, plane1 zooms from city0 to city1 with fuel level fl2 to fl6, plane1 zooms from city1 to city3 with fuel level fl6 to fl4, plane1 zooms from city3 to city1 with fuel level fl1 to fl3, plane1 zooms from city2 to city1 with fuel level fl3 to fl0, plane1 gets refueled at city2 with fuel level fl6 to fl0, plane1 gets refueled at city3 with fuel level fl2 to fl4, plane1 zooms from city0 to city1 with fuel level fl6 to fl1, plane1 zooms from city0 to city2 with fuel level fl1 to fl0, plane1 zooms from city1 to city3 with fuel level fl1 to fl2, plane1 zooms from city2 to city0 with fuel level fl2 to fl6, plane1 zooms from city3 to city2 with fuel level fl6 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl2, plane1 zooms from city1 to city0 with fuel level fl5 to fl3, plane1 zooms from city3 to city1 with fuel level fl5 to fl1, plane1 flies from city1 to city3 with fuel level fl3 to fl5, plane1 flies from city1 to city2 with fuel level fl2 to fl5, plane1 zooms from city0 to city1 with fuel level fl0 to fl5, plane1 zooms from city1 to city0 with fuel level fl6 to fl1, plane1 zooms from city2 to city3 with fuel level fl5 to fl3, plane1 gets refueled at city1 with fuel level fl5 to fl2, plane1 zooms from city1 to city2 with fuel level fl5 to fl4, plane1 zooms from city2 to city3 with fuel level fl0 to fl3, person7 boards plane1 at city3, plane1 zooms from city3 to city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city0 with fuel level fl6 to fl0, plane1 zooms from city2 to city0 with fuel level fl6 to fl5, person1 boards plane1 at city2, plane1 flies from city3 to city1 with fuel level fl4 to fl0, plane1 zooms from city0 to city1 with fuel level fl1 to fl5, plane1 zooms from city2 to city0 with fuel level fl1 to fl2, plane1 flies from city3 to city2 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl3 to fl4, plane1 flies from city1 to city3 with fuel level fl4 to fl3, plane1 zooms from city3 to city0 with fuel level fl5 to fl3, plane1 zooms from city2 to city0 with fuel level fl4 to fl5, plane1 zooms from city3 to city0 with fuel level fl0 to fl6, plane1 flies from city2 to city0 with fuel level fl4 to fl1, plane1 zooms from city2 to city0 with fuel level fl2 to fl6, plane1 zooms from city3 to city0 with fuel level fl3 to fl0, plane1 zooms from city3 to city0 with fuel level fl3 to fl0, plane1 flies from city1 to city2 with fuel level fl5 to fl4, plane1 flies from city2 to city0 with fuel level fl4 to fl0, plane1 zooms from city2 to city1 with fuel level fl3 to fl1, plane1 zooms from city1 to city3 with fuel level fl5 to fl1, plane1 gets refueled at city0 with fuel level fl2 to fl4, plane1 flies from city0 to city2 with fuel level fl2 to fl3, plane1 zooms from city3 to city2 with fuel level fl0 to fl4, plane1 zooms from city0 to city1 with fuel level fl5 to fl2, plane1 zooms from city2 to city3 with fuel level fl4 to fl5, plane1 zooms from city3 to city1 with fuel level fl1 to fl3, plane1 zooms from city2 to city0 with fuel level fl4 to fl6, plane1 zooms from city3 to city2 with fuel level fl6 to fl0, plane1 zooms from city0 to city1 with fuel level fl1 to fl3, plane1 zooms from city1 to city3 with fuel level fl6 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl2 to fl0, plane1 zooms from city1 to city0 with fuel level fl3 to fl6, plane1 zooms from city0 to city1 with fuel level fl2 to fl3, plane1 flies from city3 to city1 with fuel level fl5 to fl2, plane1 zooms from city3 to city2 with fuel level fl0 to fl5, plane1 zooms from city3 to city0 with fuel level fl1 to fl2, plane1 flies from city2 to city1 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl3 to fl1, plane1 zooms from city2 to city0 with fuel level fl6 to fl1, plane1 gets refueled at city1 with fuel level fl4 to fl5, plane1 zooms from city2 to city3 with fuel level fl2 to fl4, plane1 zooms from city0 to city3 with fuel level fl1 to fl2, plane1 zooms from city3 to city2 with fuel level fl6 to fl0, plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 zooms from city0 to city1 with fuel level fl6 to fl3, plane1 flies from city3 to city2 with fuel level fl0 to fl2, plane1 flies from city0 to city3 with fuel level fl5 to fl0, plane1 flies from city2 to city1 with fuel level fl6 to fl3, plane1 zooms from city0 to city1 with fuel level fl1 to fl0, plane1 zooms from city0 to city3 with fuel level fl0 to fl1, plane1 zooms from city3 to city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city3 with fuel level fl3 to fl1, plane1 zooms from city2 to city3 with fuel level fl3 to fl4, plane1 zooms from city3 to city2 with fuel level fl5 to fl3, plane1 zooms from city0 to city1 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl1 to fl4, plane1 zooms from city2 to city0 with fuel level fl2 to fl4, plane1 gets refueled at city2 with fuel level fl5 to fl2, plane1 flies from city2 to city0 with fuel level fl3 to fl4, plane1 zooms from city3 to city1 with fuel level fl6 to fl3, plane1 flies from city0 to city1 with fuel level fl1 to fl6, plane1 zooms from city3 to city0 with fuel level fl0 to fl2, plane1 zooms from city3 to city1 with fuel level fl1 to fl0, plane1 flies from city3 to city2 with fuel level fl2 to fl5, plane1 zooms from city1 to city0 with fuel level fl0 to fl2, plane1 zooms from city1 to city2 with fuel level fl2 to fl3, plane1 flies from city2 to city3 with fuel level fl4 to fl0, plane1 flies from city3 to city2 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl1 to fl4, plane1 zooms from city2 to city0 with fuel level fl6 to fl1, plane1 zooms from city2 to city1 with fuel level fl6 to fl1, plane1 zooms from city1 to city0 with fuel level fl5 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl2, plane1 zooms from city0 to city3 with fuel level fl0 to fl4, plane1 zooms from city1 to city2 with fuel level fl1 to fl4, plane1 zooms from city1 to city0 with fuel level fl3 to fl0, plane1 zooms from city0 to city2 with fuel level fl2 to fl5, plane1 zooms from city2 to city0 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl3 to fl4, plane1 zooms from city2 to city1 with fuel level fl6 to fl5, plane1 zooms from city1 to city2 with fuel level fl3 to fl1, plane1 flies from city1 to city3 with fuel level fl6 to fl4, plane1 gets refueled at city0 with fuel level fl4 to fl1, plane1 gets refueled at city0 with fuel level fl6 to fl0, plane1 zooms from city0 to city3 with fuel level fl0 to fl3, plane1 zooms from city1 to city2 with fuel level fl0 to fl6, plane1 zooms from city2 to city0 with fuel level fl1 to fl5, plane1 zooms from city3 to city0 with fuel level fl1 to fl2, plane1 flies from city3 to city1 with fuel level fl2 to fl6, plane1 zooms from city2 to city1 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl0 to fl2, plane1 zooms from city1 to city2 with fuel level fl2 to fl5, plane1 zooms from city3 to city0 with fuel level fl1 to fl0, plane1 zooms from city0 to city2 with fuel level fl3 to fl4, plane1 zooms from city2 to city3 with fuel level fl3 to fl0, plane1 zooms from city3 to city1 with fuel level fl2 to fl3, plane1 zooms from city2 to city0 with fuel level fl0 to fl5, plane1 zooms from city3 to city1 with fuel level fl4 to fl1, plane1 gets refueled at city2 with fuel level fl1 to fl4, plane1 zooms from city2 to city3 with fuel level fl6 to fl1, plane1 zooms from city2 to city0 with fuel level fl6 to fl3, plane1 zooms from city3 to city2 with fuel level fl6 to fl5, plane1 flies from city3 to city1 with fuel level fl3 to fl2, plane1 zooms from city2 to city1 with fuel level fl2 to fl5, plane1 flies from city1 to city3 with fuel level fl5 to fl3, plane1 zooms from city0 to city1 with fuel level fl2 to fl3, plane1 zooms from city3 to city2 with fuel level fl2 to fl0, plane1 flies from city2 to city3 with fuel level fl2 to fl3, person6 departs plane1 at city0, plane1 zooms from city3 to city2 with fuel level fl5 to fl3, plane1 zooms from city0 to city1 with fuel level fl1 to fl4, plane1 flies from city3 to city2 with fuel level fl3 to fl4, plane1 zooms from city3 to city1 with fuel level fl0 to fl1, plane1 gets refueled at city0 with fuel level fl6 to fl3, plane1 zooms from city2 to city1 with fuel level fl5 to fl1, plane1 zooms from city3 to city1 with fuel level fl6 to fl2, plane1 zooms from city3 to city0 with fuel level fl5 to fl3, plane1 zooms from city0 to city2 with fuel level fl5 to fl0, plane1 zooms from city2 to city1 with fuel level fl0 to fl1, plane1 zooms from city3 to city0 with fuel level fl2 to fl6, plane1 zooms from city1 to city3 with fuel level fl5 to fl6, plane1 gets refueled at city2 with fuel level fl4 to fl5, plane1 zooms from city2 to city0 with fuel level fl2 to fl3, plane1 zooms from city2 to city0 with fuel level fl4 to fl6, plane1 zooms from city0 to city3 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl4 to fl0, plane1 zooms from city2 to city1 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl4 to fl2, plane1 zooms from city3 to city0 with fuel level fl1 to fl5, plane1 flies from city2 to city1 with fuel level fl1 to fl3, plane1 zooms from city2 to city1 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl5 to fl2, plane1 zooms from city2 to city0 with fuel level fl4 to fl0, plane1 flies from city2 to city0 with fuel level fl0 to fl6, plane1 zooms from city0 to city3 with fuel level fl1 to fl3, plane1 zooms from city2 to city0 with fuel level fl0 to fl4, plane1 zooms from city2 to city3 with fuel level fl2 to fl0, plane1 gets refueled at city3 with fuel level fl4 to fl0, plane1 zooms from city1 to city0 with fuel level fl6 to fl2, plane1 zooms from city2 to city1 with fuel level fl3 to fl6, plane1 zooms from city1 to city0 with fuel level fl5 to fl0, plane1 zooms from city3 to city1 with fuel level fl1 to fl6, plane1 zooms from city0 to city2 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl1 to fl3, plane1 gets refueled at city0 with fuel level fl6 to fl5, plane1 zooms from city2 to city1 with fuel level fl5 to fl2, plane1 zooms from city3 to city2 with fuel level fl6 to fl1, plane1 zooms from city1 to city3 with fuel level fl6 to fl1, plane1 flies from city2 to city1 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl2 to fl0, plane1 zooms from city2 to city1 with fuel level fl4 to fl6, plane1 zooms from city2 to city0 with fuel level fl6 to fl3, plane1 zooms from city3 to city2 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl1 to fl4, plane1 zooms from city0 to city3 with fuel level fl0 to fl3, plane1 zooms from city0 to city1 with fuel level fl3 to fl0, plane1 zooms from city0 to city1 with fuel level fl3 to fl1, plane1 zooms from city1 to city0 with fuel level fl0 to fl5, plane1 zooms from city0 to city2 with fuel level fl3 to fl2, plane1 flies from city0 to city3 with fuel level fl1 to fl2, plane1 zooms from city2 to city1 with fuel level fl6 to fl2, plane1 flies from city3 to city0 with fuel level fl1 to fl0, plane1 zooms from city3 to city0 with fuel level fl1 to fl3, plane1 zooms from city3 to city0 with fuel level fl6 to fl0, plane1 zooms from city0 to city1 with fuel level fl5 to fl3, plane1 zooms from city2 to city3 with fuel level fl6 to fl4, plane1 flies from city2 to city3 with fuel level fl5 to fl0, plane1 zooms from city3 to city0 with fuel level fl2 to fl5, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 zooms from city0 to city3 with fuel level fl2 to fl5, plane1 zooms from city3 to city2 with fuel level fl5 to fl4, plane1 zooms from city0 to city3 with fuel level fl4 to fl2, plane1 zooms from city1 to city0 with fuel level fl2 to fl4, plane1 zooms from city3 to city1 with fuel level fl2 to fl1, plane1 zooms from city1 to city3 with fuel level fl3 to fl5, plane1 zooms from city1 to city2 with fuel level fl3 to fl5, plane1 zooms from city0 to city1 with fuel level fl6 to fl2, plane1 zooms from city0 to city2 with fuel level fl5 to fl4, plane1 zooms from city1 to city0 with fuel level fl1 to fl2, plane1 zooms from city2 to city0 with fuel level fl4 to fl3, plane1 zooms from city2 to city0 with fuel level fl0 to fl6, plane1 zooms from city3 to city0 with fuel level fl6 to fl1, plane1 flies from city1 to city0 with fuel level fl5 to fl2, plane1 zooms from city3 to city2 with fuel level fl5 to fl0, plane1 zooms from city0 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city3 with fuel level fl0 to fl4, plane1 zooms from city3 to city2 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl0 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl2, plane1 zooms from city2 to city1 with fuel level fl0 to fl6, plane1 zooms from city3 to city0 with fuel level fl2 to fl0, plane1 zooms from city0 to city2 with fuel level fl1 to fl3, plane1 zooms from city3 to city0 with fuel level fl5 to fl4, plane1 zooms from city1 to city0 with fuel level fl0 to fl5, plane1 zooms from city1 to city3 with fuel level fl3 to fl1, plane1 zooms from city1 to city2 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl6 to fl4, plane1 zooms from city1 to city2 with fuel level fl2 to fl0, plane1 gets refueled at city0 with fuel level fl5 to fl2, plane1 zooms from city2 to city3 with fuel level fl1 to fl2, plane1 zooms from city0 to city2 with fuel level fl1 to fl4, plane1 zooms from city0 to city1 with fuel level fl2 to fl4, plane1 zooms from city1 to city3 with fuel level fl2 to fl1, plane1 zooms from city0 to city2 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl5 to fl2, plane1 zooms from city2 to city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city0 with fuel level fl2 to fl1, plane1 gets refueled at city0 with fuel level fl6 to fl1, plane1 zooms from city0 to city3 with fuel level fl4 to fl3, plane1 flies from city0 to city1 with fuel level fl2 to fl1, plane1 zooms from city1 to city2 with fuel level fl0 to fl1, plane1 zooms from city1 to city0 with fuel level fl0 to fl3, plane1 zooms from city1 to city0 with fuel level fl1 to fl5, plane1 zooms from city2 to city1 with fuel level fl5 to fl6, plane1 zooms from city2 to city0 with fuel level fl5 to fl0, plane1 zooms from city3 to city1 with fuel level fl5 to fl0, plane1 zooms from city2 to city3 with fuel level fl1 to fl6, plane1 zooms from city1 to city2 with fuel level fl4 to fl1, plane1 zooms from city1 to city3 with fuel level fl6 to fl0, plane1 zooms from city2 to city1 with fuel level fl5 to fl3, plane1 zooms from city2 to city0 with fuel level fl1 to fl6, plane1 zooms from city0 to city1 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl5 to fl0, plane1 zooms from city3 to city0 with fuel level fl4 to fl0, plane1 flies from city2 to city3 with fuel level fl5 to fl6, plane1 zooms from city2 to city0 with fuel level fl3 to fl5, plane1 zooms from city3 to city1 with fuel level fl1 to fl0, plane1 zooms from city3 to city1 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl4 to fl1, plane1 zooms from city2 to city3 with fuel level fl5 to fl3, plane1 flies from city2 to city3 with fuel level fl0 to fl3, plane1 zooms from city0 to city2 with fuel level fl3 to fl1, plane1 zooms from city0 to city3 with fuel level fl4 to fl5, plane1 zooms from city1 to city3 with fuel level fl5 to fl4, plane1 zooms from city3 to city2 with fuel level fl5 to fl0, plane1 zooms from city3 to city1 with fuel level fl2 to fl0, plane1 flies from city3 to city1 with fuel level fl1 to fl2, plane1 zooms from city1 to city3 with fuel level fl3 to fl4, plane1 flies from city2 to city0 with fuel level fl2 to fl5, plane1 flies from city2 to city0 with fuel level fl0 to fl1, plane1 zooms from city3 to city1 with fuel level fl6 to fl2, plane1 zooms from city0 to city1 with fuel level fl1 to fl2, plane1 zooms from city3 to city2 with fuel level fl6 to fl3, plane1 zooms from city1 to city0 with fuel level fl6 to fl3, plane1 zooms from city1 to city0 with fuel level fl4 to fl3, plane1 zooms from city0 to city1 with fuel level fl5 to fl0, plane1 zooms from city1 to city0 with fuel level fl4 to fl6, plane1 flies from city2 to city0 with fuel level fl2 to fl3, plane1 zooms from city3 to city0 with fuel level fl3 to fl5, plane1 zooms from city3 to city1 with fuel level fl1 to fl6, plane1 zooms from city1 to city2 with fuel level fl3 to fl0, plane1 zooms from city2 to city0 with fuel level fl1 to fl3, plane1 zooms from city3 to city0 with fuel level fl1 to fl4, plane1 zooms from city3 to city2 with fuel level fl4 to fl1, plane1 zooms from city1 to city0 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl3 to fl4, plane1 zooms from city3 to city1 with fuel level fl1 to fl4, plane1 zooms from city1 to city3 with fuel level fl2 to fl5, plane1 zooms from city2 to city0 with fuel level fl1 to fl4, plane1 flies from city0 to city2 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl1 to fl5, plane1 zooms from city0 to city1 with fuel level fl5 to fl3, plane1 zooms from city2 to city3 with fuel level fl2 to fl6, plane1 flies from city3 to city0 with fuel level fl4 to fl1, plane1 flies from city2 to city3 with fuel level fl5 to fl1, plane1 zooms from city2 to city1 with fuel level fl2 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl2, plane1 zooms from city0 to city1 with fuel level fl4 to fl2, plane1 gets refueled at city2 with fuel level fl3 to fl1, plane1 zooms from city2 to city0 with fuel level fl1 to fl0, plane1 zooms from city2 to city1 with fuel level fl3 to fl1, plane1 zooms from city1 to city2 with fuel level fl5 to fl1, plane1 flies from city1 to city3 with fuel level fl5 to fl0, plane1 flies from city1 to city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl4 to fl6, plane1 zooms from city3 to city1 with fuel level fl4 to fl5, plane1 zooms from city2 to city1 with fuel level fl1 to fl6, plane1 flies from city3 to city0 with fuel level fl0 to fl3, plane1 zooms from city0 to city3 with fuel level fl4 to fl5, plane1 zooms from city0 to city2 with fuel level fl3 to fl6, plane1 zooms from city3 to city1 with fuel level fl5 to fl4, plane1 zooms from city1 to city2 with fuel level fl0 to fl2, plane1 zooms from city1 to city2 with fuel level fl0 to fl1, plane1 zooms from city0 to city2 with fuel level fl0 to fl4, plane1 zooms from city3 to city1 with fuel level fl4 to fl3, plane1 zooms from city0 to city1 with fuel level fl3 to fl2, plane1 zooms from city1 to city2 with fuel level fl6 to fl5, plane1 zooms from city1 to city3 with fuel level fl6 to fl5, plane1 gets refueled at city1 with fuel level fl4 to fl3, plane1 zooms from city0 to city1 with fuel level fl0 to fl3, plane1 zooms from city1 to city0 with fuel level fl5 to fl4, plane1 zooms from city0 to city3 with fuel level fl6 to fl3, plane1 zooms from city1 to city3 with fuel level fl3 to fl0, plane1 zooms from city0 to city2 with fuel level fl0 to fl6, plane1 zooms from city3 to city0 with fuel level fl5 to fl0, plane1 zooms from city0 to city1 with fuel level fl1 to fl5, plane1 zooms from city1 to city3 with fuel level fl1 to fl5, plane1 gets refueled at city0 with fuel level fl3 to fl6, plane1 zooms from city0 to city3 with fuel level fl1 to fl4, plane1 zooms from city3 to city2 with fuel level fl5 to fl6, plane1 gets refueled at city0 with fuel level fl0 to fl4, plane1 flies from city1 to city2 with fuel level fl3 to fl0, plane1 zooms from city1 to city2 with fuel level fl6 to fl2, plane1 zooms from city2 to city1 with fuel level fl2 to fl0, plane1 zooms from city0 to city2 with fuel level fl3 to fl0, plane1 zooms from city1 to city3 with fuel level fl5 to fl4, plane1 flies from city0 to city2 with fuel level fl6 to fl3, plane1 zooms from city3 to city2 with fuel level fl1 to fl0, plane1 flies from city0 to city2 with fuel level fl3 to fl0, plane1 flies from city1 to city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl2 to fl6, plane1 zooms from city2 to city3 with fuel level fl4 to fl5, plane1 zooms from city2 to city3 with fuel level fl5 to fl4, plane1 zooms from city0 to city3 with fuel level fl3 to fl0, plane1 gets refueled at city1 with fuel level fl4 to fl6, plane1 flies from city3 to city1 with fuel level fl2 to fl1, plane1 zooms from city1 to city2 with fuel level fl4 to fl6, plane1 flies from city0 to city2 with fuel level fl1 to fl2, plane1 zooms from city2 to city1 with fuel level fl3 to fl6, plane1 zooms from city0 to city1 with fuel level fl0 to fl3, plane1 zooms from city2 to city0 with fuel level fl6 to fl5, plane1 flies from city2 to city3 with fuel level fl4 to fl6, plane1 gets refueled at city0 with fuel level fl4 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl5, plane1 zooms from city1 to city3 with fuel level fl5 to fl2, plane1 zooms from city0 to city2 with fuel level fl5 to fl6, plane1 zooms from city3 to city2 with fuel level fl5 to fl2, plane1 gets refueled at city3 with fuel level fl5 to fl0, plane1 flies from city0 to city2 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl0 to fl2, plane1 zooms from city2 to city0 with fuel level fl0 to fl4, plane1 zooms from city3 to city1 with fuel level fl1 to fl0, plane1 zooms from city2 to city3 with fuel level fl5 to fl6, plane1 gets refueled at city0 with fuel level fl1 to fl0, plane1 zooms from city1 to city2 with fuel level fl2 to fl1, plane1 flies from city1 to city2 with fuel level fl1 to fl4, plane1 flies from city3 to city1 with fuel level fl4 to fl6, plane1 zooms from city3 to city1 with fuel level fl3 to fl6, plane1 zooms from city2 to city3 with fuel level fl4 to fl6, plane1 zooms from city0 to city2 with fuel level fl5 to fl3, plane1 flies from city1 to city3 with fuel level fl4 to fl6, plane1 zooms from city3 to city1 with fuel level fl2 to fl6, plane1 zooms from city2 to city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl0 to fl2, plane1 zooms from city2 to city3 with fuel level fl0 to fl3, plane1 zooms from city3 to city2 with fuel level fl3 to fl4, person8 departs plane1 at city2, plane1 flies from city1 to city2 with fuel level fl1 to fl0, plane1 zooms from city1 to city3 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl5 to fl4, plane1 zooms from city3 to city0 with fuel level fl4 to fl0, plane1 zooms from city0 to city1 with fuel level fl3 to fl5, plane1 zooms from city3 to city1 with fuel level fl5 to fl1, plane1 zooms from city0 to city1 with fuel level fl3 to fl0, plane1 flies from city3 to city1 with fuel level fl0 to fl2, plane1 flies from city1 to city3 with fuel level fl2 to fl1, plane1 zooms from city0 to city2 with fuel level fl5 to fl3, plane1 zooms from city1 to city2 with fuel level fl6 to fl0, plane1 zooms from city2 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city0 with fuel level fl5 to fl2, plane1 zooms from city1 to city2 with fuel level fl5 to fl2, plane1 zooms from city2 to city3 with fuel level fl5 to fl0, plane1 zooms from city2 to city3 with fuel level fl0 to fl1, plane1 zooms from city0 to city2 with fuel level fl3 to fl0, plane1 gets refueled at city0 with fuel level fl2 to fl5, plane1 zooms from city2 to city1 with fuel level fl6 to fl5, plane1 zooms from city3 to city1 with fuel level fl2 to fl5, plane1 zooms from city0 to city2 with fuel level fl1 to fl3, plane1 zooms from city0 to city1 with fuel level fl0 to fl3, plane1 flies from city1 to city3 with fuel level fl3 to fl4, plane1 zooms from city3 to city1 with fuel level fl5 to fl4, plane1 zooms from city0 to city1 with fuel level fl6 to fl2, plane1 zooms from city2 to city0 with fuel level fl4 to fl2, plane1 flies from city0 to city1 with fuel level fl4 to fl6, plane1 zooms from city0 to city2 with fuel level fl2 to fl4, plane1 zooms from city0 to city1 with fuel level fl1 to fl0, plane1 zooms from city3 to city1 with fuel level fl2 to fl4, plane1 flies from city3 to city0 with fuel level fl0 to fl4, plane1 zooms from city0 to city2 with fuel level fl6 to fl1, plane1 zooms from city2 to city1 with fuel level fl4 to fl3, plane1 zooms from city3 to city2 with fuel level fl3 to fl5, plane1 flies from city1 to city2 with fuel level fl0 to fl2, plane1 zooms from city2 to city3 with fuel level fl6 to fl0, plane1 zooms from city3 to city1 with fuel level fl1 to fl3, plane1 gets refueled at city2 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl2 to fl3, plane1 zooms from city1 to city2 with fuel level fl1 to fl6, plane1 gets refueled at city2 with fuel level fl2 to fl5, plane1 flies from city3 to city0 with fuel level fl6 to fl5, plane1 zooms from city3 to city0 with fuel level fl1 to fl0, plane1 flies from city1 to city3 with fuel level fl0 to fl2, plane1 zooms from city2 to city1 with fuel level fl0 to fl5, plane1 zooms from city3 to city1 with fuel level fl5 to fl3, plane1 flies from city0 to city2 with fuel level fl3 to fl4, plane1 zooms from city3 to city2 with fuel level fl6 to fl3, plane1 zooms from city0 to city3 with fuel level fl5 to fl6, plane1 zooms from city1 to city3 with fuel level fl4 to fl0, plane1 zooms from city1 to city2 with fuel level fl2 to fl6, plane1 zooms from city0 to city1 with fuel level fl6 to fl5, plane1 zooms from city0 to city1 with fuel level fl6 to fl5, plane1 zooms from city0 to city1 with fuel level fl4 to fl1, plane1 zooms from city3 to city1 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl2 to fl3, plane1 zooms from city2 to city1 with fuel level fl5 to fl0, plane1 gets refueled at city1 with fuel level fl1 to fl0, plane1 zooms from city0 to city1 with fuel level fl1 to fl6, plane1 flies from city2 to city1 with fuel level fl3 to fl4, plane1 zooms from city2 to city1 with fuel level fl5 to fl0, plane1 zooms from city0 to city3 with fuel level fl0 to fl6, plane1 zooms from city1 to city3 with fuel level fl6 to fl0, plane1 zooms from city1 to city3 with fuel level fl6 to fl4, plane1 zooms from city0 to city2 with fuel level fl1 to fl6, plane1 zooms from city1 to city0 with fuel level fl4 to fl3, plane1 zooms from city2 to city3 with fuel level fl0 to fl6, plane1 flies from city1 to city2 with fuel level fl2 to fl3, plane1 gets refueled at city3 with fuel level fl5 to fl3, plane1 zooms from city3 to city2 with fuel level fl3 to fl1, plane1 zooms from city1 to city0 with fuel level fl5 to fl4, plane1 zooms from city3 to city1 with fuel level fl3 to fl1, plane1 zooms from city3 to city1 with fuel level fl5 to fl6, plane1 zooms from city3 to city1 with fuel level fl1 to fl4, plane1 zooms from city0 to city3 with fuel level fl0 to fl5, plane1 flies from city1 to city2 with fuel level fl4 to fl3, plane1 zooms from city3 to city1 with fuel level fl6 to fl3, plane1 zooms from city1 to city0 with fuel level fl5 to fl6, plane1 zooms from city2 to city1 with fuel level fl5 to fl0, plane1 zooms from city0 to city3 with fuel level fl2 to fl1, plane1 zooms from city3 to city0 with fuel level fl6 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl2 to fl4, plane1 zooms from city3 to city2 with fuel level fl0 to fl6, plane1 zooms from city2 to city0 with fuel level fl0 to fl3, plane1 zooms from city1 to city3 with fuel level fl4 to fl3, plane1 zooms from city3 to city0 with fuel level fl0 to fl4, plane1 zooms from city3 to city2 with fuel level fl3 to fl4, plane1 flies from city3 to city0 with fuel level fl1 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl2, plane1 gets refueled at city2 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl3 to fl1, plane1 flies from city2 to city1 with fuel level fl2 to fl5, plane1 zooms from city0 to city1 with fuel level fl2 to fl0, plane1 zooms from city1 to city0 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl1 to fl0, plane1 zooms from city2 to city3 with fuel level fl3 to fl1, plane1 zooms from city2 to city1 with fuel level fl6 to fl0, plane1 zooms from city3 to city2 with fuel level fl5 to fl4, plane1 zooms from city0 to city2 with fuel level fl3 to fl5, plane1 zooms from city1 to city3 with fuel level fl1 to fl2, plane1 zooms from city2 to city1 with fuel level fl4 to fl5, plane1 zooms from city2 to city3 with fuel level fl1 to fl2, plane1 zooms from city2 to city3 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl2 to fl5, plane1 flies from city2 to city1 with fuel level fl1 to fl4, plane1 flies from city3 to city2 with fuel level fl0 to fl4, person4 boards plane1 at city2, plane1 zooms from city3 to city2 with fuel level fl4 to fl6, plane1 zooms from city1 to city3 with fuel level fl3 to fl5, plane1 zooms from city2 to city1 with fuel level fl0 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl4, plane1 zooms from city2 to city0 with fuel level fl1 to fl5, plane1 flies from city3 to city0 with fuel level fl3 to fl1, plane1 zooms from city3 to city0 with fuel level fl0 to fl4, plane1 zooms from city2 to city3 with fuel level fl1 to fl5, plane1 zooms from city0 to city1 with fuel level fl1 to fl4, plane1 zooms from city2 to city1 with fuel level fl1 to fl6, plane1 zooms from city0 to city2 with fuel level fl4 to fl5, plane1 zooms from city3 to city1 with fuel level fl3 to fl2, plane1 zooms from city1 to city2 with fuel level fl0 to fl2, plane1 flies from city2 to city1 with fuel level fl2 to fl6, plane1 flies from city3 to city0 with fuel level fl4 to fl6, plane1 zooms from city1 to city3 with fuel level fl5 to fl0, plane1 zooms from city1 to city3 with fuel level fl5 to fl6, plane1 zooms from city0 to city1 with fuel level fl6 to fl1, plane1 zooms from city3 to city1 with fuel level fl1 to fl3, plane1 zooms from city3 to city0 with fuel level fl6 to fl0, plane1 zooms from city2 to city0 with fuel level fl5 to fl1, plane1 zooms from city1 to city2 with fuel level fl6 to fl1, plane1 zooms from city0 to city1 with fuel level fl4 to fl2, plane1 zooms from city0 to city3 with fuel level fl3 to fl1, plane1 flies from city3 to city0 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl5 to fl1, plane1 zooms from city2 to city1 with fuel level fl4 to fl0, plane1 zooms from city0 to city1 with fuel level fl6 to fl4, plane1 zooms from city3 to city0 with fuel level fl3 to fl2, plane1 zooms from city0 to city2 with fuel level fl5 to fl1, plane1 flies from city0 to city2 with fuel level fl1 to fl0, plane1 flies from city3 to city2 with fuel level fl0 to fl6, plane1 flies from city3 to city0 with fuel level fl1 to fl2, plane1 zooms from city0 to city2 with fuel level fl4 to fl0, plane1 zooms from city3 to city2 with fuel level fl2 to fl6, plane1 zooms from city1 to city0 with fuel level fl0 to fl5, plane1 flies from city1 to city2 with fuel level fl3 to fl6, plane1 zooms from city0 to city2 with fuel level fl1 to fl5, person6 boards plane1 at city1, plane1 zooms from city2 to city0 with fuel level fl5 to fl4, plane1 zooms from city3 to city0 with fuel level fl6 to fl2, plane1 gets refueled at city0 with fuel level fl6 to fl2, plane1 zooms from city3 to city2 with fuel level fl4 to fl1, plane1 zooms from city1 to city0 with fuel level fl5 to fl1, plane1 zooms from city3 to city2 with fuel level fl1 to fl0, plane1 flies from city1 to city0 with fuel level fl3 to fl0, plane1 zooms from city2 to city3 with fuel level fl6 to fl0, plane1 flies from city0 to city1 with fuel level fl2 to fl5, plane1 zooms from city1 to city2 with fuel level fl3 to fl4, plane1 zooms from city3 to city0 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl6 to fl2, person7 departs plane1 at city0, plane1 flies from city3 to city2 with fuel level fl1 to fl6, plane1 zooms from city0 to city3 with fuel level fl6 to fl2, plane1 flies from city3 to city1 with fuel level fl2 to fl0, plane1 zooms from city1 to city2 with fuel level fl4 to fl6, plane1 zooms from city1 to city3 with fuel level fl3 to fl0, plane1 zooms from city3 to city2 with fuel level fl6 to fl5, plane1 zooms from city1 to city3 with fuel level fl6 to fl3, plane1 zooms from city1 to city0 with fuel level fl1 to fl2, plane1 zooms from city0 to city2 with fuel level fl6 to fl0, plane1 zooms from city2 to city3 with fuel level fl4 to fl1, plane1 gets refueled at city2 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl4 to fl5, plane1 flies from city2 to city3 with fuel level fl0 to fl6, plane1 flies from city0 to city3 with fuel level fl3 to fl0, plane1 zooms from city3 to city1 with fuel level fl4 to fl3, plane1 zooms from city0 to city1 with fuel level fl1 to fl6, plane1 zooms from city3 to city1 with fuel level fl4 to fl3, plane1 zooms from city2 to city1 with fuel level fl3 to fl6, plane1 zooms from city0 to city1 with fuel level fl1 to fl4, plane1 zooms from city3 to city0 with fuel level fl6 to fl1, plane1 zooms from city0 to city3 with fuel level fl2 to fl0, plane1 zooms from city3 to city1 with fuel level fl2 to fl0, plane1 gets refueled at city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl6 to fl5, plane1 zooms from city3 to city0 with fuel level fl5 to fl1, plane1 zooms from city1 to city0 with fuel level fl4 to fl5, plane1 zooms from city3 to city2 with fuel level fl0 to fl5, plane1 zooms from city1 to city2 with fuel level fl6 to fl2, plane1 zooms from city0 to city1 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl0 to fl6, plane1 zooms from city0 to city2 with fuel level fl3 to fl0, plane1 zooms from city0 to city3 with fuel level fl5 to fl1, plane1 zooms from city2 to city1 with fuel level fl6 to fl1, plane1 zooms from city1 to city0 with fuel level fl6 to fl0, plane1 zooms from city1 to city0 with fuel level fl2 to fl5, plane1 gets refueled at city0 with fuel level fl4 to fl3, plane1 zooms from city0 to city3 with fuel level fl3 to fl2, plane1 zooms from city0 to city1 with fuel level fl2 to fl1, plane1 zooms from city2 to city1 with fuel level fl1 to fl3, plane1 zooms from city3 to city1 with fuel level fl2 to fl6, plane1 zooms from city0 to city3 with fuel level fl0 to fl5, plane1 zooms from city0 to city2 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl2 to fl1, plane1 zooms from city2 to city1 with fuel level fl6 to fl5, plane1 zooms from city0 to city3 with fuel level fl5 to fl0, plane1 zooms from city2 to city1 with fuel level fl5 to fl6, plane1 zooms from city1 to city2 with fuel level fl6 to fl5, plane1 flies from city0 to city3 with fuel level fl5 to fl3, plane1 flies from city1 to city0 with fuel level fl1 to fl0, plane1 zooms from city1 to city3 with fuel level fl3 to fl6, plane1 zooms from city3 to city1 with fuel level fl2 to fl1, plane1 zooms from city3 to city0 with fuel level fl1 to fl4, plane1 zooms from city2 to city1 with fuel level fl2 to fl4, plane1 flies from city0 to city2 with fuel level fl6 to fl1, plane1 zooms from city2 to city3 with fuel level fl4 to fl6, plane1 zooms from city1 to city0 with fuel level fl5 to fl0, plane1 zooms from city0 to city2 with fuel level fl6 to fl0, plane1 zooms from city2 to city1 with fuel level fl0 to fl3, plane1 gets refueled at city2 with fuel level fl2 to fl4, plane1 zooms from city3 to city2 with fuel level fl3 to fl0, plane1 zooms from city3 to city0 with fuel level fl1 to fl5, plane1 zooms from city0 to city3 with fuel level fl3 to fl6, plane1 flies from city2 to city3 with fuel level fl6 to fl1, plane1 zooms from city2 to city3 with fuel level fl6 to fl1, person2 departs plane1 at city2, plane1 zooms from city2 to city3 with fuel level fl6 to fl4, plane1 flies from city2 to city3 with fuel level fl6 to fl0, plane1 zooms from city1 to city3 with fuel level fl2 to fl0, plane1 zooms from city1 to city2 with fuel level fl4 to fl5, plane1 zooms from city3 to city1 with fuel level fl2 to fl5, plane1 flies from city3 to city2 with fuel level fl5 to fl1, plane1 flies from city1 to city3 with fuel level fl2 to fl6, plane1 zooms from city0 to city3 with fuel level fl1 to fl5, plane1 zooms from city2 to city1 with fuel level fl5 to fl1, plane1 zooms from city3 to city0 with fuel level fl2 to fl5, plane1 zooms from city0 to city2 with fuel level fl4 to fl2, plane1 zooms from city1 to city0 with fuel level fl5 to fl2, plane1 zooms from city0 to city3 with fuel level fl3 to fl1, plane1 flies from city1 to city0 with fuel level fl6 to fl3, plane1 zooms from city2 to city3 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl0 to fl4, plane1 zooms from city0 to city3 with fuel level fl2 to fl1, plane1 zooms from city2 to city1 with fuel level fl4 to fl2, plane1 zooms from city1 to city3 with fuel level fl4 to fl5, plane1 zooms from city2 to city0 with fuel level fl6 to fl0, plane1 flies from city1 to city2 with fuel level fl5 to fl0, plane1 zooms from city0 to city3 with fuel level fl5 to fl4, plane1 zooms from city3 to city2 with fuel level fl4 to fl0, plane1 zooms from city1 to city0 with fuel level fl2 to fl6, plane1 flies from city1 to city2 with fuel level fl4 to fl0, plane1 flies from city3 to city1 with fuel level fl6 to fl1, plane1 zooms from city1 to city2 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl1 to fl0, plane1 zooms from city0 to city3 with fuel level fl3 to fl2, plane1 zooms from city1 to city0 with fuel level fl6 to fl0, plane1 zooms from city2 to city1 with fuel level fl0 to fl1, plane1 zooms from city0 to city2 with fuel level fl0 to fl1, plane1 zooms from city3 to city1 with fuel level fl6 to fl5, plane1 zooms from city3 to city1 with fuel level fl1 to fl2, plane1 zooms from city3 to city2 with fuel level fl2 to fl1, plane1 zooms from city2 to city0 with fuel level fl2 to fl1, plane1 zooms from city1 to city0 with fuel level fl0 to fl5, plane1 zooms from city1 to city2 with fuel level fl5 to fl2, plane1 zooms from city3 to city1 with fuel level fl1 to fl5, plane1 zooms from city0 to city3 with fuel level fl2 to fl3, plane1 zooms from city2 to city1 with fuel level fl4 to fl1, plane1 gets refueled at city0 with fuel level fl0 to fl5, plane1 zooms from city0 to city1 with fuel level fl2 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl2, plane1 zooms from city1 to city2 with fuel level fl3 to fl0, plane1 gets refueled at city2 with fuel level fl4 to fl6, plane1 zooms from city2 to city1 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl2 to fl0, plane1 zooms from city1 to city3 with fuel level fl3 to fl0, plane1 flies from city2 to city1 with fuel level fl6 to fl5, plane1 gets refueled at city3 with fuel level fl2 to fl5, plane1 gets refueled at city1 with fuel level fl6 to fl1, plane1 zooms from city3 to city1 with fuel level fl2 to fl4, plane1 flies from city0 to city1 with fuel level fl1 to fl3, person5 boards plane1 at city1, plane1 zooms from city2 to city1 with fuel level fl5 to fl2, plane1 zooms from city0 to city2 with fuel level fl1 to fl6, plane1 zooms from city0 to city3 with fuel level fl6 to fl5, plane1 zooms from city1 to city3 with fuel level fl3 to fl6, plane1 zooms from city0 to city1 with fuel level fl2 to fl3, plane1 zooms from city2 to city0 with fuel level fl1 to fl5, plane1 flies from city2 to city3 with fuel level fl3 to fl5, plane1 zooms from city1 to city0 with fuel level fl4 to fl0, plane1 flies from city2 to city3 with fuel level fl6 to fl3, plane1 gets refueled at city3 with fuel level fl5 to fl4, plane1 zooms from city3 to city1 with fuel level fl6 to fl1, plane1 zooms from city1 to city3 with fuel level fl2 to fl6, plane1 flies from city2 to city3 with fuel level fl5 to fl3, plane1 zooms from city2 to city0 with fuel level fl3 to fl6, plane1 gets refueled at city1 with fuel level fl1 to fl3, plane1 zooms from city1 to city2 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl3 to fl4, plane1 zooms from city2 to city1 with fuel level fl2 to fl5, plane1 zooms from city3 to city0 with fuel level fl2 to fl5, plane1 zooms from city0 to city3 with fuel level fl1 to fl5, plane1 flies from city1 to city2 with fuel level fl0 to fl5, plane1 zooms from city0 to city3 with fuel level fl6 to fl4, plane1 flies from city1 to city2 with fuel level fl5 to fl2, plane1 zooms from city3 to city1 with fuel level fl5 to fl0, plane1 zooms from city3 to city1 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl1 to fl0, plane1 zooms from city3 to city1 with fuel level fl6 to fl1, plane1 zooms from city1 to city3 with fuel level fl0 to fl3, plane1 flies from city3 to city0 with fuel level fl5 to fl2, plane1 zooms from city1 to city0 with fuel level fl2 to fl3, plane1 zooms from city3 to city1 with fuel level fl4 to fl0, plane1 zooms from city0 to city3 with fuel level fl3 to fl5, plane1 zooms from city0 to city3 with fuel level fl1 to fl3, plane1 zooms from city2 to city0 with fuel level fl3 to fl1, plane1 flies from city2 to city1 with fuel level fl4 to fl3, plane1 zooms from city2 to city3 with fuel level fl4 to fl1, plane1 zooms from city1 to city2 with fuel level fl6 to fl2, plane1 zooms from city2 to city3 with fuel level fl4 to fl6, plane1 zooms from city2 to city0 with fuel level fl5 to fl3, plane1 zooms from city0 to city3 with fuel level fl0 to fl5, plane1 flies from city3 to city0 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl5 to fl1, plane1 zooms from city2 to city3 with fuel level fl4 to fl6, plane1 zooms from city3 to city0 with fuel level fl2 to fl4, plane1 zooms from city1 to city0 with fuel level fl3 to fl4, plane1 zooms from city0 to city3 with fuel level fl1 to fl2, plane1 zooms from city3 to city1 with fuel level fl5 to fl1, plane1 gets refueled at city3 with fuel level fl6 to fl0, plane1 flies from city3 to city1 with fuel level fl3 to fl4, plane1 zooms from city1 to city2 with fuel level fl1 to fl4, plane1 zooms from city2 to city1 with fuel level fl4 to fl3, plane1 zooms from city0 to city2 with fuel level fl5 to fl0, plane1 zooms from city1 to city3 with fuel level fl2 to fl3, plane1 flies from city2 to city0 with fuel level fl3 to fl6, plane1 zooms from city1 to city2 with fuel level fl5 to fl1, plane1 zooms from city3 to city1 with fuel level fl0 to fl5, plane1 flies from city1 to city3 with fuel level fl2 to fl3, plane1 flies from city2 to city1 with fuel level fl2 to fl4, plane1 zooms from city1 to city0 with fuel level fl5 to fl4, plane1 zooms from city0 to city1 with fuel level fl1 to fl3, plane1 zooms from city3 to city2 with fuel level fl3 to fl0, plane1 zooms from city2 to city1 with fuel level fl2 to fl3, plane1 zooms from city3 to city0 with fuel level fl1 to fl0, plane1 gets refueled at city3 with fuel level fl1 to fl0, plane1 zooms from city0 to city2 with fuel level fl6 to fl4, plane1 zooms from city1 to city2 with fuel level fl1 to fl6, plane1 zooms from city1 to city3 with fuel level fl0 to fl3, plane1 zooms from city0 to city3 with fuel level fl6 to fl3, plane1 flies from city1 to city0 with fuel level fl3 to fl2, plane1 zooms from city1 to city3 with fuel level fl5 to fl6, plane1 flies from city3 to city2 with fuel level fl1 to fl2, plane1 zooms from city0 to city2 with fuel level fl3 to fl6, plane1 gets refueled at city2 with fuel level fl3 to fl5, plane1 zooms from city0 to city2 with fuel level fl0 to fl2, plane1 flies from city0 to city2 with fuel level fl0 to fl4, plane1 flies from city2 to city1 with fuel level fl5 to fl0, plane1 zooms from city2 to city1 with fuel level fl2 to fl3, plane1 zooms from city2 to city1 with fuel level fl1 to fl0, plane1 zooms from city0 to city1 with fuel level fl2 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl1 to fl3, plane1 flies from city1 to city0 with fuel level fl6 to fl2, plane1 zooms from city0 to city3 with fuel level fl0 to fl6, plane1 flies from city0 to city2 with fuel level fl6 to fl5, plane1 zooms from city2 to city0 with fuel level fl4 to fl1, plane1 zooms from city0 to city3 with fuel level fl4 to fl3, plane1 flies from city3 to city0 with fuel level fl5 to fl1, plane1 flies from city1 to city2 with fuel level fl1 to fl6, plane1 zooms from city2 to city1 with fuel level fl0 to fl1, plane1 zooms from city2 to city0 with fuel level fl3 to fl2, plane1 zooms from city3 to city0 with fuel level fl6 to fl5, plane1 zooms from city0 to city3 with fuel level fl2 to fl6, plane1 zooms from city0 to city3 with fuel level fl5 to fl0, plane1 zooms from city1 to city0 with fuel level fl2 to fl0, plane1 flies from city0 to city3 with fuel level fl4 to fl6, plane1 zooms from city0 to city3 with fuel level fl5 to fl4, plane1 zooms from city1 to city0 with fuel level fl3 to fl0, plane1 flies from city2 to city3 with fuel level fl1 to fl4, plane1 zooms from city2 to city0 with fuel level fl6 to fl0, plane1 zooms from city2 to city3 with fuel level fl2 to fl3, plane1 zooms from city1 to city0 with fuel level fl0 to fl1, plane1 zooms from city0 to city3 with fuel level fl3 to fl6, plane1 zooms from city1 to city3 with fuel level fl0 to fl6, plane1 zooms from city2 to city0 with fuel level fl5 to fl2, plane1 gets refueled at city3 with fuel level fl1 to fl4, plane1 zooms from city2 to city3 with fuel level fl6 to fl1, plane1 zooms from city3 to city1 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl1 to fl5, plane1 zooms from city2 to city0 with fuel level fl1 to fl3, plane1 zooms from city0 to city2 with fuel level fl3 to fl4, plane1 zooms from city2 to city3 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl0, plane1 zooms from city2 to city1 with fuel level fl0 to fl3, plane1 zooms from city3 to city0 with fuel level fl2 to fl1, plane1 flies from city0 to city1 with fuel level fl2 to fl3, plane1 flies from city3 to city2 with fuel level fl3 to fl1, plane1 zooms from city3 to city0 with fuel level fl4 to fl3, plane1 zooms from city3 to city2 with fuel level fl2 to fl0, plane1 zooms from city0 to city3 with fuel level fl0 to fl6, plane1 zooms from city0 to city2 with fuel level fl1 to fl6, plane1 zooms from city3 to city2 with fuel level fl6 to fl2, plane1 flies from city0 to city3 with fuel level fl0 to fl3, plane1 zooms from city1 to city0 with fuel level fl3 to fl5, plane1 zooms from city0 to city1 with fuel level fl3 to fl2, plane1 zooms from city1 to city0 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl4 to fl5, plane1 zooms from city0 to city1 with fuel level fl6 to fl0, plane1 flies from city1 to city2 with fuel level fl5 to fl6, plane1 zooms from city3 to city1 with fuel level fl0 to fl2, plane1 flies from city0 to city3 with fuel level fl5 to fl1, plane1 zooms from city1 to city0 with fuel level fl0 to fl6, plane1 flies from city2 to city1 with fuel level fl0 to fl5, plane1 flies from city0 to city2 with fuel level fl5 to fl2, plane1 zooms from city1 to city0 with fuel level fl3 to fl5, plane1 flies from city1 to city0 with fuel level fl6 to fl0, plane1 flies from city0 to city1 with fuel level fl1 to fl5, plane1 zooms from city3 to city2 with fuel level fl2 to fl3, plane1 zooms from city0 to city2 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl1 to fl0, plane1 zooms from city3 to city2 with fuel level fl4 to fl5, plane1 flies from city3 to city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl5 to fl4, plane1 zooms from city1 to city3 with fuel level fl2 to fl1, plane1 zooms from city0 to city3 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl5 to fl0, plane1 zooms from city0 to city2 with fuel level fl0 to fl1, plane1 zooms from city3 to city1 with fuel level fl2 to fl3, plane1 zooms from city0 to city2 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl4 to fl3, plane1 zooms from city3 to city2 with fuel level fl5 to fl4, plane1 zooms from city0 to city3 with fuel level fl6 to fl3, plane1 zooms from city2 to city3 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl5 to fl2, plane1 zooms from city1 to city0 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl5 to fl2, plane1 flies from city3 to city0 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl3 to fl2, plane1 zooms from city0 to city2 with fuel level fl4 to fl3, plane1 zooms from city1 to city0 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl0 to fl5, plane1 zooms from city1 to city3 with fuel level fl5 to fl3, plane1 zooms from city1 to city2 with fuel level fl2 to fl3, plane1 zooms from city1 to city3 with fuel level fl6 to fl1, plane1 zooms from city1 to city0 with fuel level fl4 to fl1, plane1 zooms from city2 to city1 with fuel level fl0 to fl2, plane1 flies from city3 to city1 with fuel level fl1 to fl3, plane1 flies from city3 to city2 with fuel level fl5 to fl3, plane1 zooms from city1 to city0 with fuel level fl1 to fl0, plane1 zooms from city2 to city1 with fuel level fl3 to fl2, plane1 zooms from city0 to city1 with fuel level fl4 to fl1, plane1 zooms from city0 to city1 with fuel level fl2 to fl6, person8 boards plane1 at city1, plane1 zooms from city1 to city3 with fuel level fl2 to fl3, plane1 zooms from city1 to city3 with fuel level fl6 to fl1, plane1 zooms from city2 to city1 with fuel level fl6 to fl1, plane1 zooms from city0 to city3 with fuel level fl5 to fl2, plane1 flies from city1 to city2 with fuel level fl0 to fl1, plane1 zooms from city3 to city2 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl6 to fl3, plane1 zooms from city0 to city1 with fuel level fl4 to fl3, plane1 zooms from city1 to city0 with fuel level fl4 to fl1, plane1 zooms from city2 to city0 with fuel level fl4 to fl5, plane1 zooms from city3 to city0 with fuel level fl2 to fl3, plane1 zooms from city3 to city1 with fuel level fl6 to fl4, plane1 zooms from city1 to city0 with fuel level fl5 to fl1, plane1 gets refueled at city3 with fuel level fl2 to fl6, plane1 zooms from city0 to city1 with fuel level fl3 to fl1, plane1 zooms from city1 to city0 with fuel level fl3 to fl2, plane1 zooms from city2 to city1 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl3 to fl5, plane1 zooms from city1 to city0 with fuel level fl3 to fl5, plane1 zooms from city0 to city2 with fuel level fl3 to fl5, plane1 zooms from city3 to city0 with fuel level fl5 to fl4, plane1 gets refueled at city3 with fuel level fl1 to fl5, plane1 zooms from city2 to city0 with fuel level fl0 to fl5, plane1 zooms from city3 to city1 with fuel level fl6 to fl2, person1 departs plane1 at city3, plane1 zooms from city2 to city1 with fuel level fl1 to fl0, plane1 zooms from city3 to city1 with fuel level fl1 to fl5, plane1 flies from city1 to city2 with fuel level fl1 to fl2, plane1 zooms from city0 to city3 with fuel level fl4 to fl3, plane1 zooms from city1 to city0 with fuel level fl1 to fl6, plane1 zooms from city2 to city1 with fuel level fl0 to fl5, plane1 flies from city2 to city3 with fuel level fl6 to fl2, plane1 zooms from city1 to city0 with fuel level fl4 to fl5, plane1 zooms from city1 to city2 with fuel level fl6 to fl1, plane1 flies from city2 to city1 with fuel level fl4 to fl1, plane1 flies from city1 to city3 with fuel level fl1 to fl0, plane1 flies from city3 to city2 with fuel level fl5 to fl6, plane1 zooms from city1 to city3 with fuel level fl2 to fl1, plane1 zooms from city1 to city3 with fuel level fl1 to fl3, plane1 zooms from city3 to city1 with fuel level fl6 to fl1, plane1 zooms from city0 to city1 with fuel level fl5 to fl6, plane1 zooms from city0 to city2 with fuel level fl0 to fl5, plane1 zooms from city2 to city3 with fuel level fl1 to fl3, plane1 zooms from city1 to city2 with fuel level fl5 to fl0, plane1 zooms from city3 to city0 with fuel level fl6 to fl3, plane1 zooms from city0 to city2 with fuel level fl1 to fl5, plane1 zooms from city2 to city1 with fuel level fl1 to fl4, plane1 zooms from city1 to city2 with fuel level fl6 to fl2, plane1 zooms from city3 to city1 with fuel level fl3 to fl1, plane1 zooms from city2 to city3 with fuel level fl1 to fl2, plane1 gets refueled at city0 with fuel level fl1 to fl3, plane1 flies from city0 to city1 with fuel level fl3 to fl2, plane1 zooms from city0 to city2 with fuel level fl0 to fl3, plane1 zooms from city1 to city3 with fuel level fl1 to fl4, plane1 zooms from city3 to city2 with fuel level fl4 to fl0, plane1 zooms from city1 to city3 with fuel level fl0 to fl1, plane1 zooms from city3 to city1 with fuel level fl4 to fl0, plane1 zooms from city3 to city0 with fuel level fl2 to fl6, plane1 flies from city0 to city2 with fuel level fl0 to fl3, plane1 flies from city1 to city3 with fuel level fl4 to fl0, plane1 flies from city2 to city3 with fuel level fl1 to fl2, person1 departs plane1 at city0, plane1 zooms from city2 to city0 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl5 to fl6, plane1 flies from city0 to city1 with fuel level fl4 to fl2, person6 departs plane1 at city3, plane1 zooms from city2 to city3 with fuel level fl6 to fl1, plane1 zooms from city2 to city1 with fuel level fl4 to fl1, plane1 flies from city3 to city1 with fuel level fl4 to fl3, plane1 zooms from city0 to city2 with fuel level fl6 to fl3, plane1 zooms from city1 to city2 with fuel level fl6 to fl3, plane1 zooms from city2 to city1 with fuel level fl5 to fl2, plane1 flies from city0 to city1 with fuel level fl4 to fl1, plane1 zooms from city0 to city3 with fuel level fl2 to fl0, plane1 zooms from city0 to city1 with fuel level fl3 to fl4, plane1 zooms from city0 to city2 with fuel level fl1 to fl5, plane1 zooms from city0 to city1 with fuel level fl0 to fl1, plane1 zooms from city2 to city1 with fuel level fl1 to fl0, plane1 zooms from city0 to city1 with fuel level fl6 to fl3, plane1 zooms from city2 to city0 with fuel level fl2 to fl1, plane1 zooms from city0 to city3 with fuel level fl0 to fl4, plane1 zooms from city2 to city0 with fuel level fl1 to fl2, plane1 zooms from city1 to city2 with fuel level fl1 to fl0, plane1 flies from city1 to city2 with fuel level fl3 to fl1, plane1 zooms from city3 to city1 with fuel level fl1 to fl3, plane1 flies from city1 to city3 with fuel level fl2 to fl0, plane1 zooms from city0 to city3 with fuel level fl4 to fl6, plane1 flies from city1 to city0 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl5 to fl2, plane1 zooms from city2 to city3 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl1 to fl2, plane1 zooms from city3 to city1 with fuel level fl4 to fl0, plane1 zooms from city2 to city3 with fuel level fl1 to fl6, plane1 zooms from city1 to city0 with fuel level fl0 to fl4, plane1 zooms from city3 to city0 with fuel level fl0 to fl1, plane1 zooms from city3 to city1 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl5 to fl4, plane1 gets refueled at city1 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl4 to fl1, plane1 zooms from city1 to city3 with fuel level fl2 to fl5, plane1 zooms from city3 to city2 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl5 to fl2, plane1 zooms from city0 to city3 with fuel level fl2 to fl0, plane1 zooms from city2 to city0 with fuel level fl5 to fl3, plane1 zooms from city1 to city3 with fuel level fl0 to fl1, plane1 zooms from city2 to city3 with fuel level fl6 to fl5, plane1 zooms from city2 to city3 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl4 to fl5, plane1 gets refueled at city3 with fuel level fl4 to fl5, plane1 zooms from city2 to city3 with fuel level fl0 to fl6, plane1 zooms from city1 to city0 with fuel level fl6 to fl3, plane1 zooms from city1 to city3 with fuel level fl5 to fl1, plane1 flies from city0 to city2 with fuel level fl5 to fl0, plane1 zooms from city1 to city0 with fuel level fl1 to fl2, plane1 zooms from city2 to city3 with fuel level fl6 to fl0, plane1 zooms from city2 to city0 with fuel level fl6 to fl1, plane1 zooms from city3 to city0 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl1 to fl2, plane1 flies from city1 to city0 with fuel level fl5 to fl1, plane1 zooms from city2 to city0 with fuel level fl1 to fl0, plane1 flies from city2 to city1 with fuel level fl5 to fl3, plane1 zooms from city2 to city1 with fuel level fl0 to fl6, plane1 flies from city3 to city1 with fuel level fl3 to fl1, plane1 zooms from city2 to city3 with fuel level fl4 to fl5, plane1 zooms from city3 to city0 with fuel level fl4 to fl0, plane1 zooms from city1 to city0 with fuel level fl1 to fl0, plane1 zooms from city2 to city1 with fuel level fl4 to fl5, plane1 zooms from city0 to city1 with fuel level fl2 to fl5, plane1 zooms from city3 to city1 with fuel level fl6 to fl3, plane1 zooms from city1 to city3 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl3 to fl2, plane1 zooms from city1 to city2 with fuel level fl3 to fl4, plane1 zooms from city3 to city1 with fuel level fl1 to fl2, plane1 zooms from city3 to city2 with fuel level fl1 to fl6, plane1 zooms from city0 to city1 with fuel level fl6 to fl5, plane1 zooms from city0 to city3 with fuel level fl5 to fl2, plane1 zooms from city2 to city0 with fuel level fl1 to fl2, plane1 zooms from city3 to city0 with fuel level fl5 to fl0, plane1 zooms from city3 to city2 with fuel level fl0 to fl2, plane1 zooms from city0 to city1 with fuel level fl5 to fl2, plane1 flies from city3 to city1 with fuel level fl6 to fl3, plane1 zooms from city0 to city1 with fuel level fl1 to fl0, plane1 zooms from city1 to city2 with fuel level fl5 to fl0, plane1 zooms from city2 to city1 with fuel level fl6 to fl3, plane1 zooms from city0 to city3 with fuel level fl2 to fl6, plane1 zooms from city3 to city0 with fuel level fl6 to fl4, plane1 zooms from city2 to city1 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl6 to fl4, plane1 flies from city0 to city2 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl5 to fl3, plane1 zooms from city2 to city1 with fuel level fl3 to fl4, plane1 zooms from city0 to city2 with fuel level fl4 to fl5, plane1 zooms from city1 to city2 with fuel level fl0 to fl3, plane1 zooms from city1 to city0 with fuel level fl5 to fl0, plane1 zooms from city0 to city1 with fuel level fl6 to fl4, plane1 zooms from city0 to city3 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl0 to fl6, plane1 zooms from city3 to city2 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl3 to fl2, plane1 zooms from city0 to city3 with fuel level fl0 to fl2, plane1 zooms from city1 to city0 with fuel level fl2 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl5, plane1 gets refueled at city0 with fuel level fl2 to fl0, plane1 flies from city0 to city3 with fuel level fl2 to fl6, plane1 flies from city3 to city2 with fuel level fl4 to fl2, plane1 gets refueled at city3 with fuel level fl5 to fl1, plane1 zooms from city1 to city2 with fuel level fl5 to fl6, plane1 zooms from city3 to city1 with fuel level fl3 to fl6, plane1 zooms from city0 to city2 with fuel level fl2 to fl6, person4 boards plane1 at city0, plane1 zooms from city3 to city2 with fuel level fl1 to fl4, plane1 zooms from city1 to city3 with fuel level fl3 to fl2, plane1 gets refueled at city3 with fuel level fl6 to fl5, plane1 zooms from city2 to city0 with fuel level fl6 to fl0, plane1 zooms from city2 to city3 with fuel level fl3 to fl1, plane1 zooms from city1 to city2 with fuel level fl5 to fl1, plane1 zooms from city0 to city3 with fuel level fl2 to fl3, plane1 flies from city3 to city0 with fuel level fl4 to fl5, plane1 flies from city0 to city3 with fuel level fl0 to fl6, plane1 zooms from city1 to city2 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl0 to fl3, plane1 flies from city3 to city0 with fuel level fl3 to fl5, plane1 zooms from city1 to city0 with fuel level fl3 to fl2, plane1 zooms from city1 to city2 with fuel level fl1 to fl6, plane1 zooms from city2 to city3 with fuel level fl1 to fl3, plane1 zooms from city1 to city2 with fuel level fl1 to fl2, plane1 flies from city2 to city1 with fuel level fl4 to fl6, plane1 zooms from city0 to city1 with fuel level fl1 to fl2, plane1 flies from city3 to city2 with fuel level fl2 to fl6, plane1 zooms from city3 to city1 with fuel level fl3 to fl0, plane1 flies from city0 to city2 with fuel level fl1 to fl3, plane1 gets refueled at city3 with fuel level fl2 to fl0, plane1 zooms from city0 to city1 with fuel level fl5 to fl6, plane1 zooms from city0 to city2 with fuel level fl6 to fl1, plane1 zooms from city0 to city1 with fuel level fl2 to fl4, plane1 zooms from city0 to city2 with fuel level fl5 to fl3, plane1 flies from city3 to city1 with fuel level fl3 to fl0, plane1 zooms from city2 to city0 with fuel level fl4 to fl0, plane1 flies from city2 to city3 with fuel level fl3 to fl1, plane1 flies from city3 to city0 with fuel level fl5 to fl4, plane1 zooms from city3 to city0 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl2 to fl3, plane1 zooms from city1 to city0 with fuel level fl2 to fl0, plane1 zooms from city0 to city2 with fuel level fl3 to fl1, plane1 gets refueled at city2 with fuel level fl1 to fl6, plane1 flies from city0 to city1 with fuel level fl6 to fl5, plane1 zooms from city3 to city0 with fuel level fl1 to fl6, plane1 zooms from city1 to city3 with fuel level fl0 to fl6, plane1 zooms from city0 to city1 with fuel level fl3 to fl5, plane1 zooms from city1 to city0 with fuel level fl1 to fl6, plane1 zooms from city0 to city1 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl2 to fl1, plane1 zooms from city3 to city1 with fuel level fl1 to fl6, plane1 zooms from city3 to city1 with fuel level fl5 to fl4, plane1 flies from city1 to city2 with fuel level fl2 to fl0, plane1 zooms from city0 to city3 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl1 to fl3, plane1 flies from city1 to city0 with fuel level fl5 to fl0, plane1 flies from city2 to city0 with fuel level fl5 to fl0, plane1 zooms from city1 to city3 with fuel level fl3 to fl4, plane1 zooms from city1 to city2 with fuel level fl6 to fl0, plane1 flies from city3 to city0 with fuel level fl4 to fl2, plane1 zooms from city1 to city3 with fuel level fl6 to fl5, plane1 zooms from city3 to city0 with fuel level fl2 to fl0, plane1 zooms from city2 to city0 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl3 to fl5, plane1 flies from city3 to city0 with fuel level fl2 to fl6, plane1 zooms from city2 to city3 with fuel level fl5 to fl1, plane1 zooms from city2 to city0 with fuel level fl3 to fl1, plane1 zooms from city0 to city1 with fuel level fl0 to fl6, plane1 zooms from city1 to city3 with fuel level fl3 to fl1, plane1 zooms from city1 to city0 with fuel level fl0 to fl3, plane1 zooms from city3 to city2 with fuel level fl0 to fl1, plane1 zooms from city2 to city1 with fuel level fl4 to fl6, plane1 zooms from city0 to city3 with fuel level fl5 to fl2, plane1 zooms from city1 to city0 with fuel level fl0 to fl1, plane1 flies from city1 to city3 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl5 to fl4, plane1 zooms from city1 to city3 with fuel level fl4 to fl5, plane1 flies from city0 to city2 with fuel level fl6 to fl0, plane1 flies from city1 to city3 with fuel level fl0 to fl6, plane1 flies from city1 to city0 with fuel level fl1 to fl2, plane1 zooms from city0 to city1 with fuel level fl3 to fl2, plane1 zooms from city1 to city0 with fuel level fl6 to fl4, plane1 zooms from city1 to city0 with fuel level fl4 to fl1, plane1 zooms from city1 to city2 with fuel level fl4 to fl5, plane1 flies from city0 to city1 with fuel level fl4 to fl0, plane1 zooms from city0 to city3 with fuel level fl4 to fl0, plane1 zooms from city1 to city0 with fuel level fl6 to fl1, plane1 gets refueled at city3 with fuel level fl6 to fl4, plane1 flies from city1 to city2 with fuel level fl4 to fl6, plane1 zooms from city0 to city3 with fuel level fl2 to fl5, plane1 zooms from city2 to city0 with fuel level fl0 to fl6, plane1 zooms from city0 to city3 with fuel level fl4 to fl1, plane1 zooms from city1 to city0 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl4 to fl1, plane1 zooms from city0 to city3 with fuel level fl6 to fl3, plane1 zooms from city1 to city2 with fuel level fl4 to fl0, plane1 zooms from city0 to city1 with fuel level fl2 to fl3, plane1 zooms from city2 to city1 with fuel level fl2 to fl0, plane1 flies from city3 to city0 with fuel level fl6 to fl1, plane1 zooms from city1 to city0 with fuel level fl4 to fl3, plane1 zooms from city3 to city1 with fuel level fl3 to fl5, plane1 zooms from city3 to city2 with fuel level fl1 to fl6, plane1 zooms from city0 to city1 with fuel level fl2 to fl3, plane1 zooms from city1 to city2 with fuel level fl3 to fl5, plane1 zooms from city3 to city0 with fuel level fl1 to fl6, plane1 zooms from city1 to city2 with fuel level fl5 to fl4, plane1 flies from city0 to city3 with fuel level fl3 to fl4, plane1 flies from city0 to city1 with fuel level fl6 to fl3, plane1 zooms from city1 to city2 with fuel level fl2 to fl0, plane1 zooms from city0 to city1 with fuel level fl3 to fl4, plane1 zooms from city1 to city0 with fuel level fl1 to fl0, person5 boards plane1 at city2, plane1 zooms from city0 to city2 with fuel level fl3 to fl0, plane1 zooms from city2 to city3 with fuel level fl0 to fl4, plane1 zooms from city1 to city0 with fuel level fl6 to fl2, plane1 zooms from city0 to city3 with fuel level fl4 to fl5, plane1 zooms from city0 to city3 with fuel level fl0 to fl4, plane1 zooms from city1 to city3 with fuel level fl3 to fl2, plane1 zooms from city2 to city0 with fuel level fl6 to fl2, plane1 flies from city0 to city2 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl6 to fl3, plane1 zooms from city0 to city1 with fuel level fl4 to fl5, plane1 zooms from city2 to city0 with fuel level fl5 to fl4, plane1 flies from city1 to city2 with fuel level fl3 to fl2, plane1 zooms from city0 to city3 with fuel level fl4 to fl0, plane1 zooms from city3 to city2 with fuel level fl4 to fl3, plane1 zooms from city1 to city0 with fuel level fl2 to fl5, plane1 zooms from city2 to city3 with fuel level fl4 to fl3, plane1 zooms from city0 to city2 with fuel level fl2 to fl1, plane1 zooms from city2 to city0 with fuel level fl5 to fl2, plane1 zooms from city2 to city3 with fuel level fl1 to fl2, plane1 gets refueled at city2 with fuel level fl0 to fl2, plane1 zooms from city1 to city0 with fuel level fl4 to fl0, plane1 flies from city1 to city0 with fuel level fl1 to fl5, plane1 zooms from city3 to city0 with fuel level fl4 to fl5, plane1 zooms from city2 to city0 with fuel level fl3 to fl2, plane1 flies from city0 to city1 with fuel level fl1 to fl4, plane1 zooms from city0 to city3 with fuel level fl4 to fl6, plane1 zooms from city0 to city3 with fuel level fl1 to fl4, plane1 zooms from city1 to city0 with fuel level fl2 to fl4, plane1 zooms from city2 to city1 with fuel level fl2 to fl0, plane1 zooms from city1 to city0 with fuel level fl5 to fl1, plane1 zooms from city1 to city0 with fuel level fl5 to fl2, plane1 zooms from city2 to city3 with fuel level fl6 to fl0, plane1 flies from city1 to city3 with fuel level fl6 to fl0, plane1 zooms from city3 to city1 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl6 to fl5, plane1 gets refueled at city0 with fuel level fl4 to fl6, plane1 gets refueled at city1 with fuel level fl5 to fl4, person5 departs plane1 at city2, plane1 zooms from city2 to city0 with fuel level fl2 to fl4, plane1 zooms from city2 to city3 with fuel level fl3 to fl4, plane1 zooms from city0 to city1 with fuel level fl4 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl0, plane1 zooms from city3 to city2 with fuel level fl2 to fl0, plane1 zooms from city1 to city0 with fuel level fl6 to fl5, plane1 zooms from city3 to city1 with fuel level fl4 to fl3, plane1 zooms from city3 to city0 with fuel level fl3 to fl6, plane1 zooms from city0 to city3 with fuel level fl2 to fl4, plane1 zooms from city1 to city2 with fuel level fl3 to fl5, plane1 gets refueled at city3 with fuel level fl4 to fl3, plane1 zooms from city1 to city0 with fuel level fl6 to fl4, plane1 zooms from city2 to city3 with fuel level fl2 to fl3, person2 boards plane1 at city0, plane1 zooms from city1 to city2 with fuel level fl6 to fl4, plane1 gets refueled at city0 with fuel level fl5 to fl1, plane1 gets refueled at city2 with fuel level fl3 to fl0, plane1 zooms from city0 to city2 with fuel level fl0 to fl6, plane1 zooms from city2 to city1 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl4 to fl1, plane1 zooms from city0 to city3 with fuel level fl1 to fl0, plane1 zooms from city1 to city2 with fuel level fl1 to fl2, plane1 zooms from city2 to city1 with fuel level fl1 to fl6, plane1 gets refueled at city1 with fuel level fl6 to fl4, plane1 flies from city2 to city1 with fuel level fl1 to fl6, plane1 zooms from city0 to city3 with fuel level fl3 to fl0, plane1 zooms from city0 to city1 with fuel level fl0 to fl5, plane1 zooms from city1 to city0 with fuel level fl4 to fl0, plane1 zooms from city2 to city1 with fuel level fl1 to fl3, plane1 zooms from city3 to city2 with fuel level fl3 to fl0, plane1 zooms from city1 to city2 with fuel level fl2 to fl4, plane1 zooms from city0 to city3 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl0 to fl5, plane1 zooms from city2 to city1 with fuel level fl5 to fl3, plane1 zooms from city0 to city2 with fuel level fl0 to fl2, plane1 zooms from city2 to city0 with fuel level fl1 to fl6, plane1 zooms from city1 to city0 with fuel level fl3 to fl0, plane1 zooms from city3 to city2 with fuel level fl0 to fl2, plane1 zooms from city1 to city2 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl6 to fl5, plane1 zooms from city3 to city2 with fuel level fl3 to fl2, plane1 zooms from city0 to city1 with fuel level fl3 to fl0, plane1 zooms from city1 to city0 with fuel level fl1 to fl3, plane1 zooms from city0 to city2 with fuel level fl4 to fl6, plane1 zooms from city3 to city0 with fuel level fl0 to fl4, plane1 zooms from city3 to city0 with fuel level fl1 to fl6, plane1 zooms from city3 to city1 with fuel level fl5 to fl6, plane1 zooms from city1 to city3 with fuel level fl1 to fl3, plane1 flies from city1 to city2 with fuel level fl4 to fl1, plane1 zooms from city3 to city2 with fuel level fl1 to fl5, plane1 zooms from city2 to city1 with fuel level fl4 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl1, plane1 zooms from city0 to city3 with fuel level fl0 to fl2, plane1 flies from city3 to city1 with fuel level fl3 to fl6, plane1 zooms from city0 to city3 with fuel level fl3 to fl1, plane1 zooms from city3 to city1 with fuel level fl3 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl3, plane1 flies from city2 to city1 with fuel level fl4 to fl5, plane1 zooms from city3 to city0 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city2 with fuel level fl3 to fl5, plane1 zooms from city2 to city1 with fuel level fl0 to fl5, plane1 zooms from city0 to city1 with fuel level fl0 to fl6, plane1 zooms from city1 to city3 with fuel level fl2 to fl0, plane1 zooms from city2 to city1 with fuel level fl0 to fl6, plane1 flies from city0 to city2 with fuel level fl4 to fl5, plane1 zooms from city1 to city0 with fuel level fl4 to fl1, plane1 gets refueled at city1 with fuel level fl6 to fl2, plane1 gets refueled at city3 with fuel level fl2 to fl3, plane1 zooms from city0 to city2 with fuel level fl0 to fl5, plane1 gets refueled at city2 with fuel level fl1 to fl0, plane1 zooms from city0 to city1 with fuel level fl6 to fl5, plane1 zooms from city2 to city1 with fuel level fl2 to fl3, plane1 flies from city2 to city3 with fuel level fl0 to fl4, plane1 zooms from city2 to city3 with fuel level fl0 to fl5, person4 boards plane1 at city3, plane1 zooms from city2 to city0 with fuel level fl4 to fl6, plane1 zooms from city2 to city0 with fuel level fl3 to fl5, plane1 gets refueled at city2 with fuel level fl5 to fl3, plane1 zooms from city0 to city1 with fuel level fl2 to fl6, plane1 gets refueled at city0 with fuel level fl1 to fl4, plane1 zooms from city0 to city1 with fuel level fl5 to fl6, plane1 zooms from city3 to city2 with fuel level fl0 to fl4, plane1 flies from city0 to city1 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl4 to fl3, plane1 zooms from city1 to city2 with fuel level fl0 to fl4, plane1 flies from city2 to city0 with fuel level fl2 to fl0, plane1 zooms from city3 to city1 with fuel level fl0 to fl5, plane1 zooms from city2 to city3 with fuel level fl2 to fl6, plane1 zooms from city1 to city2 with fuel level fl1 to fl5, plane1 gets refueled at city1 with fuel level fl0 to fl3, plane1 zooms from city1 to city3 with fuel level fl4 to fl0, plane1 zooms from city3 to city0 with fuel level fl1 to fl6, plane1 zooms from city3 to city0 with fuel level fl3 to fl5, plane1 zooms from city1 to city3 with fuel level fl4 to fl2, plane1 flies from city3 to city2 with fuel level fl6 to fl1, plane1 zooms from city2 to city1 with fuel level fl2 to fl6, plane1 zooms from city0 to city1 with fuel level fl3 to fl4, plane1 flies from city0 to city3 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl5 to fl1, plane1 zooms from city0 to city2 with fuel level fl1 to fl2, plane1 zooms from city0 to city1 with fuel level fl1 to fl3, plane1 flies from city2 to city3 with fuel level fl2 to fl5, plane1 zooms from city1 to city3 with fuel level fl5 to fl2, plane1 gets refueled at city0 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl6 to fl2, plane1 zooms from city0 to city3 with fuel level fl2 to fl3, plane1 zooms from city0 to city2 with fuel level fl5 to fl3, plane1 zooms from city3 to city1 with fuel level fl4 to fl0, plane1 zooms from city1 to city0 with fuel level fl4 to fl6, plane1 flies from city3 to city1 with fuel level fl1 to fl4, plane1 zooms from city1 to city3 with fuel level fl0 to fl6, plane1 zooms from city1 to city0 with fuel level fl6 to fl1, plane1 zooms from city2 to city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl5 to fl0, plane1 flies from city3 to city2 with fuel level fl4 to fl5, plane1 zooms from city3 to city0 with fuel level fl4 to fl2, plane1 zooms from city1 to city0 with fuel level fl0 to fl1, plane1 flies from city2 to city0 with fuel level fl6 to fl3, plane1 zooms from city2 to city1 with fuel level fl2 to fl3, plane1 zooms from city3 to city0 with fuel level fl6 to fl1, plane1 zooms from city1 to city3 with fuel level fl0 to fl3, plane1 zooms from city3 to city1 with fuel level fl0 to fl3, plane1 flies from city2 to city0 with fuel level fl1 to fl6, plane1 zooms from city1 to city2 with fuel level fl5 to fl0, plane1 gets refueled at city3 with fuel level fl5 to fl2, plane1 flies from city2 to city3 with fuel level fl3 to fl0, plane1 flies from city3 to city1 with fuel level fl2 to fl3, plane1 zooms from city3 to city2 with fuel level fl5 to fl3, plane1 flies from city0 to city3 with fuel level fl1 to fl3, plane1 zooms from city1 to city0 with fuel level fl4 to fl5, person2 departs plane1 at city0, plane1 zooms from city0 to city1 with fuel level fl2 to fl0, plane1 gets refueled at city0 with fuel level fl3 to fl0, plane1 flies from city0 to city3 with fuel level fl0 to fl5, plane1 flies from city1 to city2 with fuel level fl6 to fl2, plane1 zooms from city1 to city2 with fuel level fl5 to fl3, plane1 zooms from city2 to city0 with fuel level fl6 to fl5, plane1 flies from city1 to city2 with fuel level fl6 to fl0, plane1 zooms from city1 to city3 with fuel level fl1 to fl0, plane1 flies from city0 to city2 with fuel level fl3 to fl5, plane1 zooms from city0 to city3 with fuel level fl6 to fl2, plane1 zooms from city0 to city3 with fuel level fl3 to fl1, plane1 zooms from city3 to city1 with fuel level fl3 to fl4, plane1 zooms from city0 to city3 with fuel level fl5 to fl2, plane1 zooms from city3 to city1 with fuel level fl6 to fl0, plane1 zooms from city0 to city1 with fuel level fl2 to fl0, plane1 gets refueled at city3 with fuel level fl6 to fl2, plane1 zooms from city3 to city2 with fuel level fl2 to fl5, plane1 flies from city3 to city2 with fuel level fl0 to fl3, plane1 flies from city3 to city0 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl0 to fl6, plane1 zooms from city3 to city2 with fuel level fl1 to fl3, plane1 zooms from city0 to city1 with fuel level fl3 to fl0, plane1 zooms from city3 to city2 with fuel level fl0 to fl5, person5 boards plane1 at city0, plane1 gets refueled at city1 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl1 to fl3, plane1 zooms from city2 to city0 with fuel level fl2 to fl0, plane1 zooms from city2 to city1 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl6 to fl2, plane1 zooms from city1 to city0 with fuel level fl6 to fl5, plane1 zooms from city0 to city1 with fuel level fl4 to fl0, plane1 zooms from city1 to city0 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl5 to fl6, plane1 flies from city2 to city1 with fuel level fl0 to fl2, plane1 zooms from city2 to city1 with fuel level fl6 to fl2, plane1 zooms from city1 to city3 with fuel level fl1 to fl0, plane1 zooms from city0 to city2 with fuel level fl2 to fl5, plane1 zooms from city3 to city1 with fuel level fl2 to fl5, plane1 zooms from city1 to city0 with fuel level fl4 to fl2, plane1 zooms from city1 to city0 with fuel level fl1 to fl2, plane1 flies from city3 to city1 with fuel level fl1 to fl6, plane1 zooms from city2 to city3 with fuel level fl5 to fl0, plane1 zooms from city2 to city0 with fuel level fl3 to fl4, plane1 zooms from city2 to city1 with fuel level fl3 to fl1, plane1 zooms from city2 to city0 with fuel level fl4 to fl2, plane1 zooms from city0 to city2 with fuel level fl5 to fl2, plane1 zooms from city2 to city0 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl2 to fl3, plane1 flies from city1 to city0 with fuel level fl3 to fl1, plane1 zooms from city0 to city3 with fuel level fl5 to fl3, plane1 zooms from city1 to city3 with fuel level fl2 to fl3, plane1 gets refueled at city2 with fuel level fl0 to fl4, plane1 flies from city1 to city2 with fuel level fl6 to fl3, plane1 zooms from city0 to city2 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl6 to fl5, plane1 zooms from city2 to city0 with fuel level fl0 to fl1, person5 boards plane1 at city3, plane1 zooms from city3 to city2 with fuel level fl2 to fl0, plane1 zooms from city1 to city3 with fuel level fl6 to fl4, plane1 gets refueled at city0 with fuel level fl4 to fl5, plane1 flies from city2 to city3 with fuel level fl6 to fl5, plane1 zooms from city0 to city2 with fuel level fl3 to fl6, plane1 zooms from city0 to city2 with fuel level fl4 to fl1, plane1 zooms from city3 to city0 with fuel level fl6 to fl5, plane1 zooms from city0 to city3 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl3 to fl4, plane1 zooms from city3 to city1 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl4 to fl0, plane1 flies from city0 to city3 with fuel level fl1 to fl4, plane1 zooms from city2 to city3 with fuel level fl6 to fl4, plane1 zooms from city3 to city0 with fuel level fl2 to fl0, plane1 zooms from city0 to city1 with fuel level fl3 to fl6, plane1 zooms from city2 to city0 with fuel level fl3 to fl2, plane1 zooms from city0 to city3 with fuel level fl2 to fl4, plane1 flies from city1 to city3 with fuel level fl6 to fl1, plane1 zooms from city1 to city0 with fuel level fl0 to fl3, plane1 flies from city0 to city2 with fuel level fl1 to fl6, plane1 zooms from city1 to city0 with fuel level fl2 to fl1, plane1 flies from city2 to city1 with fuel level fl3 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl2, plane1 zooms from city3 to city0 with fuel level fl5 to fl6, plane1 zooms from city3 to city2 with fuel level fl3 to fl6, plane1 zooms from city3 to city1 with fuel level fl0 to fl5, plane1 flies from city3 to city1 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl6 to fl5, plane1 zooms from city3 to city1 with fuel level fl4 to fl3, plane1 zooms from city2 to city0 with fuel level fl2 to fl0, plane1 zooms from city0 to city3 with fuel level fl0 to fl1, plane1 zooms from city2 to city1 with fuel level fl6 to fl3, plane1 zooms from city2 to city0 with fuel level fl1 to fl0, plane1 zooms from city0 to city3 with fuel level fl1 to fl6, plane1 zooms from city0 to city1 with fuel level fl6 to fl2, plane1 zooms from city2 to city0 with fuel level fl3 to fl6, plane1 zooms from city0 to city1 with fuel level fl2 to fl4, plane1 gets refueled at city2 with fuel level fl2 to fl0, plane1 zooms from city0 to city1 with fuel level fl3 to fl1, plane1 flies from city3 to city0 with fuel level fl3 to fl0, plane1 zooms from city3 to city1 with fuel level fl1 to fl5, plane1 flies from city2 to city1 with fuel level fl3 to fl6, plane1 zooms from city1 to city0 with fuel level fl1 to fl6, plane1 zooms from city3 to city1 with fuel level fl5 to fl2, plane1 zooms from city2 to city0 with fuel level fl0 to fl4, plane1 gets refueled at city2 with fuel level fl4 to fl2, plane1 zooms from city1 to city0 with fuel level fl3 to fl0, plane1 zooms from city0 to city2 with fuel level fl1 to fl3, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 zooms from city3 to city0 with fuel level fl1 to fl5, plane1 zooms from city3 to city1 with fuel level fl6 to fl5, plane1 zooms from city0 to city1 with fuel level fl2 to fl5, plane1 flies from city2 to city0 with fuel level fl0 to fl3, plane1 zooms from city0 to city2 with fuel level fl2 to fl3, plane1 zooms from city0 to city2 with fuel level fl6 to fl4, plane1 zooms from city1 to city2 with fuel level fl2 to fl1, plane1 zooms from city2 to city3 with fuel level fl4 to fl3, plane1 zooms from city3 to city2 with fuel level fl2 to fl6, plane1 zooms from city3 to city1 with fuel level fl3 to fl1, plane1 gets refueled at city3 with fuel level fl6 to fl1, plane1 zooms from city0 to city3 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl5 to fl6, plane1 zooms from city0 to city3 with fuel level fl0 to fl3, plane1 flies from city1 to city0 with fuel level fl6 to fl4, plane1 zooms from city2 to city3 with fuel level fl0 to fl4, plane1 zooms from city0 to city1 with fuel level fl5 to fl0, plane1 zooms from city3 to city0 with fuel level fl4 to fl6, plane1 zooms from city3 to city1 with fuel level fl1 to fl2, plane1 zooms from city2 to city0 with fuel level fl2 to fl1, plane1 flies from city3 to city1 with fuel level fl4 to fl1, plane1 zooms from city0 to city3 with fuel level fl0 to fl1, plane1 zooms from city0 to city1 with fuel level fl0 to fl4, plane1 zooms from city0 to city2 with fuel level fl3 to fl1, plane1 zooms from city0 to city1 with fuel level fl3 to fl6, plane1 zooms from city3 to city2 with fuel level fl0 to fl3, plane1 zooms from city3 to city0 with fuel level fl1 to fl4, plane1 zooms from city2 to city3 with fuel level fl2 to fl1, plane1 flies from city0 to city1 with fuel level fl3 to fl5, plane1 zooms from city1 to city2 with fuel level fl1 to fl5, plane1 flies from city1 to city3 with fuel level fl0 to fl1, plane1 zooms from city2 to city0 with fuel level fl3 to fl1, plane1 zooms from city0 to city1 with fuel level fl5 to fl1, plane1 zooms from city1 to city0 with fuel level fl6 to fl1, plane1 zooms from city1 to city2 with fuel level fl0 to fl4, plane1 zooms from city0 to city1 with fuel level fl4 to fl5, plane1 zooms from city1 to city3 with fuel level fl1 to fl5, plane1 zooms from city1 to city0 with fuel level fl3 to fl2, plane1 zooms from city2 to city3 with fuel level fl6 to fl3, plane1 gets refueled at city1 with fuel level fl5 to fl3, plane1 zooms from city3 to city0 with fuel level fl6 to fl4, plane1 zooms from city3 to city2 with fuel level fl2 to fl5, plane1 zooms from city2 to city1 with fuel level fl1 to fl5, plane1 flies from city1 to city3 with fuel level fl6 to fl5, plane1 zooms from city1 to city0 with fuel level fl5 to fl1, plane1 gets refueled at city2 with fuel level fl4 to fl0, plane1 zooms from city3 to city2 with fuel level fl5 to fl4, plane1 flies from city0 to city1 with fuel level fl5 to fl3, plane1 zooms from city2 to city0 with fuel level fl1 to fl2, plane1 flies from city0 to city3 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl5 to fl6, plane1 zooms from city1 to city2 with fuel level fl3 to fl1, plane1 zooms from city1 to city2 with fuel level fl4 to fl0, plane1 zooms from city2 to city3 with fuel level fl5 to fl4, plane1 zooms from city0 to city3 with fuel level fl0 to fl3, plane1 zooms from city2 to city1 with fuel level fl4 to fl0, plane1 zooms from city0 to city2 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl2 to fl0, plane1 flies from city3 to city1 with fuel level fl3 to fl5, plane1 zooms from city0 to city2 with fuel level fl5 to fl1, plane1 zooms from city3 to city1 with fuel level fl5 to fl6, plane1 zooms from city1 to city2 with fuel level fl4 to fl2, plane1 zooms from city0 to city2 with fuel level fl1 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl4, plane1 flies from city2 to city1 with fuel level fl5 to fl4, plane1 zooms from city3 to city0 with fuel level fl2 to fl4, plane1 zooms from city0 to city2 with fuel level fl0 to fl2, plane1 zooms from city2 to city1 with fuel level fl2 to fl6, plane1 zooms from city1 to city0 with fuel level fl3 to fl1, plane1 zooms from city0 to city3 with fuel level fl4 to fl5, plane1 zooms from city1 to city0 with fuel level fl1 to fl3, plane1 zooms from city1 to city0 with fuel level fl2 to fl0, plane1 flies from city2 to city0 with fuel level fl3 to fl5, plane1 zooms from city2 to city1 with fuel level fl3 to fl4, plane1 zooms from city3 to city2 with fuel level fl1 to fl5, plane1 zooms from city1 to city0 with fuel level fl4 to fl2, plane1 zooms from city1 to city3 with fuel level fl4 to fl0, plane1 zooms from city0 to city1 with fuel level fl4 to fl1, plane1 zooms from city2 to city3 with fuel level fl5 to fl0, plane1 flies from city2 to city3 with fuel level fl2 to fl0, plane1 zooms from city2 to city1 with fuel level fl5 to fl2, plane1 zooms from city2 to city1 with fuel level fl0 to fl3, plane1 zooms from city2 to city1 with fuel level fl2 to fl6, plane1 zooms from city0 to city1 with fuel level fl5 to fl3, plane1 zooms from city3 to city0 with fuel level fl0 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl2, plane1 gets refueled at city3 with fuel level fl3 to fl4, plane1 zooms from city0 to city2 with fuel level fl2 to fl0, plane1 flies from city0 to city3 with fuel level fl2 to fl4, plane1 zooms from city2 to city1 with fuel level fl3 to fl0, plane1 zooms from city1 to city3 with fuel level fl0 to fl4, plane1 gets refueled at city1 with fuel level fl6 to fl3, plane1 zooms from city1 to city2 with fuel level fl6 to fl5, plane1 zooms from city1 to city3 with fuel level fl4 to fl5, plane1 gets refueled at city3 with fuel level fl4 to fl6, plane1 zooms from city2 to city0 with fuel level fl6 to fl2, plane1 zooms from city3 to city0 with fuel level fl0 to fl2, plane1 zooms from city0 to city1 with fuel level fl6 to fl2, plane1 flies from city1 to city3 with fuel level fl1 to fl2, plane1 zooms from city3 to city2 with fuel level fl0 to fl1, plane1 zooms from city1 to city0 with fuel level fl3 to fl5, plane1 zooms from city2 to city1 with fuel level fl3 to fl5, plane1 zooms from city0 to city3 with fuel level fl3 to fl4, plane1 zooms from city1 to city0 with fuel level fl6 to fl3, plane1 zooms from city3 to city0 with fuel level fl2 to fl4, plane1 flies from city3 to city2 with fuel level fl4 to fl0, plane1 zooms from city1 to city2 with fuel level fl4 to fl1, plane1 zooms from city2 to city0 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl0 to fl6, plane1 zooms from city0 to city1 with fuel level fl0 to fl1, plane1 zooms from city3 to city2 with fuel level fl4 to fl5, plane1 zooms from city1 to city3 with fuel level fl5 to fl2, plane1 zooms from city3 to city1 with fuel level fl3 to fl2, plane1 zooms from city2 to city1 with fuel level fl5 to fl1, plane1 zooms from city2 to city3 with fuel level fl1 to fl0, plane1 flies from city1 to city3 with fuel level fl4 to fl5, plane1 zooms from city0 to city1 with fuel level fl3 to fl6, plane1 zooms from city0 to city3 with fuel level fl4 to fl6, plane1 flies from city0 to city1 with fuel level fl5 to fl6, plane1 zooms from city0 to city3 with fuel level fl0 to fl1, plane1 zooms from city3 to city0 with fuel level fl6 to fl3, plane1 zooms from city0 to city3 with fuel level fl0 to fl1, plane1 zooms from city2 to city0 with fuel level fl0 to fl1, plane1 zooms from city2 to city1 with fuel level fl0 to fl3, plane1 zooms from city3 to city2 with fuel level fl1 to fl6, plane1 zooms from city3 to city0 with fuel level fl6 to fl4, plane1 zooms from city1 to city2 with fuel level fl0 to fl6, plane1 flies from city3 to city2 with fuel level fl2 to fl4, plane1 zooms from city0 to city3 with fuel level fl6 to fl2, plane1 flies from city1 to city3 with fuel level fl5 to fl2, plane1 gets refueled at city2 with fuel level fl6 to fl1, plane1 flies from city2 to city0 with fuel level fl5 to fl1, plane1 zooms from city3 to city0 with fuel level fl2 to fl4, plane1 zooms from city2 to city3 with fuel level fl4 to fl2, plane1 zooms from city1 to city3 with fuel level fl2 to fl5, plane1 zooms from city3 to city1 with fuel level fl1 to fl4, plane1 zooms from city0 to city1 with fuel level fl4 to fl3, plane1 zooms from city0 to city3 with fuel level fl4 to fl1, plane1 zooms from city0 to city2 with fuel level fl6 to fl5, plane1 zooms from city1 to city2 with fuel level fl3 to fl4, plane1 zooms from city3 to city1 with fuel level fl4 to fl2, plane1 zooms from city1 to city3 with fuel level fl6 to fl1, plane1 zooms from city3 to city0 with fuel level fl4 to fl6, plane1 zooms from city3 to city1 with fuel level fl6 to fl5, plane1 zooms from city0 to city3 with fuel level fl5 to fl3, plane1 zooms from city0 to city1 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl1 to fl4, plane1 flies from city2 to city1 with fuel level fl6 to fl0, plane1 gets refueled at city2 with fuel level fl5 to fl1, plane1 zooms from city0 to city1 with fuel level fl2 to fl5, plane1 flies from city1 to city3 with fuel level fl1 to fl4, plane1 zooms from city2 to city0 with fuel level fl6 to fl4, plane1 zooms from city3 to city1 with fuel level fl6 to fl2, plane1 zooms from city0 to city1 with fuel level fl4 to fl1, plane1 zooms from city2 to city0 with fuel level fl2 to fl3, plane1 flies from city1 to city3 with fuel level fl2 to fl5, plane1 zooms from city2 to city0 with fuel level fl5 to fl1, plane1 gets refueled at city2 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl4 to fl6, plane1 gets refueled at city2 with fuel level fl1 to fl2, plane1 flies from city0 to city2 with fuel level fl3 to fl2, plane1 zooms from city3 to city0 with fuel level fl3 to fl4, plane1 zooms from city3 to city1 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl1 to fl3, plane1 zooms from city0 to city2 with fuel level fl4 to fl5, plane1 flies from city3 to city2 with fuel level fl6 to fl0, plane1 zooms from city3 to city1 with fuel level fl3 to fl2, plane1 flies from city3 to city2 with fuel level fl5 to fl0, plane1 zooms from city1 to city0 with fuel level fl1 to fl6, plane1 zooms from city3 to city1 with fuel level fl4 to fl6, plane1 zooms from city2 to city1 with fuel level fl4 to fl1, plane1 zooms from city0 to city1 with fuel level fl0 to fl2, plane1 zooms from city3 to city0 with fuel level fl5 to fl6, person4 departs plane1 at city0, plane1 zooms from city0 to city3 with fuel level fl4 to fl0, plane1 zooms from city3 to city0 with fuel level fl5 to fl0, plane1 zooms from city1 to city3 with fuel level fl4 to fl3, plane1 zooms from city0 to city2 with fuel level fl3 to fl1, plane1 flies from city2 to city1 with fuel level fl6 to fl1, plane1 zooms from city2 to city1 with fuel level fl5 to fl0, plane1 zooms from city2 to city3 with fuel level fl2 to fl3, plane1 zooms from city3 to city1 with fuel level fl2 to fl0, plane1 zooms from city3 to city1 with fuel level fl3 to fl6, plane1 zooms from city3 to city2 with fuel level fl4 to fl0, person6 departs plane1 at city2, plane1 zooms from city2 to city1 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl0 to fl4, plane1 zooms from city2 to city0 with fuel level fl4 to fl0, plane1 zooms from city3 to city0 with fuel level fl5 to fl6, plane1 zooms from city2 to city0 with fuel level fl3 to fl4, plane1 zooms from city3 to city2 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl2 to fl4, plane1 flies from city1 to city2 with fuel level fl2 to fl1, plane1 zooms from city1 to city2 with fuel level fl6 to fl1, plane1 zooms from city3 to city1 with fuel level fl2 to fl1, plane1 zooms from city0 to city2 with fuel level fl4 to fl0, plane1 zooms from city3 to city2 with fuel level fl1 to fl6, plane1 flies from city2 to city3 with fuel level fl1 to fl5, plane1 zooms from city3 to city2 with fuel level fl0 to fl6, plane1 zooms from city0 to city2 with fuel level fl0 to fl5, person3 departs plane1 at city0, plane1 zooms from city2 to city3 with fuel level fl3 to fl4, plane1 flies from city2 to city0 with fuel level fl1 to fl2, plane1 zooms from city1 to city3 with fuel level fl3 to fl6, plane1 zooms from city1 to city0 with fuel level fl2 to fl4, plane1 flies from city0 to city1 with fuel level fl3 to fl4, plane1 zooms from city1 to city3 with fuel level fl3 to fl4, plane1 zooms from city2 to city3 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl0 to fl2, plane1 zooms from city2 to city3 with fuel level fl3 to fl4, plane1 zooms from city3 to city2 with fuel level fl2 to fl1, plane1 zooms from city0 to city3 with fuel level fl5 to fl4, plane1 zooms from city0 to city1 with fuel level fl5 to fl0, plane1 zooms from city3 to city1 with fuel level fl3 to fl5, plane1 gets refueled at city3 with fuel level fl1 to fl2, plane1 zooms from city3 to city2 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl4 to fl5, plane1 zooms from city2 to city1 with fuel level fl1 to fl2, plane1 zooms from city1 to city3 with fuel level fl2 to fl4, plane1 zooms from city3 to city0 with fuel level fl0 to fl2, plane1 zooms from city3 to city2 with fuel level fl1 to fl2, plane1 zooms from city2 to city1 with fuel level fl4 to fl3, plane1 zooms from city0 to city3 with fuel level fl6 to fl1, plane1 zooms from city3 to city2 with fuel level fl1 to fl4, plane1 zooms from city0 to city1 with fuel level fl2 to fl0, person7 departs plane1 at city1, plane1 zooms from city1 to city0 with fuel level fl0 to fl2, plane1 flies from city0 to city2 with fuel level fl6 to fl4, plane1 gets refueled at city0 with fuel level fl5 to fl4, plane1 flies from city1 to city0 with fuel level fl1 to fl4, plane1 gets refueled at city1 with fuel level fl4 to fl0, plane1 zooms from city3 to city1 with fuel level fl2 to fl5, plane1 flies from city2 to city0 with fuel level fl5 to fl4, plane1 zooms from city2 to city0 with fuel level fl5 to fl4, plane1 zooms from city3 to city1 with fuel level fl6 to fl3, plane1 zooms from city3 to city1 with fuel level fl5 to fl1, plane1 zooms from city2 to city3 with fuel level fl3 to fl6, plane1 zooms from city3 to city2 with fuel level fl0 to fl5, plane1 zooms from city0 to city1 with fuel level fl4 to fl6, plane1 zooms from city2 to city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl1 to fl4, plane1 zooms from city2 to city1 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl4 to fl6, plane1 zooms from city3 to city0 with fuel level fl1 to fl3, plane1 zooms from city2 to city0 with fuel level fl2 to fl5, plane1 zooms from city1 to city0 with fuel level fl1 to fl3, plane1 zooms from city1 to city3 with fuel level fl0 to fl3, person4 departs plane1 at city2, plane1 zooms from city3 to city0 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl2 to fl4, plane1 zooms from city1 to city3 with fuel level fl6 to fl0, plane1 zooms from city3 to city1 with fuel level fl0 to fl3, plane1 zooms from city1 to city2 with fuel level fl5 to fl3, plane1 flies from city0 to city3 with fuel level fl5 to fl6, plane1 gets refueled at city3 with fuel level fl3 to fl5, plane1 zooms from city0 to city3 with fuel level fl6 to fl5, plane1 gets refueled at city0 with fuel level fl5 to fl3, plane1 zooms from city2 to city1 with fuel level fl5 to fl4, plane1 zooms from city2 to city3 with fuel level fl3 to fl6, plane1 zooms from city3 to city1 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl5 to fl4, plane1 zooms from city2 to city3 with fuel level fl1 to fl3, plane1 zooms from city1 to city2 with fuel level fl3 to fl6, plane1 zooms from city1 to city0 with fuel level fl3 to fl2, plane1 zooms from city1 to city2 with fuel level fl2 to fl0, plane1 zooms from city3 to city0 with fuel level fl5 to fl0, plane1 zooms from city3 to city1 with fuel level fl0 to fl6, plane1 zooms from city3 to city2 with fuel level fl6 to fl0, plane1 gets refueled at city1 with fuel level fl3 to fl6, plane1 zooms from city2 to city1 with fuel level fl3 to fl0, plane1 zooms from city3 to city1 with fuel level fl3 to fl2, plane1 flies from city2 to city0 with fuel level fl0 to fl5, plane1 zooms from city0 to city2 with fuel level fl0 to fl5, person4 departs plane1 at city3, plane1 zooms from city3 to city2 with fuel level fl4 to fl3, plane1 zooms from city3 to city0 with fuel level fl5 to fl6, plane1 zooms from city2 to city1 with fuel level fl3 to fl1, plane1 zooms from city1 to city3 with fuel level fl4 to fl0, plane1 gets refueled at city3 with fuel level fl0 to fl3, plane1 flies from city1 to city3 with fuel level fl5 to fl4, plane1 zooms from city3 to city0 with fuel level fl5 to fl3, plane1 gets refueled at city3 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl6 to fl4, plane1 zooms from city1 to city3 with fuel level fl4 to fl1, plane1 zooms from city3 to city2 with fuel level fl3 to fl6, plane1 zooms from city3 to city2 with fuel level fl0 to fl3, plane1 zooms from city2 to city3 with fuel level fl1 to fl0, plane1 zooms from city3 to city0 with fuel level fl4 to fl2, plane1 zooms from city1 to city0 with fuel level fl0 to fl6, plane1 zooms from city0 to city3 with fuel level fl4 to fl2, plane1 zooms from city0 to city1 with fuel level fl0 to fl4, plane1 zooms from city0 to city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city2 with fuel level fl4 to fl1, plane1 zooms from city2 to city3 with fuel level fl3 to fl5, plane1 gets refueled at city1 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl6 to fl4, plane1 zooms from city3 to city1 with fuel level fl2 to fl4, plane1 zooms from city3 to city0 with fuel level fl4 to fl1, plane1 zooms from city1 to city2 with fuel level fl3 to fl0, plane1 zooms from city0 to city1 with fuel level fl0 to fl2, plane1 zooms from city0 to city2 with fuel level fl0 to fl3, plane1 flies from city0 to city3 with fuel level fl6 to fl2, plane1 flies from city2 to city0 with fuel level fl1 to fl0, plane1 zooms from city3 to city1 with fuel level fl6 to fl3, plane1 zooms from city0 to city3 with fuel level fl2 to fl1, plane1 zooms from city1 to city0 with fuel level fl6 to fl2, plane1 zooms from city1 to city0 with fuel level fl3 to fl2, plane1 zooms from city1 to city0 with fuel level fl4 to fl3, plane1 zooms from city3 to city1 with fuel level fl1 to fl0, plane1 zooms from city3 to city1 with fuel level fl0 to fl4, plane1 zooms from city2 to city3 with fuel level fl6 to fl2, plane1 zooms from city0 to city2 with fuel level fl4 to fl6, plane1 zooms from city3 to city1 with fuel level fl1 to fl6, plane1 zooms from city3 to city2 with fuel level fl2 to fl3, plane1 zooms from city1 to city3 with fuel level fl0 to fl3, plane1 zooms from city2 to city0 with fuel level fl1 to fl4, plane1 zooms from city1 to city3 with fuel level fl3 to fl1, plane1 flies from city2 to city3 with fuel level fl0 to fl5, plane1 gets refueled at city2 with fuel level fl4 to fl1, plane1 zooms from city3 to city1 with fuel level fl0 to fl1, plane1 zooms from city3 to city0 with fuel level fl2 to fl6, plane1 flies from city0 to city2 with fuel level fl4 to fl0, plane1 zooms from city3 to city0 with fuel level fl6 to fl3, plane1 zooms from city0 to city2 with fuel level fl0 to fl6, plane1 zooms from city2 to city3 with fuel level fl6 to fl2, person5 departs plane1 at city3, plane1 zooms from city1 to city3 with fuel level fl4 to fl6, plane1 gets refueled at city3 with fuel level fl0 to fl6, plane1 zooms from city0 to city3 with fuel level fl4 to fl1, plane1 flies from city0 to city1 with fuel level fl0 to fl2, plane1 zooms from city3 to city0 with fuel level fl2 to fl3, plane1 flies from city0 to city2 with fuel level fl0 to fl5, plane1 flies from city2 to city3 with fuel level fl3 to fl2, plane1 flies from city1 to city2 with fuel level fl5 to fl3, plane1 zooms from city3 to city2 with fuel level fl5 to fl6, plane1 zooms from city3 to city2 with fuel level fl6 to fl4, plane1 zooms from city2 to city1 with fuel level fl5 to fl4, plane1 zooms from city3 to city1 with fuel level fl5 to fl3, plane1 zooms from city0 to city2 with fuel level fl4 to fl0, plane1 zooms from city0 to city2 with fuel level fl3 to fl6, plane1 zooms from city0 to city2 with fuel level fl6 to fl5, plane1 zooms from city3 to city1 with fuel level fl1 to fl2, plane1 flies from city0 to city3 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl3 to fl0, plane1 zooms from city3 to city2 with fuel level fl4 to fl2, plane1 zooms from city2 to city1 with fuel level fl1 to fl5, plane1 flies from city0 to city3 with fuel level fl4 to fl2, plane1 zooms from city2 to city1 with fuel level fl4 to fl3, plane1 zooms from city0 to city1 with fuel level fl0 to fl6, plane1 zooms from city0 to city1 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl5 to fl4, plane1 zooms from city1 to city2 with fuel level fl4 to fl5, plane1 flies from city3 to city0 with fuel level fl1 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl4, plane1 flies from city0 to city3 with fuel level fl6 to fl3, plane1 flies from city3 to city2 with fuel level fl4 to fl1, plane1 zooms from city1 to city2 with fuel level fl6 to fl3, plane1 zooms from city2 to city3 with fuel level fl5 to fl0, plane1 gets refueled at city1 with fuel level fl1 to fl4, plane1 zooms from city1 to city3 with fuel level fl3 to fl4, plane1 zooms from city1 to city0 with fuel level fl3 to fl0, plane1 zooms from city1 to city2 with fuel level fl0 to fl4, plane1 zooms from city2 to city3 with fuel level fl5 to fl2, plane1 zooms from city3 to city0 with fuel level fl0 to fl6, plane1 flies from city0 to city3 with fuel level fl6 to fl1, person3 departs plane1 at city2, plane1 zooms from city1 to city3 with fuel level fl6 to fl5, plane1 flies from city1 to city0 with fuel level fl6 to fl1, plane1 zooms from city0 to city3 with fuel level fl3 to fl5, plane1 zooms from city0 to city3 with fuel level fl6 to fl5, plane1 zooms from city1 to city0 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl3, plane1 zooms from city0 to city3 with fuel level fl6 to fl0, plane1 zooms from city3 to city2 with fuel level fl6 to fl2, plane1 zooms from city2 to city1 with fuel level fl1 to fl0, plane1 zooms from city0 to city2 with fuel level fl5 to fl6, plane1 gets refueled at city2 with fuel level fl6 to fl3, plane1 zooms from city2 to city0 with fuel level fl1 to fl5, plane1 zooms from city0 to city2 with fuel level fl0 to fl3, plane1 zooms from city0 to city3 with fuel level fl1 to fl5, plane1 zooms from city2 to city3 with fuel level fl5 to fl3, plane1 flies from city3 to city0 with fuel level fl2 to fl0, plane1 zooms from city3 to city2 with fuel level fl0 to fl5, plane1 zooms from city1 to city2 with fuel level fl4 to fl3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, plane1 zooms from city2 to city0 with fuel level fl5 to fl6, plane1 zooms from city3 to city0 with fuel level fl1 to fl0, plane1 gets refueled at city2 with fuel level fl0 to fl1, plane1 zooms from city3 to city0 with fuel level fl1 to fl2, plane1 zooms from city0 to city1 with fuel level fl6 to fl0, plane1 zooms from city2 to city0 with fuel level fl0 to fl3, plane1 zooms from city0 to city2 with fuel level fl2 to fl6, plane1 zooms from city3 to city1 with fuel level fl4 to fl6, plane1 zooms from city1 to city2 with fuel level fl0 to fl3, plane1 zooms from city0 to city1 with fuel level fl3 to fl5, plane1 zooms from city3 to city1 with fuel level fl5 to fl6, plane1 zooms from city0 to city3 with fuel level fl1 to fl6, plane1 zooms from city1 to city2 with fuel level fl2 to fl5, plane1 gets refueled at city1 with fuel level fl5 to fl6, plane1 zooms from city0 to city3 with fuel level fl5 to fl3, plane1 zooms from city0 to city1 with fuel level fl6 to fl4, plane1 zooms from city0 to city1 with fuel level fl2 to fl6, plane1 zooms from city2 to city0 with fuel level fl6 to fl4, plane1 flies from city2 to city3 with fuel level fl4 to fl1, plane1 zooms from city0 to city2 with fuel level fl2 to fl4, plane1 zooms from city2 to city3 with fuel level fl0 to fl1, plane1 zooms from city0 to city3 with fuel level fl2 to fl5, plane1 zooms from city0 to city1 with fuel level fl4 to fl2, plane1 zooms from city3 to city1 with fuel level fl2 to fl1, plane1 zooms from city3 to city2 with fuel level fl5 to fl6, plane1 zooms from city1 to city0 with fuel level fl5 to fl6, plane1 zooms from city0 to city3 with fuel level fl5 to fl3, plane1 zooms from city0 to city3 with fuel level fl3 to fl6, plane1 zooms from city3 to city0 with fuel level fl0 to fl1, plane1 zooms from city1 to city3 with fuel level fl5 to fl3, plane1 zooms from city3 to city2 with fuel level fl5 to fl1, plane1 gets refueled at city1 with fuel level fl2 to fl1, plane1 zooms from city1 to city3 with fuel level fl6 to fl4, plane1 zooms from city1 to city0 with fuel level fl1 to fl4, plane1 zooms from city0 to city3 with fuel level fl2 to fl3, plane1 zooms from city1 to city0 with fuel level fl6 to fl2, plane1 zooms from city3 to city0 with fuel level fl5 to fl2, plane1 flies from city2 to city0 with fuel level fl5 to fl6, plane1 zooms from city1 to city3 with fuel level fl2 to fl0, plane1 zooms from city1 to city2 with fuel level fl2 to fl4, plane1 zooms from city2 to city0 with fuel level fl0 to fl2, plane1 zooms from city2 to city1 with fuel level fl0 to fl2, plane1 zooms from city3 to city2 with fuel level fl1 to fl5, plane1 zooms from city1 to city0 with fuel level fl6 to fl4, plane1 zooms from city0 to city3 with fuel level fl4 to fl1, plane1 flies from city2 to city3 with fuel level fl2 to fl4, plane1 gets refueled at city2 with fuel level fl5 to fl4, person2 departs plane1 at city1, plane1 zooms from city2 to city1 with fuel level fl2 to fl3, plane1 zooms from city1 to city2 with fuel level fl3 to fl6, plane1 zooms from city3 to city1 with fuel level fl6 to fl4, plane1 flies from city0 to city1 with fuel level fl4 to fl3, plane1 zooms from city3 to city0 with fuel level fl6 to fl2, plane1 flies from city2 to city3 with fuel level fl3 to fl4, plane1 zooms from city0 to city1 with fuel level fl6 to fl0, plane1 zooms from city0 to city3 with fuel level fl4 to fl2, plane1 zooms from city2 to city0 with fuel level fl1 to fl6, plane1 zooms from city0 to city3 with fuel level fl3 to fl0, plane1 zooms from city0 to city2 with fuel level fl0 to fl2, person3 boards plane1 at city2, plane1 zooms from city3 to city2 with fuel level fl4 to fl1, plane1 zooms from city2 to city3 with fuel level fl0 to fl4, plane1 zooms from city0 to city2 with fuel level fl4 to fl2, plane1 zooms from city3 to city2 with fuel level fl5 to fl1, plane1 zooms from city3 to city2 with fuel level fl0 to fl4, plane1 zooms from city3 to city0 with fuel level fl0 to fl3, plane1 zooms from city1 to city0 with fuel level fl2 to fl6, plane1 zooms from city1 to city0 with fuel level fl1 to fl6, plane1 zooms from city2 to city3 with fuel level fl4 to fl0, plane1 zooms from city3 to city2 with fuel level fl6 to fl1, plane1 zooms from city3 to city1 with fuel level fl6 to fl2, plane1 zooms from city0 to city3 with fuel level fl2 to fl1, plane1 flies from city0 to city1 with fuel level fl5 to fl1, plane1 gets refueled at city0 with fuel level fl2 to fl3, plane1 zooms from city1 to city3 with fuel level fl6 to fl4, plane1 zooms from city1 to city3 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl4 to fl0, plane1 zooms from city1 to city2 with fuel level fl6 to fl0, plane1 zooms from city3 to city0 with fuel level fl0 to fl6, plane1 flies from city3 to city2 with fuel level fl1 to fl3, person6 boards plane1 at city2, plane1 zooms from city1 to city0 with fuel level fl2 to fl6, plane1 flies from city0 to city1 with fuel level fl5 to fl4, plane1 zooms from city2 to city1 with fuel level fl0 to fl4, plane1 zooms from city3 to city1 with fuel level fl4 to fl0, plane1 zooms from city3 to city1 with fuel level fl5 to fl4, plane1 zooms from city1 to city2 with fuel level fl1 to fl0, plane1 flies from city3 to city2 with fuel level fl4 to fl6, plane1 zooms from city3 to city2 with fuel level fl2 to fl1, plane1 zooms from city2 to city0 with fuel level fl0 to fl5, plane1 flies from city2 to city1 with fuel level fl0 to fl3, plane1 zooms from city0 to city3 with fuel level fl6 to fl2, plane1 zooms from city2 to city1 with fuel level fl3 to fl0, plane1 zooms from city1 to city0 with fuel level fl4 to fl2, plane1 flies from city3 to city0 with fuel level fl4 to fl3, plane1 zooms from city0 to city1 with fuel level fl1 to fl0, plane1 zooms from city1 to city2 with fuel level fl3 to fl0, plane1 zooms from city2 to city3 with fuel level fl4 to fl0, plane1 zooms from city3 to city2 with fuel level fl6 to fl2, plane1 zooms from city3 to city2 with fuel level fl1 to fl3, plane1 zooms from city3 to city0 with fuel level fl1 to fl3, plane1 zooms from city2 to city1 with fuel level fl6 to fl1, plane1 zooms from city1 to city2 with fuel level fl5 to fl4, plane1 zooms from city0 to city3 with fuel level fl5 to fl0, plane1 zooms from city3 to city0 with fuel level fl4 to fl2, plane1 zooms from city0 to city3 with fuel level fl3 to fl2, plane1 zooms from city3 to city1 with fuel level fl1 to fl5, plane1 zooms from city1 to city2 with fuel level fl1 to fl5, plane1 zooms from city3 to city2 with fuel level fl4 to fl1, plane1 flies from city1 to city0 with fuel level fl0 to fl6, plane1 zooms from city0 to city3 with fuel level fl5 to fl2, plane1 zooms from city1 to city3 with fuel level fl4 to fl6, plane1 zooms from city2 to city1 with fuel level fl1 to fl3, plane1 flies from city2 to city3 with fuel level fl1 to fl6, plane1 zooms from city2 to city0 with fuel level fl5 to fl1, plane1 zooms from city3 to city1 with fuel level fl1 to fl4, plane1 zooms from city0 to city2 with fuel level fl6 to fl3, plane1 flies from city1 to city0 with fuel level fl3 to fl4, plane1 flies from city0 to city1 with fuel level fl3 to fl6, plane1 zooms from city2 to city1 with fuel level fl3 to fl5, plane1 zooms from city3 to city2 with fuel level fl3 to fl6, plane1 zooms from city1 to city0 with fuel level fl0 to fl4, plane1 zooms from city0 to city3 with fuel level fl3 to fl0, plane1 zooms from city0 to city1 with fuel level fl1 to fl5, plane1 gets refueled at city1 with fuel level fl2 to fl5, plane1 flies from city3 to city1 with fuel level fl4 to fl5, plane1 zooms from city1 to city3 with fuel level fl1 to fl0, plane1 zooms from city1 to city0 with fuel level fl3 to fl6, plane1 zooms from city2 to city1 with fuel level fl6 to fl4, plane1 zooms from city2 to city3 with fuel level fl2 to fl4, plane1 flies from city2 to city0 with fuel level fl5 to fl3, plane1 zooms from city1 to city3 with fuel level fl2 to fl0, plane1 zooms from city3 to city0 with fuel level fl5 to fl3, plane1 zooms from city3 to city2 with fuel level fl3 to fl5, plane1 zooms from city0 to city2 with fuel level fl6 to fl5, plane1 zooms from city1 to city2 with fuel level fl4 to fl1, plane1 flies from city1 to city3 with fuel level fl6 to fl2, plane1 zooms from city2 to city3 with fuel level fl5 to fl1, plane1 zooms from city1 to city3 with fuel level fl0 to fl1, plane1 gets refueled at city0 with fuel level fl0 to fl2, plane1 gets refueled at city0 with fuel level fl5 to fl0, plane1 zooms from city0 to city3 with fuel level fl5 to fl4, plane1 zooms from city1 to city0 with fuel level fl5 to fl6, plane1 zooms from city1 to city0 with fuel level fl5 to fl3, person3 departs plane1 at city3, plane1 zooms from city3 to city2 with fuel level fl2 to fl4, plane1 zooms from city1 to city3 with fuel level fl4 to fl1, plane1 zooms from city1 to city0 with fuel level fl3 to fl6, person1 departs plane1 at city1, plane1 zooms from city0 to city3 with fuel level fl1 to fl6, plane1 zooms from city2 to city0 with fuel level fl4 to fl3, plane1 zooms from city2 to city0 with fuel level fl2 to fl4, plane1 zooms from city3 to city0 with fuel level fl5 to fl1, plane1 zooms from city1 to city2 with fuel level fl0 to fl1, plane1 zooms from city1 to city2 with fuel level fl5 to fl6, person5 departs plane1 at city1, plane1 zooms from city0 to city3 with fuel level fl1 to fl3, plane1 zooms from city0 to city1 with fuel level fl4 to fl3, plane1 flies from city2 to city3 with fuel level fl6 to fl4, plane1 zooms from city3 to city1 with fuel level fl2 to fl3, plane1 zooms from city2 to city0 with fuel level fl5 to fl6, plane1 flies from city3 to city2 with fuel level fl1 to fl0, plane1 zooms from city1 to city0 with fuel level fl0 to fl2, plane1 zooms from city3 to city2 with fuel level fl1 to fl3, plane1 zooms from city1 to city0 with fuel level fl5 to fl1, plane1 zooms from city1 to city2 with fuel level fl0 to fl5, plane1 zooms from city0 to city1 with fuel level fl0 to fl3, plane1 gets refueled at city1 with fuel level fl0 to fl5, plane1 zooms from city3 to city1 with fuel level fl6 to fl4, plane1 zooms from city1 to city0 with fuel level fl5 to fl2, plane1 zooms from city0 to city2 with fuel level fl6 to fl5, plane1 zooms from city0 to city2 with fuel level fl3 to fl2, plane1 gets refueled at city1 with fuel level fl3 to fl5, plane1 zooms from city2 to city3 with fuel level fl1 to fl4, plane1 flies from city1 to city0 with fuel level fl5 to fl4, plane1 zooms from city0 to city1 with fuel level fl0 to fl6, plane1 zooms from city0 to city3 with fuel level fl2 to fl4, plane1 zooms from city2 to city1 with fuel level fl3 to fl0, plane1 zooms from city1 to city2 with fuel level fl4 to fl0, plane1 zooms from city3 to city1 with fuel level fl5 to fl6, plane1 zooms from city1 to city0 with fuel level fl2 to fl5, plane1 zooms from city2 to city0 with fuel level fl5 to fl4, plane1 zooms from city2 to city1 with fuel level fl0 to fl4, plane1 zooms from city2 to city3 with fuel level fl0 to fl6, plane1 zooms from city2 to city1 with fuel level fl1 to fl6, plane1 zooms from city1 to city3 with fuel level fl0 to fl5, plane1 zooms from city1 to city0 with fuel level fl2 to fl5, plane1 zooms from city3 to city1 with fuel level fl4 to fl5 and plane1 zooms from city2 to city1 with fuel level fl2 to fl0", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "94cea83a-6f97-44f6-91a1-e5347b0c576f", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "bdfc46d4-1b6b-4882-a369-f19a2473db69", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, plane1 zooms from city2 to city0 with fuel level fl4 to fl5, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "plane1 zooms from city2 to city0 with fuel level fl4 to fl5", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "4ae7482b-709c-4a51-866b-f2cf52676f4b", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, plane1 zooms from city0 to city1 with fuel level fl0 to fl1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "plane1 zooms from city0 to city1 with fuel level fl0 to fl1", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "4673f79f-b1f5-4b4b-8983-4985a7d9de4f", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, plane1 zooms from city1 to city3 with fuel level fl1 to fl3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "plane1 zooms from city1 to city3 with fuel level fl1 to fl3", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "adeb33c3-9829-47ee-a2ae-e29d4cb8042a", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, if plane1 gets refueled at city1 with fuel level fl0 to fl1, is it True or False that plane1 has fuel level fl1 and plane1 does not have fuel level fl0?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "286ec0e7-b65f-4fce-92cf-f749a007bcca", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, if plane1 gets refueled at city1 with fuel level fl0 to fl1, is it True or False that plane1 does not have fuel level fl0 and plane1 has fuel level fl1?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "46104279-efca-4691-aa27-b995cfdb21e2", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, if plane1 gets refueled at city1 with fuel level fl0 to fl1, is it True or False that plane1 has fuel level fl1 and person3 is at city1?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "5f79ab81-a5ec-4e7c-aef1-a06068cfb30e", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, if plane1 gets refueled at city1 with fuel level fl0 to fl1, is it True or False that plane1 has fuel level fl1 and person4 is not at city1?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "24e0c748-5054-48f5-a94c-de98408e1228", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, if plane1 gets refueled at city1 with fuel level fl0 to fl1, is it True or False that plane1 has fuel level fl1 and fuel level fl2 is not next to fuel level fl4?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "df3e09a3-cf52-4efd-bf64-35756100155d", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, if plane1 gets refueled at city1 with fuel level fl0 to fl1, is it True or False that plane1 has fuel level fl1 and person7 is not at city2?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "5fb4b1b9-1aec-43dc-82cb-d8bba4635567", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "effects", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, if plane1 gets refueled at city1 with fuel level fl0 to fl1, what would be all of the valid properties of the state? Write None if there are none.", "answer": "fuel level fl1 is next to fuel level fl0, plane1 is at city1, person8 is at city1, person2 is at city1, person3 is at city0, fuel level fl4 is next to fuel level fl3, person5 is at city2, fuel level fl2 is next to fuel level fl1, plane1 has fuel level fl1, person1 is at city1, person7 is at city3, person6 is at city2, person4 is at city3, fuel level fl5 is next to fuel level fl4, fuel level fl6 is next to fuel level fl5 and fuel level fl3 is next to fuel level fl2", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "5c6970cd-9ada-438b-bee5-70e7f0d6c94e", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "effects", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, if plane1 gets refueled at city1 with fuel level fl0 to fl1, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl2, person3 is not in plane1, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, person7 is not at city2, fuel level fl2 is not next to fuel level fl4, plane1 does not have fuel level fl4, fuel level fl5 is not next to fuel level fl2, plane1 does not have fuel level fl3, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person2 is not in plane1, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, person8 is not at city0, plane1 does not have fuel level fl2, person8 is not in plane1, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, fuel level fl6 is not next to fuel level fl3, person5 is not at city0, plane1 is not at city2, plane1 is not at city3, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not in plane1, person4 is not in plane1, person1 is not in plane1, plane1 does not have fuel level fl0, fuel level fl5 is not next to fuel level fl0, person2 is not at city2, fuel level fl2 is not next to fuel level fl6, plane1 is not at city0, fuel level fl4 is not next to fuel level fl6, person7 is not at city0, person2 is not at city3, person8 is not at city2, fuel level fl1 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl1, fuel level fl3 is not next to fuel level fl0, person5 is not in plane1, person1 is not at city3, person3 is not at city2, person6 is not at city0, person5 is not at city3 and fuel level fl3 is not next to fuel level fl5", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "6ef1ef7f-5818-47d1-93ca-6ebb686e348f", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, if person8 boards plane1 at city1, is it True or False that person8 is not at city1 and person8 is in plane1?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "e935492b-7aa8-4f74-b43b-211cc9615843", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, if person8 boards plane1 at city1, is it True or False that person8 is in plane1 and person8 is not at city1?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "9661dd92-c25a-45ae-8935-4846b1015e95", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, if person8 boards plane1 at city1, is it True or False that person8 is not at city1 and person4 is in plane1?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "6d8583ba-d1f4-421d-86f5-92e99b6a8c19", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, if person8 boards plane1 at city1, is it True or False that fuel level fl6 is not next to fuel level fl1 and person8 is not at city1?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "760c9479-af1e-4879-8314-29d1390eb1bb", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, if person8 boards plane1 at city1, is it True or False that person8 is not at city1 and fuel level fl5 is next to fuel level fl4?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "3c00ca7d-bbb0-4256-9c87-30cd75d7b764", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, if person8 boards plane1 at city1, is it True or False that plane1 has fuel level fl4 and person8 is not at city1?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "c38dd65e-c669-4355-95a0-8be5a1345f25", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "effects", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, if person8 boards plane1 at city1, what would be all of the valid properties of the state? Write None if there are none.", "answer": "fuel level fl1 is next to fuel level fl0, plane1 is at city1, person2 is at city1, person8 is in plane1, person3 is at city0, fuel level fl4 is next to fuel level fl3, person5 is at city2, fuel level fl2 is next to fuel level fl1, person7 is at city3, person1 is at city1, person4 is at city3, person6 is at city2, plane1 has fuel level fl4, fuel level fl5 is next to fuel level fl4, fuel level fl6 is next to fuel level fl5 and fuel level fl3 is next to fuel level fl2", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "6db60ea3-ba9b-42fa-ba50-955f2704c550", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "effects", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, if person8 boards plane1 at city1, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl2, person3 is not in plane1, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, plane1 does not have fuel level fl1, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, person7 is not at city2, fuel level fl2 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl2, plane1 does not have fuel level fl3, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person2 is not in plane1, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, person8 is not at city0, plane1 does not have fuel level fl2, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person8 is not at city1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, fuel level fl6 is not next to fuel level fl3, person5 is not at city0, plane1 is not at city2, plane1 is not at city3, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not in plane1, person4 is not in plane1, person1 is not in plane1, plane1 does not have fuel level fl0, fuel level fl5 is not next to fuel level fl0, person2 is not at city2, fuel level fl2 is not next to fuel level fl6, plane1 is not at city0, fuel level fl4 is not next to fuel level fl6, person7 is not at city0, person2 is not at city3, person8 is not at city2, fuel level fl1 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl1, fuel level fl3 is not next to fuel level fl0, person5 is not in plane1, person1 is not at city3, person3 is not at city2, person6 is not at city0, person5 is not at city3 and fuel level fl3 is not next to fuel level fl5", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "edf4b212-bc6c-48ba-991f-00ad36962f32", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, if person2 departs plane1 at city3, is it True or False that person2 is at city3 and person2 is not in plane1?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "e501de63-20dc-47e5-ae74-0e8c56c85740", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, if person2 departs plane1 at city3, is it True or False that person2 is not in plane1 and person2 is at city3?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "c3cf0690-319d-4a31-baca-d903af5013ee", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, if person2 departs plane1 at city3, is it True or False that person7 is in plane1 and person2 is not in plane1?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "df38e81e-bc9e-4f75-bb70-888ba1091fa7", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, if person2 departs plane1 at city3, is it True or False that person2 is not in plane1 and person7 is not in plane1?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "ea405d61-3a2b-4c01-bf64-bf94c64a1ba2", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, if person2 departs plane1 at city3, is it True or False that fuel level fl5 is not next to fuel level fl6 and person2 is not in plane1?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "167aa278-6254-43b1-b2e0-08646cc6b911", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, if person2 departs plane1 at city3, is it True or False that fuel level fl2 is not next to fuel level fl4 and person2 is not in plane1?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "9231f35c-d15a-4050-9bdc-2845de74f674", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "effects", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, if person2 departs plane1 at city3, what would be all of the valid properties of the state? Write None if there are none.", "answer": "person2 is at city3, fuel level fl1 is next to fuel level fl0, person8 is in plane1, fuel level fl4 is next to fuel level fl3, person3 is at city0, person5 is at city2, person7 is in plane1, fuel level fl2 is next to fuel level fl1, plane1 is at city3, person4 is in plane1, person1 is at city1, plane1 has fuel level fl3, person6 is at city2, fuel level fl5 is next to fuel level fl4, fuel level fl6 is next to fuel level fl5 and fuel level fl3 is next to fuel level fl2", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "80e43ad4-12bf-4826-9749-0ceead74030a", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "effects", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, if person2 departs plane1 at city3, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl2, person3 is not in plane1, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, plane1 does not have fuel level fl1, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, person7 is not at city2, fuel level fl2 is not next to fuel level fl4, plane1 does not have fuel level fl4, fuel level fl5 is not next to fuel level fl2, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person2 is not in plane1, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, person4 is not at city3, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, person8 is not at city0, plane1 does not have fuel level fl2, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person8 is not at city1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, fuel level fl6 is not next to fuel level fl3, person5 is not at city0, plane1 is not at city2, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not at city3, person1 is not in plane1, plane1 does not have fuel level fl0, fuel level fl5 is not next to fuel level fl0, person2 is not at city2, person2 is not at city1, fuel level fl2 is not next to fuel level fl6, plane1 is not at city0, plane1 is not at city1, fuel level fl4 is not next to fuel level fl6, person7 is not at city0, person8 is not at city2, fuel level fl1 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl1, fuel level fl3 is not next to fuel level fl0, person5 is not in plane1, person1 is not at city3, person3 is not at city2, person6 is not at city0, person5 is not at city3 and fuel level fl3 is not next to fuel level fl5", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "8c801fc7-b0f3-459b-b890-2649b761a622", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, if person8 departs plane1 at city0, is it True or False that person8 is not in plane1 and person8 is at city0?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "fb8faccb-22d9-4a5e-ae48-4c5d6e213bd3", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, if person8 departs plane1 at city0, is it True or False that person8 is at city0 and person8 is not in plane1?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "a1d12846-2244-4409-b7fc-dfd7fffd952b", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, if person8 departs plane1 at city0, is it True or False that person3 is not at city3 and person8 is not in plane1?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "451be190-2097-4232-9104-e841a0993cb1", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, if person8 departs plane1 at city0, is it True or False that plane1 is not at city2 and person8 is not in plane1?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "d90521d0-c3e0-4dbe-b31e-6834a116e050", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, if person8 departs plane1 at city0, is it True or False that person8 is not in plane1 and person5 is at city2?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "7810fbda-65f0-4bc8-9c43-0527e33c4670", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, if person8 departs plane1 at city0, is it True or False that person8 is not in plane1 and fuel level fl3 is not next to fuel level fl5?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "f16eafd7-21e2-443d-9066-520434e2b102", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "effects", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, if person8 departs plane1 at city0, what would be all of the valid properties of the state? Write None if there are none.", "answer": "person2 is at city3, fuel level fl1 is next to fuel level fl0, person3 is at city0, fuel level fl4 is next to fuel level fl3, person8 is at city0, fuel level fl2 is next to fuel level fl1, person4 is in plane1, plane1 has fuel level fl1, person1 is at city1, person5 is in plane1, person7 is at city2, person6 is at city2, plane1 is at city0, fuel level fl5 is next to fuel level fl4, fuel level fl6 is next to fuel level fl5 and fuel level fl3 is next to fuel level fl2", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "4312ed77-4b17-49a4-b832-305d1aca5671", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "effects", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, if person8 departs plane1 at city0, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl2, person3 is not in plane1, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl4, plane1 does not have fuel level fl4, fuel level fl5 is not next to fuel level fl2, plane1 does not have fuel level fl3, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person2 is not in plane1, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, person4 is not at city3, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, plane1 does not have fuel level fl2, person8 is not in plane1, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person8 is not at city1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, person5 is not at city2, fuel level fl6 is not next to fuel level fl3, person5 is not at city0, plane1 is not at city2, plane1 is not at city3, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person4 is not at city1, person7 is not in plane1, person7 is not at city3, person1 is not in plane1, plane1 does not have fuel level fl0, fuel level fl5 is not next to fuel level fl0, person2 is not at city2, person2 is not at city1, fuel level fl2 is not next to fuel level fl6, plane1 is not at city1, fuel level fl4 is not next to fuel level fl6, person7 is not at city0, person8 is not at city2, fuel level fl1 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl1, fuel level fl3 is not next to fuel level fl0, person1 is not at city3, person3 is not at city2, person6 is not at city0, person5 is not at city3 and fuel level fl3 is not next to fuel level fl5", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "d4585171-6a05-48d7-9044-fdcf592116fe", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, if person4 departs plane1 at city1, is it True or False that person4 is at city1 and person4 is not in plane1?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "09472919-e817-41eb-889e-5f7ca4a78c05", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, if person4 departs plane1 at city1, is it True or False that person4 is not in plane1 and person4 is at city1?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "39f3dd62-98bc-4868-8a73-2d9b4768c12f", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, if person4 departs plane1 at city1, is it True or False that person8 is not at city1 and person4 is not in plane1?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "5e6d6a16-6699-4fe4-a241-f213c867b27a", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, if person4 departs plane1 at city1, is it True or False that person4 is not in plane1 and person4 is not at city3?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "76c514ef-febc-42cd-af65-828434544c5e", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, if person4 departs plane1 at city1, is it True or False that person2 is not at city1 and person4 is not in plane1?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "7c043581-f367-48f3-874a-1e86a677b972", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, if person4 departs plane1 at city1, is it True or False that person4 is not in plane1 and person7 is not at city3?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "9df73dc6-8e68-4b40-8d6e-bb3cece0ffb9", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "effects", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, if person4 departs plane1 at city1, what would be all of the valid properties of the state? Write None if there are none.", "answer": "person4 is at city1, person2 is at city3, plane1 is at city1, fuel level fl1 is next to fuel level fl0, fuel level fl4 is next to fuel level fl3, person8 is at city0, person5 is at city0, fuel level fl2 is next to fuel level fl1, person1 is at city1, person7 is at city2, person6 is at city2, plane1 has fuel level fl0, person3 is in plane1, fuel level fl5 is next to fuel level fl4, fuel level fl6 is next to fuel level fl5 and fuel level fl3 is next to fuel level fl2", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "07dd10f9-f7b0-4628-8e51-4636a325a6d5", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "effects", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, if person4 departs plane1 at city1, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "person8 is not at city3, fuel level fl4 is not next to fuel level fl0, person7 is not at city1, fuel level fl0 is not next to fuel level fl1, person3 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, person3 is not at city0, fuel level fl6 is not next to fuel level fl2, person4 is not at city2, fuel level fl6 is not next to fuel level fl0, plane1 does not have fuel level fl1, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, person1 is not at city2, person2 is not at city0, fuel level fl5 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl4, plane1 does not have fuel level fl4, fuel level fl5 is not next to fuel level fl2, plane1 does not have fuel level fl3, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person1 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person2 is not in plane1, person3 is not at city3, plane1 does not have fuel level fl5, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person5 is not at city1, person4 is not at city3, fuel level fl0 is not next to fuel level fl4, person6 is not at city1, fuel level fl6 is not next to fuel level fl4, plane1 does not have fuel level fl2, person8 is not in plane1, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl1, person8 is not at city1, person4 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person6 is not at city3, fuel level fl0 is not next to fuel level fl3, person5 is not at city2, fuel level fl6 is not next to fuel level fl3, plane1 is not at city3, plane1 is not at city2, fuel level fl1 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl3 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl2, person7 is not in plane1, person7 is not at city3, person4 is not in plane1, person1 is not in plane1, fuel level fl5 is not next to fuel level fl0, person2 is not at city2, person2 is not at city1, fuel level fl2 is not next to fuel level fl6, plane1 is not at city0, fuel level fl4 is not next to fuel level fl6, person7 is not at city0, person8 is not at city2, fuel level fl1 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl1, fuel level fl3 is not next to fuel level fl0, person5 is not in plane1, person1 is not at city3, person3 is not at city2, person6 is not at city0, person5 is not at city3 and fuel level fl3 is not next to fuel level fl5", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "5b38b6dd-56cf-4048-bf93-358e4e50a878", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is the number of objects equal to 20? True or False", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "cec16683-4107-43b6-8003-59fc9beccdef", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is the number of objects equal to 21? True or False", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "43d8b29d-a831-4933-8b69-054f2666839d", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is the number of objects equal to 24? True or False", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "fbd44d4e-d613-4087-9595-59489b717b14", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is the number of objects equal to 15? True or False", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "a2bd3429-b272-46c9-8b3c-4bf316965629", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is the number of executable actions equal to 5? True or False", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "ff0693a2-f09f-4f69-a838-02f58269c8a7", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is the number of executable actions equal to 4? True or False", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "a088db43-cad7-4b81-8014-e3cf062de2c5", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is the number of executable actions equal to 3? True or False", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "edb1a772-c1e4-455c-b7c4-c07415b26d95", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is the number of inexecutable actions equal to 3252? True or False", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "b37c600c-6623-40ac-8fb2-85db42086cbf", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is the number of inexecutable actions equal to 3393? True or False", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "bfc45429-e4f7-4dd6-99f2-4ca6169d0899", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is the number of inexecutable actions equal to 3820? True or False", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "54946517-ce2d-4e4a-93fc-0970f0a4f54d", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is the number of inexecutable actions equal to 3026? True or False", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "9bf08245-ba7a-466e-b41e-f573ff0bcec2", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 1?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "8f965372-38cf-4dc9-a0c6-18cfaaed49bd", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 0?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "20d38189-549f-4832-8ed2-2a9c701c9049", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 2?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "fcb9b0b9-f598-4278-a0e6-2c5ad18f19a4", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.", "answer": "20", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "a26b5ebc-bde1-49b8-a06f-bdba3c725bca", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.", "answer": "16", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "3bdc14d8-baf5-4a30-80e6-673120868da5", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.", "answer": "77", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "b4a5bddd-f87c-40fd-a542-dc30cb0f8166", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.", "answer": "4", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "9966bcd0-7bd9-4422-8e74-d7ddf09a85b5", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_9", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.", "answer": "3252", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "f90ba47a-7696-4978-9724-3d9206aa06ed", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 zooms from city0 to city3 with fuel level fl1 to fl3 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "0", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "258ebe1d-48cc-46b4-b326-2bc970407e95", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 zooms from city3 to city0 with fuel level fl4 to fl0 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "0", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "eabdd143-08d6-4a90-b006-f5bee10e9bab", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 zooms from city1 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "0", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "884c7a5d-2e4c-49a5-bcc2-26e32b687f9b", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 gets refueled at city2 with fuel level fl2 to fl5 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "0", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "02ad9bdf-8103-418a-bb3b-2a97d37f96b7", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, is the number of objects equal to 24? True or False", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "c4c77e0b-4fdf-4047-a743-983e2f314d7c", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, is the number of objects equal to 20? True or False", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "61aaf6e3-9762-4cb9-b2dd-a874e673a6c8", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, is the number of objects equal to 15? True or False", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "72bfc23d-59ff-403e-8a37-2a7cb96e21d9", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, is the number of objects equal to 22? True or False", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "e47f23c2-161a-4dd5-875e-033b690507e2", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, is the number of executable actions equal to 10? True or False", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "a2044226-96d1-4992-a495-de90e6b8c650", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, is the number of executable actions equal to 12? True or False", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "0b3d8134-4f05-4b4c-af91-f58e2fb9374b", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, is the number of executable actions equal to 7? True or False", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "00c959af-ca10-4ab9-b609-1185dbc60fd6", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, is the number of executable actions equal to 13? True or False", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "303976f4-a790-4ad2-9b88-dc43f4396f31", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, is the number of inexecutable actions equal to 3246? True or False", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "f12ca727-0b29-4c6b-b675-8325f2110299", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, is the number of inexecutable actions equal to 3426? True or False", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "84c4f3d5-b6b6-42a6-b7cc-c40dac80c58f", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, is the number of inexecutable actions equal to 3275? True or False", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "e13290ef-fa17-4b58-afe5-f866b62475bd", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, is the number of inexecutable actions equal to 3228? True or False", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "b9dfb11c-f21c-4ec2-906f-0eed75aed252", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 5?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "ace4060d-f054-4e1d-b610-97ace240a1ad", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 4?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "d9c2d43b-c401-4f8f-b8b3-443417a81114", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 7?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "ccd51005-ab26-4d5d-b00e-040f3f742cdc", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 6?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "37db9a92-21bc-451d-acd6-62412409c6f6", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.", "answer": "20", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "e985499b-18aa-4303-ab99-eb30cccd1ce3", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.", "answer": "16", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "d1c5995f-8492-400d-8e3b-9579c325a8fd", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.", "answer": "77", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "b0760cf0-282c-4788-9705-fbe9e136d535", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.", "answer": "10", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "24e8365e-126f-4a0c-ab2b-183be13bc59c", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_9", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.", "answer": "3246", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "bfec9f7c-67e5-48a3-b2fd-3cfdc592d5a4", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 flies from city1 to city0 with fuel level fl3 to fl5, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "dc6e6e57-6bbf-4228-a9d8-813c7c6e9dba", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city1 to city0 with fuel level fl0 to fl2, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "0", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "8759e38b-3c07-423a-93be-67db75ac33d0", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 zooms from city1 to city2 with fuel level fl6 to fl4 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "4", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "7f98109b-f064-4f35-9157-254aa3cb7571", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 zooms from city1 to city0 with fuel level fl5 to fl1, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "2", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "1433dc72-8413-45ce-a859-f40ebe4c08f6", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, is the number of objects equal to 20? True or False", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "ae351bbd-709c-4037-a1fd-9e993d0d065e", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, is the number of objects equal to 19? True or False", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "fec0be67-2268-498f-ae3b-7e2c79d42ca0", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, is the number of objects equal to 24? True or False", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "ac847f63-c871-40c7-80c9-86912bf9ddee", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, is the number of objects equal to 18? True or False", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "044ca65e-ae48-481c-803f-a9339ee794ea", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, is the number of executable actions equal to 11? True or False", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "47cae91f-2b10-42f7-b9b5-30e0ac6a97fa", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, is the number of executable actions equal to 14? True or False", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "1cc2c960-45e6-4115-bc4e-b7e0704826d2", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, is the number of executable actions equal to 13? True or False", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "974b3424-3612-4984-ab3a-451fb69616dd", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, is the number of executable actions equal to 8? True or False", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "8702b3f2-b503-4cf6-be00-ec5c2fde5129", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, is the number of inexecutable actions equal to 2924? True or False", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "533dcd9d-8f3c-4cef-b0b8-3f0ad667534f", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, is the number of inexecutable actions equal to 3245? True or False", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "2fb28625-9f75-4bb4-b07d-ab9296854b5e", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, is the number of inexecutable actions equal to 3359? True or False", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "d8032cab-6655-40c6-9245-b14aed94db2b", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, is the number of inexecutable actions equal to 2858? True or False", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "aa231be4-4ed7-4e3d-be75-e26fdf920204", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 10?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "ece349cc-fe62-421e-bf7d-8b260b2bdb11", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 11?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "65dc262a-580b-4dfc-820e-1a4e8eaa7ce2", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 8?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "80fb3c2a-d7b0-49be-8398-f9bad6ed5765", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 12?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "8f49fd16-2825-489c-bd6c-ff64624943b8", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.", "answer": "20", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "70138653-3355-4ac8-9824-04405f49b794", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.", "answer": "16", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "88d9d47c-12c4-4266-a32f-e7468f93d48e", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.", "answer": "77", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "67d18b65-019a-46bd-88cf-93ff9dcd007c", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.", "answer": "11", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "23264c44-eaa5-4da5-bce3-a129deab6e0f", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_9", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.", "answer": "3245", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "f81de6e3-44a2-4460-baea-6e808bb462fa", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 zooms from city2 to city0 with fuel level fl1 to fl5, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "0", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "b7a7ae10-eddf-40c1-8226-b330c4eba5d1", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city2 with fuel level fl6 to fl0, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "4", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "0e39265b-a0f1-4f44-8b3c-dfd48bdfafca", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, plane1 flies from city2 to city3 with fuel level fl2 to fl1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "5", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "610e7f06-d602-490b-a037-5403dd8ce4a9", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 zooms from city0 to city2 with fuel level fl5 to fl6, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "0", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "e35c4426-cb3b-4539-8726-fa30e5392c31", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, is the number of objects equal to 21? True or False", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "f3d66684-b316-4d22-867a-9c6a46acf0cd", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, is the number of objects equal to 20? True or False", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "01e7d6b2-2848-4536-a5ff-f842f8926af7", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, is the number of objects equal to 23? True or False", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "37fc2c08-6e34-42df-a04e-50308360f507", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, is the number of objects equal to 24? True or False", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "d413e109-4509-4c3f-bb0d-cf8fd57fad0a", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, is the number of executable actions equal to 8? True or False", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "7631e2ef-1a6c-456f-9bd1-3d7fa2799add", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, is the number of executable actions equal to 9? True or False", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "cd8040cb-5263-4bdb-bd54-2c8f5724ce30", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, is the number of executable actions equal to 7? True or False", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "232e5b8f-b1c7-429d-a3b7-35b596d0f8f5", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, is the number of executable actions equal to 6? True or False", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "3994ce50-4a2c-438c-8800-fd21093ab0ce", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, is the number of inexecutable actions equal to 3248? True or False", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "cc78dbc0-da08-4f39-a4e6-fad3a6873898", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, is the number of inexecutable actions equal to 3184? True or False", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "f38873e1-63ed-429a-8208-1b684625208a", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, is the number of inexecutable actions equal to 2631? True or False", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "def25e79-2edb-4fe8-baeb-724c4bbe5e15", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, is the number of inexecutable actions equal to 2831? True or False", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "1fbeb97a-312f-4ea7-8212-b669eb57d0aa", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 15?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "6f2b5f6b-20fb-472f-b141-5d8ef4680c2e", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 19?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "59376099-ea5e-4e78-9c43-1a206e466db8", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 17?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "3747c3dc-f896-4ee8-97d2-1852f1c8ba3a", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 12?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "fb6edc35-e652-45c1-bcbf-8b412fc30f77", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.", "answer": "20", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "13556f35-9743-4158-9968-505ab3077796", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.", "answer": "16", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "c8a0e653-726f-4b0d-96cd-0d08e30d0849", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.", "answer": "77", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "df9739d8-7573-4ace-9bc9-b29a41b31804", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.", "answer": "8", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "b2cb3b50-f218-4c73-954d-d1a05bf9ddf8", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_9", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.", "answer": "3248", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "046b31f3-d761-490a-bde8-4da28c048a0b", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 zooms from city3 to city2 with fuel level fl5 to fl6, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "2", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "fc651961-97d3-40ad-beae-436ec15646d7", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, plane1 zooms from city1 to city2 with fuel level fl6 to fl5, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "5", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "256084ac-3953-4efd-9f97-d010898c2320", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl6 to fl4, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "3", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "1edb9262-7db1-4495-998b-6643671afaf7", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city0 to city3 with fuel level fl4 to fl1, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "0", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "80a8daad-6989-4590-9601-e9ccb5999a57", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is the number of objects equal to 23? True or False", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "7c7fb8ce-9942-44fe-96cd-df7436e8179b", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is the number of objects equal to 15? True or False", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "7d5a84c0-3347-44b2-bd49-447660dbd124", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is the number of objects equal to 18? True or False", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "a90bc3cb-7a94-40f0-9526-b7ca09c987b7", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is the number of objects equal to 19? True or False", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "22ec69a5-5fb6-4385-b2d7-60ee461f661a", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is the number of executable actions equal to 4? True or False", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "1a59a4fd-14e8-404e-be22-bd0167ec3bf2", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is the number of executable actions equal to 5? True or False", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "b07c0390-4418-41d7-afee-bfac2e47db52", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is the number of executable actions equal to 3? True or False", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "46f20e0e-a3af-4563-a54c-1bc9bd3b22fa", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is the number of inexecutable actions equal to 3252? True or False", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "f3fbfdb8-f1be-4e11-8842-605cbdc0c635", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is the number of inexecutable actions equal to 2938? True or False", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "fd097fec-cdae-45fe-bafa-b5eab12c9b18", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is the number of inexecutable actions equal to 3846? True or False", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "660798c2-90d1-4cfb-9191-fe8bc36bea63", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, is the number of inexecutable actions equal to 3711? True or False", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "132f171d-13c9-48b6-ad39-21d05b86507a", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 17?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "61ac2ae5-a8c6-4148-baf3-9ad23f1e579d", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 15?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "9ed60e50-7501-4f34-842e-9fbf182f4247", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 16?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "feb20908-8de4-4c78-a75f-d6851662a26b", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 19?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "442ae444-dcf2-4cf4-ab05-aac7d06fe76c", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.", "answer": "20", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "bfd090ef-9d5d-4160-ad2d-ba2967475cb5", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.", "answer": "16", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "28af4789-8941-4c28-9d2b-07775acbae47", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.", "answer": "77", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "8f544768-491d-4792-9ba1-040856050cf6", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.", "answer": "4", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "0020016a-bc40-47db-bb61-a08634e9aabc", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_9", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.", "answer": "3252", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "04a2df9d-bd03-4998-b43d-a42d4b1f1f37", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, plane1 flies from city3 to city1 with fuel level fl6 to fl0, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "6", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "0e773d6e-5404-4dc5-9ffe-9a38f6816e53", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 zooms from city3 to city2 with fuel level fl5 to fl1, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "7", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "df15938a-33c6-48e0-9841-6c24c11386c6", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, plane1 zooms from city2 to city1 with fuel level fl5 to fl4, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "6", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "095bdfbf-5564-4069-bd6f-a720bc884ce5", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 zooms from city2 to city1 with fuel level fl1 to fl2, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "7", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "b7992420-3a35-4335-bb0d-93a526563689", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that fl1 is part of the state?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "c1309736-eba1-4d1d-bac4-23893a421acb", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that fl6 is part of the state?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "1806a045-20bb-48f0-bd48-3607c48ea29e", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that person6 is part of the state?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "9fc09d84-014a-41bf-a8bf-23dc9fb4b338", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that person9 is part of the state?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "896ba4b7-e6f2-4b3b-a347-055af64bd2f8", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that plane1 has a fuel leak?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "473e2460-3dab-4a8c-9e90-d96214720c50", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that person4 explores city3?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "a54e8901-9da6-421e-844b-3bd26676a12b", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that person4 is at city3?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "1475ecde-db1a-4b60-8707-fe6085922ddb", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that person8 explores city1?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "b4ebe8f4-bea9-4d14-94ae-fd03c9bc2d45", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that the fuel level fl3 is not is smaller than fuel level fl0?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "be195421-57ed-4a83-b0f5-52a8f4c03181", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that the fuel level fl6 is not is smaller than fuel level fl4?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "c2e6787a-4d4e-4c44-bb09-1d81cdc53648", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that fuel level fl3 is not next to fuel level fl6?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "301ade13-fd03-403e-8964-547882e1cd1b", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that plane1 is not maintained?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "46211da0-a548-4089-bfe0-ffd0162bfb8d", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, person2 boards plane1 at city1, is defined?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "dccc6acc-b97d-460c-acde-b87aa9e40bb7", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, person2 changes plane1 at city1, is defined?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "34a5c370-72c9-4f4d-b0a6-0a9548cbc8ab", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, person1 changes plane1 at city1, is defined?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "2665ea7d-6973-46ed-934f-2c3e6398f6e6", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, person8 changes plane1 at city1, is defined?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "941f1374-265b-4811-9b64-0d0aad7f14ab", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, plane1 consumes the fuel level fl1 and fl2, is defined?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "0caca18d-966d-4a26-a977-385f3ce5eedc", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, plane1 consumes the fuel level fl6 and fl0, is defined?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "aaa85f36-d733-46dd-96d1-45bcabb1d4a1", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, plane1 zooms from city2 to city1 with fuel level fl0 to fl5, is defined?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "68959215-561e-4058-a983-37b150c05ae2", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, plane1 zooms from city2 to city3 with fuel level fl6 to fl0, is defined?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "48cda754-5a23-4a34-bfec-e5ae48438d11", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, fl1 and person3, is not defined? Write None if all are defined.", "answer": "fl1", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "d1711801-9427-42a6-98dc-78cb96559c13", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, fl5, fl4, person8 and fl1, is not defined? Write None if all are defined.", "answer": "person8", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "d4e6b223-8d48-46ec-a882-c07a3d78aae5", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, fl5 and plane1, is not defined? Write None if all are defined.", "answer": "plane1", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "fcbb454d-ce1b-4a8f-8556-fd85abb230e4", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, fl4, person9, city2, person8, city1, person6, person3, fl2, person2, city0, person4, person1, fl0, fl1, person7 and fl5, is not defined? Write None if all are defined.", "answer": "person9", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "7b21d9a9-8b75-4951-bd81-bb84664fe761", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, person8 explores city1, fuel level fl3 is next to fuel level fl2 and plane1 is at city1, is not defined? Write None if all are defined.", "answer": "person8 explores city1", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "23d99534-e996-4445-ab7a-97efc06e2379", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, person2 is at city1 and fuel level fl1 is next to fuel level fl0, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "410accc2-2cad-439b-9a13-4dafb04f30f8", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, the fuel level fl6 is smaller than fl5, person5 is at city2, fuel level fl4 is next to fuel level fl3, person2 is at city1, person1 is at city1, fuel level fl2 is next to fuel level fl1 and person6 is at city2, is not defined? Write None if all are defined.", "answer": "the fuel level fl6 is smaller than fl5", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "dbf6d114-5c8a-4189-8744-c3b03018a0ed", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, fuel level fl3 is next to fuel level fl2, fuel level fl6 is next to fuel level fl5, person8 is at city1, fuel level fl5 is next to fuel level fl4, person2 is at city1, plane1 is at city1, fuel level fl4 is next to fuel level fl3 and person7 is at city3, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "4848274f-2cd9-4637-acd3-9be07cca54e4", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, person7 is not at city0, person3 is not at city1, person3 is not at city2, person4 is not at city2, plane1 is not at city3, plane1 does not have fuel level fl1, fuel level fl0 is not next to fuel level fl4, person2 is not in plane1, fuel level fl3 is not next to fuel level fl5, person6 is not at city3 and fuel level fl6 is not next to fuel level fl1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "1f39c116-a35f-4082-af9d-d0e086e41a70", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, fuel level fl2 is not next to fuel level fl0, fuel level fl2 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl2, fuel level fl2 is not next to fuel level fl6, person4 is not in plane1, fuel level fl1 is not next to fuel level fl5, plane1 does not have fuel level fl2, person8 is not at city3, fuel level fl3 is not next to fuel level fl0, fuel level fl6 is not next to fuel level fl1, the fuel level fl0 is not is smaller than fuel level fl5, plane1 does not have fuel level fl3, fuel level fl4 is not next to fuel level fl0, fuel level fl1 is not next to fuel level fl2, person6 is not at city1, fuel level fl1 is not next to fuel level fl4, fuel level fl0 is not next to fuel level fl1, person2 is not at city2, person1 is not at city0, fuel level fl6 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl6, person3 is not in plane1, person7 is not at city0, fuel level fl6 is not next to fuel level fl0, fuel level fl0 is not next to fuel level fl6, person7 is not in plane1, person2 is not at city3, person4 is not at city1, fuel level fl4 is not next to fuel level fl5, fuel level fl6 is not next to fuel level fl2, person8 is not at city2, person6 is not at city3, person5 is not at city0, person7 is not at city2, fuel level fl0 is not next to fuel level fl4, plane1 does not have fuel level fl5, person3 is not at city3, fuel level fl3 is not next to fuel level fl1, plane1 does not have fuel level fl4, person6 is not at city0, person3 is not at city1, person2 is not in plane1, plane1 is not at city0, fuel level fl2 is not next to fuel level fl4, person5 is not at city3, person4 is not at city0, person8 is not in plane1 and fuel level fl0 is not next to fuel level fl2, is not defined? Write None if all are defined.", "answer": "the fuel level fl0 is not is smaller than fuel level fl5", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "cc922957-0e74-445b-80b9-7f93ecf912c7", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, person6 is not at city3, fuel level fl1 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl5, person2 is not in plane1, person7 is not at city0, person4 is not at city0, person6 is not at city0, plane1 is not at city0, plane1 is not at city3, person2 is not explore city2, person5 is not at city0, fuel level fl2 is not next to fuel level fl5, person4 is not in plane1, fuel level fl6 is not next to fuel level fl0, fuel level fl0 is not next to fuel level fl5, plane1 is not at city2, person3 is not in plane1, fuel level fl6 is not next to fuel level fl2, person8 is not in plane1, fuel level fl6 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, person6 is not in plane1, fuel level fl1 is not next to fuel level fl2, person1 is not at city3, fuel level fl6 is not next to fuel level fl3, fuel level fl2 is not next to fuel level fl6, fuel level fl5 is not next to fuel level fl6, fuel level fl3 is not next to fuel level fl4, plane1 does not have fuel level fl6, person1 is not in plane1, fuel level fl0 is not next to fuel level fl3, person7 is not at city2, plane1 does not have fuel level fl1, person8 is not at city0, person4 is not at city2, fuel level fl5 is not next to fuel level fl2, person3 is not at city3, fuel level fl0 is not next to fuel level fl2, fuel level fl0 is not next to fuel level fl6, person5 is not at city1, fuel level fl3 is not next to fuel level fl1, fuel level fl0 is not next to fuel level fl4 and person8 is not at city2, is not defined? Write None if all are defined.", "answer": "person2 is not explore city2", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "2b2a5382-cf5c-454e-8e18-8596884cd4be", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, fuel level fl3 is not next to fuel level fl5, fuel level fl1 is not next to fuel level fl5, person8 is not at city2, fuel level fl4 is not next to fuel level fl2, person2 is not in plane1, fuel level fl6 is not next to fuel level fl0, person6 is not at city0, fuel level fl0 is not next to fuel level fl2, plane1 does not have fuel level fl1, fuel level fl0 is not next to fuel level fl4, person8 is not at city0, plane1 is not at city0, plane1 does not have fuel level fl6, fuel level fl2 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl3, person5 is not in plane1, fuel level fl4 is not next to fuel level fl5, person1 is not at city3, person6 is not in plane1, person8 is not at city3, fuel level fl2 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl2, fuel level fl0 is not next to fuel level fl5, plane1 does not have fuel level fl4, person7 is not at city1, person4 is not in plane1, person1 is not in plane1, fuel level fl2 is not next to fuel level fl6, fuel level fl6 is not next to fuel level fl3, fuel level fl2 is not next to fuel level fl0, fuel level fl1 is not next to fuel level fl2, fuel level fl5 is not next to fuel level fl6, plane1 does not have fuel level fl5, person3 is not at city2, fuel level fl5 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl0, fuel level fl4 is not next to fuel level fl6, person2 is not at city0, fuel level fl1 is not next to fuel level fl6, person7 is not explore city0, person5 is not at city3, fuel level fl3 is not next to fuel level fl1, person3 is not at city3, fuel level fl1 is not next to fuel level fl4, person3 is not in plane1, person5 is not at city1, fuel level fl3 is not next to fuel level fl0, fuel level fl4 is not next to fuel level fl1, fuel level fl3 is not next to fuel level fl4, person6 is not at city1, person6 is not at city3, fuel level fl1 is not next to fuel level fl3, plane1 is not at city3, fuel level fl6 is not next to fuel level fl4, person3 is not at city1, plane1 does not have fuel level fl3, fuel level fl0 is not next to fuel level fl1, person8 is not in plane1, fuel level fl2 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl0, fuel level fl5 is not next to fuel level fl1, person1 is not at city0, fuel level fl6 is not next to fuel level fl1, person2 is not at city3, person1 is not at city2, person7 is not at city2, person7 is not in plane1, person5 is not at city0, fuel level fl3 is not next to fuel level fl6, person4 is not at city1, fuel level fl0 is not next to fuel level fl6, person4 is not at city0, person2 is not at city2 and person4 is not at city2, is not defined? Write None if all are defined.", "answer": "person7 is not explore city0", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "1193cc39-34af-4c1a-afd2-c0d5d2f70966", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "63745670-89bd-4471-9705-742f91ff96e4", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 is in city3 then flies for maintenance to city1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "plane1 is in city3 then flies for maintenance to city1", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "9522314f-7f9d-4bf6-a215-afb486c89256", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that person9 is part of the state?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "d134b088-33e8-45fd-bfcb-46c735a5f2df", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that city4 is part of the state?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "67486594-e240-4f0c-bf58-395bc36fe022", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that fl7 is part of the state?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "e0ae4813-bdca-454e-8a78-320ea2a447ee", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that person5 is part of the state?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "8899c301-5cc8-48be-be67-2473850573f5", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that the fuel level fl5 is smaller than fl4?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "cd1d7f05-402c-49c2-8d2c-0ea33793ea49", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that person5 is at city2?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "38e97bf6-6f0b-40e8-bf66-b761e349270e", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that fuel level fl1 is next to fuel level fl0?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "8c451d73-5dda-4cc2-b3da-8582b0f7f61c", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that fuel level fl2 is next to fuel level fl1?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "475498de-2917-40b4-bea8-d2522435aea7", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that person2 is not at city2?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "3b64e8cc-4023-408b-9d13-ed42b2521055", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that person7 is not explore city1?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "36995b30-6b9b-4fed-9db8-7eb49f952162", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that person1 is not at city3?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "9870382a-8013-4689-9ee1-853817b4b15c", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that the fuel level fl6 is not is smaller than fuel level fl1?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "0a5d1495-1cfd-44a6-9c14-25c93809f9af", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, person2 boards plane1 at city1, is defined?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "95e038d6-aba5-4e5c-b4cd-58abb8abb7b3", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, plane1 zooms from city1 to city0 with fuel level fl4 to fl2, is defined?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "c85bb120-43b4-4551-aa06-87874058b9b7", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, person1 changes plane1 at city1, is defined?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "b4369a82-d1ac-4797-8ff2-0ff89c12168c", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, plane1 zooms from city1 to city2 with fuel level fl4 to fl2, is defined?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "da7146ca-6493-4ade-b65e-e41e4f209bea", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, plane1 zooms from city1 to city2 with fuel level fl6 to fl1, is defined?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "1e66767c-b2f8-4061-9810-0dfaede07be0", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, plane1 consumes the fuel level fl3 and fl6, is defined?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "fd6a3438-feb6-48ab-9c3a-cc98d116082d", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, plane1 goes for maitnance at location city2 and refueled with fuel fl4, is defined?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "0829f88c-6480-43af-98e5-c66b1b50b046", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, plane1 consumes the fuel level fl4 and fl5, is defined?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "bdb9a2b5-a9da-4ff3-a6f9-0b81f071268e", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, city2, fl6, person1, city0, fl1, person2, person3, fl0, fl5, person8, person6, person5, person4, person7, fl4, fl2, plane1, city1 and city3, is not defined? Write None if all are defined.", "answer": "person6", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "62623646-6394-4194-9ca6-256fd336e404", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, plane1, city3, person4, person7, fl6 and fl1, is not defined? Write None if all are defined.", "answer": "fl6", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "743bfca7-8aeb-4697-bc21-93963ee278ca", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, city1, person5, person4, fl6, person2, plane1, person7, person1, person8, fl0, city3, city2, person3, fl2, fl4 and fl5, is not defined? Write None if all are defined.", "answer": "person8", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "af2b1c1e-6415-4fa4-b817-873646abaca3", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, city0, person7, fl2, person3, fl1, person2, city1, person6, fl5, fl4, fl0, person8, city3, person1, fl6 and plane1, is not defined? Write None if all are defined.", "answer": "person1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "1ae8b8f0-3237-4a4c-a12c-5bdef72f5778", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, fuel level fl6 is next to fuel level fl5, fuel level fl3 is next to fuel level fl2, person2 is at city1, person1 is at city1, person7 is at city3, person8 is at city1, fuel level fl2 is next to fuel level fl1 and plane1 is at city1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "1d7640e3-9f18-4f27-844b-be31fb86d96c", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, person7 is at city3, plane1 is at city1, person2 is at city1, fuel level fl5 is next to fuel level fl4, person8 is at city1, plane1 has fuel level fl4, fuel level fl6 is next to fuel level fl5, fuel level fl1 is next to fuel level fl0, fuel level fl4 is next to fuel level fl3 and person3 explores city0, is not defined? Write None if all are defined.", "answer": "person3 explores city0", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "f3ef2d0c-2b9e-40e0-9aa7-165630245906", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, person1 is at city1, person7 is at city3, person6 is at city2, the fuel level fl6 is smaller than fl5, fuel level fl1 is next to fuel level fl0, fuel level fl2 is next to fuel level fl1, fuel level fl4 is next to fuel level fl3, fuel level fl5 is next to fuel level fl4, plane1 is at city1, person2 is at city1, plane1 has fuel level fl4 and person4 is at city3, is not defined? Write None if all are defined.", "answer": "the fuel level fl6 is smaller than fl5", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "6dd8a766-4a83-41de-88c6-8118f4cd25a0", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, person5 is at city2, person4 is at city3, person8 is at city1, fuel level fl2 is next to fuel level fl1, fuel level fl5 is next to fuel level fl4, fuel level fl1 is next to fuel level fl0, person2 is at city1 and fuel level fl6 is next to fuel level fl5, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "914983a5-d2fc-4046-bf2a-cf4ff3641239", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, person8 is not at city2, fuel level fl2 is not next to fuel level fl0, person3 is not at city1, person7 is not in plane1, plane1 is not at city2, fuel level fl0 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl0 is not next to fuel level fl5, plane1 does not have fuel level fl1, person4 is not in plane1, fuel level fl5 is not next to fuel level fl6, fuel level fl3 is not next to fuel level fl5, plane1 is not at city3, fuel level fl4 is not next to fuel level fl0, person1 is not at city3, person6 is not at city3, fuel level fl3 is not next to fuel level fl6, fuel level fl2 is not next to fuel level fl3, fuel level fl0 is not next to fuel level fl1, person5 is not at city0, person3 is not at city2, person2 is not at city3, fuel level fl5 is not next to fuel level fl0, plane1 is not at city0, fuel level fl6 is not next to fuel level fl0, fuel level fl6 is not next to fuel level fl4, person8 is not in plane1, fuel level fl5 is not next to fuel level fl3, fuel level fl0 is not next to fuel level fl4, fuel level fl3 is not next to fuel level fl4, person7 is not at city0, fuel level fl3 is not next to fuel level fl0, person8 is not at city3, person4 is not at city0, fuel level fl6 is not next to fuel level fl3, person7 is not at city2, person1 is not at city2, person3 is not in plane1, fuel level fl0 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl1, fuel level fl1 is not next to fuel level fl3, plane1 does not have fuel level fl3, fuel level fl1 is not next to fuel level fl6, person6 is not in plane1, person4 is not at city1, person2 is not at city0, fuel level fl2 is not next to fuel level fl5 and person5 is not explore city1, is not defined? Write None if all are defined.", "answer": "person5 is not explore city1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "fad9b343-8473-4c83-a2d4-7afe6e525a96", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, person8 is not in plane1, person6 is not in plane1, plane1 does not have fuel level fl5, fuel level fl0 is not next to fuel level fl1, fuel level fl1 is not next to fuel level fl3, fuel level fl3 is not next to fuel level fl4, fuel level fl4 is not next to fuel level fl1, person1 is not at city0, fuel level fl4 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl4, plane1 does not have fuel level fl0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, person2 is not in plane1, fuel level fl3 is not next to fuel level fl0, person5 is not at city3, person1 is not at city2, plane1 does not have fuel level fl1, fuel level fl1 is not next to fuel level fl2, fuel level fl5 is not next to fuel level fl6, person4 is not in plane1, fuel level fl1 is not next to fuel level fl5 and fuel level fl6 is not next to fuel level fl1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "bfe78149-63b3-45e1-99b3-716c9dbaa261", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, plane1 does not have fuel level fl0, fuel level fl5 is not next to fuel level fl6, fuel level fl1 is not next to fuel level fl5, person8 is not at city0, person1 is not at city3, fuel level fl1 is not next to fuel level fl4, fuel level fl4 is not next to fuel level fl2, fuel level fl4 is not next to fuel level fl0, person2 is not at city3, plane1 does not have a fuel leak, fuel level fl2 is not next to fuel level fl5, person2 is not in plane1, person1 is not in plane1, person8 is not in plane1, plane1 is not at city3, person6 is not at city1, person7 is not at city1, person5 is not at city0, person7 is not in plane1, person1 is not at city0, fuel level fl2 is not next to fuel level fl3, fuel level fl2 is not next to fuel level fl0, fuel level fl6 is not next to fuel level fl4, fuel level fl2 is not next to fuel level fl6, fuel level fl6 is not next to fuel level fl2, fuel level fl3 is not next to fuel level fl4, person4 is not in plane1, fuel level fl6 is not next to fuel level fl3, person2 is not at city0, person4 is not at city0, fuel level fl2 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, fuel level fl3 is not next to fuel level fl6, person5 is not at city1, person2 is not at city2, plane1 is not at city0, fuel level fl5 is not next to fuel level fl2, plane1 is not at city2, person6 is not at city3, fuel level fl4 is not next to fuel level fl1, fuel level fl0 is not next to fuel level fl1, fuel level fl1 is not next to fuel level fl2, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl2, fuel level fl3 is not next to fuel level fl5, person4 is not at city1, fuel level fl5 is not next to fuel level fl1 and fuel level fl5 is not next to fuel level fl3, is not defined? Write None if all are defined.", "answer": "plane1 does not have a fuel leak", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "f2a264a1-cdd4-49e1-b1e9-0af8b393c00a", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, fuel level fl5 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, fuel level fl6 is not next to fuel level fl0, person8 is not in plane1, fuel level fl4 is not next to fuel level fl0, fuel level fl1 is not next to fuel level fl2, fuel level fl3 is not next to fuel level fl5, person2 is not at city0, fuel level fl6 is not next to fuel level fl1, person3 is not in plane1, the fuel level fl5 is not is smaller than fuel level fl2, fuel level fl5 is not next to fuel level fl1, person6 is not at city3, person7 is not at city2, person8 is not at city2, person1 is not at city2, person8 is not at city0, person5 is not at city1, person6 is not at city1, fuel level fl3 is not next to fuel level fl4, fuel level fl0 is not next to fuel level fl3, person1 is not at city3, plane1 does not have fuel level fl1, fuel level fl0 is not next to fuel level fl5, plane1 does not have fuel level fl3, fuel level fl2 is not next to fuel level fl0, person4 is not at city1, person1 is not in plane1, person7 is not in plane1, fuel level fl1 is not next to fuel level fl4, person3 is not at city2, fuel level fl1 is not next to fuel level fl5, person7 is not at city1, fuel level fl2 is not next to fuel level fl4, fuel level fl0 is not next to fuel level fl2, fuel level fl4 is not next to fuel level fl6, fuel level fl3 is not next to fuel level fl0 and fuel level fl6 is not next to fuel level fl2, is not defined? Write None if all are defined.", "answer": "the fuel level fl5 is not is smaller than fuel level fl2", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "801962d7-291f-44f6-89d8-f835dc9dec52", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 goes for maitnance at location city1 and refueled with fuel fl3 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "plane1 goes for maitnance at location city1 and refueled with fuel fl3", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "9ef9f56f-44cd-4fde-a0de-4318d6dcb005", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "cc5919ff-a88a-4258-9adc-49fd03f8bd81", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 goes for maitnance at location city1 and refueled with fuel fl2 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "plane1 goes for maitnance at location city1 and refueled with fuel fl2", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "1b18dd16-9c7c-4f7e-8d2d-9b42c4af3f69", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 goes for maitnance at location city1 and refueled with fuel fl1, plane1 gets refueled at city1 with fuel level fl2 to fl3 and plane1 gets refueled at city1 with fuel level fl3 to fl4 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "plane1 goes for maitnance at location city1 and refueled with fuel fl1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "c3a22cfb-08b2-4e9a-a4e6-486c97e248c1", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that person9 is part of the state?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "4401ebe1-c179-4122-ac42-6878dcf33d7e", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that fl4 is part of the state?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "163195f9-5d63-45d2-85ce-f815320aacec", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that fl1 is part of the state?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "ac173e32-e05d-4bc4-b099-e3d4ef3888c9", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that person7 is part of the state?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "3d7be814-0eb6-40eb-9f91-530cf2cb45a3", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that person8 is boarding plane1?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "f7ddb855-9a06-4d5f-ac52-3466396e4c1c", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that person2 is boarding plane1?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "9d6b87f1-c936-4eca-ab60-b1b8ff870d0f", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that fuel level fl1 is next to fuel level fl0?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "79a75b51-8060-4018-af0d-d1a8df301513", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that fuel level fl4 is next to fuel level fl3?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "7f49632a-8843-44e8-a1bf-571aa588105d", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that fuel level fl5 is not next to fuel level fl1?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "bf43b19e-ffff-4073-a3c9-2e550bda132e", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that the fuel level fl6 is not is smaller than fuel level fl2?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "e3528f36-4aae-4c6f-8950-0a07a3796f50", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that fuel level fl6 is not next to fuel level fl2?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "75b13528-306b-4c1c-a0a2-343d84655646", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that fuel level fl0 is not next to fuel level fl1?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "a90eea23-9f9f-4128-b1cf-f10d9f37d60d", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, person8 forgets to board plane1 at city3, is defined?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "12e4f77b-5f23-4261-abb2-4b30a8febbcf", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, person7 forgets to board plane1 at city3, is defined?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "68b7c82f-74f3-4bda-a5cc-40d85327eace", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, plane1 zooms from city3 to city1 with fuel level fl3 to fl1, is defined?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "34eff531-a6d2-4139-a6a3-abca22a60ca9", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, plane1 flies from city3 to city2 with fuel level fl3 to fl2, is defined?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "b3cfbb1d-f1b3-4a60-b025-28942d6dc013", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, plane1 is in city0 then flies for maintenance to city3, is defined?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "27089bd3-462c-49a5-9048-55cb77c8074c", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, plane1 consumes the fuel level fl5 and fl6, is defined?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "4d8d89d9-d7ec-4732-9cbb-28cb9f4e538d", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, plane1 flies from city2 to city1 with fuel level fl4 to fl5, is defined?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "30a881bb-fc35-40f8-9094-4137b453c688", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, plane1 consumes the fuel level fl6 and fl1, is defined?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "34fd7737-e633-415f-a378-a1deec712d1c", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, person6, person7, person5, person8, fl0, plane1, fl5 and fl1, is not defined? Write None if all are defined.", "answer": "person6", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "73f0a159-5135-4116-9d90-203ad99250fc", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, fl2, person3, fl6, person2 and fl4, is not defined? Write None if all are defined.", "answer": "fl4", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "26d2f808-e9c0-418a-9ee1-8887065761e4", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, city2, person8, person4, fl3, fl6, city3, person3, city0, person1, person7, city1, fl2 and fl4, is not defined? Write None if all are defined.", "answer": "person4", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "9b2155a4-5a1e-4100-b4da-0d219601a145", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, person9 and fl2, is not defined? Write None if all are defined.", "answer": "person9", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "503b7477-a029-4879-b6c9-0851c685aeab", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, person7 is in plane1, person8 is in plane1, person4 is in plane1 and person3 explores city0, is not defined? Write None if all are defined.", "answer": "person3 explores city0", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "c07eadce-b438-4389-b548-6b44a3c254a7", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, person4 is in plane1, person2 is in plane1, fuel level fl5 is next to fuel level fl4, fuel level fl6 is next to fuel level fl5, person6 explores city2, fuel level fl4 is next to fuel level fl3, plane1 is at city3, fuel level fl1 is next to fuel level fl0, person3 is at city0, person8 is in plane1 and fuel level fl3 is next to fuel level fl2, is not defined? Write None if all are defined.", "answer": "person6 explores city2", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "e34a48ef-a811-4a69-8e56-5a457edbad23", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, fuel level fl5 is next to fuel level fl4, person6 is at city2, person8 is in plane1, person7 is in plane1, fuel level fl2 is next to fuel level fl1, person4 is in plane1, plane1 is at city3, person2 is in plane1, person5 is at city2, fuel level fl3 is next to fuel level fl2, plane1 has a fuel leak, fuel level fl4 is next to fuel level fl3, person1 is at city1 and fuel level fl6 is next to fuel level fl5, is not defined? Write None if all are defined.", "answer": "plane1 has a fuel leak", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "c592a010-a2dd-4524-ac50-c78d4b73e726", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, person2 is in plane1, plane1 is at city3, person4 is in plane1, fuel level fl2 is next to fuel level fl1, person8 is in plane1, person1 is at city1, person3 is at city0, fuel level fl3 is next to fuel level fl2 and plane1 has fuel level fl3, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "1cffa1c7-2985-4887-b6ce-d74539e41ad1", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, person2 is not at city1, person2 is not at city3, person6 is not at city0, person1 is not at city0, plane1 is not at city0, fuel level fl6 is not next to fuel level fl0, person8 is not at city2, person5 is not in plane1, plane1 does not have fuel level fl1, fuel level fl6 is not next to fuel level fl1, fuel level fl1 is not next to fuel level fl6, the fuel level fl4 is not is smaller than fuel level fl0, fuel level fl0 is not next to fuel level fl5, person5 is not at city1, person7 is not at city0, fuel level fl6 is not next to fuel level fl2, fuel level fl3 is not next to fuel level fl6, plane1 does not have fuel level fl0, plane1 is not at city1, fuel level fl1 is not next to fuel level fl4, person5 is not at city0, fuel level fl2 is not next to fuel level fl3, fuel level fl0 is not next to fuel level fl3, person1 is not in plane1, fuel level fl0 is not next to fuel level fl2, person6 is not at city1 and plane1 does not have fuel level fl5, is not defined? Write None if all are defined.", "answer": "the fuel level fl4 is not is smaller than fuel level fl0", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "b54b73d3-8a35-4964-b360-e9d36f095d28", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, fuel level fl4 is not next to fuel level fl1, fuel level fl6 is not next to fuel level fl2, fuel level fl4 is not next to fuel level fl6, fuel level fl0 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl4, person3 is not at city1, fuel level fl6 is not next to fuel level fl4 and fuel level fl4 is not next to fuel level fl2, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "3f0a167a-b0a1-426a-8061-0dabd2bf083f", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, person4 is not at city2, plane1 does not have fuel level fl1, person7 is not at city2, person6 is not at city1, plane1 is not at city0, plane1 does not have fuel level fl0, fuel level fl4 is not next to fuel level fl2, fuel level fl0 is not next to fuel level fl2, person8 is not at city3, fuel level fl6 is not next to fuel level fl2, fuel level fl5 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl0, fuel level fl0 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl3, plane1 is not at city1, fuel level fl4 is not next to fuel level fl0, person5 is not at city1, person7 is not at city3, person5 is not at city3, person8 is not at city1, person1 is not at city2, person3 is not at city2, person4 is not at city1, person2 is not at city1, fuel level fl5 is not next to fuel level fl1, fuel level fl1 is not next to fuel level fl5 and person5 is not in plane1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "35c8514d-6487-4cd9-8eb9-786608cdb4f7", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, fuel level fl0 is not next to fuel level fl4, person7 is not at city2, person1 is not at city3, fuel level fl1 is not next to fuel level fl3, person3 is not at city2, fuel level fl2 is not next to fuel level fl3, person4 is not at city2, person3 is not at city1, fuel level fl5 is not next to fuel level fl6, fuel level fl2 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl3, person8 is not at city0, plane1 is not at city0, person1 is not at city2, fuel level fl3 is not next to fuel level fl1, fuel level fl3 is not next to fuel level fl4, person5 is not at city3, fuel level fl6 is not next to fuel level fl0, fuel level fl3 is not next to fuel level fl0, fuel level fl4 is not next to fuel level fl6, person4 is not at city1, plane1 does not have fuel level fl2, person5 is not at city0, fuel level fl3 is not next to fuel level fl5, fuel level fl1 is not next to fuel level fl6, fuel level fl3 is not next to fuel level fl6, person7 is not at city3, fuel level fl5 is not next to fuel level fl1, person7 is not at city1, plane1 is not at city2, person1 is not in plane1, person6 is not at city0, fuel level fl1 is not next to fuel level fl2, person2 is not at city1, person8 is not at city2, fuel level fl2 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl0 is not next to fuel level fl3, person8 is not at city1, plane1 does not have fuel level fl5, fuel level fl2 is not next to fuel level fl5, fuel level fl1 is not next to fuel level fl4, fuel level fl0 is not next to fuel level fl1, fuel level fl0 is not next to fuel level fl2, person2 is not at city3, fuel level fl0 is not next to fuel level fl6, person6 is not at city3, fuel level fl0 is not next to fuel level fl5, plane1 does not have fuel level fl4, plane1 is not at city1, fuel level fl4 is not next to fuel level fl5, person4 is not at city0, person4 is not at city3, person2 is not at city2, plane1 does not have fuel level fl1, fuel level fl2 is not next to fuel level fl0, plane1 does not have fuel level fl0, person5 is not at city1, fuel level fl6 is not next to fuel level fl3, person3 is not at city3, person1 is not at city0, fuel level fl4 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl1, fuel level fl4 is not next to fuel level fl1, fuel level fl4 is not next to fuel level fl0, person2 is not at city0, fuel level fl1 is not next to fuel level fl5, person6 is not at city1, fuel level fl5 is not next to fuel level fl0, person7 is not at city0, person8 is not at city3 and person3 is not in plane1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "e9c64796-411b-4876-a55d-54916ff09e10", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 changes plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "person2 changes plane1 at city1", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "81099ac9-b503-4b3f-b551-17e3b0f27e01", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "c671e5ce-f5d5-4cb1-8ada-83eb1a43cd95", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 goes for maitnance at location city1 and refueled with fuel fl1, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 boards plane1 at city3 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "plane1 goes for maitnance at location city1 and refueled with fuel fl1", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "2d8d5b98-7116-41f5-98a9-03dd4706485f", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3 and person4 changes plane1 at city3 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "person4 changes plane1 at city3", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "aabb2b64-1101-4207-9df3-3b5582019190", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that person6 is part of the state?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "85a8e0d6-b170-4d4a-8447-07bcdac15386", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that plane1 is part of the state?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "6a80b8b7-726f-4098-8b53-418a7257d787", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that fl6 is part of the state?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "19a625e8-d451-4d21-9727-335d8e3c22de", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that fl7 is part of the state?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "26b4731a-203d-47dd-887f-a7e00451a3ea", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that person6 is at city2?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "4af175ee-6748-4e98-909d-373e0b8b8bea", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that plane1 is maintained?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "9c94927e-6df6-494f-bdb9-7f4e46cd27a0", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that person6 explores city2?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "2069c81b-a6af-4aa2-b5c5-3ca8292480c5", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that plane1 has a fuel leak?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "24b5f936-62a4-46d2-b79f-e78b5f024ca0", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that fuel level fl2 is not next to fuel level fl6?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "435dbc6d-190d-4bf8-8742-aeedb5a88fd3", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that the fuel level fl0 is not is smaller than fuel level fl1?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "b5f28cab-e5f5-4955-9d41-ed8102a50673", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that person3 is not explore city1?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "ee403a90-5466-40ae-82cc-1289a6aa4234", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that fuel level fl6 is not next to fuel level fl4?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "ee971312-739b-41f4-b948-ddeecc81b626", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, person5 departs plane1 at city0, is defined?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "40d01cf7-f882-468d-bf7a-acfc7b8131f6", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, person3 changes plane1 at city0, is defined?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "8d2ea5f4-6149-4107-be70-5d1a825447f6", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, plane1 goes for maitnance at location city0 and refueled with fuel fl1, is defined?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "74fdef1f-adbc-4dfd-bd82-f80b65fd1309", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, person8 forgets to board plane1 at city0, is defined?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "d7155422-d281-4291-915e-847f783f3725", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, plane1 is in city0 then flies for maintenance to city1, is defined?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "f5ed662a-14ec-4151-8155-fb3eb9bc521c", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, plane1 zooms from city0 to city2 with fuel level fl6 to fl2, is defined?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "ffe7d314-c09b-438f-91bb-4e163b9f1417", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, plane1 consumes the fuel level fl1 and fl4, is defined?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "15624796-ff86-41ad-a7b1-8602f91e64b4", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, plane1 zooms from city2 to city1 with fuel level fl2 to fl0, is defined?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "4a298d7a-984b-4793-b9d6-dd9e7b2da1b6", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, person1, person5, person6, fl6, person8, city2, plane1, fl1, city1, person3, fl4, fl2, person7, fl5 and city0, is not defined? Write None if all are defined.", "answer": "person3", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "1108cd56-a754-4856-befb-b4cd24b90e5d", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, person8, fl6 and fl7, is not defined? Write None if all are defined.", "answer": "fl7", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "7eca6e21-819e-4605-823a-7a502e79a366", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, fl6, fl3, plane1, city1, person2, person6, person1, person8, city2, fl5, fl0, fl1, city3, fl2 and city0, is not defined? Write None if all are defined.", "answer": "person1", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "f17b0b90-94f3-44aa-adce-cf77f5a3dfa7", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, fl5, plane1, fl2, person7, fl6, person3, fl0, city0, person5, city1, city2, person8, fl1, fl3, fl4, person2, person6 and city3, is not defined? Write None if all are defined.", "answer": "city2", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "fedbce7c-8a69-4336-b3e8-f6bfc5ab1d8b", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, plane1 is at city0, fuel level fl5 is next to fuel level fl4, plane1 has fuel level fl1, person7 is at city2, fuel level fl3 is next to fuel level fl2, person4 is in plane1, person3 is at city0, the fuel level fl4 is smaller than fl3, person8 is in plane1, fuel level fl6 is next to fuel level fl5, fuel level fl2 is next to fuel level fl1, person6 is at city2, person5 is in plane1, fuel level fl1 is next to fuel level fl0 and person1 is at city1, is not defined? Write None if all are defined.", "answer": "the fuel level fl4 is smaller than fl3", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "f8c7d81e-e89d-4204-b34c-234a0185f2b2", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, fuel level fl4 is next to fuel level fl3, plane1 is at city0, person3 is at city0, the fuel level fl3 is smaller than fl2, person6 is at city2, person4 is in plane1, person5 is in plane1, plane1 has fuel level fl1, person1 is at city1, fuel level fl2 is next to fuel level fl1, person8 is in plane1, fuel level fl5 is next to fuel level fl4, fuel level fl6 is next to fuel level fl5, person7 is at city2, fuel level fl1 is next to fuel level fl0 and person2 is at city3, is not defined? Write None if all are defined.", "answer": "the fuel level fl3 is smaller than fl2", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "a8aa2229-ecf3-4792-bc44-38b831075a6e", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, fuel level fl2 is next to fuel level fl1, person4 is in plane1 and fuel level fl4 is next to fuel level fl3, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "b9391c3d-a388-4819-b89e-416e03389b0f", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, plane1 has fuel level fl1, fuel level fl6 is next to fuel level fl5, person6 is at city2, person7 is at city2, person1 is at city1, fuel level fl1 is next to fuel level fl0, person5 is in plane1, person4 is in plane1, fuel level fl3 is next to fuel level fl2 and person2 is at city3, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "5c7f6f7a-2f87-439d-bc4d-6e7f98b6dd12", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, fuel level fl3 is not next to fuel level fl0, person6 is not at city3, fuel level fl3 is not next to fuel level fl1, person7 is not at city1, person3 is not at city3, plane1 is not at city3, fuel level fl3 is not next to fuel level fl6, person6 is not at city1, plane1 does not have fuel level fl6, fuel level fl0 is not next to fuel level fl4, fuel level fl0 is not next to fuel level fl5, plane1 is not maintained, fuel level fl5 is not next to fuel level fl1, person1 is not at city3, person4 is not at city1, person5 is not at city1, fuel level fl5 is not next to fuel level fl2 and person6 is not at city0, is not defined? Write None if all are defined.", "answer": "plane1 is not maintained", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "8b8a9344-8e82-4fe3-b6b9-493a50dc1df1", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, person4 is not at city3, person5 is not at city3, fuel level fl2 is not next to fuel level fl5, person4 is not at city1, fuel level fl0 is not next to fuel level fl1, fuel level fl4 is not next to fuel level fl0, fuel level fl0 is not next to fuel level fl2, person1 is not at city3, person7 is not at city3, person8 is not at city3, fuel level fl2 is not next to fuel level fl4, fuel level fl6 is not next to fuel level fl2, person8 is not at city0, fuel level fl1 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl1, person7 is not in plane1, person2 is not at city0, fuel level fl1 is not next to fuel level fl3, fuel level fl6 is not next to fuel level fl3, fuel level fl3 is not next to fuel level fl6, fuel level fl1 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl2, fuel level fl5 is not next to fuel level fl6, fuel level fl2 is not next to fuel level fl0, person2 is not in plane1, person6 is not at city0, person4 is not at city2, plane1 does not have a fuel leak, plane1 does not have fuel level fl4, plane1 is not at city1, fuel level fl2 is not next to fuel level fl6, fuel level fl1 is not next to fuel level fl6, person1 is not in plane1, person5 is not at city1 and fuel level fl6 is not next to fuel level fl1, is not defined? Write None if all are defined.", "answer": "plane1 does not have a fuel leak", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "d631a960-c842-4712-bbee-0791a9052853", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, fuel level fl1 is not next to fuel level fl4, person4 is not at city2, plane1 does not have fuel level fl2, fuel level fl0 is not next to fuel level fl4, fuel level fl3 is not next to fuel level fl5, fuel level fl1 is not next to fuel level fl2, person8 is not at city1, person6 is not in plane1, person8 is not at city3, person7 is not at city3, person1 is not in plane1, person4 is not at city1, fuel level fl3 is not next to fuel level fl4, fuel level fl1 is not next to fuel level fl3, person2 is not in plane1, fuel level fl6 is not next to fuel level fl3, fuel level fl6 is not next to fuel level fl2, fuel level fl2 is not next to fuel level fl4, fuel level fl4 is not next to fuel level fl5, person3 is not at city2, person6 is not at city0, plane1 does not have fuel level fl0, person5 is not at city1, fuel level fl2 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl2, fuel level fl0 is not next to fuel level fl5, person7 is not at city1, plane1 does not have fuel level fl3, fuel level fl6 is not next to fuel level fl4, person4 is not at city0, person3 is not at city1, person7 is not at city0, fuel level fl5 is not next to fuel level fl2, person2 is not at city0, fuel level fl2 is not next to fuel level fl0, person8 is not at city2, person8 is not at city0, person5 is not at city0, fuel level fl3 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl3, fuel level fl4 is not next to fuel level fl0, fuel level fl5 is not next to fuel level fl3, person4 is not at city3, fuel level fl0 is not next to fuel level fl2, person1 is not at city2, person1 is not at city3, person3 is not in plane1, plane1 is not at city3, fuel level fl0 is not next to fuel level fl6, fuel level fl5 is not next to fuel level fl6, plane1 is not at city2, fuel level fl5 is not next to fuel level fl0, fuel level fl4 is not next to fuel level fl6, person5 is not at city2, plane1 does not have fuel level fl5, person2 is not at city2, fuel level fl1 is not next to fuel level fl5, fuel level fl1 is not next to fuel level fl6, person3 is not at city3, the fuel level fl4 is not is smaller than fuel level fl1, fuel level fl6 is not next to fuel level fl1, plane1 does not have fuel level fl4, person7 is not in plane1, fuel level fl5 is not next to fuel level fl1, plane1 does not have fuel level fl6, fuel level fl0 is not next to fuel level fl1 and plane1 is not at city1, is not defined? Write None if all are defined.", "answer": "the fuel level fl4 is not is smaller than fuel level fl1", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "62a4ba76-8b66-4d32-a457-ca4aebedd835", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, fuel level fl1 is not next to fuel level fl2, fuel level fl2 is not next to fuel level fl3, person7 is not at city0, plane1 is not at city1, person2 is not at city0, person5 is not at city1, fuel level fl3 is not next to fuel level fl5, fuel level fl5 is not next to fuel level fl2, fuel level fl6 is not next to fuel level fl4, plane1 does not have fuel level fl3, person5 is not at city3, person3 is not at city3, fuel level fl6 is not next to fuel level fl3, fuel level fl3 is not next to fuel level fl6, person6 is not at city3, fuel level fl4 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl6, fuel level fl2 is not next to fuel level fl4, person1 is not at city0, person5 is not at city2, person8 is not at city2, person4 is not at city3, fuel level fl2 is not next to fuel level fl5, person6 is not at city0, person6 is not in plane1, person8 is not at city0, fuel level fl1 is not next to fuel level fl6, person4 is not at city0, person5 is not at city0, plane1 does not have fuel level fl6, plane1 does not have fuel level fl0, person7 is not at city3, fuel level fl1 is not next to fuel level fl3, fuel level fl3 is not next to fuel level fl0, person7 is not in plane1, fuel level fl5 is not next to fuel level fl3, person8 is not at city3, person7 is not at city1, fuel level fl1 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl6, person3 is not in plane1, person1 is not at city2, person3 is not at city2, fuel level fl4 is not next to fuel level fl1, fuel level fl0 is not next to fuel level fl4, fuel level fl3 is not next to fuel level fl1, person2 is not at city1, fuel level fl6 is not next to fuel level fl0, fuel level fl3 is not next to fuel level fl4, fuel level fl5 is not next to fuel level fl1, fuel level fl2 is not next to fuel level fl0, plane1 does not have fuel level fl5, plane1 is not at city3, person6 is not at city1, fuel level fl5 is not next to fuel level fl0, person1 is not in plane1, plane1 is not at city2, plane1 does not have fuel level fl2, fuel level fl6 is not next to fuel level fl2, person2 is not at city2, fuel level fl4 is not next to fuel level fl0 and person4 is not at city2, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "9e1212cc-4c8c-4229-9d4e-ad3b2a44a763", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "8fe36fa7-5ed0-44bf-aa6a-39728ff52d10", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 is in city1 then flies for maintenance to city3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "plane1 is in city1 then flies for maintenance to city3", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "800b1389-a453-40fd-a88e-612c159f6dc4", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 is in city3 then flies for maintenance to city1, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "plane1 is in city3 then flies for maintenance to city1", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "b62932a6-7bc0-4e86-bd7e-3fe0992e0b7d", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 changes plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2 and plane1 flies from city2 to city0 with fuel level fl2 to fl1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "person2 changes plane1 at city1", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "43db1359-9eef-41db-a62c-df10ede22d52", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that city0 is part of the state?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "e9ea5b40-cdd6-47e3-a8ac-cdcc2c18e677", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that fl5 is part of the state?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "8a0b57cc-88a4-42a9-8c09-de2370d78f34", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that person9 is part of the state?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "f0eb23a6-5bdc-4a78-9681-3500dc540b6e", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that person7 is part of the state?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "dd113bcc-1a87-4d19-b960-f373adf8aabf", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that the fuel level fl6 is smaller than fl5?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "4b2f5964-5ecc-4384-87fd-9c5e52a0539a", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that fuel level fl5 is next to fuel level fl4?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "87fd7a01-efe1-4997-9f1c-e86b4578d027", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that the fuel level fl2 is smaller than fl1?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "fcbfcad5-72d2-4d97-8275-75c19b830620", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that person6 is at city2?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "c4763b70-888b-4624-8245-9b2722aea09f", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that the fuel level fl0 is not is smaller than fuel level fl3?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "729a142c-e345-45a9-bc6d-c03402e343bd", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that plane1 does not have a fuel leak?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "bacb5783-acc8-4550-af2b-8c4c7741b635", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that fuel level fl1 is not next to fuel level fl5?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "173412c9-b964-4446-bcb4-069bb9475757", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that person2 is not at city0?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "e961d886-a9a6-4fe4-926f-1509cf1fd481", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, person3 departs plane1 at city1, is defined?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "dd9c22ec-9457-4ebc-959e-d5be4b44a6b7", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, plane1 goes for maitnance at location city1 and refueled with fuel fl0, is defined?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "e478ab26-c731-460d-b9e0-337bbc42c853", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, person1 boards plane1 at city1, is defined?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "61946b93-1f73-4cbf-8f1c-2de56a64d8b2", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, person4 forgets to board plane1 at city1, is defined?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "ec84ddb0-c139-41e5-9f70-ade297c0fe47", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, plane1 consumes the fuel level fl6 and fl5, is defined?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "bb1aa6d2-dcfa-4026-85bf-47db8a3de9da", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, plane1 zooms from city1 to city3 with fuel level fl6 to fl2, is defined?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "342e4988-ea05-4e07-932c-a83837a3fff5", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, plane1 consumes the fuel level fl6 and fl2, is defined?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "5cf27a86-c934-4ef4-93fe-d0582e4f6e8f", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, plane1 consumes the fuel level fl1 and fl0, is defined?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "765f9f0c-721b-48d8-a835-ad0081185620", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, person6, fl5, city2, fl0, person3, plane1, fl1 and person4, is not defined? Write None if all are defined.", "answer": "person3", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "ea520b6f-8de5-46ec-94e8-92c8b58e9ba5", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, city4, fl2 and plane1, is not defined? Write None if all are defined.", "answer": "city4", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "2bc8d18a-7dc9-4961-9989-6febbd7ae0ea", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, person7, fl3, city0, city3, fl0, city1, fl4, person2, city2, person8, fl5, person4, person6, fl2, person3 and person5, is not defined? Write None if all are defined.", "answer": "fl3", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "94ed8b53-69dc-4bcb-a911-dcd02a6631a8", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, city3, fl3, plane1, person5, person8, city0, city1 and person7, is not defined? Write None if all are defined.", "answer": "person8", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "a5a62a9a-de53-465d-a4fd-b1021e700065", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, person1 is at city1, person2 is at city3, person6 is at city2, plane1 has a fuel leak, person7 is at city2, person8 is at city0, plane1 is at city1 and fuel level fl2 is next to fuel level fl1, is not defined? Write None if all are defined.", "answer": "plane1 has a fuel leak", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "dd868692-da46-45d7-8f83-c2332a8eebd3", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, fuel level fl2 is next to fuel level fl1, person4 is in plane1, fuel level fl1 is next to fuel level fl0, person8 is at city0, fuel level fl3 is next to fuel level fl2, person2 is at city3, plane1 has fuel level fl0, fuel level fl5 is next to fuel level fl4, person6 is at city2, fuel level fl6 is next to fuel level fl5, person7 is at city2, person5 explores city0 and plane1 is at city1, is not defined? Write None if all are defined.", "answer": "person5 explores city0", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "b59a81ac-3a22-4f24-a80a-d4e91eaeea14", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, person7 is at city2, plane1 is at city1, fuel level fl6 is next to fuel level fl5, fuel level fl2 is next to fuel level fl1, person5 is at city0, person4 is in plane1, fuel level fl4 is next to fuel level fl3, person6 is at city2, fuel level fl1 is next to fuel level fl0, plane1 has fuel level fl0, person1 explores city1 and fuel level fl3 is next to fuel level fl2, is not defined? Write None if all are defined.", "answer": "person1 explores city1", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "42292302-e1dc-499c-bfa2-da9db59ab945", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, person1 is at city1, fuel level fl1 is next to fuel level fl0, person8 is at city0, fuel level fl4 is next to fuel level fl3, plane1 has fuel level fl0, plane1 is at city1 and person5 is at city0, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "a83269c9-5646-476c-8d2b-078db09c4490", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, person6 is not at city3, person7 is not explore city1, fuel level fl6 is not next to fuel level fl3, fuel level fl3 is not next to fuel level fl6, plane1 does not have fuel level fl6, fuel level fl0 is not next to fuel level fl3, person3 is not at city1, person4 is not at city0, person5 is not at city3, fuel level fl5 is not next to fuel level fl3, fuel level fl5 is not next to fuel level fl6, person3 is not at city2, fuel level fl4 is not next to fuel level fl2, fuel level fl5 is not next to fuel level fl2, plane1 does not have fuel level fl4, plane1 does not have fuel level fl1, fuel level fl0 is not next to fuel level fl1, fuel level fl4 is not next to fuel level fl6, fuel level fl0 is not next to fuel level fl4, fuel level fl6 is not next to fuel level fl4, person4 is not at city3, plane1 does not have fuel level fl3, fuel level fl0 is not next to fuel level fl2, person7 is not at city0, person8 is not in plane1, fuel level fl3 is not next to fuel level fl1, person7 is not in plane1, fuel level fl3 is not next to fuel level fl0, fuel level fl1 is not next to fuel level fl2, fuel level fl4 is not next to fuel level fl1, fuel level fl0 is not next to fuel level fl5, fuel level fl3 is not next to fuel level fl4, person6 is not at city0, plane1 does not have fuel level fl2, person5 is not in plane1, fuel level fl6 is not next to fuel level fl0, fuel level fl1 is not next to fuel level fl5, person2 is not at city2, fuel level fl5 is not next to fuel level fl0, person6 is not in plane1, fuel level fl0 is not next to fuel level fl6, plane1 does not have fuel level fl5, fuel level fl4 is not next to fuel level fl5, person1 is not at city2, fuel level fl2 is not next to fuel level fl5, fuel level fl2 is not next to fuel level fl0, person3 is not at city0, fuel level fl1 is not next to fuel level fl6 and fuel level fl2 is not next to fuel level fl6, is not defined? Write None if all are defined.", "answer": "person7 is not explore city1", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "fde8501d-b4a6-44c4-a978-b6e17e2e48c8", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, plane1 does not have fuel level fl2, person2 is not at city2, fuel level fl0 is not next to fuel level fl3, person7 is not in plane1, fuel level fl4 is not next to fuel level fl6, fuel level fl2 is not next to fuel level fl6, person6 is not at city1, person6 is not in plane1, fuel level fl0 is not next to fuel level fl1, plane1 does not have fuel level fl5, fuel level fl0 is not next to fuel level fl2, person5 is not at city1, person7 is not at city0, fuel level fl5 is not next to fuel level fl3, plane1 does not have fuel level fl3, person7 is not at city3 and person3 is not at city2, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "358a3051-88c1-4110-91c3-313d46a9c8b7", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, person8 is not at city2, plane1 does not have fuel level fl5, person2 is not at city1, fuel level fl2 is not next to fuel level fl5, fuel level fl4 is not next to fuel level fl2, fuel level fl5 is not next to fuel level fl1, plane1 is not at city2, person1 is not at city3, fuel level fl1 is not next to fuel level fl4, person6 is not at city3, plane1 is not at city0, person2 is not in plane1, person5 is not at city2, fuel level fl4 is not next to fuel level fl1, fuel level fl5 is not next to fuel level fl2, fuel level fl5 is not next to fuel level fl0, plane1 is not at city3, fuel level fl3 is not next to fuel level fl1, fuel level fl0 is not next to fuel level fl2, fuel level fl3 is not next to fuel level fl4, fuel level fl6 is not next to fuel level fl2, person4 is not at city2, fuel level fl1 is not next to fuel level fl6, fuel level fl4 is not next to fuel level fl5, fuel level fl0 is not next to fuel level fl6, fuel level fl3 is not next to fuel level fl6, person7 is not at city0 and person3 is not at city0, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "cf7ce3f5-fdff-4ad1-9d96-5d2ce030435b", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, fuel level fl2 is not next to fuel level fl6, fuel level fl3 is not next to fuel level fl4, fuel level fl6 is not next to fuel level fl0, plane1 is not at city0, fuel level fl5 is not next to fuel level fl3, plane1 does not have fuel level fl2, person6 is not at city1, fuel level fl0 is not next to fuel level fl2, person8 is not in plane1, fuel level fl3 is not next to fuel level fl6, fuel level fl5 is not next to fuel level fl0, plane1 is not at city3, person6 is not in plane1, person7 is not at city3, fuel level fl3 is not next to fuel level fl1, person2 is not in plane1, person8 is not at city3, fuel level fl1 is not next to fuel level fl6, fuel level fl6 is not next to fuel level fl1, person1 is not in plane1, fuel level fl4 is not next to fuel level fl0, fuel level fl3 is not next to fuel level fl5, person8 is not at city2, person8 is not at city1, fuel level fl1 is not next to fuel level fl2, person2 is not at city2, fuel level fl2 is not next to fuel level fl4, fuel level fl0 is not next to fuel level fl6, person1 is not at city3, person1 is not at city0, plane1 does not have fuel level fl3, fuel level fl1 is not next to fuel level fl3, fuel level fl6 is not next to fuel level fl2, person3 is not at city0, person6 is not at city0, plane1 is not at city2, fuel level fl5 is not next to fuel level fl2, fuel level fl4 is not next to fuel level fl5, person3 is not at city3, person5 is not at city2, fuel level fl2 is not next to fuel level fl5, plane1 does not have fuel level fl4, fuel level fl6 is not next to fuel level fl4, person3 is not at city1, person5 is not at city3, person7 is not at city0, person7 is not in plane1, fuel level fl6 is not next to fuel level fl3, fuel level fl0 is not next to fuel level fl4, fuel level fl0 is not next to fuel level fl3, person2 is not at city0, person2 is not at city1, fuel level fl0 is not next to fuel level fl5, fuel level fl5 is not next to fuel level fl1, plane1 does not have fuel level fl5, person5 is not at city1, plane1 does not have fuel level fl1, fuel level fl2 is not next to fuel level fl3, person1 is not at city2, plane1 does not have fuel level fl6, person4 is not at city3, person3 is not at city2, fuel level fl0 is not next to fuel level fl1, person4 is not at city2, fuel level fl5 is not next to fuel level fl6 and fuel level fl4 is not next to fuel level fl1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "798870d1-6e91-4d55-b6bd-18f1c41777c6", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 forgets to board plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "person2 forgets to board plane1 at city3", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "685b45c5-75da-4521-a41e-56b4289a5da5", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 changes plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "person8 changes plane1 at city1", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "95a29c35-2864-474d-b981-2930fc80375f", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 gets refueled at city1 with fuel level fl0 to fl1, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
{"id": "31de6d30-8aab-4ac7-a790-c5bcafe38d73", "domain_name": "zenotravel", "instance_id": "Instance_5", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: plane1 flies from city3 to city1 with fuel level fl1 to fl0, plane1 goes for maitnance at location city1 and refueled with fuel fl0, plane1 gets refueled at city1 with fuel level fl1 to fl2, plane1 gets refueled at city1 with fuel level fl2 to fl3, plane1 gets refueled at city1 with fuel level fl3 to fl4, person8 boards plane1 at city1, person2 boards plane1 at city1, plane1 flies from city1 to city3 with fuel level fl4 to fl3, person7 boards plane1 at city3, person4 boards plane1 at city3, person2 departs plane1 at city3, plane1 flies from city3 to city2 with fuel level fl3 to fl2, person7 departs plane1 at city2, person5 boards plane1 at city2, plane1 flies from city2 to city0 with fuel level fl2 to fl1, person8 departs plane1 at city0, person5 departs plane1 at city0, person3 boards plane1 at city0 and plane1 flies from city0 to city1 with fuel level fl1 to fl0 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "plane1 goes for maitnance at location city1 and refueled with fuel fl0", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["next(fl0,fl1)", "at(person2,city1)", "at(person8,city1)", "at(person3,city0)", "next(fl3,fl4)", "at(person5,city2)", "next(fl1,fl2)", "at(plane1,city3)", "fuel_level(plane1,fl1)", "at(person1,city1)", "at(person7,city3)", "at(person6,city2)", "at(person4,city3)", "next(fl4,fl5)", "next(fl5,fl6)", "next(fl2,fl3)"], "neg_fluents": ["-at(person8,city3)", "-next(fl0,fl4)", "-at(person7,city1)", "-next(fl1,fl0)", "-at(person3,city1)", "-next(fl5,fl0)", "-next(fl2,fl0)", "-next(fl2,fl6)", "-in(person3,plane1)", "-at(person4,city2)", "-next(fl0,fl6)", "-in(person6,plane1)", "-next(fl6,fl0)", "-at(person1,city2)", "-at(person2,city0)", "-next(fl1,fl5)", "-at(person7,city2)", "-next(fl4,fl2)", "-fuel_level(plane1,fl4)", "-next(fl2,fl5)", "-fuel_level(plane1,fl3)", "-next(fl3,fl2)", "-next(fl5,fl4)", "-next(fl0,fl2)", "-at(person1,city0)", "-next(fl1,fl3)", "-next(fl5,fl2)", "-in(person2,plane1)", "-at(person3,city3)", "-fuel_level(plane1,fl5)", "-next(fl4,fl3)", "-next(fl3,fl1)", "-next(fl6,fl5)", "-at(person5,city1)", "-next(fl4,fl0)", "-at(person6,city1)", "-next(fl4,fl6)", "-at(person8,city0)", "-fuel_level(plane1,fl2)", "-in(person8,plane1)", "-next(fl5,fl1)", "-next(fl1,fl4)", "-at(person4,city0)", "-next(fl4,fl1)", "-next(fl3,fl5)", "-at(person6,city3)", "-next(fl3,fl0)", "-next(fl3,fl6)", "-at(person5,city0)", "-at(plane1,city2)", "-next(fl6,fl1)", "-fuel_level(plane1,fl6)", "-next(fl6,fl3)", "-next(fl2,fl4)", "-at(person4,city1)", "-in(person7,plane1)", "-in(person4,plane1)", "-in(person1,plane1)", "-fuel_level(plane1,fl0)", "-next(fl0,fl5)", "-at(person2,city2)", "-next(fl6,fl2)", "-at(plane1,city0)", "-at(plane1,city1)", "-next(fl6,fl4)", "-at(person7,city0)", "-at(person2,city3)", "-at(person8,city2)", "-next(fl2,fl1)", "-next(fl1,fl6)", "-next(fl0,fl3)", "-in(person5,plane1)", "-at(person1,city3)", "-at(person3,city2)", "-at(person6,city0)", "-at(person5,city3)", "-next(fl5,fl3)"], "objects": {"aircraft": ["plane1"], "person": ["person5", "person7", "person2", "person3", "person6", "person8", "person1", "person4"], "city": ["city3", "city2", "city1", "city0"], "flevel": ["fl1", "fl6", "fl4", "fl5", "fl3", "fl2", "fl0"]}, "executable?": true}, "action_sequence": ["action_fly(plane1,city3,city1,fl1,fl0)", "action_refuel(plane1,city1,fl0,fl1)", "action_refuel(plane1,city1,fl1,fl2)", "action_refuel(plane1,city1,fl2,fl3)", "action_refuel(plane1,city1,fl3,fl4)", "action_board(person8,plane1,city1)", "action_board(person2,plane1,city1)", "action_fly(plane1,city1,city3,fl4,fl3)", "action_board(person7,plane1,city3)", "action_board(person4,plane1,city3)", "action_debark(person2,plane1,city3)", "action_fly(plane1,city3,city2,fl3,fl2)", "action_debark(person7,plane1,city2)", "action_board(person5,plane1,city2)", "action_fly(plane1,city2,city0,fl2,fl1)", "action_debark(person8,plane1,city0)", "action_debark(person5,plane1,city0)", "action_board(person3,plane1,city0)", "action_fly(plane1,city0,city1,fl1,fl0)", "action_debark(person4,plane1,city1)", "action_debark(person3,plane1,city1)"]}
